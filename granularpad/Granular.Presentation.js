(function() {
	'use strict';
	var $asm = {};
	global.System = global.System || {};
	global.System.Windows = global.System.Windows || {};
	global.System.Windows.Controls = global.System.Windows.Controls || {};
	global.System.Windows.Controls.Primitives = global.System.Windows.Controls.Primitives || {};
	global.System.Windows.Data = global.System.Windows.Data || {};
	global.System.Windows.Input = global.System.Windows.Input || {};
	global.System.Windows.Markup = global.System.Windows.Markup || {};
	global.System.Windows.Media = global.System.Windows.Media || {};
	global.System.Windows.Media.Animation = global.System.Windows.Media.Animation || {};
	global.System.Windows.Media.Imaging = global.System.Windows.Media.Imaging || {};
	global.System.Windows.Threading = global.System.Windows.Threading || {};
	ss.initAssembly($asm, 'Granular.Presentation');
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.DependencyProperty.DependencyPropertyHashKey
	var $System_$Windows_DependencyProperty$DependencyPropertyHashKey = function(owner, name) {
		this.$1$OwnerField = null;
		this.$1$NameField = null;
		this.$hashCode = 0;
		this.set_$Owner(owner);
		this.set_$Name(name);
		this.$hashCode = ss.getHashCode(this.get_$Owner()) ^ ss.getHashCode(this.get_$Name());
	};
	$System_$Windows_DependencyProperty$DependencyPropertyHashKey.__typeName = 'System.$Windows.DependencyProperty$DependencyPropertyHashKey';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.DependencyProperty.TypeComparer
	var $System_$Windows_DependencyProperty$TypeComparer = function() {
		//
	};
	$System_$Windows_DependencyProperty$TypeComparer.__typeName = 'System.$Windows.DependencyProperty$TypeComparer';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Disposable.EmptyDisposable
	var $System_$Windows_Disposable$EmptyDisposable = function() {
	};
	$System_$Windows_Disposable$EmptyDisposable.__typeName = 'System.$Windows.Disposable$EmptyDisposable';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Duration.DurationType
	var $System_$Windows_Duration$DurationType = function() {
	};
	$System_$Windows_Duration$DurationType.__typeName = 'System.$Windows.Duration$DurationType';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.EmbeddedResourceLoader.EmbeddedResourceKey
	var $System_$Windows_EmbeddedResourceLoader$EmbeddedResourceKey = function(assemblyName, resourcePath) {
		this.$1$AssemblyNameField = null;
		this.$1$ResourcePathField = null;
		this.set_$AssemblyName(assemblyName);
		this.set_$ResourcePath(resourcePath);
	};
	$System_$Windows_EmbeddedResourceLoader$EmbeddedResourceKey.__typeName = 'System.$Windows.EmbeddedResourceLoader$EmbeddedResourceKey';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.EventManager.ClassHandlerKey
	var $System_$Windows_EventManager$ClassHandlerKey = function(classType, routedEvent) {
		this.$1$ClassTypeField = null;
		this.$1$RoutedEventField = null;
		this.set_$ClassType(classType);
		this.set_$RoutedEvent(routedEvent);
	};
	$System_$Windows_EventManager$ClassHandlerKey.__typeName = 'System.$Windows.EventManager$ClassHandlerKey';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.EventManager.RoutedEventKey
	var $System_$Windows_EventManager$RoutedEventKey = function(owner, name) {
		this.$1$OwnerField = null;
		this.$1$NameField = null;
		this.set_$Owner(owner);
		this.set_$Name(name);
	};
	$System_$Windows_EventManager$RoutedEventKey.__typeName = 'System.$Windows.EventManager$RoutedEventKey';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.EventTrigger.EventTriggerCondition
	var $System_$Windows_EventTrigger$EventTriggerCondition = function(element, routedEvent) {
		this.$1$EventRaisedField = null;
		this.$element = null;
		this.$routedEvent = null;
		this.$element = element;
		this.$routedEvent = routedEvent;
	};
	$System_$Windows_EventTrigger$EventTriggerCondition.__typeName = 'System.$Windows.EventTrigger$EventTriggerCondition';
	$System_$Windows_EventTrigger$EventTriggerCondition.$Register = function(element, routedEvent) {
		var condition = new $System_$Windows_EventTrigger$EventTriggerCondition(element, routedEvent);
		condition.$Register();
		return condition;
	};
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.FrameworkTemplate.EmptyFrameworkTemplate
	var $System_$Windows_FrameworkTemplate$EmptyFrameworkTemplate = function() {
	};
	$System_$Windows_FrameworkTemplate$EmptyFrameworkTemplate.__typeName = 'System.$Windows.FrameworkTemplate$EmptyFrameworkTemplate';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.MultiDataTrigger.MultiDataTriggerConditionProvider
	var $System_$Windows_MultiDataTrigger$MultiDataTriggerConditionProvider = function(condition) {
		this.$condition = null;
		this.$condition = condition;
	};
	$System_$Windows_MultiDataTrigger$MultiDataTriggerConditionProvider.__typeName = 'System.$Windows.MultiDataTrigger$MultiDataTriggerConditionProvider';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.MultiTrigger.TriggerConditionProvider
	var $System_$Windows_MultiTrigger$TriggerConditionProvider = function(condition) {
		this.$condition = null;
		this.$condition = condition;
	};
	$System_$Windows_MultiTrigger$TriggerConditionProvider.__typeName = 'System.$Windows.MultiTrigger$TriggerConditionProvider';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Setter.ValueOverlapExpression
	var $System_$Windows_Setter$ValueOverlapExpression = function() {
		this.$1$ValueChangedField = null;
		this.$values = null;
		this.$observableValue = null;
		this.$values = [];
		this.$observableValue = new $System_Windows_Data_ObservableValue();
		this.$observableValue.add_ValueChanged(ss.mkdel(this, function(sender, e) {
			Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_Data_ObservableValueChangedArgs).call(null, this.$1$ValueChangedField, this, e);
		}));
	};
	$System_$Windows_Setter$ValueOverlapExpression.__typeName = 'System.$Windows.Setter$ValueOverlapExpression';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ContentPresenter.DefaultContentTemplate
	var $System_$Windows_Controls_ContentPresenter$DefaultContentTemplate = function() {
		//
	};
	$System_$Windows_Controls_ContentPresenter$DefaultContentTemplate.__typeName = 'System.$Windows.Controls.ContentPresenter$DefaultContentTemplate';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ContentPresenter.DefaultContentTemplate.ToStringConverter
	var $System_$Windows_Controls_ContentPresenter$DefaultContentTemplate$ToStringConverter = function() {
		//
	};
	$System_$Windows_Controls_ContentPresenter$DefaultContentTemplate$ToStringConverter.__typeName = 'System.$Windows.Controls.ContentPresenter$DefaultContentTemplate$ToStringConverter';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ContentPresenter.UIElementTemplate
	var $System_$Windows_Controls_ContentPresenter$UIElementTemplate = function(content) {
		this.$content = null;
		this.$content = content;
	};
	$System_$Windows_Controls_ContentPresenter$UIElementTemplate.__typeName = 'System.$Windows.Controls.ContentPresenter$UIElementTemplate';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ItemContainerGenerator.GeneratedItemContainer
	var $System_$Windows_Controls_ItemContainerGenerator$GeneratedItemContainer = function(container, item, index) {
		this.$1$ContainerField = null;
		this.$1$ItemField = null;
		this.$1$IndexField = 0;
		this.set_$Container(container);
		this.set_$Item(item);
		this.set_$Index(index);
	};
	$System_$Windows_Controls_ItemContainerGenerator$GeneratedItemContainer.__typeName = 'System.$Windows.Controls.ItemContainerGenerator$GeneratedItemContainer';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ItemsControl.DefaultItemsPanelTemplate
	var $System_$Windows_Controls_ItemsControl$DefaultItemsPanelTemplate = function() {
	};
	$System_$Windows_Controls_ItemsControl$DefaultItemsPanelTemplate.__typeName = 'System.$Windows.Controls.ItemsControl$DefaultItemsPanelTemplate';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ListBox.ExtendedSelectionBehavior
	var $System_$Windows_Controls_ListBox$ExtendedSelectionBehavior = function(listBox) {
		this.$listBox = null;
		this.$listBox = listBox;
	};
	$System_$Windows_Controls_ListBox$ExtendedSelectionBehavior.__typeName = 'System.$Windows.Controls.ListBox$ExtendedSelectionBehavior';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ListBox.ISelectionBehavior
	var $System_$Windows_Controls_ListBox$ISelectionBehavior = function() {
	};
	$System_$Windows_Controls_ListBox$ISelectionBehavior.__typeName = 'System.$Windows.Controls.ListBox$ISelectionBehavior';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ListBox.MultipleSelectionBehavior
	var $System_$Windows_Controls_ListBox$MultipleSelectionBehavior = function(listBox) {
		this.$listBox = null;
		this.$listBox = listBox;
	};
	$System_$Windows_Controls_ListBox$MultipleSelectionBehavior.__typeName = 'System.$Windows.Controls.ListBox$MultipleSelectionBehavior';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ListBox.SingleSelectionBehavior
	var $System_$Windows_Controls_ListBox$SingleSelectionBehavior = function(listBox) {
		this.$listBox = null;
		this.$listBox = listBox;
	};
	$System_$Windows_Controls_ListBox$SingleSelectionBehavior.__typeName = 'System.$Windows.Controls.ListBox$SingleSelectionBehavior';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ScrollContentPresenter.InnerScrollInfo
	var $System_$Windows_Controls_ScrollContentPresenter$InnerScrollInfo = function() {
		this.$1$ExtentSizeField = null;
		this.$1$ViewportSizeField = null;
		this.$1$CanHorizontallyScrollField = false;
		this.$1$CanVerticallyScrollField = false;
		this.$1$OffsetField = null;
		this.set_$ExtentSize($System_Windows_Size.Zero);
		this.set_$ViewportSize($System_Windows_Size.Zero);
		this.set_Offset($System_Windows_Point.Zero);
	};
	$System_$Windows_Controls_ScrollContentPresenter$InnerScrollInfo.__typeName = 'System.$Windows.Controls.ScrollContentPresenter$InnerScrollInfo';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.Placement.AbsolutePlacement
	var $System_$Windows_Controls_Primitives_Placement$AbsolutePlacement = function() {
		$System_$Windows_Controls_Primitives_Placement$PlacementBase.call(this);
	};
	$System_$Windows_Controls_Primitives_Placement$AbsolutePlacement.__typeName = 'System.$Windows.Controls.Primitives.Placement$AbsolutePlacement';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.Placement.AbsolutePointPlacement
	var $System_$Windows_Controls_Primitives_Placement$AbsolutePointPlacement = function() {
		$System_$Windows_Controls_Primitives_Placement$PlacementBase.call(this);
	};
	$System_$Windows_Controls_Primitives_Placement$AbsolutePointPlacement.__typeName = 'System.$Windows.Controls.Primitives.Placement$AbsolutePointPlacement';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.Placement.BottomPlacement
	var $System_$Windows_Controls_Primitives_Placement$BottomPlacement = function() {
		$System_$Windows_Controls_Primitives_Placement$PlacementBase.call(this);
	};
	$System_$Windows_Controls_Primitives_Placement$BottomPlacement.__typeName = 'System.$Windows.Controls.Primitives.Placement$BottomPlacement';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.Placement.CenterPlacement
	var $System_$Windows_Controls_Primitives_Placement$CenterPlacement = function() {
		$System_$Windows_Controls_Primitives_Placement$PlacementBase.call(this);
	};
	$System_$Windows_Controls_Primitives_Placement$CenterPlacement.__typeName = 'System.$Windows.Controls.Primitives.Placement$CenterPlacement';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.Placement.LeftPlacement
	var $System_$Windows_Controls_Primitives_Placement$LeftPlacement = function() {
		$System_$Windows_Controls_Primitives_Placement$PlacementBase.call(this);
	};
	$System_$Windows_Controls_Primitives_Placement$LeftPlacement.__typeName = 'System.$Windows.Controls.Primitives.Placement$LeftPlacement';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.Placement.MousePlacement
	var $System_$Windows_Controls_Primitives_Placement$MousePlacement = function() {
		$System_$Windows_Controls_Primitives_Placement$PlacementBase.call(this);
	};
	$System_$Windows_Controls_Primitives_Placement$MousePlacement.__typeName = 'System.$Windows.Controls.Primitives.Placement$MousePlacement';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.Placement.MousePointPlacement
	var $System_$Windows_Controls_Primitives_Placement$MousePointPlacement = function() {
		$System_$Windows_Controls_Primitives_Placement$PlacementBase.call(this);
	};
	$System_$Windows_Controls_Primitives_Placement$MousePointPlacement.__typeName = 'System.$Windows.Controls.Primitives.Placement$MousePointPlacement';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.Placement.PlacementBase
	var $System_$Windows_Controls_Primitives_Placement$PlacementBase = function() {
	};
	$System_$Windows_Controls_Primitives_Placement$PlacementBase.__typeName = 'System.$Windows.Controls.Primitives.Placement$PlacementBase';
	$System_$Windows_Controls_Primitives_Placement$PlacementBase.$GetPosition = function(targetOrigin, popupAlignmentPoint, offset) {
		return new $System_Windows_Point.$ctor1(targetOrigin.get_X() + offset.get_X() - popupAlignmentPoint.get_X(), targetOrigin.get_Y() + offset.get_Y() - popupAlignmentPoint.get_Y());
	};
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.Placement.RelativePlacement
	var $System_$Windows_Controls_Primitives_Placement$RelativePlacement = function() {
		$System_$Windows_Controls_Primitives_Placement$PlacementBase.call(this);
	};
	$System_$Windows_Controls_Primitives_Placement$RelativePlacement.__typeName = 'System.$Windows.Controls.Primitives.Placement$RelativePlacement';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.Placement.RelativePointPlacement
	var $System_$Windows_Controls_Primitives_Placement$RelativePointPlacement = function() {
		$System_$Windows_Controls_Primitives_Placement$PlacementBase.call(this);
	};
	$System_$Windows_Controls_Primitives_Placement$RelativePointPlacement.__typeName = 'System.$Windows.Controls.Primitives.Placement$RelativePointPlacement';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.Placement.RightPlacement
	var $System_$Windows_Controls_Primitives_Placement$RightPlacement = function() {
		$System_$Windows_Controls_Primitives_Placement$PlacementBase.call(this);
	};
	$System_$Windows_Controls_Primitives_Placement$RightPlacement.__typeName = 'System.$Windows.Controls.Primitives.Placement$RightPlacement';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.Placement.TopPlacement
	var $System_$Windows_Controls_Primitives_Placement$TopPlacement = function() {
		$System_$Windows_Controls_Primitives_Placement$PlacementBase.call(this);
	};
	$System_$Windows_Controls_Primitives_Placement$TopPlacement.__typeName = 'System.$Windows.Controls.Primitives.Placement$TopPlacement';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.Popup.PopupContainer
	var $System_$Windows_Controls_Primitives_Popup$PopupContainer = function() {
		this.$5$AdornerLayerField = null;
		this.$child = null;
		this.$position = null;
		this.$isOpen = false;
		$System_Windows_FrameworkElement.call(this);
		this.set_Visibility(2);
		this.set_$AdornerLayer(new $System_Windows_Controls_AdornerLayer());
		this.AddVisualChild(this.get_AdornerLayer());
	};
	$System_$Windows_Controls_Primitives_Popup$PopupContainer.__typeName = 'System.$Windows.Controls.Primitives.Popup$PopupContainer';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Data.Binding.StringFormatConverter
	var $System_$Windows_Data_Binding$StringFormatConverter = function(format) {
		this.$format = null;
		this.$format = format;
	};
	$System_$Windows_Data_Binding$StringFormatConverter.__typeName = 'System.$Windows.Data.Binding$StringFormatConverter';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Data.CollectionView.EmptyCollectionView
	var $System_$Windows_Data_CollectionView$EmptyCollectionView = function() {
	};
	$System_$Windows_Data_CollectionView$EmptyCollectionView.__typeName = 'System.$Windows.Data.CollectionView$EmptyCollectionView';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyboardNavigation.FocusVisualAdorner
	var $System_$Windows_Input_KeyboardNavigation$FocusVisualAdorner = function(element) {
		this.$adornerLayer = null;
		this.$adorner = null;
		this.$adornerLayer = $System_Windows_Controls_AdornerLayer.GetAdornerLayer(element);
		var $t1 = new $System_Windows_Controls_Adorner(element);
		var $t2 = new $System_Windows_Controls_Control();
		$t2.set_Style(element.get_FocusVisualStyle());
		$t2.set_Focusable(false);
		$t1.set_Child($t2);
		this.$adorner = $t1;
		this.$adornerLayer.Add(this.$adorner);
	};
	$System_$Windows_Input_KeyboardNavigation$FocusVisualAdorner.__typeName = 'System.$Windows.Input.KeyboardNavigation$FocusVisualAdorner';
	$System_$Windows_Input_KeyboardNavigation$FocusVisualAdorner.$Attach = function(element) {
		return new $System_$Windows_Input_KeyboardNavigation$FocusVisualAdorner(element);
	};
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyboardNavigationTarget.BaseNavigation
	var $System_$Windows_Input_KeyboardNavigationTarget$BaseNavigation = function() {
	};
	$System_$Windows_Input_KeyboardNavigationTarget$BaseNavigation.__typeName = 'System.$Windows.Input.KeyboardNavigationTarget$BaseNavigation';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyboardNavigationTarget.BottomBoundStopComparer
	var $System_$Windows_Input_KeyboardNavigationTarget$BottomBoundStopComparer = function(currentStop) {
		this.$currentPosition = null;
		this.$currentPosition = $System_Windows_Input_KeyboardNavigationTarget.$GetBottomBoundPosition($System_Windows_Input_KeyboardNavigationTarget.$GetAbsoluteBounds(currentStop.get_$Element()));
	};
	$System_$Windows_Input_KeyboardNavigationTarget$BottomBoundStopComparer.__typeName = 'System.$Windows.Input.KeyboardNavigationTarget$BottomBoundStopComparer';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyboardNavigationTarget.ContainedNavigation
	var $System_$Windows_Input_KeyboardNavigationTarget$ContainedNavigation = function() {
		$System_$Windows_Input_KeyboardNavigationTarget$BaseNavigation.call(this);
		//
	};
	$System_$Windows_Input_KeyboardNavigationTarget$ContainedNavigation.__typeName = 'System.$Windows.Input.KeyboardNavigationTarget$ContainedNavigation';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyboardNavigationTarget.ContinueNavigation
	var $System_$Windows_Input_KeyboardNavigationTarget$ContinueNavigation = function() {
		$System_$Windows_Input_KeyboardNavigationTarget$BaseNavigation.call(this);
		//
	};
	$System_$Windows_Input_KeyboardNavigationTarget$ContinueNavigation.__typeName = 'System.$Windows.Input.KeyboardNavigationTarget$ContinueNavigation';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyboardNavigationTarget.CycleNavigation
	var $System_$Windows_Input_KeyboardNavigationTarget$CycleNavigation = function() {
		$System_$Windows_Input_KeyboardNavigationTarget$BaseNavigation.call(this);
		//
	};
	$System_$Windows_Input_KeyboardNavigationTarget$CycleNavigation.__typeName = 'System.$Windows.Input.KeyboardNavigationTarget$CycleNavigation';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyboardNavigationTarget.INavigation
	var $System_$Windows_Input_KeyboardNavigationTarget$INavigation = function() {
	};
	$System_$Windows_Input_KeyboardNavigationTarget$INavigation.__typeName = 'System.$Windows.Input.KeyboardNavigationTarget$INavigation';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyboardNavigationTarget.IStopComparerProvider
	var $System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider = function() {
	};
	$System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider.__typeName = 'System.$Windows.Input.KeyboardNavigationTarget$IStopComparerProvider';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyboardNavigationTarget.LeftBoundStopComparer
	var $System_$Windows_Input_KeyboardNavigationTarget$LeftBoundStopComparer = function(currentStop) {
		this.$currentPosition = null;
		this.$currentPosition = $System_Windows_Input_KeyboardNavigationTarget.$GetLeftBoundPosition($System_Windows_Input_KeyboardNavigationTarget.$GetAbsoluteBounds(currentStop.get_$Element()));
	};
	$System_$Windows_Input_KeyboardNavigationTarget$LeftBoundStopComparer.__typeName = 'System.$Windows.Input.KeyboardNavigationTarget$LeftBoundStopComparer';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyboardNavigationTarget.LocalNavigation
	var $System_$Windows_Input_KeyboardNavigationTarget$LocalNavigation = function() {
		$System_$Windows_Input_KeyboardNavigationTarget$BaseNavigation.call(this);
		//
	};
	$System_$Windows_Input_KeyboardNavigationTarget$LocalNavigation.__typeName = 'System.$Windows.Input.KeyboardNavigationTarget$LocalNavigation';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyboardNavigationTarget.NoneNavigation
	var $System_$Windows_Input_KeyboardNavigationTarget$NoneNavigation = function() {
		$System_$Windows_Input_KeyboardNavigationTarget$BaseNavigation.call(this);
		//
	};
	$System_$Windows_Input_KeyboardNavigationTarget$NoneNavigation.__typeName = 'System.$Windows.Input.KeyboardNavigationTarget$NoneNavigation';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyboardNavigationTarget.OnceNavigation
	var $System_$Windows_Input_KeyboardNavigationTarget$OnceNavigation = function() {
		$System_$Windows_Input_KeyboardNavigationTarget$BaseNavigation.call(this);
		//
	};
	$System_$Windows_Input_KeyboardNavigationTarget$OnceNavigation.__typeName = 'System.$Windows.Input.KeyboardNavigationTarget$OnceNavigation';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyboardNavigationTarget.RightBoundStopComparer
	var $System_$Windows_Input_KeyboardNavigationTarget$RightBoundStopComparer = function(currentStop) {
		this.$currentPosition = null;
		this.$currentPosition = $System_Windows_Input_KeyboardNavigationTarget.$GetRightBoundPosition($System_Windows_Input_KeyboardNavigationTarget.$GetAbsoluteBounds(currentStop.get_$Element()));
	};
	$System_$Windows_Input_KeyboardNavigationTarget$RightBoundStopComparer.__typeName = 'System.$Windows.Input.KeyboardNavigationTarget$RightBoundStopComparer';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyboardNavigationTarget.Stop
	var $System_$Windows_Input_KeyboardNavigationTarget$Stop = function(element) {
		$System_$Windows_Input_KeyboardNavigationTarget$Stop.$ctor1.call(this, element, $System_Windows_Input_KeyboardNavigation.GetTabIndex(element));
		//
	};
	$System_$Windows_Input_KeyboardNavigationTarget$Stop.__typeName = 'System.$Windows.Input.KeyboardNavigationTarget$Stop';
	$System_$Windows_Input_KeyboardNavigationTarget$Stop.$ctor1 = function(element, tabIndex) {
		this.$1$ElementField = null;
		this.$1$TabIndexField = 0;
		this.set_$Element(element);
		this.set_$TabIndex(tabIndex);
	};
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyboardNavigationTarget.StopComparerProvider
	var $System_$Windows_Input_KeyboardNavigationTarget$StopComparerProvider = function(createComparer) {
		this.$createComparer = null;
		this.$createComparer = createComparer;
	};
	$System_$Windows_Input_KeyboardNavigationTarget$StopComparerProvider.__typeName = 'System.$Windows.Input.KeyboardNavigationTarget$StopComparerProvider';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyboardNavigationTarget.TabStopComparer
	var $System_$Windows_Input_KeyboardNavigationTarget$TabStopComparer = function() {
		//
	};
	$System_$Windows_Input_KeyboardNavigationTarget$TabStopComparer.__typeName = 'System.$Windows.Input.KeyboardNavigationTarget$TabStopComparer';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyboardNavigationTarget.TopBoundStopComparer
	var $System_$Windows_Input_KeyboardNavigationTarget$TopBoundStopComparer = function(currentStop) {
		this.$currentPosition = null;
		this.$currentPosition = $System_Windows_Input_KeyboardNavigationTarget.$GetTopBoundPosition($System_Windows_Input_KeyboardNavigationTarget.$GetAbsoluteBounds(currentStop.get_$Element()));
	};
	$System_$Windows_Input_KeyboardNavigationTarget$TopBoundStopComparer.__typeName = 'System.$Windows.Input.KeyboardNavigationTarget$TopBoundStopComparer';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.ElementDictionaryContentInitializer.KeyValueElementFactory
	var $System_$Windows_Markup_ElementDictionaryContentInitializer$KeyValueElementFactory = function(keyType, valueFactory, xamlElement) {
		this.$valueFactory = null;
		this.$keyDirectiveFactory = null;
		this.$keyProperty = null;
		this.$valueFactory = valueFactory;
		this.$keyProperty = $System_$Windows_Markup_ElementDictionaryContentInitializer$KeyValueElementFactory.$GetKeyProperty(valueFactory.get_ElementType());
		this.$keyDirectiveFactory = $System_$Windows_Markup_ElementDictionaryContentInitializer$KeyValueElementFactory.$GetKeyDirectiveFactory(xamlElement, keyType);
		if (ss.isNullOrUndefined(this.$keyDirectiveFactory) && ss.isNullOrUndefined(this.$keyProperty)) {
			throw new Granular.Exception('Dictionary item "{0}" must have a key', [xamlElement.get_Name()]);
		}
	};
	$System_$Windows_Markup_ElementDictionaryContentInitializer$KeyValueElementFactory.__typeName = 'System.$Windows.Markup.ElementDictionaryContentInitializer$KeyValueElementFactory';
	$System_$Windows_Markup_ElementDictionaryContentInitializer$KeyValueElementFactory.$GetKeyDirectiveFactory = function(element, keyType) {
		var keyDirective = Enumerable.from(element.get_Directives()).firstOrDefault(function(directive) {
			return System.Xaml.XamlName.op_Equality(directive.get_Name(), System.Xaml.XamlLanguage.KeyDirective);
		}, ss.getDefaultValue(System.Xaml.XamlMember));
		return (ss.isValue(keyDirective) ? $System_Windows_Markup_ElementFactory.FromValue(System.Xaml.XamlMemberExtensions.GetSingleValue(keyDirective), keyType, element.get_Namespaces()) : null);
	};
	$System_$Windows_Markup_ElementDictionaryContentInitializer$KeyValueElementFactory.$GetKeyProperty = function(type) {
		return $System_Windows_Markup_PropertyAdapter.CreateAdapter(type, new System.Xaml.XamlName($System_Windows_Markup_PropertyAttribute.GetPropertyName($System_Windows_Markup_DictionaryKeyPropertyAttribute).call(null, type), null));
	};
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.ElementDictionaryContentInitializer.ValueProviderFactory
	var $System_$Windows_Markup_ElementDictionaryContentInitializer$ValueProviderFactory = function(elementFactory) {
		this.$elementFactory = null;
		this.$elementFactory = elementFactory;
	};
	$System_$Windows_Markup_ElementDictionaryContentInitializer$ValueProviderFactory.__typeName = 'System.$Windows.Markup.ElementDictionaryContentInitializer$ValueProviderFactory';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.ElementInitializer.EmptyElementInitializer
	var $System_$Windows_Markup_ElementInitializer$EmptyElementInitializer = function() {
	};
	$System_$Windows_Markup_ElementInitializer$EmptyElementInitializer.__typeName = 'System.$Windows.Markup.ElementInitializer$EmptyElementInitializer';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.ElementPropertyMemberInitializer.ElementPropertyMemberFactoryInitializer
	var $System_$Windows_Markup_ElementPropertyMemberInitializer$ElementPropertyMemberFactoryInitializer = function(propertyAdapter, propertyContentInitializer) {
		this.$propertyAdapter = null;
		this.$propertyValueInitializer = null;
		this.$propertyAdapter = propertyAdapter;
		this.$propertyValueInitializer = propertyContentInitializer;
	};
	$System_$Windows_Markup_ElementPropertyMemberInitializer$ElementPropertyMemberFactoryInitializer.__typeName = 'System.$Windows.Markup.ElementPropertyMemberInitializer$ElementPropertyMemberFactoryInitializer';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.PropertyPathParser.TokenType
	var $System_$Windows_Markup_PropertyPathParser$TokenType = function() {
	};
	$System_$Windows_Markup_PropertyPathParser$TokenType.__typeName = 'System.$Windows.Markup.PropertyPathParser$TokenType';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.XamlTypes.NullProvider
	var $System_$Windows_Markup_XamlTypes$NullProvider = function() {
	};
	$System_$Windows_Markup_XamlTypes$NullProvider.__typeName = 'System.$Windows.Markup.XamlTypes$NullProvider';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.XamlTypes.TypeProvider
	var $System_$Windows_Markup_XamlTypes$TypeProvider = function() {
		this.$1$TypeField = null;
	};
	$System_$Windows_Markup_XamlTypes$TypeProvider.__typeName = 'System.$Windows.Markup.XamlTypes$TypeProvider';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Transform.IdentityTransfrom
	var $System_$Windows_Media_Transform$IdentityTransfrom = function() {
		$System_Windows_Media_Transform.call(this);
	};
	$System_$Windows_Media_Transform$IdentityTransfrom.__typeName = 'System.$Windows.Media.Transform$IdentityTransfrom';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.RootClock.ClockSchedule
	var $System_$Windows_Media_Animation_RootClock$ClockSchedule = function(clock) {
		this.$1$ClockField = null;
		this.$1$NextTickField = ss.getDefaultValue(ss.TimeSpan);
		this.set_$Clock(clock);
		this.set_$NextTick(clock.get_FirstTick());
	};
	$System_$Windows_Media_Animation_RootClock$ClockSchedule.__typeName = 'System.$Windows.Media.Animation.RootClock$ClockSchedule';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.Storyboard.TargetKey
	var $System_$Windows_Media_Animation_Storyboard$TargetKey = function(target, targetProperty) {
		this.$1$TargetField = null;
		this.$1$TargetPropertyField = null;
		this.set_$Target(target);
		this.set_$TargetProperty(targetProperty);
	};
	$System_$Windows_Media_Animation_Storyboard$TargetKey.__typeName = 'System.$Windows.Media.Animation.Storyboard$TargetKey';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.DataTriggerCondition
	var $System_Windows_$DataTriggerCondition = function(element, expressionProvider, value) {
		this.$2$IsMatchedChangedField = null;
		this.$isMatched = false;
		this.$element = null;
		this.$expressionProvider = null;
		this.$value = null;
		this.$resolvedValue = null;
		this.$isDisposed = false;
		$System_Windows_DependencyObject.call(this);
		this.$element = element;
		this.$expressionProvider = expressionProvider;
		this.$value = value;
	};
	$System_Windows_$DataTriggerCondition.__typeName = 'System.Windows.$DataTriggerCondition';
	$System_Windows_$DataTriggerCondition.$GetResolvedValue = function(value, type) {
		if (ss.isInstanceOfType(value, type)) {
			return value;
		}
		var resolvedValue = {};
		if ($System_Windows_Markup_TypeConverter.TryConvertValue(value.toString(), type, System.Xaml.XamlNamespaces.Empty, resolvedValue)) {
			return resolvedValue.$;
		}
		return null;
	};
	$System_Windows_$DataTriggerCondition.$Register = function(element, expressionProvider, value) {
		var condition = new $System_Windows_$DataTriggerCondition(element, expressionProvider, value);
		condition.$Register();
		return condition;
	};
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.MultiDataTriggerCondition
	var $System_Windows_$MultiDataTriggerCondition = function(element, conditionProviders) {
		this.$1$IsMatchedChangedField = null;
		this.$isMatched = false;
		this.$element = null;
		this.$conditionProviders = null;
		this.$conditions = null;
		this.$element = element;
		this.$conditionProviders = conditionProviders;
	};
	$System_Windows_$MultiDataTriggerCondition.__typeName = 'System.Windows.$MultiDataTriggerCondition';
	$System_Windows_$MultiDataTriggerCondition.$Register = function(element, conditionProviders) {
		var condition = new $System_Windows_$MultiDataTriggerCondition(element, conditionProviders);
		condition.$Register();
		return condition;
	};
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.TriggerCondition
	var $System_Windows_$TriggerCondition = function(element, property, value) {
		this.$1$IsMatchedChangedField = null;
		this.$isMatched = false;
		this.$element = null;
		this.$property = null;
		this.$value = null;
		this.$element = element;
		this.$property = property;
		this.$value = value;
	};
	$System_Windows_$TriggerCondition.__typeName = 'System.Windows.$TriggerCondition';
	$System_Windows_$TriggerCondition.$Register = function(element, property, value) {
		var condition = new $System_Windows_$TriggerCondition(element, property, value);
		condition.$Register();
		return condition;
	};
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Application
	var $System_Windows_Application = function() {
		this.$1$ResourcesChangedField = null;
		this.$1$StartupField = null;
		this.$1$LoadCompletedField = null;
		this.$1$StartupUriField = null;
		this.$1$MainWindowField = null;
		this.$resources = null;
		if (ss.isValue($System_Windows_Application.get_Current())) {
			throw new Granular.Exception('Application instance was already created', []);
		}
		$System_Windows_Application.set_Current(this);
	};
	$System_Windows_Application.__typeName = 'System.Windows.Application';
	$System_Windows_Application.get_Current = function() {
		return $System_Windows_Application.$1$CurrentField;
	};
	$System_Windows_Application.set_Current = function(value) {
		$System_Windows_Application.$1$CurrentField = value;
	};
	$System_Windows_Application.LoadComponent = function(resourceUri) {
		return $System_Windows_EmbeddedResourceLoader.LoadResourceElement(resourceUri);
	};
	$System_Windows_Application.LoadComponent$1 = function(target, resourceUri) {
		$System_Windows_Markup_XamlLoader.Load$1(target, System.Xaml.XamlParser.Parse(Granular.Compatibility.String.FromByteArray($System_Windows_EmbeddedResourceLoader.LoadResourceData(resourceUri))));
	};
	global.System.Windows.Application = $System_Windows_Application;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.ApplicationHost
	var $System_Windows_ApplicationHost = function() {
	};
	$System_Windows_ApplicationHost.__typeName = 'System.Windows.ApplicationHost';
	$System_Windows_ApplicationHost.get_Current = function() {
		if (ss.isNullOrUndefined($System_Windows_ApplicationHost.$current)) {
			$System_Windows_ApplicationHost.$Initialize();
		}
		return $System_Windows_ApplicationHost.$current;
	};
	$System_Windows_ApplicationHost.$Initialize = function() {
		if (ss.isValue($System_Windows_ApplicationHost.$current)) {
			return;
		}
		var applicationHostAttributes = Enumerable.from(ss.getAssemblies()).selectMany(function(assembly) {
			return Granular.Extensions.AssemblyExtensions.GetCustomAttributesCached($System_Windows_ApplicationHostAttribute).call(null, assembly);
		}).toArray();
		if (applicationHostAttributes.length === 0) {
			throw new Granular.Exception('ApplicationHost assembly attribute was not found', []);
		}
		if (applicationHostAttributes.length > 1) {
			throw new Granular.Exception('Multiple ApplicationHost assembly attributes were found, leave only one attribute or call explicitly to ApplicationHost.Initialize', []);
		}
		$System_Windows_ApplicationHost.Initialize(ss.safeCast(ss.createInstance(applicationHostAttributes[0].get_Type()), $System_Windows_IApplicationHost));
	};
	$System_Windows_ApplicationHost.Initialize = function(applicationHost) {
		if (ss.isValue($System_Windows_ApplicationHost.$current) && !ss.referenceEquals($System_Windows_ApplicationHost.$current, applicationHost)) {
			throw new Granular.Exception('ApplicationHost was already initialized', []);
		}
		$System_Windows_ApplicationHost.$current = applicationHost;
	};
	global.System.Windows.ApplicationHost = $System_Windows_ApplicationHost;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.ApplicationHostAttribute
	var $System_Windows_ApplicationHostAttribute = function(type) {
		this.$2$TypeField = null;
		this.set_Type(type);
	};
	$System_Windows_ApplicationHostAttribute.__typeName = 'System.Windows.ApplicationHostAttribute';
	global.System.Windows.ApplicationHostAttribute = $System_Windows_ApplicationHostAttribute;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.ApplicationHostExtensions
	var $System_Windows_ApplicationHostExtensions = function() {
	};
	$System_Windows_ApplicationHostExtensions.__typeName = 'System.Windows.ApplicationHostExtensions';
	$System_Windows_ApplicationHostExtensions.GetMouseDeviceFromElement = function(applicationHost, element) {
		var presentationSource = applicationHost.get_PresentationSourceFactory().GetPresentationSourceFromElement(element);
		return (ss.isValue(presentationSource) ? presentationSource.get_MouseDevice() : null);
	};
	$System_Windows_ApplicationHostExtensions.GetKeyboardDeviceFromElement = function(applicationHost, element) {
		var presentationSource = applicationHost.get_PresentationSourceFactory().GetPresentationSourceFromElement(element);
		return (ss.isValue(presentationSource) ? presentationSource.get_KeyboardDevice() : null);
	};
	global.System.Windows.ApplicationHostExtensions = $System_Windows_ApplicationHostExtensions;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.BaseValueSource
	var $System_Windows_BaseValueSource = function() {
	};
	$System_Windows_BaseValueSource.__typeName = 'System.Windows.BaseValueSource';
	global.System.Windows.BaseValueSource = $System_Windows_BaseValueSource;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.CoercedDependencyPropertyValueEntry
	var $System_Windows_CoercedDependencyPropertyValueEntry = function(source, dependencyObject, coerceValueCallback) {
		this.$1$ValueChangedField = null;
		this.$source = null;
		this.$coerceValueCallback = null;
		this.$dependencyObject = null;
		this.$observableValue = null;
		this.$source = source;
		this.$dependencyObject = dependencyObject;
		this.$coerceValueCallback = coerceValueCallback;
		this.$observableValue = new $System_Windows_Data_ObservableValue();
		this.$observableValue.add_ValueChanged(ss.mkdel(this, function(sender, e) {
			Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_Data_ObservableValueChangedArgs).call(null, this.$1$ValueChangedField, this, e);
		}));
		source.add_ValueChanged(ss.mkdel(this, function(sender1, e1) {
			this.CoerceValue();
		}));
		this.CoerceValue();
	};
	$System_Windows_CoercedDependencyPropertyValueEntry.__typeName = 'System.Windows.CoercedDependencyPropertyValueEntry';
	global.System.Windows.CoercedDependencyPropertyValueEntry = $System_Windows_CoercedDependencyPropertyValueEntry;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.ComponentResourceKey
	var $System_Windows_ComponentResourceKey = function() {
		this.$1$TypeInTargetAssemblyField = null;
		this.$1$ResourceIdField = null;
	};
	$System_Windows_ComponentResourceKey.__typeName = 'System.Windows.ComponentResourceKey';
	global.System.Windows.ComponentResourceKey = $System_Windows_ComponentResourceKey;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Condition
	var $System_Windows_Condition = function() {
		this.$1$BindingField = null;
		this.$1$PropertyField = null;
		this.$1$SourceNameField = null;
		this.$1$ValueField = null;
	};
	$System_Windows_Condition.__typeName = 'System.Windows.Condition';
	global.System.Windows.Condition = $System_Windows_Condition;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.CornerRadius
	var $System_Windows_CornerRadius = function(uniformRadius) {
		$System_Windows_CornerRadius.$ctor1.call(this, uniformRadius, uniformRadius, uniformRadius, uniformRadius);
		//
	};
	$System_Windows_CornerRadius.__typeName = 'System.Windows.CornerRadius';
	$System_Windows_CornerRadius.$ctor1 = function(topLeft, topRight, bottomRight, bottomLeft) {
		this.$1$TopLeftField = 0;
		this.$1$TopRightField = 0;
		this.$1$BottomRightField = 0;
		this.$1$BottomLeftField = 0;
		this.$1$IsUniformField = false;
		this.set_TopLeft(topLeft);
		this.set_TopRight(topRight);
		this.set_BottomRight(bottomRight);
		this.set_BottomLeft(bottomLeft);
		this.set_IsUniform(this.get_TopLeft() === this.get_TopRight() && this.get_TopLeft() === this.get_BottomRight() && this.get_TopLeft() === this.get_BottomLeft());
	};
	$System_Windows_CornerRadius.op_Equality = function(cornerRadius1, cornerRadius2) {
		return (ss.referenceEquals(cornerRadius1, null) ? ss.referenceEquals(cornerRadius2, null) : cornerRadius1.equals(cornerRadius2));
	};
	$System_Windows_CornerRadius.op_Inequality = function(cornerRadius1, cornerRadius2) {
		return !$System_Windows_CornerRadius.op_Equality(cornerRadius1, cornerRadius2);
	};
	$System_Windows_CornerRadius.Parse = function(value) {
		var values = Enumerable.from(value.split(String.fromCharCode(44))).select(function(v) {
			return parseFloat(v);
		}).toArray();
		if (values.length === 1) {
			return new $System_Windows_CornerRadius(values[0]);
		}
		if (values.length === 4) {
			return new $System_Windows_CornerRadius.$ctor1(values[0], values[1], values[2], values[3]);
		}
		throw new Granular.Exception('Can\'t parse CornerRadius value "{0}"', [value]);
	};
	global.System.Windows.CornerRadius = $System_Windows_CornerRadius;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.CornerRadiusExtensions
	var $System_Windows_CornerRadiusExtensions = function() {
	};
	$System_Windows_CornerRadiusExtensions.__typeName = 'System.Windows.CornerRadiusExtensions';
	$System_Windows_CornerRadiusExtensions.DefaultIfNull = function(cornerRadius, defaultValue) {
		return cornerRadius || (defaultValue || $System_Windows_CornerRadius.Zero);
	};
	global.System.Windows.CornerRadiusExtensions = $System_Windows_CornerRadiusExtensions;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.DataTemplate
	var $System_Windows_DataTemplate = function() {
		this.$dataType = null;
		this.$key = null;
		$System_Windows_FrameworkTemplate.call(this);
		//
	};
	$System_Windows_DataTemplate.__typeName = 'System.Windows.DataTemplate';
	global.System.Windows.DataTemplate = $System_Windows_DataTemplate;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.DataTrigger
	var $System_Windows_DataTrigger = function() {
		this.$5$BindingField = null;
		this.$5$ValueField = null;
		this.$5$SettersField = null;
		$System_Windows_DataTriggerBase.call(this);
		this.set_Setters(new (ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITriggerAction]))());
	};
	$System_Windows_DataTrigger.__typeName = 'System.Windows.DataTrigger';
	global.System.Windows.DataTrigger = $System_Windows_DataTrigger;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.DataTriggerBase
	var $System_Windows_DataTriggerBase = function() {
		this.$attachedConditions = null;
		$System_Windows_TriggerBase.call(this);
		this.$attachedConditions = new (ss.makeGenericType(ss.Dictionary$2, [$System_Windows_FrameworkElement, $System_Windows_IDataTriggerCondition]))();
	};
	$System_Windows_DataTriggerBase.__typeName = 'System.Windows.DataTriggerBase';
	global.System.Windows.DataTriggerBase = $System_Windows_DataTriggerBase;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.DependencyObject
	var $System_Windows_DependencyObject = function() {
		this.$1$PropertyChangedField = null;
		this.$entries = null;
		this.$readOnlyEntries = null;
		this.$inheritanceParent = null;
		this.$entries = new (ss.makeGenericType(ss.Dictionary$2, [$System_Windows_DependencyProperty, $System_Windows_IDependencyPropertyValueEntry]))();
		this.$readOnlyEntries = new (ss.makeGenericType(ss.Dictionary$2, [$System_Windows_DependencyProperty, $System_Windows_IDependencyPropertyValueEntry]))();
	};
	$System_Windows_DependencyObject.__typeName = 'System.Windows.DependencyObject';
	$System_Windows_DependencyObject.$VerifyReadOnlyProperty = function(dependencyProperty, dependencyPropertyKey) {
		if (dependencyProperty.get_IsReadOnly() && (ss.isNullOrUndefined(dependencyPropertyKey) || !ss.referenceEquals(dependencyPropertyKey.get_DependencyProperty(), dependencyProperty) || !$System_Windows_DependencyProperty.IsValidReadOnlyKey(dependencyPropertyKey))) {
			throw new Granular.Exception('Can\'t modify the read-only dependency property "{0}" without its key', [dependencyProperty]);
		}
	};
	global.System.Windows.DependencyObject = $System_Windows_DependencyObject;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.DependencyProperty
	var $System_Windows_DependencyProperty = function(hashKey, propertyType, metadata, validateValueCallback, isAttached, isReadOnly) {
		this.$1$NameField = null;
		this.$1$OwnerTypeField = null;
		this.$1$PropertyTypeField = null;
		this.$1$ValidateValueCallbackField = null;
		this.$1$IsReadOnlyField = false;
		this.$1$InheritsField = false;
		this.$hashKey = null;
		this.$typeMetadata = null;
		this.$ownerMetadata = null;
		this.$isAttached = false;
		this.$isMetadataOverridden = false;
		this.$typeMetadataCache = null;
		this.$orderedTypeMetadataCache = null;
		this.$hashKey = hashKey;
		this.set_Name(hashKey.get_$Name());
		this.set_OwnerType(hashKey.get_$Owner());
		this.set_PropertyType(propertyType);
		this.set_ValidateValueCallback(validateValueCallback);
		this.set_IsReadOnly(isReadOnly);
		this.set_Inherits(metadata.get_Inherits());
		this.$ownerMetadata = metadata;
		this.$isAttached = isAttached;
		this.$typeMetadata = new (ss.makeGenericType(ss.Dictionary$2, [Function, $System_Windows_PropertyMetadata]))();
		this.$typeMetadata.add(this.get_OwnerType(), this.$ownerMetadata);
		this.$typeMetadataCache = new (ss.makeGenericType(Granular.Collections.CacheDictionary$2, [Function, $System_Windows_PropertyMetadata]))(ss.mkdel(this, this.$ResolveTypeMetadata));
	};
	$System_Windows_DependencyProperty.__typeName = 'System.Windows.DependencyProperty';
	$System_Windows_DependencyProperty.$Register = function(key, propertyType, metadata, validateValueCallback, isAttached, isReadOnly) {
		if (ss.isNullOrUndefined(metadata)) {
			metadata = new $System_Windows_PropertyMetadata(null, null, null, false);
		}
		if (ss.isNullOrUndefined(metadata.get_DefaultValue()) && System.TypeExtensions.GetIsValueType(propertyType)) {
			metadata.set_DefaultValue(ss.createInstance(propertyType));
		}
		if (ss.isValue(metadata.get_DefaultValue()) && !ss.isInstanceOfType(metadata.get_DefaultValue(), propertyType)) {
			metadata.set_DefaultValue($System_Windows_DependencyProperty.$ConvertDefaultValue(key, metadata.get_DefaultValue(), propertyType));
		}
		var property = new $System_Windows_DependencyProperty(key, propertyType, metadata, validateValueCallback, isAttached, isReadOnly);
		if (!property.IsValidValue(metadata.get_DefaultValue())) {
			throw new Granular.Exception('Default value validation of dependency property "{0}.{1}" failed', [ss.getTypeName(key.get_$Owner()), key.get_$Name()]);
		}
		$System_Windows_DependencyProperty.$AddRegisteredProperty(key, property);
		return property;
	};
	$System_Windows_DependencyProperty.Register = function(name, propertyType, ownerType, metadata, validateValueCallback) {
		return $System_Windows_DependencyProperty.$Register(new $System_$Windows_DependencyProperty$DependencyPropertyHashKey(ownerType, name), propertyType, metadata, validateValueCallback, false, false);
	};
	$System_Windows_DependencyProperty.RegisterAttached = function(name, propertyType, ownerType, metadata, validateValueCallback) {
		return $System_Windows_DependencyProperty.$Register(new $System_$Windows_DependencyProperty$DependencyPropertyHashKey(ownerType, name), propertyType, metadata, validateValueCallback, true, false);
	};
	$System_Windows_DependencyProperty.RegisterReadOnly = function(name, propertyType, ownerType, metadata, validateValueCallback) {
		var hashKey = new $System_$Windows_DependencyProperty$DependencyPropertyHashKey(ownerType, name);
		var readOnlyKey = new $System_Windows_DependencyPropertyKey($System_Windows_DependencyProperty.$Register(hashKey, propertyType, metadata, validateValueCallback, false, true));
		$System_Windows_DependencyProperty.$registeredReadOnlyPropertiesKey.add(hashKey, readOnlyKey);
		return readOnlyKey;
	};
	$System_Windows_DependencyProperty.RegisterAttachedReadOnly = function(name, propertyType, ownerType, metadata, validateValueCallback) {
		var key = new $System_$Windows_DependencyProperty$DependencyPropertyHashKey(ownerType, name);
		var readOnlyKey = new $System_Windows_DependencyPropertyKey($System_Windows_DependencyProperty.$Register(key, propertyType, metadata, validateValueCallback, true, true));
		$System_Windows_DependencyProperty.$registeredReadOnlyPropertiesKey.add(key, readOnlyKey);
		return readOnlyKey;
	};
	$System_Windows_DependencyProperty.IsValidReadOnlyKey = function(key) {
		var registeredKey = {};
		return $System_Windows_DependencyProperty.$registeredReadOnlyPropertiesKey.tryGetValue(key.get_DependencyProperty().$hashKey, registeredKey) && ss.referenceEquals(registeredKey.$, key);
	};
	$System_Windows_DependencyProperty.$IsValidType = function(value, propertyType) {
		return (ss.isNullOrUndefined(value) ? (!System.TypeExtensions.GetIsValueType(propertyType) || System.TypeExtensions.GetIsGenericType(propertyType) && ss.referenceEquals(ss.getGenericTypeDefinition(propertyType), ss.Nullable$1)) : ss.isInstanceOfType(value, propertyType));
	};
	$System_Windows_DependencyProperty.$ConvertDefaultValue = function(key, defaultValue, propertyType) {
		try {
			return Granular.Compatibility.Convert.ChangeType(defaultValue, propertyType);
		}
		catch ($t1) {
			var e = ss.Exception.wrap($t1);
			throw new Granular.Exception('Dependency property "{0}.{1}" default value "{2}" cannot be converted to "{3}" ({4})', [ss.getTypeName(key.get_$Owner()), key.get_$Name(), defaultValue, propertyType, e.get_message()]);
		}
	};
	$System_Windows_DependencyProperty.$AddRegisteredProperty = function(key, dependencyProperty) {
		$System_Windows_DependencyProperty.$VerifyNotRegistered(key, dependencyProperty);
		$System_Windows_DependencyProperty.$registeredProperties.add(key, dependencyProperty);
		$System_Windows_DependencyProperty.$typeRegisteredProperties.Add(key.get_$Owner(), dependencyProperty);
	};
	$System_Windows_DependencyProperty.$VerifyNotRegistered = function(key, dependencyProperty) {
		var registeredDependencyProperty = {};
		if ($System_Windows_DependencyProperty.$registeredProperties.tryGetValue(key, registeredDependencyProperty)) {
			throw new Granular.Exception('Can\'t register dependency property "{0}", Type "{1}" already has a dependency property with the same name "{2}"', [dependencyProperty, ss.getTypeName(key.get_$Owner()), registeredDependencyProperty.$]);
		}
	};
	$System_Windows_DependencyProperty.GetProperties = function(containingType) {
		return $System_Windows_DependencyProperty.$typeRegisteredProperties.GetValues(containingType);
	};
	$System_Windows_DependencyProperty.GetFlattenedProperties = function(containingType) {
		return $System_Windows_DependencyProperty.$typeFlattenedPropertiesCache.GetValue(containingType);
	};
	$System_Windows_DependencyProperty.$ResolveTypeFlattenedProperties = function(containingType) {
		Granular.Compatibility.RuntimeHelpers.RunClassConstructor(containingType);
		return (ss.isValue(ss.getBaseType(containingType)) ? Enumerable.from($System_Windows_DependencyProperty.GetFlattenedProperties(ss.getBaseType(containingType))).concat($System_Windows_DependencyProperty.GetProperties(containingType)).toArray() : Enumerable.from($System_Windows_DependencyProperty.GetProperties(containingType)).toArray());
	};
	$System_Windows_DependencyProperty.GetSingleProperty = function(containingType, propertyName) {
		var properties = Enumerable.from($System_Windows_DependencyProperty.GetFlattenedProperties(containingType)).where(function(property) {
			return ss.referenceEquals(property.get_Name(), propertyName);
		}).toArray();
		if (properties.length > 1) {
			throw new Granular.Exception('Type "{0}" contains more than one property named "{1}" ({2})', [ss.getTypeName(containingType), propertyName, Enumerable.from(properties).select(function(property1) {
				return property1.toString();
			}).aggregate(function(s1, s2) {
				return ss.formatString('{0}, {1}', s1, s2);
			})]);
		}
		return Enumerable.from(properties).firstOrDefault(null, ss.getDefaultValue($System_Windows_DependencyProperty));
	};
	$System_Windows_DependencyProperty.GetOwnedProperty = function(ownerType, propertyName) {
		Granular.Compatibility.RuntimeHelpers.RunClassConstructor(ownerType);
		var property = {};
		return ($System_Windows_DependencyProperty.$registeredProperties.tryGetValue(new $System_$Windows_DependencyProperty$DependencyPropertyHashKey(ownerType, propertyName), property) ? property.$ : null);
	};
	$System_Windows_DependencyProperty.GetProperty = function(containingType, propertyName) {
		if (!propertyName.get_IsMemberName()) {
			// containing type wasn't specified, so the property could be owned by a base type
			return $System_Windows_DependencyProperty.GetSingleProperty(containingType, propertyName.get_LocalName());
		}
		var ownerType = $System_Windows_Markup_TypeParser.ParseType(propertyName.get_ContainingTypeName());
		return $System_Windows_DependencyProperty.GetOwnedProperty(ownerType, propertyName.get_MemberName());
	};
	global.System.Windows.DependencyProperty = $System_Windows_DependencyProperty;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.DependencyPropertyChangedEventArgs
	var $System_Windows_DependencyPropertyChangedEventArgs = function(property, oldValue, newValue) {
		this.$2$PropertyField = null;
		this.$2$NewValueField = null;
		this.$2$OldValueField = null;
		ss.EventArgs.call(this);
		this.set_Property(property);
		this.set_OldValue(oldValue);
		this.set_NewValue(newValue);
	};
	$System_Windows_DependencyPropertyChangedEventArgs.__typeName = 'System.Windows.DependencyPropertyChangedEventArgs';
	global.System.Windows.DependencyPropertyChangedEventArgs = $System_Windows_DependencyPropertyChangedEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.DependencyPropertyChangedEventHandlerExtensions
	var $System_Windows_DependencyPropertyChangedEventHandlerExtensions = function() {
	};
	$System_Windows_DependencyPropertyChangedEventHandlerExtensions.__typeName = 'System.Windows.DependencyPropertyChangedEventHandlerExtensions';
	$System_Windows_DependencyPropertyChangedEventHandlerExtensions.Raise = function(handler, sender, e) {
		if (!ss.staticEquals(handler, null)) {
			handler(sender, e);
		}
	};
	global.System.Windows.DependencyPropertyChangedEventHandlerExtensions = $System_Windows_DependencyPropertyChangedEventHandlerExtensions;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.DependencyPropertyKey
	var $System_Windows_DependencyPropertyKey = function(dependencyProperty) {
		this.$1$DependencyPropertyField = null;
		this.set_DependencyProperty(dependencyProperty);
	};
	$System_Windows_DependencyPropertyKey.__typeName = 'System.Windows.DependencyPropertyKey';
	global.System.Windows.DependencyPropertyKey = $System_Windows_DependencyPropertyKey;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.DependencyPropertyPathElement
	var $System_Windows_DependencyPropertyPathElement = function(dependencyProperty) {
		this.$1$DependencyPropertyField = null;
		this.set_DependencyProperty(dependencyProperty);
	};
	$System_Windows_DependencyPropertyPathElement.__typeName = 'System.Windows.DependencyPropertyPathElement';
	global.System.Windows.DependencyPropertyPathElement = $System_Windows_DependencyPropertyPathElement;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.DependencyPropertyTypeConverter
	var $System_Windows_DependencyPropertyTypeConverter = function() {
	};
	$System_Windows_DependencyPropertyTypeConverter.__typeName = 'System.Windows.DependencyPropertyTypeConverter';
	global.System.Windows.DependencyPropertyTypeConverter = $System_Windows_DependencyPropertyTypeConverter;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.DependencyPropertyValueEntry
	var $System_Windows_DependencyPropertyValueEntry = function(dependencyObject, dependencyProperty) {
		this.$1$ValueChangedField = null;
		this.$observableValue = null;
		this.$baseValues = null;
		this.$currentValue = null;
		this.$animationValue = null;
		this.$dependencyProperty = null;
		this.$defaultValue = null;
		this.$dependencyProperty = dependencyProperty;
		this.$defaultValue = dependencyProperty.GetMetadata(ss.getInstanceType(dependencyObject)).get_DefaultValue();
		this.$observableValue = new $System_Windows_Data_ObservableValue();
		this.$observableValue.add_ValueChanged(ss.mkdel(this, function(sender, e) {
			Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_Data_ObservableValueChangedArgs).call(null, this.$1$ValueChangedField, this, e);
		}));
		this.$baseValues = new Array($System_Windows_DependencyPropertyValueEntry.$BaseValuePriorities);
		for (var i = 0; i < this.$baseValues.length; i++) {
			this.$baseValues[i] = $System_Windows_Data_ObservableValue.UnsetValue;
		}
		this.$currentValue = $System_Windows_Data_ObservableValue.UnsetValue;
		this.$animationValue = $System_Windows_Data_ObservableValue.UnsetValue;
	};
	$System_Windows_DependencyPropertyValueEntry.__typeName = 'System.Windows.DependencyPropertyValueEntry';
	$System_Windows_DependencyPropertyValueEntry.$GetFlattenedValue = function(value) {
		var observableValue = ss.safeCast(value, $System_Windows_Data_IObservableValue);
		return (ss.isValue(observableValue) ? $System_Windows_DependencyPropertyValueEntry.$GetFlattenedValue(observableValue.get_Value()) : value);
	};
	global.System.Windows.DependencyPropertyValueEntry = $System_Windows_DependencyPropertyValueEntry;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Disposable
	var $System_Windows_Disposable = function(dispose) {
		this.$dispose = null;
		this.$dispose = dispose;
	};
	$System_Windows_Disposable.__typeName = 'System.Windows.Disposable';
	$System_Windows_Disposable.Combine = function(disposable1, disposable2) {
		return new $System_Windows_Disposable(function() {
			disposable1.dispose();
			disposable2.dispose();
		});
	};
	global.System.Windows.Disposable = $System_Windows_Disposable;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Duration
	var $System_Windows_Duration = function(timeSpan) {
		$System_Windows_Duration.$ctor1.call(this, 1, timeSpan);
		//
	};
	$System_Windows_Duration.__typeName = 'System.Windows.Duration';
	$System_Windows_Duration.$ctor1 = function(durationType, timeSpan) {
		this.$1$TimeSpanField = ss.getDefaultValue(ss.TimeSpan);
		this.$durationType = 0;
		this.set_TimeSpan(timeSpan);
		this.$durationType = durationType;
	};
	$System_Windows_Duration.Parse = function(value) {
		value = value.trim();
		if (value === 'Automatic') {
			return $System_Windows_Duration.Automatic;
		}
		if (value === 'Forever') {
			return $System_Windows_Duration.Forever;
		}
		var timeSpan = {};
		if (Granular.Compatibility.TimeSpan.TryParse(value, timeSpan)) {
			return new $System_Windows_Duration(timeSpan.$);
		}
		throw new Granular.Exception('Can\'t parse Duration value "{0}"', [value]);
	};
	global.System.Windows.Duration = $System_Windows_Duration;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.DynamicResourceExtension
	var $System_Windows_DynamicResourceExtension = function() {
		this.$1$ResourceKeyField = null;
	};
	$System_Windows_DynamicResourceExtension.__typeName = 'System.Windows.DynamicResourceExtension';
	global.System.Windows.DynamicResourceExtension = $System_Windows_DynamicResourceExtension;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.EmbeddedResourceLoader
	var $System_Windows_EmbeddedResourceLoader = function() {
	};
	$System_Windows_EmbeddedResourceLoader.__typeName = 'System.Windows.EmbeddedResourceLoader';
	$System_Windows_EmbeddedResourceLoader.LoadResourceData = function(resourceUri) {
		var assemblyName = {};
		var resourcePath = {};
		$System_Windows_EmbeddedResourceLoader.$ParseResourceUri(resourceUri, assemblyName, resourcePath);
		return $System_Windows_EmbeddedResourceLoader.$resourceDataCache.GetValue(new $System_$Windows_EmbeddedResourceLoader$EmbeddedResourceKey(assemblyName.$, resourcePath.$));
	};
	$System_Windows_EmbeddedResourceLoader.LoadResourceData$1 = function(assemblyName, resourcePath) {
		return $System_Windows_EmbeddedResourceLoader.$resourceDataCache.GetValue(new $System_$Windows_EmbeddedResourceLoader$EmbeddedResourceKey(assemblyName, resourcePath));
	};
	$System_Windows_EmbeddedResourceLoader.$ResolveResourceData = function(key) {
		var assembly = Enumerable.from(ss.getAssemblies()).where(function(a) {
			return ss.referenceEquals(System.AssemblyExtensions.GetName(a).get_Name(), key.get_$AssemblyName());
		}).firstOrDefault(null, ss.getDefaultValue(Object));
		if (ss.isNullOrUndefined(assembly)) {
			assembly = ss.load(key.get_$AssemblyName());
		}
		var resourceName = ss.formatString('{0}.{1}', key.get_$AssemblyName(), ss.replaceAllString(ss.trimStartString(key.get_$ResourcePath(), [47]), String.fromCharCode(47), String.fromCharCode(46)));
		var resourceData = (ss.isValue(assembly) ? assembly.getResourceData(resourceName) : null);
		if (ss.isNullOrUndefined(resourceData)) {
			throw new Granular.Exception('Resource "{0}" was not found', [resourceName]);
		}
		return resourceData;
	};
	$System_Windows_EmbeddedResourceLoader.LoadResourceElement = function(resourceUri) {
		var assemblyName = {};
		var resourcePath = {};
		$System_Windows_EmbeddedResourceLoader.$ParseResourceUri(resourceUri, assemblyName, resourcePath);
		return $System_Windows_EmbeddedResourceLoader.$resourceElementCache.GetValue(new $System_$Windows_EmbeddedResourceLoader$EmbeddedResourceKey(assemblyName.$, resourcePath.$));
	};
	$System_Windows_EmbeddedResourceLoader.LoadResourceElement$1 = function(assemblyName, resourcePath) {
		return $System_Windows_EmbeddedResourceLoader.$resourceElementCache.GetValue(new $System_$Windows_EmbeddedResourceLoader$EmbeddedResourceKey(assemblyName, resourcePath));
	};
	$System_Windows_EmbeddedResourceLoader.$ResolveResourceElement = function(key) {
		var resourceString = Granular.Compatibility.String.FromByteArray($System_Windows_EmbeddedResourceLoader.$resourceDataCache.GetValue(key));
		return $System_Windows_Markup_XamlLoader.Load(System.Xaml.XamlParser.Parse(resourceString));
	};
	$System_Windows_EmbeddedResourceLoader.$ParseResourceUri = function(resourceUri, assemblyName, resourcePath) {
		var match = System.Text.RegularExpressions.RegexExtensions.Match($System_Windows_EmbeddedResourceLoader.$ResourceUriRegex, resourceUri);
		assemblyName.$ = match.get_Groups().get_Item($System_Windows_EmbeddedResourceLoader.$ResourceUriAssemblyNameGroupIndex).get_Value();
		resourcePath.$ = match.get_Groups().get_Item($System_Windows_EmbeddedResourceLoader.$ResourceUriPathGroupIndex).get_Value();
		if (!match.get_Success()) {
			throw new Granular.Exception('Invalid resource uri "{0}"', [resourceUri]);
		}
	};
	global.System.Windows.EmbeddedResourceLoader = $System_Windows_EmbeddedResourceLoader;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.EventManager
	var $System_Windows_EventManager = function() {
	};
	$System_Windows_EventManager.__typeName = 'System.Windows.EventManager';
	$System_Windows_EventManager.RegisterRoutedEvent = function(name, routingStrategy, handlerType, ownerType) {
		var key = new $System_$Windows_EventManager$RoutedEventKey(ownerType, name);
		if ($System_Windows_EventManager.$registeredRoutedEvents.containsKey(key)) {
			throw new Granular.Exception('RoutedEvent {0}.{1} is already registered', [ss.getTypeName(ownerType), name]);
		}
		var routedEvent = new $System_Windows_RoutedEvent(name, routingStrategy, handlerType, ownerType);
		$System_Windows_EventManager.$registeredRoutedEvents.add(key, routedEvent);
		return routedEvent;
	};
	$System_Windows_EventManager.AddOwner = function(routedEvent, ownerType) {
		var key = new $System_$Windows_EventManager$RoutedEventKey(ownerType, routedEvent.get_Name());
		if ($System_Windows_EventManager.$registeredRoutedEvents.containsKey(key)) {
			throw new Granular.Exception('Type "{0}" is already an owner of RoutedEvent "{1}"', [ss.getTypeName(key.get_$Owner()), routedEvent]);
		}
		$System_Windows_EventManager.$registeredRoutedEvents.add(key, routedEvent);
	};
	$System_Windows_EventManager.RegisterClassHandler = function(classType, routedEvent, handler, handledEventsToo) {
		$System_Windows_EventManager.$RegisterClassHandler(classType, routedEvent, new $System_Windows_RoutedEventHandlerItem(handler, handledEventsToo));
	};
	$System_Windows_EventManager.$RegisterClassHandler = function(classType, routedEvent, eventRouteItem) {
		var key = new $System_$Windows_EventManager$ClassHandlerKey(classType, routedEvent);
		if ($System_Windows_EventManager.$flattenedClassHandlersCache.Contains(key)) {
			throw new Granular.Exception('{0} class handler for "{1}" has already been queried, RegisterClassHandler should only be called from {0}\'s static constructor', [ss.getTypeName(classType), routedEvent]);
		}
		$System_Windows_EventManager.$classHandlers.Add(key, eventRouteItem);
	};
	$System_Windows_EventManager.GetClassHandlers = function(classType, routedEvent) {
		return $System_Windows_EventManager.$classHandlers.GetValues(new $System_$Windows_EventManager$ClassHandlerKey(classType, routedEvent));
	};
	$System_Windows_EventManager.GetRoutedEvents = function(containingType, flattenHierarchy) {
		Granular.Compatibility.RuntimeHelpers.RunClassConstructor(containingType);
		return Enumerable.from($System_Windows_EventManager.$registeredRoutedEvents.get_keys()).where(function(key) {
			return ss.referenceEquals(key.get_$Owner(), containingType) || flattenHierarchy && ss.isAssignableFrom(key.get_$Owner(), containingType);
		}).select(function(key1) {
			return $System_Windows_EventManager.$registeredRoutedEvents.get_item(key1);
		});
	};
	$System_Windows_EventManager.GetRoutedEvents$1 = function(containingType, eventName, flattenHierarchy) {
		Granular.Compatibility.RuntimeHelpers.RunClassConstructor(containingType);
		return Enumerable.from($System_Windows_EventManager.$registeredRoutedEvents.get_keys()).where(function(key) {
			return ss.referenceEquals(key.get_$Name(), eventName) && (ss.referenceEquals(key.get_$Owner(), containingType) || flattenHierarchy && ss.isAssignableFrom(key.get_$Owner(), containingType));
		}).select(function(key1) {
			return $System_Windows_EventManager.$registeredRoutedEvents.get_item(key1);
		});
	};
	$System_Windows_EventManager.FindRoutedEvent = function(containingType, eventName) {
		var routedEvents = Enumerable.from($System_Windows_EventManager.GetRoutedEvents$1(containingType, eventName, true)).toArray();
		if (routedEvents.length > 1) {
			throw new Granular.Exception('Type "{0}" contains more than one event named "{1}" ({2})', [ss.getTypeName(containingType), eventName, Enumerable.from(routedEvents).select(function(routedEvent) {
				return routedEvent.toString();
			}).aggregate(function(s1, s2) {
				return ss.formatString('{0}, {1}', s1, s2);
			})]);
		}
		return Enumerable.from(routedEvents).firstOrDefault(null, ss.getDefaultValue($System_Windows_RoutedEvent));
	};
	$System_Windows_EventManager.GetOwnedRoutedEvent = function(ownerType, eventName) {
		return Enumerable.from($System_Windows_EventManager.GetRoutedEvents$1(ownerType, eventName, false)).singleOrDefault(null, ss.getDefaultValue($System_Windows_RoutedEvent));
	};
	$System_Windows_EventManager.GetRoutedEvent = function(eventName) {
		if (!eventName.get_IsMemberName()) {
			throw new Granular.Exception('Invalid routed event name "{0}"', [eventName.get_LocalName()]);
		}
		var ownerType = $System_Windows_Markup_TypeParser.ParseType(eventName.get_ContainingTypeName());
		return $System_Windows_EventManager.GetOwnedRoutedEvent(ownerType, eventName.get_MemberName());
	};
	$System_Windows_EventManager.GetFlattenedClassHandlers = function(classType, routedEvent) {
		return $System_Windows_EventManager.$flattenedClassHandlersCache.GetValue(new $System_$Windows_EventManager$ClassHandlerKey(classType, routedEvent));
	};
	$System_Windows_EventManager.$ResolveFlattenedClassHandlers = function(key) {
		var handlers = [];
		var type = key.get_$ClassType();
		while (ss.isValue(type)) {
			handlers = Enumerable.from($System_Windows_EventManager.$classHandlers.GetValues(new $System_$Windows_EventManager$ClassHandlerKey(type, key.get_$RoutedEvent()))).concat(handlers);
			type = ss.getBaseType(type);
		}
		return Enumerable.from(handlers).toArray();
	};
	global.System.Windows.EventManager = $System_Windows_EventManager;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.EventRoute
	var $System_Windows_EventRoute = function(routedEvent, items) {
		this.$routedEvent = null;
		this.$items = null;
		this.$routedEvent = routedEvent;
		this.$items = items;
	};
	$System_Windows_EventRoute.__typeName = 'System.Windows.EventRoute';
	global.System.Windows.EventRoute = $System_Windows_EventRoute;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.EventRouteItem
	var $System_Windows_EventRouteItem = function(handler, originalSource, source, target) {
		this.handler = null;
		this.originalSource = null;
		this.source = null;
		this.target = null;
		this.handler = handler;
		this.originalSource = originalSource;
		this.source = source;
		this.target = target;
	};
	$System_Windows_EventRouteItem.__typeName = 'System.Windows.EventRouteItem';
	global.System.Windows.EventRouteItem = $System_Windows_EventRouteItem;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.EventSetter
	var $System_Windows_EventSetter = function() {
		this.$1$EventField = null;
		this.$1$HandlerField = null;
		this.$1$HandledEventsTooField = false;
	};
	$System_Windows_EventSetter.__typeName = 'System.Windows.EventSetter';
	global.System.Windows.EventSetter = $System_Windows_EventSetter;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.EventTrigger
	var $System_Windows_EventTrigger = function() {
		this.$5$RoutedEventField = null;
		this.$5$SourceNameField = null;
		this.$5$ActionsField = null;
		$System_Windows_EventTriggerBase.call(this);
		this.set_Actions(new (ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITriggerAction]))());
	};
	$System_Windows_EventTrigger.__typeName = 'System.Windows.EventTrigger';
	global.System.Windows.EventTrigger = $System_Windows_EventTrigger;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.EventTriggerBase
	var $System_Windows_EventTriggerBase = function() {
		this.$attachedConditions = null;
		$System_Windows_TriggerBase.call(this);
		this.$attachedConditions = new (ss.makeGenericType(ss.Dictionary$2, [$System_Windows_FrameworkElement, $System_Windows_IEventTriggerCondition]))();
	};
	$System_Windows_EventTriggerBase.__typeName = 'System.Windows.EventTriggerBase';
	global.System.Windows.EventTriggerBase = $System_Windows_EventTriggerBase;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.FontFamily
	var $System_Windows_FontFamily = function(familyNames) {
		this.$1$FamilyNamesField = null;
		this.set_FamilyNames(familyNames);
	};
	$System_Windows_FontFamily.__typeName = 'System.Windows.FontFamily';
	$System_Windows_FontFamily.$ctor1 = function(familyName) {
		this.$1$FamilyNamesField = null;
		this.set_FamilyNames([familyName]);
	};
	$System_Windows_FontFamily.Parse = function(value) {
		return new $System_Windows_FontFamily(Enumerable.from(value.split(String.fromCharCode(44))).select(function(s) {
			return s.trim();
		}).toArray());
	};
	global.System.Windows.FontFamily = $System_Windows_FontFamily;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.FontStretch
	var $System_Windows_FontStretch = function() {
	};
	$System_Windows_FontStretch.__typeName = 'System.Windows.FontStretch';
	global.System.Windows.FontStretch = $System_Windows_FontStretch;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.FontStyle
	var $System_Windows_FontStyle = function() {
	};
	$System_Windows_FontStyle.__typeName = 'System.Windows.FontStyle';
	global.System.Windows.FontStyle = $System_Windows_FontStyle;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.FontWeight
	var $System_Windows_FontWeight = function() {
	};
	$System_Windows_FontWeight.__typeName = 'System.Windows.FontWeight';
	global.System.Windows.FontWeight = $System_Windows_FontWeight;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.FrameworkElement
	var $System_Windows_FrameworkElement = function() {
		this.$4$ResourcesChangedField = null;
		this.$4$DataContextChangedField = null;
		this.$actualWidthValueEntry = null;
		this.$actualHeightValueEntry = null;
		this.$4$ActualSizeField = null;
		this.$4$SizeField = null;
		this.$4$MinSizeField = null;
		this.$4$MaxSizeField = null;
		this.$4$IsInitializedField = false;
		this.$4$TemplatedParentField = null;
		this.$templateChild = null;
		this.$resources = null;
		this.$resourceInheritanceParent = null;
		this.$4$TriggersField = null;
		this.$4$NameField = null;
		this.$appliedTemplate = null;
		this.$resourcesCache = null;
		$System_Windows_UIElement.call(this);
		this.set_Triggers(new (ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITrigger]))());
		this.get_Triggers().add_CollectionChanged(ss.mkdel(this, this.$OnTriggersCollectionChanged));
		this.$resourcesCache = new (ss.makeGenericType(Granular.Collections.CacheDictionary$2, [Object, Object]).$ctor1)(ss.mkdel(this, this.$TryResolveResource));
		this.$actualWidthValueEntry = this.GetValueEntry$1($System_Windows_FrameworkElement.$ActualWidthPropertyKey);
		this.$actualHeightValueEntry = this.GetValueEntry$1($System_Windows_FrameworkElement.$ActualHeightPropertyKey);
		this.set_ActualSize($System_Windows_Size.Empty);
		this.set_Size($System_Windows_Size.Empty);
		this.set_MinSize($System_Windows_Size.Zero);
		this.set_MaxSize($System_Windows_Size.Infinity);
	};
	$System_Windows_FrameworkElement.__typeName = 'System.Windows.FrameworkElement';
	$System_Windows_FrameworkElement.$GetAlignmentOffset = function(container, alignedRectSize, horizontalAlignment, verticalAlignment) {
		var alignedLeft = container.get_Left();
		var alignedTop = container.get_Top();
		if (horizontalAlignment === 2) {
			alignedLeft = container.get_Left() + container.get_Width() - alignedRectSize.get_Width();
		}
		if (horizontalAlignment === 1 || horizontalAlignment === 3) {
			alignedLeft = container.get_Left() + (container.get_Width() - alignedRectSize.get_Width()) / 2;
		}
		if (verticalAlignment === 2) {
			alignedTop = container.get_Top() + container.get_Height() - alignedRectSize.get_Height();
		}
		if (verticalAlignment === 1 || verticalAlignment === 3) {
			alignedTop = container.get_Top() + (container.get_Height() - alignedRectSize.get_Height()) / 2;
		}
		return new $System_Windows_Point.$ctor1(alignedLeft, alignedTop);
	};
	global.System.Windows.FrameworkElement = $System_Windows_FrameworkElement;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.FrameworkElementFactory
	var $System_Windows_FrameworkElementFactory = function(elementFactory, context) {
		this.$elementFactory = null;
		this.$context = null;
		this.$elementFactory = elementFactory;
		this.$context = context;
	};
	$System_Windows_FrameworkElementFactory.__typeName = 'System.Windows.FrameworkElementFactory';
	global.System.Windows.FrameworkElementFactory = $System_Windows_FrameworkElementFactory;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.FrameworkPropertyMetadata
	var $System_Windows_FrameworkPropertyMetadata = function(defaultValue, propertyChangedCallback, coerceValueCallback, inherits, affectsMeasure, affectsArrange, bindsTwoWayByDefault, defaultUpdateSourceTrigger) {
		this.$2$AffectsMeasureField = false;
		this.$2$AffectsArrangeField = false;
		this.$2$BindsTwoWayByDefaultField = false;
		this.$2$DefaultUpdateSourceTriggerField = 0;
		$System_Windows_PropertyMetadata.call(this, defaultValue, propertyChangedCallback, coerceValueCallback, inherits);
		this.set_AffectsMeasure(affectsMeasure);
		this.set_AffectsArrange(affectsArrange);
		this.set_BindsTwoWayByDefault(bindsTwoWayByDefault);
		this.set_DefaultUpdateSourceTrigger(defaultUpdateSourceTrigger);
	};
	$System_Windows_FrameworkPropertyMetadata.__typeName = 'System.Windows.FrameworkPropertyMetadata';
	global.System.Windows.FrameworkPropertyMetadata = $System_Windows_FrameworkPropertyMetadata;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.FrameworkTemplate
	var $System_Windows_FrameworkTemplate = function() {
		this.$2$FrameworkElementFactoryField = null;
		this.$2$TriggersField = null;
		$System_Windows_DependencyObject.call(this);
		this.set_Triggers(new (ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITrigger]))());
	};
	$System_Windows_FrameworkTemplate.__typeName = 'System.Windows.FrameworkTemplate';
	global.System.Windows.FrameworkTemplate = $System_Windows_FrameworkTemplate;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.FrameworkTemplateExtensions
	var $System_Windows_FrameworkTemplateExtensions = function() {
	};
	$System_Windows_FrameworkTemplateExtensions.__typeName = 'System.Windows.FrameworkTemplateExtensions';
	$System_Windows_FrameworkTemplateExtensions.FindName = function(frameworkTemplate, name, templatedParent) {
		return $System_Windows_Markup_NameScope.GetNameScope(templatedParent.get_TemplateChild()).FindName(name);
	};
	global.System.Windows.FrameworkTemplateExtensions = $System_Windows_FrameworkTemplateExtensions;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Freezable
	var $System_Windows_Freezable = function() {
		this.$2$ChangedField = null;
		this.$2$ResourcesChangedField = null;
		this.$2$IsFrozenField = false;
		this.$parentResourceContainer = null;
		$System_Windows_DependencyObject.call(this);
	};
	$System_Windows_Freezable.__typeName = 'System.Windows.Freezable';
	global.System.Windows.Freezable = $System_Windows_Freezable;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.FreezableCollection
	var $System_Windows_FreezableCollection$1 = function(T) {
		var $type = function() {
			$type.$ctor1.call(this, []);
			//
		};
		$type.$ctor1 = function(collection) {
			this.$3$CollectionChangedField = null;
			this.$collection = null;
			$System_Windows_Freezable.call(this);
			this.$collection = new (ss.makeGenericType(Granular.Collections.ObservableCollection$1, [T]).$ctor1)(collection);
			this.$collection.add_CollectionChanged(ss.mkdel(this, this.$OnCollectionChanged));
		};
		ss.registerGenericClassInstance($type, $System_Windows_FreezableCollection$1, [T], {
			add_CollectionChanged: function(value) {
				this.$3$CollectionChangedField = ss.delegateCombine(this.$3$CollectionChangedField, value);
			},
			remove_CollectionChanged: function(value) {
				this.$3$CollectionChangedField = ss.delegateRemove(this.$3$CollectionChangedField, value);
			},
			get_count: function() {
				return this.$collection.get_count();
			},
			get_item: function(index) {
				return this.$collection.get_item(index);
			},
			set_item: function(index, value) {
				this.$collection.set_item(index, value);
			},
			get_IsReadOnly: function() {
				return this.$collection.get_IsReadOnly();
			},
			$OnCollectionChanged: function(sender, e) {
				var $t1 = ss.getEnumerator(e.get_OldItems());
				try {
					while ($t1.moveNext()) {
						var value = $t1.current();
						value.SetInheritanceParent(null);
						if (ss.isInstanceOfType(value, $System_Windows_Freezable)) {
							ss.safeCast(value, $System_Windows_Freezable).remove_Changed(ss.mkdel(this, this.$OnItemChanged));
						}
					}
				}
				finally {
					$t1.dispose();
				}
				var $t2 = ss.getEnumerator(e.get_NewItems());
				try {
					while ($t2.moveNext()) {
						var value1 = $t2.current();
						value1.SetInheritanceParent(this);
						if (ss.isInstanceOfType(value1, $System_Windows_Freezable)) {
							ss.safeCast(value1, $System_Windows_Freezable).add_Changed(ss.mkdel(this, this.$OnItemChanged));
						}
					}
				}
				finally {
					$t2.dispose();
				}
				Granular.Collections.NotifyCollectionChangedEventHandlerExtensions.Raise(this.$3$CollectionChangedField, this, e);
				this.RaiseChanged();
			},
			$OnItemChanged: function(sender, e) {
				this.RaiseChanged();
			},
			OnInheritanceParentChanged: function(oldInheritanceParent, newInheritanceParent) {
				$System_Windows_Freezable.prototype.OnInheritanceParentChanged.call(this, oldInheritanceParent, newInheritanceParent);
			},
			add: function(item) {
				this.$collection.add(item);
			},
			clear: function() {
				this.$collection.clear();
			},
			contains: function(item) {
				return this.$collection.contains(item);
			},
			indexOf: function(item) {
				return this.$collection.indexOf(item);
			},
			insert: function(index, item) {
				this.$collection.insert(index, item);
			},
			remove: function(item) {
				return this.$collection.remove(item);
			},
			removeAt: function(index) {
				this.$collection.removeAt(index);
			},
			CopyTo: function(array, arrayIndex) {
				this.$collection.CopyTo(array, arrayIndex);
			},
			getEnumerator: function() {
				return this.$collection.getEnumerator();
			}
		}, function() {
			return $System_Windows_Freezable;
		}, function() {
			return [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, ss.IEnumerable, ss.IEnumerable, Granular.Collections.INotifyCollectionChanged, ss.makeGenericType(Granular.Collections.IObservableCollection$1, [T]), ss.ICollection, ss.IList];
		});
		$type.$ctor1.prototype = $type.prototype;
		ss.setMetadata($type, { members: [{ name: '.ctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [ss.IEnumerable], sname: '$ctor1' }, { name: 'Add', type: 8, sname: 'add', returnType: Object, params: [T] }, { name: 'Clear', type: 8, sname: 'clear', returnType: Object, params: [] }, { name: 'Contains', type: 8, sname: 'contains', returnType: Boolean, params: [T] }, { name: 'CopyTo', type: 8, sname: 'CopyTo', returnType: Object, params: [Array, ss.Int32] }, { name: 'GetEnumerator', type: 8, sname: 'getEnumerator', returnType: ss.IEnumerator, params: [] }, { name: 'IndexOf', type: 8, sname: 'indexOf', returnType: ss.Int32, params: [T] }, { name: 'Insert', type: 8, sname: 'insert', returnType: Object, params: [ss.Int32, T] }, { name: 'OnInheritanceParentChanged', type: 8, sname: 'OnInheritanceParentChanged', returnType: Object, params: [$System_Windows_DependencyObject, $System_Windows_DependencyObject] }, { name: 'Remove', type: 8, sname: 'remove', returnType: Boolean, params: [T] }, { name: 'RemoveAt', type: 8, sname: 'removeAt', returnType: Object, params: [ss.Int32] }, { name: 'Count', type: 16, returnType: ss.Int32, getter: { name: 'get_Count', type: 8, sname: 'get_count', returnType: ss.Int32, params: [] } }, { name: 'IsReadOnly', type: 16, returnType: Boolean, getter: { name: 'get_IsReadOnly', type: 8, sname: 'get_IsReadOnly', returnType: Boolean, params: [] } }, { name: 'Item', type: 16, returnType: T, params: [ss.Int32], getter: { name: 'get_Item', type: 8, sname: 'get_item', returnType: T, params: [ss.Int32] }, setter: { name: 'set_Item', type: 8, sname: 'set_item', returnType: Object, params: [ss.Int32, T] } }, { name: 'CollectionChanged', type: 2, adder: { name: 'add_CollectionChanged', type: 8, sname: 'add_CollectionChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_CollectionChanged', type: 8, sname: 'remove_CollectionChanged', returnType: Object, params: [Function] } }] });
		return $type;
	};
	$System_Windows_FreezableCollection$1.__typeName = 'System.Windows.FreezableCollection$1';
	ss.initGenericClass($System_Windows_FreezableCollection$1, $asm, 1);
	global.System.Windows.FreezableCollection$1 = $System_Windows_FreezableCollection$1;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.HorizontalAlignment
	var $System_Windows_HorizontalAlignment = function() {
	};
	$System_Windows_HorizontalAlignment.__typeName = 'System.Windows.HorizontalAlignment';
	global.System.Windows.HorizontalAlignment = $System_Windows_HorizontalAlignment;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.IApplicationHost
	var $System_Windows_IApplicationHost = function() {
	};
	$System_Windows_IApplicationHost.__typeName = 'System.Windows.IApplicationHost';
	global.System.Windows.IApplicationHost = $System_Windows_IApplicationHost;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.IDataTriggerCondition
	var $System_Windows_IDataTriggerCondition = function() {
	};
	$System_Windows_IDataTriggerCondition.__typeName = 'System.Windows.IDataTriggerCondition';
	global.System.Windows.IDataTriggerCondition = $System_Windows_IDataTriggerCondition;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.IDataTriggerConditionProvider
	var $System_Windows_IDataTriggerConditionProvider = function() {
	};
	$System_Windows_IDataTriggerConditionProvider.__typeName = 'System.Windows.IDataTriggerConditionProvider';
	global.System.Windows.IDataTriggerConditionProvider = $System_Windows_IDataTriggerConditionProvider;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.IDependencyPropertyValueEntry
	var $System_Windows_IDependencyPropertyValueEntry = function() {
	};
	$System_Windows_IDependencyPropertyValueEntry.__typeName = 'System.Windows.IDependencyPropertyValueEntry';
	global.System.Windows.IDependencyPropertyValueEntry = $System_Windows_IDependencyPropertyValueEntry;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.IEventTriggerCondition
	var $System_Windows_IEventTriggerCondition = function() {
	};
	$System_Windows_IEventTriggerCondition.__typeName = 'System.Windows.IEventTriggerCondition';
	global.System.Windows.IEventTriggerCondition = $System_Windows_IEventTriggerCondition;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.IExpression
	var $System_Windows_IExpression = function() {
	};
	$System_Windows_IExpression.__typeName = 'System.Windows.IExpression';
	global.System.Windows.IExpression = $System_Windows_IExpression;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.IExpressionProvider
	var $System_Windows_IExpressionProvider = function() {
	};
	$System_Windows_IExpressionProvider.__typeName = 'System.Windows.IExpressionProvider';
	global.System.Windows.IExpressionProvider = $System_Windows_IExpressionProvider;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.IFrameworkElementFactory
	var $System_Windows_IFrameworkElementFactory = function() {
	};
	$System_Windows_IFrameworkElementFactory.__typeName = 'System.Windows.IFrameworkElementFactory';
	global.System.Windows.IFrameworkElementFactory = $System_Windows_IFrameworkElementFactory;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.IFrameworkTemplate
	var $System_Windows_IFrameworkTemplate = function() {
	};
	$System_Windows_IFrameworkTemplate.__typeName = 'System.Windows.IFrameworkTemplate';
	global.System.Windows.IFrameworkTemplate = $System_Windows_IFrameworkTemplate;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.IInheritableObject
	var $System_Windows_IInheritableObject = function() {
	};
	$System_Windows_IInheritableObject.__typeName = 'System.Windows.IInheritableObject';
	global.System.Windows.IInheritableObject = $System_Windows_IInheritableObject;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.IInputElement
	var $System_Windows_IInputElement = function() {
	};
	$System_Windows_IInputElement.__typeName = 'System.Windows.IInputElement';
	global.System.Windows.IInputElement = $System_Windows_IInputElement;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.IInputElementExtensions
	var $System_Windows_IInputElementExtensions = function() {
	};
	$System_Windows_IInputElementExtensions.__typeName = 'System.Windows.IInputElementExtensions';
	$System_Windows_IInputElementExtensions.RaiseEvents = function(element, previewEventArgs, eventArgs) {
		element.RaiseEvent(previewEventArgs);
		eventArgs.set_Handled(previewEventArgs.get_Handled());
		element.RaiseEvent(eventArgs);
		return eventArgs.get_Handled();
	};
	global.System.Windows.IInputElementExtensions = $System_Windows_IInputElementExtensions;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.IndexPropertyPathElement
	var $System_Windows_IndexPropertyPathElement = function(propertyName, indexRawValues, namespaces) {
		this.$1$PropertyNameField = null;
		this.$1$IndexRawValuesField = null;
		this.$namespaces = null;
		this.set_PropertyName(propertyName);
		this.set_IndexRawValues(indexRawValues);
		this.$namespaces = namespaces;
	};
	$System_Windows_IndexPropertyPathElement.__typeName = 'System.Windows.IndexPropertyPathElement';
	global.System.Windows.IndexPropertyPathElement = $System_Windows_IndexPropertyPathElement;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.IPresentationSource
	var $System_Windows_IPresentationSource = function() {
	};
	$System_Windows_IPresentationSource.__typeName = 'System.Windows.IPresentationSource';
	global.System.Windows.IPresentationSource = $System_Windows_IPresentationSource;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.IPresentationSourceFactory
	var $System_Windows_IPresentationSourceFactory = function() {
	};
	$System_Windows_IPresentationSourceFactory.__typeName = 'System.Windows.IPresentationSourceFactory';
	global.System.Windows.IPresentationSourceFactory = $System_Windows_IPresentationSourceFactory;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.IPropertyPathElement
	var $System_Windows_IPropertyPathElement = function() {
	};
	$System_Windows_IPropertyPathElement.__typeName = 'System.Windows.IPropertyPathElement';
	global.System.Windows.IPropertyPathElement = $System_Windows_IPropertyPathElement;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.IRenderImageSourceFactory
	var $System_Windows_IRenderImageSourceFactory = function() {
	};
	$System_Windows_IRenderImageSourceFactory.__typeName = 'System.Windows.IRenderImageSourceFactory';
	global.System.Windows.IRenderImageSourceFactory = $System_Windows_IRenderImageSourceFactory;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.IResourceContainer
	var $System_Windows_IResourceContainer = function() {
	};
	$System_Windows_IResourceContainer.__typeName = 'System.Windows.IResourceContainer';
	global.System.Windows.IResourceContainer = $System_Windows_IResourceContainer;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.IResourceKey
	var $System_Windows_IResourceKey = function() {
	};
	$System_Windows_IResourceKey.__typeName = 'System.Windows.IResourceKey';
	global.System.Windows.IResourceKey = $System_Windows_IResourceKey;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.ITextMeasurementService
	var $System_Windows_ITextMeasurementService = function() {
	};
	$System_Windows_ITextMeasurementService.__typeName = 'System.Windows.ITextMeasurementService';
	global.System.Windows.ITextMeasurementService = $System_Windows_ITextMeasurementService;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.ITrigger
	var $System_Windows_ITrigger = function() {
	};
	$System_Windows_ITrigger.__typeName = 'System.Windows.ITrigger';
	global.System.Windows.ITrigger = $System_Windows_ITrigger;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.ITriggerAction
	var $System_Windows_ITriggerAction = function() {
	};
	$System_Windows_ITriggerAction.__typeName = 'System.Windows.ITriggerAction';
	global.System.Windows.ITriggerAction = $System_Windows_ITriggerAction;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.LayoutManager
	var $System_Windows_LayoutManager = function() {
		this.$measureQueue = null;
		this.$arrangeQueue = null;
		this.$updatedElements = null;
		this.$updateLayoutOperation = null;
		this.$measureQueue = new (ss.makeGenericType(System.Collections.Generic.HashSet$1, [$System_Windows_UIElement]))();
		this.$arrangeQueue = new (ss.makeGenericType(System.Collections.Generic.HashSet$1, [$System_Windows_UIElement]))();
		this.$updatedElements = new (ss.makeGenericType(System.Collections.Generic.HashSet$1, [$System_Windows_UIElement]))();
	};
	$System_Windows_LayoutManager.__typeName = 'System.Windows.LayoutManager';
	$System_Windows_LayoutManager.$GetElementPath = function(element) {
		return new ss.IteratorBlockEnumerable(function() {
			return (function(element) {
				var $result, $state = 0;
				return new ss.IteratorBlockEnumerator(function() {
					$sm1:
					for (;;) {
						switch ($state) {
							case 0: {
								$state = -1;
								if (!ss.isValue(element)) {
									$state = -1;
									break $sm1;
								}
								$result = element;
								$state = 1;
								return true;
							}
							case 1: {
								$state = -1;
								element = ss.cast(element.get_VisualParent(), $System_Windows_UIElement);
								$state = 0;
								continue $sm1;
							}
							default: {
								break $sm1;
							}
						}
					}
					return false;
				}, function() {
					return $result;
				}, null, this);
			}).call(this, element);
		}, this);
	};
	global.System.Windows.LayoutManager = $System_Windows_LayoutManager;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.MultiDataTrigger
	var $System_Windows_MultiDataTrigger = function() {
		$System_Windows_MultiDataTriggerBase.call(this);
	};
	$System_Windows_MultiDataTrigger.__typeName = 'System.Windows.MultiDataTrigger';
	global.System.Windows.MultiDataTrigger = $System_Windows_MultiDataTrigger;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.MultiDataTriggerBase
	var $System_Windows_MultiDataTriggerBase = function() {
		this.$5$ConditionsField = null;
		this.$5$SettersField = null;
		$System_Windows_DataTriggerBase.call(this);
		this.set_Conditions(new (ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_Condition]))());
		this.set_Setters(new (ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITriggerAction]))());
	};
	$System_Windows_MultiDataTriggerBase.__typeName = 'System.Windows.MultiDataTriggerBase';
	global.System.Windows.MultiDataTriggerBase = $System_Windows_MultiDataTriggerBase;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.MultiTrigger
	var $System_Windows_MultiTrigger = function() {
		$System_Windows_MultiDataTriggerBase.call(this);
	};
	$System_Windows_MultiTrigger.__typeName = 'System.Windows.MultiTrigger';
	global.System.Windows.MultiTrigger = $System_Windows_MultiTrigger;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Point
	var $System_Windows_Point = function() {
		this.$1$XField = 0;
		this.$1$YField = 0;
		this.$1$IsEmptyField = false;
		this.set_X(Number.NaN);
		this.set_Y(Number.NaN);
		this.set_IsEmpty(true);
	};
	$System_Windows_Point.__typeName = 'System.Windows.Point';
	$System_Windows_Point.$ctor1 = function(x, y) {
		this.$1$XField = 0;
		this.$1$YField = 0;
		this.$1$IsEmptyField = false;
		if (Granular.Extensions.DoubleExtensions.IsNaN(x) || Granular.Extensions.DoubleExtensions.IsNaN(y)) {
			throw new Granular.Exception("Can't create point with NaN values", []);
		}
		this.set_X(x);
		this.set_Y(y);
		this.set_IsEmpty(false);
	};
	$System_Windows_Point.op_Equality = function(point1, point2) {
		return (ss.referenceEquals(point1, null) ? ss.referenceEquals(point2, null) : point1.equals(point2));
	};
	$System_Windows_Point.op_Inequality = function(point1, point2) {
		return !$System_Windows_Point.op_Equality(point1, point2);
	};
	$System_Windows_Point.op_UnaryNegation = function(point) {
		return new $System_Windows_Point.$ctor1(-point.get_X(), -point.get_Y());
	};
	$System_Windows_Point.op_Addition = function(point1, point2) {
		return new $System_Windows_Point.$ctor1(point1.get_X() + point2.get_X(), point1.get_Y() + point2.get_Y());
	};
	$System_Windows_Point.op_Subtraction = function(point1, point2) {
		return new $System_Windows_Point.$ctor1(point1.get_X() - point2.get_X(), point1.get_Y() - point2.get_Y());
	};
	$System_Windows_Point.op_Multiply$1 = function(point, scalar) {
		return new $System_Windows_Point.$ctor1(point.get_X() * scalar, point.get_Y() * scalar);
	};
	$System_Windows_Point.op_Multiply = function(scalar, point) {
		return $System_Windows_Point.op_Multiply$1(point, scalar);
	};
	$System_Windows_Point.op_Division = function(point, scalar) {
		return new $System_Windows_Point.$ctor1(point.get_X() / scalar, point.get_Y() / scalar);
	};
	$System_Windows_Point.Parse = function(value) {
		var values = Enumerable.from(value.split(String.fromCharCode(44))).select(function(v) {
			return parseFloat(v);
		}).toArray();
		if (values.length === 2) {
			return new $System_Windows_Point.$ctor1(values[0], values[1]);
		}
		throw new Granular.Exception('Can\'t parse Point value "{0}"', [value]);
	};
	$System_Windows_Point.IsNullOrEmpty = function(point) {
		return ss.referenceEquals(point, null) || point.get_IsEmpty();
	};
	global.System.Windows.Point = $System_Windows_Point;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.PointExtensions
	var $System_Windows_PointExtensions = function() {
	};
	$System_Windows_PointExtensions.__typeName = 'System.Windows.PointExtensions';
	$System_Windows_PointExtensions.IsNullOrEmpty = function(point) {
		return $System_Windows_Point.IsNullOrEmpty(point);
	};
	$System_Windows_PointExtensions.DefaultIfNullOrEmpty = function(point, defaultValue) {
		return ($System_Windows_Point.IsNullOrEmpty(point) ? (defaultValue || $System_Windows_Point.Zero) : point);
	};
	$System_Windows_PointExtensions.IsClose = function(this1, point) {
		return Granular.Extensions.DoubleExtensions.IsClose(this1.get_X(), point.get_X()) && Granular.Extensions.DoubleExtensions.IsClose(this1.get_Y(), point.get_Y());
	};
	$System_Windows_PointExtensions.Min = function(this1, point) {
		if (this1.get_IsEmpty()) {
			return point;
		}
		if (point.get_IsEmpty()) {
			return this1;
		}
		if (this1.get_X() < point.get_X() && this1.get_Y() < point.get_Y()) {
			return this1;
		}
		if (this1.get_X() >= point.get_X() && this1.get_Y() >= point.get_Y()) {
			return point;
		}
		return new $System_Windows_Point.$ctor1(Math.min(this1.get_X(), point.get_X()), Math.min(this1.get_Y(), point.get_Y()));
	};
	$System_Windows_PointExtensions.Max = function(this1, point) {
		if (this1.get_IsEmpty()) {
			return point;
		}
		if (point.get_IsEmpty()) {
			return this1;
		}
		if (this1.get_X() > point.get_X() && this1.get_Y() > point.get_Y()) {
			return this1;
		}
		if (this1.get_X() <= point.get_X() && this1.get_Y() <= point.get_Y()) {
			return point;
		}
		return new $System_Windows_Point.$ctor1(Math.max(this1.get_X(), point.get_X()), Math.max(this1.get_Y(), point.get_Y()));
	};
	$System_Windows_PointExtensions.Bounds = function(point, minimum, maximum) {
		if (minimum.get_X() > maximum.get_X() || minimum.get_Y() > maximum.get_Y()) {
			throw new Granular.Exception('Invalid bounds (minimum: {0}, maximum: {1})', [minimum, maximum]);
		}
		return $System_Windows_PointExtensions.Min($System_Windows_PointExtensions.Max(point, minimum), maximum);
	};
	$System_Windows_PointExtensions.GetLength = function(point) {
		return Math.sqrt($System_Windows_PointExtensions.GetLengthSqr(point));
	};
	$System_Windows_PointExtensions.GetLengthSqr = function(point) {
		return point.get_X() * point.get_X() + point.get_Y() * point.get_Y();
	};
	global.System.Windows.PointExtensions = $System_Windows_PointExtensions;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.PropertyMetadata
	var $System_Windows_PropertyMetadata = function(defaultValue, propertyChangedCallback, coerceValueCallback, inherits) {
		this.$1$DefaultValueField = null;
		this.$1$PropertyChangedCallbackField = null;
		this.$1$CoerceValueCallbackField = null;
		this.$1$InheritsField = false;
		this.set_DefaultValue(defaultValue);
		this.set_PropertyChangedCallback(propertyChangedCallback);
		this.set_CoerceValueCallback(coerceValueCallback);
		this.set_Inherits(inherits);
	};
	$System_Windows_PropertyMetadata.__typeName = 'System.Windows.PropertyMetadata';
	global.System.Windows.PropertyMetadata = $System_Windows_PropertyMetadata;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.PropertyPath
	var $System_Windows_PropertyPath = function(elements) {
		this.$1$ElementsField = null;
		this.set_Elements(elements);
	};
	$System_Windows_PropertyPath.__typeName = 'System.Windows.PropertyPath';
	$System_Windows_PropertyPath.Parse = function(value, namespaces) {
		var parser = new $System_Windows_Markup_PropertyPathParser(value, namespaces || System.Xaml.XamlNamespaces.Empty);
		return new $System_Windows_PropertyPath(parser.Parse());
	};
	$System_Windows_PropertyPath.FromDependencyProperty = function(dependencyProperty) {
		return new $System_Windows_PropertyPath([new $System_Windows_DependencyPropertyPathElement(dependencyProperty)]);
	};
	global.System.Windows.PropertyPath = $System_Windows_PropertyPath;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.PropertyPathElement
	var $System_Windows_PropertyPathElement = function(propertyName) {
		this.$1$PropertyNameField = null;
		this.set_PropertyName(propertyName);
	};
	$System_Windows_PropertyPathElement.__typeName = 'System.Windows.PropertyPathElement';
	$System_Windows_PropertyPathElement.TryGetValue = function(target, propertyName, value) {
		var dependencyProperty = $System_Windows_DependencyProperty.GetProperty(ss.getInstanceType(target), propertyName);
		if (ss.isValue(dependencyProperty) && ss.isInstanceOfType(target, $System_Windows_DependencyObject)) {
			value.$ = ss.cast(target, $System_Windows_DependencyObject).GetValue(dependencyProperty);
			return true;
		}
		var propertyContainingType = (propertyName.get_IsMemberName() ? $System_Windows_Markup_TypeParser.ParseType(propertyName.get_ContainingTypeName()) : ss.getInstanceType(target));
		var propertyInfo = Granular.Extensions.TypeExtensions.GetInstanceProperty(propertyContainingType, propertyName.get_MemberName());
		if (ss.isValue(propertyInfo) && !Enumerable.from(System.Reflection.ParameterInfoExtensions.GetIndexParameters(propertyInfo)).any()) {
			value.$ = ss.midel(propertyInfo.getter, target).apply(null, []);
			return true;
		}
		value.$ = null;
		return false;
	};
	global.System.Windows.PropertyPathElement = $System_Windows_PropertyPathElement;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.PropertyPathElementExtensions
	var $System_Windows_PropertyPathElementExtensions = function() {
	};
	$System_Windows_PropertyPathElementExtensions.__typeName = 'System.Windows.PropertyPathElementExtensions';
	$System_Windows_PropertyPathElementExtensions.GetDependencyProperty = function(propertyPathElement, containingType) {
		var dependencyProperty = {};
		if (propertyPathElement.TryGetDependencyProperty(containingType, dependencyProperty)) {
			return dependencyProperty.$;
		}
		throw new Granular.Exception('Type "{0}" does not contain a dependency property "{1}"', [ss.getTypeName(containingType), propertyPathElement]);
	};
	global.System.Windows.PropertyPathElementExtensions = $System_Windows_PropertyPathElementExtensions;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.PropertyPathElementTypeConverter
	var $System_Windows_PropertyPathElementTypeConverter = function() {
	};
	$System_Windows_PropertyPathElementTypeConverter.__typeName = 'System.Windows.PropertyPathElementTypeConverter';
	global.System.Windows.PropertyPathElementTypeConverter = $System_Windows_PropertyPathElementTypeConverter;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.PropertyPathExtensions
	var $System_Windows_PropertyPathExtensions = function() {
	};
	$System_Windows_PropertyPathExtensions.__typeName = 'System.Windows.PropertyPathExtensions';
	$System_Windows_PropertyPathExtensions.GetBasePropertyPath = function(propertyPath) {
		return ((Enumerable.from(propertyPath.get_Elements()).count() > 1) ? new $System_Windows_PropertyPath(Enumerable.from(propertyPath.get_Elements()).take(Enumerable.from(propertyPath.get_Elements()).count() - 1)) : $System_Windows_PropertyPath.Empty);
	};
	$System_Windows_PropertyPathExtensions.Insert = function(propertyPath, index, element) {
		var elements = Enumerable.from(propertyPath.get_Elements()).take(index).concat([element]).concat(Enumerable.from(propertyPath.get_Elements()).skip(index)).toArray();
		return new $System_Windows_PropertyPath(elements);
	};
	$System_Windows_PropertyPathExtensions.TryGetValue = function(propertyPath, root, value) {
		if (propertyPath.get_IsEmpty()) {
			value.$ = null;
			return false;
		}
		if (Enumerable.from(propertyPath.get_Elements()).count() > 1) {
			var baseValue = {};
			if (!$System_Windows_PropertyPathExtensions.TryGetValue($System_Windows_PropertyPathExtensions.GetBasePropertyPath(propertyPath), root, baseValue)) {
				value.$ = null;
				return false;
			}
			root = baseValue.$;
		}
		return Enumerable.from(propertyPath.get_Elements()).last().TryGetValue(root, value);
	};
	global.System.Windows.PropertyPathExtensions = $System_Windows_PropertyPathExtensions;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.PropertyPathTypeConverter
	var $System_Windows_PropertyPathTypeConverter = function() {
	};
	$System_Windows_PropertyPathTypeConverter.__typeName = 'System.Windows.PropertyPathTypeConverter';
	global.System.Windows.PropertyPathTypeConverter = $System_Windows_PropertyPathTypeConverter;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.ReadOnlyDependencyPropertyValueEntry
	var $System_Windows_ReadOnlyDependencyPropertyValueEntry = function(source) {
		this.$1$ValueChangedField = null;
		this.$source = null;
		this.$source = source;
		source.add_ValueChanged(ss.mkdel(this, function(sender, e) {
			Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_Data_ObservableValueChangedArgs).call(null, this.$1$ValueChangedField, this, e);
		}));
	};
	$System_Windows_ReadOnlyDependencyPropertyValueEntry.__typeName = 'System.Windows.ReadOnlyDependencyPropertyValueEntry';
	$System_Windows_ReadOnlyDependencyPropertyValueEntry.$ThrowReadOnlyException = function() {
		throw new Granular.Exception("Can't modify a read-only dependency property value", []);
	};
	global.System.Windows.ReadOnlyDependencyPropertyValueEntry = $System_Windows_ReadOnlyDependencyPropertyValueEntry;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Rect
	var $System_Windows_Rect = function(size) {
		$System_Windows_Rect.$ctor2.call(this, $System_Windows_Point.Zero, size);
		//
	};
	$System_Windows_Rect.__typeName = 'System.Windows.Rect';
	$System_Windows_Rect.$ctor1 = function(width, height) {
		$System_Windows_Rect.$ctor2.call(this, $System_Windows_Point.Zero, new $System_Windows_Size(width, height));
		//
	};
	$System_Windows_Rect.$ctor3 = function(left, top, width, height) {
		$System_Windows_Rect.$ctor2.call(this, new $System_Windows_Point.$ctor1(left, top), new $System_Windows_Size(width, height));
		//
	};
	$System_Windows_Rect.$ctor2 = function(location, size) {
		this.$1$LocationField = null;
		this.$1$SizeField = null;
		this.$1$LeftField = 0;
		this.$1$TopField = 0;
		this.$1$RightField = 0;
		this.$1$BottomField = 0;
		this.$1$WidthField = 0;
		this.$1$HeightField = 0;
		this.$1$IsEmptyField = false;
		if ($System_Windows_PointExtensions.IsNullOrEmpty(location) || $System_Windows_SizeExtensions.IsNullOrEmpty(size)) {
			this.set_IsEmpty(true);
			this.set_Location($System_Windows_Point.Empty);
			this.set_Size($System_Windows_Size.Empty);
			this.set_Left(Number.NaN);
			this.set_Top(Number.NaN);
			this.set_Right(Number.NaN);
			this.set_Bottom(Number.NaN);
			this.set_Width(Number.NaN);
			this.set_Height(Number.NaN);
		}
		else {
			if (size.get_IsPartiallyEmpty()) {
				throw new Granular.Exception("Can't create Rect with a size with an empty dimension", []);
			}
			if (size.get_Width() < 0 || size.get_Height() < 0) {
				throw new Granular.Exception("Can't create Rect with a negative size", []);
			}
			this.set_IsEmpty(false);
			this.set_Location(location);
			this.set_Size(size);
			this.set_Left(this.get_Location().get_X());
			this.set_Top(this.get_Location().get_Y());
			this.set_Right(this.get_Size().get_Width() + this.get_Location().get_X());
			this.set_Bottom(this.get_Size().get_Height() + this.get_Location().get_Y());
			this.set_Width(this.get_Size().get_Width());
			this.set_Height(this.get_Size().get_Height());
		}
	};
	$System_Windows_Rect.op_Equality = function(rect1, rect2) {
		return ss.staticEquals(rect1, rect2);
	};
	$System_Windows_Rect.op_Inequality = function(rect1, rect2) {
		return !$System_Windows_Rect.op_Equality(rect1, rect2);
	};
	$System_Windows_Rect.IsNullOrEmpty = function(rect) {
		return ss.referenceEquals(rect, null) || rect.get_IsEmpty();
	};
	$System_Windows_Rect.Parse = function(value) {
		var values = Enumerable.from(value.split(String.fromCharCode(44))).select(function(v) {
			return parseFloat(v);
		}).toArray();
		if (values.length === 2) {
			return new $System_Windows_Rect.$ctor1(values[0], values[1]);
		}
		if (values.length === 4) {
			return new $System_Windows_Rect.$ctor3(values[0], values[1], values[2], values[3]);
		}
		throw new Granular.Exception('Can\'t parse Rect value "{0}"', [value]);
	};
	global.System.Windows.Rect = $System_Windows_Rect;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.RectExtensions
	var $System_Windows_RectExtensions = function() {
	};
	$System_Windows_RectExtensions.__typeName = 'System.Windows.RectExtensions';
	$System_Windows_RectExtensions.IsNullOrEmpty = function(rect) {
		return $System_Windows_Rect.op_Equality(rect, null) || rect.get_IsEmpty();
	};
	$System_Windows_RectExtensions.DefaultIfNullOrEmpty = function(rect, defaultValue) {
		return ($System_Windows_RectExtensions.IsNullOrEmpty(rect) ? (defaultValue || $System_Windows_Rect.Zero) : rect);
	};
	$System_Windows_RectExtensions.IsClose = function(this1, rect) {
		return $System_Windows_PointExtensions.IsClose(this1.get_Location(), rect.get_Location()) && $System_Windows_SizeExtensions.IsClose(this1.get_Size(), rect.get_Size());
	};
	$System_Windows_RectExtensions.Contains = function(rect, point) {
		return rect.get_Left() <= point.get_X() && point.get_X() < rect.get_Right() && rect.get_Top() <= point.get_Y() && point.get_Y() < rect.get_Bottom();
	};
	$System_Windows_RectExtensions.Transform = function(rect, matrix) {
		var topLeft = $System_Windows_Media_Matrix.op_Multiply$1(rect.get_Location(), matrix);
		var topRight = $System_Windows_Media_Matrix.op_Multiply$1(new $System_Windows_Point.$ctor1(rect.get_Left() + rect.get_Width(), rect.get_Top()), matrix);
		var bottomLeft = $System_Windows_Media_Matrix.op_Multiply$1(new $System_Windows_Point.$ctor1(rect.get_Left(), rect.get_Top() + rect.get_Height()), matrix);
		var bottomRight = $System_Windows_Media_Matrix.op_Multiply$1(new $System_Windows_Point.$ctor1(rect.get_Left() + rect.get_Width(), rect.get_Top() + rect.get_Height()), matrix);
		var location = new $System_Windows_Point.$ctor1(Granular.Extensions.DoubleExtensions.Min(Granular.Extensions.DoubleExtensions.Min(Granular.Extensions.DoubleExtensions.Min(topLeft.get_X(), topRight.get_X()), bottomLeft.get_X()), bottomRight.get_X()), Granular.Extensions.DoubleExtensions.Min(Granular.Extensions.DoubleExtensions.Min(Granular.Extensions.DoubleExtensions.Min(topLeft.get_Y(), topRight.get_Y()), bottomLeft.get_Y()), bottomRight.get_Y()));
		var size = new $System_Windows_Size(Granular.Extensions.DoubleExtensions.Max(Granular.Extensions.DoubleExtensions.Max(Granular.Extensions.DoubleExtensions.Max(topLeft.get_X(), topRight.get_X()), bottomLeft.get_X()), bottomRight.get_X()) - location.get_X(), Granular.Extensions.DoubleExtensions.Max(Granular.Extensions.DoubleExtensions.Max(Granular.Extensions.DoubleExtensions.Max(topLeft.get_Y(), topRight.get_Y()), bottomLeft.get_Y()), bottomRight.get_Y()) - location.get_Y());
		return new $System_Windows_Rect.$ctor2(location, size);
	};
	$System_Windows_RectExtensions.GetTopLeft = function(rect) {
		return rect.get_Location();
	};
	$System_Windows_RectExtensions.GetTopRight = function(rect) {
		return new $System_Windows_Point.$ctor1(rect.get_Location().get_X() + rect.get_Size().get_Width(), rect.get_Location().get_Y());
	};
	$System_Windows_RectExtensions.GetBottomLeft = function(rect) {
		return new $System_Windows_Point.$ctor1(rect.get_Location().get_X(), rect.get_Location().get_Y() + rect.get_Size().get_Height());
	};
	$System_Windows_RectExtensions.GetBottomRight = function(rect) {
		return new $System_Windows_Point.$ctor1(rect.get_Location().get_X() + rect.get_Size().get_Width(), rect.get_Location().get_Y() + rect.get_Size().get_Height());
	};
	$System_Windows_RectExtensions.AddOffset = function(rect, offset) {
		return new $System_Windows_Rect.$ctor3(rect.get_Left() + offset.get_X(), rect.get_Top() + offset.get_Y(), rect.get_Width(), rect.get_Height());
	};
	$System_Windows_RectExtensions.AddMargin = function(rect, margin) {
		return new $System_Windows_Rect.$ctor2($System_Windows_Point.op_Subtraction(rect.get_Location(), margin.get_Location()), $System_Windows_Size.op_Addition(rect.get_Size(), margin.get_Size()));
	};
	global.System.Windows.RectExtensions = $System_Windows_RectExtensions;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.ReentrancyLock
	var $System_Windows_ReentrancyLock = function() {
		this.$1$IsEnteredField = false;
		this.set_IsEntered(false);
	};
	$System_Windows_ReentrancyLock.__typeName = 'System.Windows.ReentrancyLock';
	$System_Windows_ReentrancyLock.op_Implicit = function(ScopeEntrancyLock) {
		return ScopeEntrancyLock.get_IsEntered();
	};
	global.System.Windows.ReentrancyLock = $System_Windows_ReentrancyLock;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.ResourceContainerExtensions
	var $System_Windows_ResourceContainerExtensions = function() {
	};
	$System_Windows_ResourceContainerExtensions.__typeName = 'System.Windows.ResourceContainerExtensions';
	$System_Windows_ResourceContainerExtensions.FindResource = function(resourceContainer, resourceKey) {
		var value = {};
		if (resourceContainer.TryGetResource(resourceKey, value)) {
			return value.$;
		}
		throw new Granular.Exception('Resource "{0}" is not found', [resourceKey]);
	};
	global.System.Windows.ResourceContainerExtensions = $System_Windows_ResourceContainerExtensions;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.ResourceDictionary
	var $System_Windows_ResourceDictionary = function() {
		this.$1$ResourcesChangedField = null;
		this.$1$MergedDictionariesField = null;
		this.$sourceDictionary = null;
		this.$source = null;
		this.$dictionary = null;
		this.set_MergedDictionaries(new (ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ResourceDictionary]))());
		this.get_MergedDictionaries().add_CollectionChanged(ss.mkdel(this, this.$OnMergedDictionariesCollectionChanged));
		this.$dictionary = new (ss.makeGenericType(ss.Dictionary$2, [Object, Object]))();
	};
	$System_Windows_ResourceDictionary.__typeName = 'System.Windows.ResourceDictionary';
	$System_Windows_ResourceDictionary.$GetMergedDictionariesKeys = function(dictionary) {
		return Enumerable.from(System.Collections.Generic.DictionaryExtensions.GetKeys(Object, Object).call(null, dictionary)).select(function(x) {
			return ss.cast(x, Object);
		}).concat(Enumerable.from(dictionary.get_MergedDictionaries()).selectMany($System_Windows_ResourceDictionary.$GetMergedDictionariesKeys));
	};
	$System_Windows_ResourceDictionary.$LoadResourceDictionary = function(source) {
		return ss.safeCast($System_Windows_Application.LoadComponent(source), $System_Windows_ResourceDictionary);
	};
	global.System.Windows.ResourceDictionary = $System_Windows_ResourceDictionary;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.ResourceDictionaryLocation
	var $System_Windows_ResourceDictionaryLocation = function() {
	};
	$System_Windows_ResourceDictionaryLocation.__typeName = 'System.Windows.ResourceDictionaryLocation';
	global.System.Windows.ResourceDictionaryLocation = $System_Windows_ResourceDictionaryLocation;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.ResourceReferenceExpression
	var $System_Windows_ResourceReferenceExpression = function(resourceContainer, resourceKey) {
		this.$1$ValueChangedField = null;
		this.$resourceKey = null;
		this.$observableValue = null;
		this.$resourceContainer = null;
		this.$currentValueProvider = null;
		this.$currentValue = null;
		this.$resourceContainer = resourceContainer;
		this.$resourceKey = resourceKey;
		this.$observableValue = new $System_Windows_Data_ObservableValue();
		this.$observableValue.add_ValueChanged(ss.mkdel(this, function(sender, e) {
			Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_Data_ObservableValueChangedArgs).call(null, this.$1$ValueChangedField, this, e);
		}));
		this.$observableValue.set_Value(this.$GetResourceValue());
		resourceContainer.add_ResourcesChanged(ss.mkdel(this, this.$OnResourcesChanged));
	};
	$System_Windows_ResourceReferenceExpression.__typeName = 'System.Windows.ResourceReferenceExpression';
	global.System.Windows.ResourceReferenceExpression = $System_Windows_ResourceReferenceExpression;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.ResourceReferenceExpressionProvider
	var $System_Windows_ResourceReferenceExpressionProvider = function(resourceKey) {
		this.$resourceKey = null;
		this.$resourceKey = resourceKey;
	};
	$System_Windows_ResourceReferenceExpressionProvider.__typeName = 'System.Windows.ResourceReferenceExpressionProvider';
	global.System.Windows.ResourceReferenceExpressionProvider = $System_Windows_ResourceReferenceExpressionProvider;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.ResourcesChangedEventArgs
	var $System_Windows_ResourcesChangedEventArgs = function(changedKeys) {
		this.$changedKeys = null;
		ss.EventArgs.call(this);
		this.$changedKeys = changedKeys;
	};
	$System_Windows_ResourcesChangedEventArgs.__typeName = 'System.Windows.ResourcesChangedEventArgs';
	$System_Windows_ResourcesChangedEventArgs.FromKey = function(changedKey) {
		return new $System_Windows_ResourcesChangedEventArgs([changedKey]);
	};
	$System_Windows_ResourcesChangedEventArgs.FromKeyCollection = function(changedKeys) {
		return new $System_Windows_ResourcesChangedEventArgs(changedKeys);
	};
	global.System.Windows.ResourcesChangedEventArgs = $System_Windows_ResourcesChangedEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.RoutedEvent
	var $System_Windows_RoutedEvent = function(name, routingStrategy, handlerType, ownerType) {
		this.$1$NameField = null;
		this.$1$RoutingStrategyField = 0;
		this.$1$HandlerTypeField = null;
		this.$1$OwnerTypeField = null;
		this.set_Name(name);
		this.set_RoutingStrategy(routingStrategy);
		this.set_HandlerType(handlerType);
		this.set_OwnerType(ownerType);
	};
	$System_Windows_RoutedEvent.__typeName = 'System.Windows.RoutedEvent';
	global.System.Windows.RoutedEvent = $System_Windows_RoutedEvent;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.RoutedEventArgs
	var $System_Windows_RoutedEventArgs = function(routedEvent, originalSource) {
		this.$2$RoutedEventField = null;
		this.$2$OriginalSourceField = null;
		this.$2$SourceField = null;
		this.$2$HandledField = false;
		ss.EventArgs.call(this);
		this.set_RoutedEvent(routedEvent);
		this.set_OriginalSource(originalSource);
	};
	$System_Windows_RoutedEventArgs.__typeName = 'System.Windows.RoutedEventArgs';
	global.System.Windows.RoutedEventArgs = $System_Windows_RoutedEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.RoutedEventHandlerItem
	var $System_Windows_RoutedEventHandlerItem = function(handler, handledEventsToo) {
		this.$1$HandlerField = null;
		this.$1$HandledEventsTooField = false;
		this.set_Handler(handler);
		this.set_HandledEventsToo(handledEventsToo);
	};
	$System_Windows_RoutedEventHandlerItem.__typeName = 'System.Windows.RoutedEventHandlerItem';
	global.System.Windows.RoutedEventHandlerItem = $System_Windows_RoutedEventHandlerItem;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.RoutedEventTypeConverter
	var $System_Windows_RoutedEventTypeConverter = function() {
	};
	$System_Windows_RoutedEventTypeConverter.__typeName = 'System.Windows.RoutedEventTypeConverter';
	global.System.Windows.RoutedEventTypeConverter = $System_Windows_RoutedEventTypeConverter;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.RoutedPropertyChangedEventArgs
	var $System_Windows_RoutedPropertyChangedEventArgs$1 = function(T) {
		var $type = function(routedEvent, originalSource, oldValue, newValue) {
			this.$3$OldValueField = ss.getDefaultValue(T);
			this.$3$NewValueField = ss.getDefaultValue(T);
			$System_Windows_RoutedEventArgs.call(this, routedEvent, originalSource);
			this.set_OldValue(oldValue);
			this.set_NewValue(newValue);
		};
		ss.registerGenericClassInstance($type, $System_Windows_RoutedPropertyChangedEventArgs$1, [T], {
			get_OldValue: function() {
				return this.$3$OldValueField;
			},
			set_OldValue: function(value) {
				this.$3$OldValueField = value;
			},
			get_NewValue: function() {
				return this.$3$NewValueField;
			},
			set_NewValue: function(value) {
				this.$3$NewValueField = value;
			},
			InvokeEventHandler: function(handler, target) {
				if (ss.isValue(handler)) {
					handler(target, this);
				}
				else {
					$System_Windows_RoutedEventArgs.prototype.InvokeEventHandler.call(this, handler, target);
				}
			}
		}, function() {
			return $System_Windows_RoutedEventArgs;
		}, function() {
			return [];
		});
		ss.setMetadata($type, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_RoutedEvent, Object, T, T] }, { name: 'InvokeEventHandler', type: 8, sname: 'InvokeEventHandler', returnType: Object, params: [Function, Object] }, { name: 'NewValue', type: 16, returnType: T, getter: { name: 'get_NewValue', type: 8, sname: 'get_NewValue', returnType: T, params: [] }, setter: { name: 'set_NewValue', type: 8, sname: 'set_NewValue', returnType: Object, params: [T] } }, { name: 'OldValue', type: 16, returnType: T, getter: { name: 'get_OldValue', type: 8, sname: 'get_OldValue', returnType: T, params: [] }, setter: { name: 'set_OldValue', type: 8, sname: 'set_OldValue', returnType: Object, params: [T] } }] });
		return $type;
	};
	$System_Windows_RoutedPropertyChangedEventArgs$1.__typeName = 'System.Windows.RoutedPropertyChangedEventArgs$1';
	ss.initGenericClass($System_Windows_RoutedPropertyChangedEventArgs$1, $asm, 1);
	global.System.Windows.RoutedPropertyChangedEventArgs$1 = $System_Windows_RoutedPropertyChangedEventArgs$1;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.RoutingStrategy
	var $System_Windows_RoutingStrategy = function() {
	};
	$System_Windows_RoutingStrategy.__typeName = 'System.Windows.RoutingStrategy';
	global.System.Windows.RoutingStrategy = $System_Windows_RoutingStrategy;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Setter
	var $System_Windows_Setter = function() {
		this.$1$PropertyField = null;
		this.$1$ValueField = null;
		this.$1$TargetNameField = null;
	};
	$System_Windows_Setter.__typeName = 'System.Windows.Setter';
	$System_Windows_Setter.$GetResolvedTarget = function(target, targetName, valueSource) {
		return (Granular.Extensions.StringExtensions.IsNullOrEmpty(targetName) ? target : ss.safeCast(((valueSource === 11) ? $System_Windows_Markup_NameScope.GetContainingNameScope(target) : $System_Windows_Markup_NameScope.GetTemplateNameScope(target)).FindName(targetName), $System_Windows_FrameworkElement));
	};
	$System_Windows_Setter.$GetResolvedValueSource = function(valueSource, target) {
		return ((valueSource === 6 && ss.isValue(target.get_TemplatedParent())) ? 10 : valueSource);
	};
	$System_Windows_Setter.$GetInitializedValueOverlapExpression = function(target, property, valueSource) {
		var valueOverlapExpression = ss.safeCast(target.GetValueEntry(property).GetBaseValue$1(valueSource, false), $System_$Windows_Setter$ValueOverlapExpression);
		if (ss.isNullOrUndefined(valueOverlapExpression)) {
			valueOverlapExpression = new $System_$Windows_Setter$ValueOverlapExpression();
			target.SetValue(property, valueOverlapExpression, valueSource);
		}
		return valueOverlapExpression;
	};
	$System_Windows_Setter.$IsStyleValueSource = function(valueSource) {
		return valueSource === 3 || valueSource === 5;
	};
	global.System.Windows.Setter = $System_Windows_Setter;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Size
	var $System_Windows_Size = function(width, height) {
		this.$1$WidthField = 0;
		this.$1$HeightField = 0;
		this.$1$IsWidthEmptyField = false;
		this.$1$IsHeightEmptyField = false;
		this.$1$IsEmptyField = false;
		this.$1$IsPartiallyEmptyField = false;
		this.set_Width(width);
		this.set_Height(height);
		this.set_IsWidthEmpty(isNaN(this.get_Width()));
		this.set_IsHeightEmpty(isNaN(this.get_Height()));
		this.set_IsEmpty(this.get_IsWidthEmpty() && this.get_IsHeightEmpty());
		this.set_IsPartiallyEmpty(this.get_IsWidthEmpty() || this.get_IsHeightEmpty());
	};
	$System_Windows_Size.__typeName = 'System.Windows.Size';
	$System_Windows_Size.FromWidth = function(width) {
		return new $System_Windows_Size(width, Number.NaN);
	};
	$System_Windows_Size.FromHeight = function(height) {
		return new $System_Windows_Size(Number.NaN, height);
	};
	$System_Windows_Size.op_Equality = function(size1, size2) {
		return (ss.referenceEquals(size1, null) ? ss.referenceEquals(size2, null) : size1.equals(size2));
	};
	$System_Windows_Size.op_Inequality = function(size1, size2) {
		return !$System_Windows_Size.op_Equality(size1, size2);
	};
	$System_Windows_Size.op_UnaryNegation = function(size) {
		return new $System_Windows_Size(-size.get_Width(), -size.get_Height());
	};
	$System_Windows_Size.op_Addition = function(size1, size2) {
		return new $System_Windows_Size(size1.get_Width() + size2.get_Width(), size1.get_Height() + size2.get_Height());
	};
	$System_Windows_Size.op_Subtraction = function(size1, size2) {
		return new $System_Windows_Size(size1.get_Width() - size2.get_Width(), size1.get_Height() - size2.get_Height());
	};
	$System_Windows_Size.op_Multiply$1 = function(size, factor) {
		return new $System_Windows_Size(size.get_Width() * factor, size.get_Height() * factor);
	};
	$System_Windows_Size.op_Multiply = function(factor, size) {
		return $System_Windows_Size.op_Multiply$1(size, factor);
	};
	$System_Windows_Size.op_Division = function(size, factor) {
		return new $System_Windows_Size(size.get_Width() / factor, size.get_Height() / factor);
	};
	$System_Windows_Size.Parse = function(value) {
		var values = Enumerable.from(value.split(String.fromCharCode(44))).select(function(v) {
			return parseFloat(v);
		}).toArray();
		if (values.length === 2) {
			return new $System_Windows_Size(values[0], values[1]);
		}
		throw new Granular.Exception('Can\'t parse Size value "{0}"', [value]);
	};
	$System_Windows_Size.IsNullOrEmpty = function(size) {
		return ss.referenceEquals(size, null) || size.get_IsEmpty();
	};
	global.System.Windows.Size = $System_Windows_Size;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.SizeExtensions
	var $System_Windows_SizeExtensions = function() {
	};
	$System_Windows_SizeExtensions.__typeName = 'System.Windows.SizeExtensions';
	$System_Windows_SizeExtensions.IsNullOrEmpty = function(size) {
		return $System_Windows_Size.IsNullOrEmpty(size);
	};
	$System_Windows_SizeExtensions.DefaultIfNullOrEmpty = function(size, defaultValue) {
		return ($System_Windows_Size.IsNullOrEmpty(size) ? (defaultValue || $System_Windows_Size.Zero) : size);
	};
	$System_Windows_SizeExtensions.Combine = function(size, fallback) {
		return new $System_Windows_Size((size.get_IsWidthEmpty() ? fallback.get_Width() : size.get_Width()), (size.get_IsHeightEmpty() ? fallback.get_Height() : size.get_Height()));
	};
	$System_Windows_SizeExtensions.Min = function(this1, size) {
		if (this1.get_IsEmpty()) {
			return size;
		}
		if (size.get_IsEmpty()) {
			return this1;
		}
		if (!this1.get_IsPartiallyEmpty() && !size.get_IsPartiallyEmpty()) {
			if (this1.get_Width() < size.get_Width() && this1.get_Height() < size.get_Height()) {
				return this1;
			}
			if (this1.get_Width() >= size.get_Width() && this1.get_Height() >= size.get_Height()) {
				return size;
			}
		}
		return new $System_Windows_Size((this1.get_IsWidthEmpty() ? size.get_Width() : (size.get_IsWidthEmpty() ? this1.get_Width() : Math.min(this1.get_Width(), size.get_Width()))), (this1.get_IsHeightEmpty() ? size.get_Height() : (size.get_IsHeightEmpty() ? this1.get_Height() : Math.min(this1.get_Height(), size.get_Height()))));
	};
	$System_Windows_SizeExtensions.Max = function(this1, size) {
		if (this1.get_IsEmpty()) {
			return size;
		}
		if (size.get_IsEmpty()) {
			return this1;
		}
		if (!this1.get_IsPartiallyEmpty() && !size.get_IsPartiallyEmpty()) {
			if (this1.get_Width() > size.get_Width() && this1.get_Height() > size.get_Height()) {
				return this1;
			}
			if (this1.get_Width() <= size.get_Width() && this1.get_Height() <= size.get_Height()) {
				return size;
			}
		}
		return new $System_Windows_Size((this1.get_IsWidthEmpty() ? size.get_Width() : (size.get_IsWidthEmpty() ? this1.get_Width() : Math.max(this1.get_Width(), size.get_Width()))), (this1.get_IsHeightEmpty() ? size.get_Height() : (size.get_IsHeightEmpty() ? this1.get_Height() : Math.max(this1.get_Height(), size.get_Height()))));
	};
	$System_Windows_SizeExtensions.Bounds = function(size, minimum, maximum) {
		if (minimum.get_Width() > maximum.get_Width() || minimum.get_Height() > maximum.get_Height()) {
			throw new Granular.Exception('Invalid bounds (minimum: {0}, maximum: {1})', [minimum, maximum]);
		}
		return $System_Windows_SizeExtensions.Min($System_Windows_SizeExtensions.Max(size, minimum), maximum);
	};
	$System_Windows_SizeExtensions.IsClose = function(this1, size) {
		return Granular.Extensions.DoubleExtensions.IsClose(this1.get_Width(), size.get_Width()) && Granular.Extensions.DoubleExtensions.IsClose(this1.get_Height(), size.get_Height());
	};
	$System_Windows_SizeExtensions.ToPoint = function(size) {
		return new $System_Windows_Point.$ctor1(size.get_Width(), size.get_Height());
	};
	$System_Windows_SizeExtensions.Contains = function(size, point) {
		return 0 <= point.get_X() && point.get_X() < size.get_Width() && 0 <= point.get_Y() && point.get_Y() < size.get_Height();
	};
	global.System.Windows.SizeExtensions = $System_Windows_SizeExtensions;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.StartupEventArgs
	var $System_Windows_StartupEventArgs = function() {
		ss.EventArgs.call(this);
		//
	};
	$System_Windows_StartupEventArgs.__typeName = 'System.Windows.StartupEventArgs';
	global.System.Windows.StartupEventArgs = $System_Windows_StartupEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.StaticResourceExtension
	var $System_Windows_StaticResourceExtension = function() {
		this.$1$ResourceKeyField = null;
	};
	$System_Windows_StaticResourceExtension.__typeName = 'System.Windows.StaticResourceExtension';
	$System_Windows_StaticResourceExtension.$GetStaticResource = function(context, resourceKey) {
		if (ss.isNullOrUndefined(context)) {
			throw new Granular.Exception('StaticResource "{0}" was not found', [resourceKey]);
		}
		var value = {};
		return ((ss.isInstanceOfType(context.get_Target(), $System_Windows_IResourceContainer) && ss.cast(context.get_Target(), $System_Windows_IResourceContainer).TryGetResource(resourceKey, value)) ? value.$ : $System_Windows_StaticResourceExtension.$GetStaticResource(context.get_ParentContext(), resourceKey));
	};
	global.System.Windows.StaticResourceExtension = $System_Windows_StaticResourceExtension;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Style
	var $System_Windows_Style = function() {
		this.$targetType = null;
		this.$key = null;
		this.$1$BasedOnField = null;
		this.$1$TriggersField = null;
		this.$1$SettersField = null;
		this.set_Triggers(new (ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITrigger]))());
		this.set_Setters(new (ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITriggerAction]))());
	};
	$System_Windows_Style.__typeName = 'System.Windows.Style';
	global.System.Windows.Style = $System_Windows_Style;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.StyleKey
	var $System_Windows_StyleKey = function(targetType) {
		this.$1$TargetTypeField = null;
		this.set_TargetType(targetType);
	};
	$System_Windows_StyleKey.__typeName = 'System.Windows.StyleKey';
	global.System.Windows.StyleKey = $System_Windows_StyleKey;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.SystemResources
	var $System_Windows_SystemResources = function() {
		this.$resourcesCache = null;
		this.$resourcesCache = new (ss.makeGenericType(Granular.Collections.CacheDictionary$2, [Object, Object]).$ctor1)(ss.mkdel(this, this.$TryResolveResource));
	};
	$System_Windows_SystemResources.__typeName = 'System.Windows.SystemResources';
	global.System.Windows.SystemResources = $System_Windows_SystemResources;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.TemplateKey
	var $System_Windows_TemplateKey = function(targetType) {
		this.$1$TargetTypeField = null;
		this.set_TargetType(targetType);
	};
	$System_Windows_TemplateKey.__typeName = 'System.Windows.TemplateKey';
	global.System.Windows.TemplateKey = $System_Windows_TemplateKey;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.TemplatePartAttribute
	var $System_Windows_TemplatePartAttribute = function(name, type) {
		this.$2$NameField = null;
		this.$2$TypeField = null;
		this.set_Name(name);
		this.set_Type(type);
	};
	$System_Windows_TemplatePartAttribute.__typeName = 'System.Windows.TemplatePartAttribute';
	global.System.Windows.TemplatePartAttribute = $System_Windows_TemplatePartAttribute;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.TemplateVisualStateAttribute
	var $System_Windows_TemplateVisualStateAttribute = function(groupName, name) {
		this.$2$GroupNameField = null;
		this.$2$NameField = null;
		this.set_GroupName(groupName);
		this.set_Name(name);
	};
	$System_Windows_TemplateVisualStateAttribute.__typeName = 'System.Windows.TemplateVisualStateAttribute';
	global.System.Windows.TemplateVisualStateAttribute = $System_Windows_TemplateVisualStateAttribute;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.TextTrimming
	var $System_Windows_TextTrimming = function() {
	};
	$System_Windows_TextTrimming.__typeName = 'System.Windows.TextTrimming';
	global.System.Windows.TextTrimming = $System_Windows_TextTrimming;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.TextWrapping
	var $System_Windows_TextWrapping = function() {
	};
	$System_Windows_TextWrapping.__typeName = 'System.Windows.TextWrapping';
	global.System.Windows.TextWrapping = $System_Windows_TextWrapping;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.ThemeInfoAttribute
	var $System_Windows_ThemeInfoAttribute = function(genericDictionaryLocation) {
		this.$2$GenericDictionaryLocationField = 0;
		this.set_GenericDictionaryLocation(genericDictionaryLocation);
	};
	$System_Windows_ThemeInfoAttribute.__typeName = 'System.Windows.ThemeInfoAttribute';
	$System_Windows_ThemeInfoAttribute.$ctor1 = function(themeDictionaryLocation, genericDictionaryLocation) {
		$System_Windows_ThemeInfoAttribute.call(this, genericDictionaryLocation);
		//
	};
	global.System.Windows.ThemeInfoAttribute = $System_Windows_ThemeInfoAttribute;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Thickness
	var $System_Windows_Thickness = function() {
		$System_Windows_Thickness.$ctor3.call(this, 0, 0, 0, 0);
		//
	};
	$System_Windows_Thickness.__typeName = 'System.Windows.Thickness';
	$System_Windows_Thickness.$ctor1 = function(uniformLength) {
		$System_Windows_Thickness.$ctor3.call(this, uniformLength, uniformLength, uniformLength, uniformLength);
		//
	};
	$System_Windows_Thickness.$ctor2 = function(leftRight, topBottom) {
		$System_Windows_Thickness.$ctor3.call(this, leftRight, topBottom, leftRight, topBottom);
		//
	};
	$System_Windows_Thickness.$ctor3 = function(left, top, right, bottom) {
		this.$1$LeftField = 0;
		this.$1$TopField = 0;
		this.$1$RightField = 0;
		this.$1$BottomField = 0;
		this.$1$LocationField = null;
		this.$1$SizeField = null;
		this.$1$IsUniformField = false;
		this.set_Left(left);
		this.set_Top(top);
		this.set_Right(right);
		this.set_Bottom(bottom);
		this.set_Location(new $System_Windows_Point.$ctor1(left, top));
		this.set_Size(new $System_Windows_Size(left + right, top + bottom));
		this.set_IsUniform(this.get_Left() === this.get_Top() && this.get_Left() === this.get_Right() && this.get_Left() === this.get_Bottom());
	};
	$System_Windows_Thickness.op_UnaryNegation = function(thickness) {
		return new $System_Windows_Thickness.$ctor3(-thickness.get_Left(), -thickness.get_Top(), -thickness.get_Right(), -thickness.get_Bottom());
	};
	$System_Windows_Thickness.op_Addition = function(thickness1, thickness2) {
		return new $System_Windows_Thickness.$ctor3(thickness1.get_Left() + thickness2.get_Left(), thickness1.get_Top() + thickness2.get_Top(), thickness1.get_Right() + thickness2.get_Right(), thickness1.get_Bottom() + thickness2.get_Bottom());
	};
	$System_Windows_Thickness.op_Subtraction = function(thickness1, thickness2) {
		return new $System_Windows_Thickness.$ctor3(thickness1.get_Left() - thickness2.get_Left(), thickness1.get_Top() - thickness2.get_Top(), thickness1.get_Right() - thickness2.get_Right(), thickness1.get_Bottom() - thickness2.get_Bottom());
	};
	$System_Windows_Thickness.op_Multiply$1 = function(thickness, scalar) {
		return new $System_Windows_Thickness.$ctor3(thickness.get_Left() * scalar, thickness.get_Top() * scalar, thickness.get_Right() * scalar, thickness.get_Bottom() * scalar);
	};
	$System_Windows_Thickness.op_Multiply = function(scalar, thickness) {
		return $System_Windows_Thickness.op_Multiply$1(thickness, scalar);
	};
	$System_Windows_Thickness.op_Implicit = function(uniformLength) {
		return new $System_Windows_Thickness.$ctor1(uniformLength);
	};
	$System_Windows_Thickness.Parse = function(value) {
		var values = Enumerable.from(value.split(String.fromCharCode(44))).select(function(v) {
			return parseFloat(v);
		}).toArray();
		if (values.length === 1) {
			return new $System_Windows_Thickness.$ctor1(values[0]);
		}
		if (values.length === 2) {
			return new $System_Windows_Thickness.$ctor2(values[0], values[1]);
		}
		if (values.length === 4) {
			return new $System_Windows_Thickness.$ctor3(values[0], values[1], values[2], values[3]);
		}
		throw new Granular.Exception('Can\'t parse Thickness value "{0}"', [value]);
	};
	global.System.Windows.Thickness = $System_Windows_Thickness;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.ThicknessExtensions
	var $System_Windows_ThicknessExtensions = function() {
	};
	$System_Windows_ThicknessExtensions.__typeName = 'System.Windows.ThicknessExtensions';
	$System_Windows_ThicknessExtensions.DefaultIfNull = function(thickness, defaultValue) {
		return thickness || (defaultValue || $System_Windows_Thickness.Zero);
	};
	global.System.Windows.ThicknessExtensions = $System_Windows_ThicknessExtensions;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Trigger
	var $System_Windows_Trigger = function() {
		this.$5$PropertyField = null;
		this.$5$ValueField = null;
		this.$5$SourceNameField = null;
		this.$5$SettersField = null;
		$System_Windows_DataTriggerBase.call(this);
		this.set_Setters(new (ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITriggerAction]))());
	};
	$System_Windows_Trigger.__typeName = 'System.Windows.Trigger';
	global.System.Windows.Trigger = $System_Windows_Trigger;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.TriggerBase
	var $System_Windows_TriggerBase = function() {
		$System_Windows_Freezable.call(this);
	};
	$System_Windows_TriggerBase.__typeName = 'System.Windows.TriggerBase';
	global.System.Windows.TriggerBase = $System_Windows_TriggerBase;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.UIElement
	var $System_Windows_UIElement = function() {
		this.$3$LayoutUpdatedField = null;
		this.$logicalParent = null;
		this.$3$IsMeasureValidField = false;
		this.$3$IsArrangeValidField = false;
		this.$desiredSize = null;
		this.$logicalChildren = null;
		this.$3$LogicalChildrenField = null;
		this.$isRootElement = false;
		this.$animatableRootClock = null;
		this.$3$PreviousAvailableSizeField = null;
		this.$3$PreviousFinalRectField = null;
		this.$measureInvalidationDisabled = 0;
		this.$routedEventHandlers = null;
		this.$routedEventHandlersCache = null;
		this.$previousDesiredSize = null;
		this.$focus = null;
		$System_Windows_Media_Visual.call(this);
		this.$logicalChildren = [];
		this.set_LogicalChildren(this.$logicalChildren);
		this.$routedEventHandlers = new (ss.makeGenericType(Granular.Collections.ListDictionary$2, [$System_Windows_RoutedEvent, $System_Windows_RoutedEventHandlerItem]))();
		this.$routedEventHandlersCache = new (ss.makeGenericType(Granular.Collections.CacheDictionary$2, [$System_Windows_RoutedEvent, ss.IEnumerable]))(ss.mkdel(this, this.$ResolveRoutedEventHandlers));
		this.set_PreviousFinalRect($System_Windows_Rect.Empty);
		this.set_PreviousAvailableSize($System_Windows_Size.Empty);
		this.$previousDesiredSize = $System_Windows_Size.Empty;
		this.$SetIsVisible();
		this.set_VisualClipToBounds(this.get_ClipToBounds());
		this.set_VisualIsHitTestVisible(this.get_IsHitTestVisible());
		this.set_VisualIsVisible(this.get_IsVisible());
		this.set_VisualOpacity(this.get_Opacity());
	};
	$System_Windows_UIElement.__typeName = 'System.Windows.UIElement';
	$System_Windows_UIElement.AddHandler = function(element, routedEvent, handler, handledEventsToo) {
		if (ss.isInstanceOfType(element, $System_Windows_UIElement)) {
			ss.cast(element, $System_Windows_UIElement).AddHandler(routedEvent, handler, handledEventsToo);
		}
	};
	$System_Windows_UIElement.RemoveHandler = function(element, routedEvent, handler) {
		if (ss.isInstanceOfType(element, $System_Windows_UIElement)) {
			ss.cast(element, $System_Windows_UIElement).RemoveHandler(routedEvent, handler);
		}
	};
	$System_Windows_UIElement.$GetClosestLogicalChild = function(rootElement, childElement) {
		while (!ss.referenceEquals(childElement, rootElement) && ss.isValue(childElement)) {
			var element = childElement;
			while (ss.isValue(element)) {
				if (ss.referenceEquals(element, rootElement)) {
					return childElement;
				}
				element = element.get_LogicalParent();
			}
			childElement = ss.safeCast(childElement.get_VisualParent(), $System_Windows_UIElement);
		}
		return childElement;
	};
	$System_Windows_UIElement.$OnMouseEnter = function(sender, e) {
		ss.cast(sender, $System_Windows_UIElement).set_IsMouseOver(true);
		ss.cast(sender, $System_Windows_UIElement).OnMouseEnter(e);
	};
	$System_Windows_UIElement.$OnMouseLeave = function(sender, e) {
		ss.cast(sender, $System_Windows_UIElement).set_IsMouseOver(false);
		ss.cast(sender, $System_Windows_UIElement).OnMouseLeave(e);
	};
	$System_Windows_UIElement.$OnGotKeyboardFocus = function(sender, e) {
		ss.cast(sender, $System_Windows_UIElement).set_IsKeyboardFocused(ss.referenceEquals(e.get_OriginalSource(), sender));
		ss.cast(sender, $System_Windows_UIElement).set_IsKeyboardFocusWithin(true);
		ss.cast(sender, $System_Windows_UIElement).OnGotKeyboardFocus(e);
	};
	$System_Windows_UIElement.$OnLostKeyboardFocus = function(sender, e) {
		ss.cast(sender, $System_Windows_UIElement).set_IsKeyboardFocused(false);
		ss.cast(sender, $System_Windows_UIElement).set_IsKeyboardFocusWithin(false);
		ss.cast(sender, $System_Windows_UIElement).OnLostKeyboardFocus(e);
	};
	$System_Windows_UIElement.$OnGotFocus = function(sender, e) {
		ss.cast(sender, $System_Windows_UIElement).set_IsFocused(true);
		ss.cast(sender, $System_Windows_UIElement).OnGotFocus(e);
	};
	$System_Windows_UIElement.$OnLostFocus = function(sender, e) {
		ss.cast(sender, $System_Windows_UIElement).set_IsFocused(false);
		ss.cast(sender, $System_Windows_UIElement).OnLostFocus(e);
	};
	global.System.Windows.UIElement = $System_Windows_UIElement;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.ValueSource
	var $System_Windows_ValueSource = function(baseValueSource, isExpression, isCurrent, isAnimated, isCoerced) {
		this.$1$BaseValueSourceField = 0;
		this.$1$IsExpressionField = false;
		this.$1$IsCurrentField = false;
		this.$1$IsAnimatedField = false;
		this.$1$IsCoercedField = false;
		this.set_BaseValueSource(baseValueSource);
		this.set_IsExpression(isExpression);
		this.set_IsCurrent(isCurrent);
		this.set_IsAnimated(isAnimated);
		this.set_IsCoerced(isCoerced);
	};
	$System_Windows_ValueSource.__typeName = 'System.Windows.ValueSource';
	global.System.Windows.ValueSource = $System_Windows_ValueSource;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.VerticalAlignment
	var $System_Windows_VerticalAlignment = function() {
	};
	$System_Windows_VerticalAlignment.__typeName = 'System.Windows.VerticalAlignment';
	global.System.Windows.VerticalAlignment = $System_Windows_VerticalAlignment;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Visibility
	var $System_Windows_Visibility = function() {
	};
	$System_Windows_Visibility.__typeName = 'System.Windows.Visibility';
	global.System.Windows.Visibility = $System_Windows_Visibility;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.VisualState
	var $System_Windows_VisualState = function() {
		this.$3$NameField = null;
		$System_Windows_Freezable.call(this);
	};
	$System_Windows_VisualState.__typeName = 'System.Windows.VisualState';
	global.System.Windows.VisualState = $System_Windows_VisualState;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.VisualStateGroup
	var $System_Windows_VisualStateGroup = function() {
		this.$3$NameField = null;
		this.$3$StatesField = null;
		this.$3$TransitionsField = null;
		this.$3$CurrentStateField = null;
		this.$currentStoryboard = null;
		this.$container = null;
		$System_Windows_Freezable.call(this);
		this.set_States(new (ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_VisualState]))());
		this.get_States().SetInheritanceParent(this);
		this.set_Transitions(new (ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_VisualTransition]))());
		this.get_Transitions().SetInheritanceParent(this);
	};
	$System_Windows_VisualStateGroup.__typeName = 'System.Windows.VisualStateGroup';
	$System_Windows_VisualStateGroup.$GetTransition = function(transitions, fromStateName, toStateName) {
		return Enumerable.from(transitions).firstOrDefault(function(transition) {
			return ss.referenceEquals(transition.get_From(), fromStateName) && ss.referenceEquals(transition.get_To(), toStateName);
		}, ss.getDefaultValue($System_Windows_VisualTransition)) || (Enumerable.from(transitions).firstOrDefault(function(transition1) {
			return Granular.Extensions.StringExtensions.IsNullOrEmpty(transition1.get_From()) && ss.referenceEquals(transition1.get_To(), toStateName);
		}, ss.getDefaultValue($System_Windows_VisualTransition)) || (Enumerable.from(transitions).firstOrDefault(function(transition2) {
			return ss.referenceEquals(transition2.get_From(), fromStateName) && Granular.Extensions.StringExtensions.IsNullOrEmpty(transition2.get_To());
		}, ss.getDefaultValue($System_Windows_VisualTransition)) || Enumerable.from(transitions).firstOrDefault(function(transition3) {
			return Granular.Extensions.StringExtensions.IsNullOrEmpty(transition3.get_From()) && Granular.Extensions.StringExtensions.IsNullOrEmpty(transition3.get_To());
		}, ss.getDefaultValue($System_Windows_VisualTransition))));
	};
	global.System.Windows.VisualStateGroup = $System_Windows_VisualStateGroup;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.VisualStateManager
	var $System_Windows_VisualStateManager = function() {
	};
	$System_Windows_VisualStateManager.__typeName = 'System.Windows.VisualStateManager';
	$System_Windows_VisualStateManager.GetVisualStateGroups = function(obj) {
		return ss.cast(obj.GetValue($System_Windows_VisualStateManager.VisualStateGroupsProperty), ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_VisualStateGroup]));
	};
	$System_Windows_VisualStateManager.SetVisualStateGroups = function(obj, value) {
		obj.SetValue($System_Windows_VisualStateManager.VisualStateGroupsProperty, value, 11);
	};
	$System_Windows_VisualStateManager.GoToState = function(control, stateName, useTransitions) {
		if (ss.isNullOrUndefined(control.get_TemplateChild())) {
			return false;
		}
		var visualStateGroups = $System_Windows_VisualStateManager.GetVisualStateGroups(control.get_TemplateChild());
		if (ss.isNullOrUndefined(visualStateGroups)) {
			return false;
		}
		var visualStateGroup = Enumerable.from(visualStateGroups).firstOrDefault(function(group) {
			return Enumerable.from(group.get_States()).any(function(state) {
				return ss.referenceEquals(state.get_Name(), stateName);
			});
		}, ss.getDefaultValue($System_Windows_VisualStateGroup));
		if (ss.isNullOrUndefined(visualStateGroup)) {
			return false;
		}
		var visualState = Enumerable.from(visualStateGroup.get_States()).first(function(state1) {
			return ss.referenceEquals(state1.get_Name(), stateName);
		});
		visualStateGroup.SetContainer(control);
		return visualStateGroup.GoToState(visualState, useTransitions);
	};
	global.System.Windows.VisualStateManager = $System_Windows_VisualStateManager;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.VisualStates
	var $System_Windows_VisualStates = function() {
	};
	$System_Windows_VisualStates.__typeName = 'System.Windows.VisualStates';
	global.System.Windows.VisualStates = $System_Windows_VisualStates;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.VisualTransition
	var $System_Windows_VisualTransition = function() {
		this.$3$FromField = null;
		this.$3$ToField = null;
		$System_Windows_Freezable.call(this);
	};
	$System_Windows_VisualTransition.__typeName = 'System.Windows.VisualTransition';
	global.System.Windows.VisualTransition = $System_Windows_VisualTransition;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Window
	var $System_Windows_Window = function() {
		this.$7$AdornerLayerField = null;
		this.$7$PopupLayerField = null;
		this.$presentationSource = null;
		this.$keyboardNavigation = null;
		this.$radioButtonGroupScope = null;
		$System_Windows_Controls_ContentControl.call(this);
		this.SetResourceInheritanceParent($System_Windows_Application.get_Current());
		this.set_AdornerLayer(new $System_Windows_Controls_AdornerLayer());
		this.AddVisualChild(this.get_AdornerLayer());
		this.set_PopupLayer(new $System_Windows_Controls_PopupLayer());
		this.AddVisualChild(this.get_PopupLayer());
		this.$radioButtonGroupScope = new (ss.makeGenericType($System_Windows_Controls_SelectionGroupScope$1, [$System_Windows_Controls_RadioButton]))();
	};
	$System_Windows_Window.__typeName = 'System.Windows.Window';
	global.System.Windows.Window = $System_Windows_Window;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.GridLengthTypeConverter
	var $System_Windows_Controls_$GridLengthTypeConverter = function() {
	};
	$System_Windows_Controls_$GridLengthTypeConverter.__typeName = 'System.Windows.Controls.$GridLengthTypeConverter';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.IDefinitionBase
	var $System_Windows_Controls_$IDefinitionBase = function() {
	};
	$System_Windows_Controls_$IDefinitionBase.__typeName = 'System.Windows.Controls.$IDefinitionBase';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.MeasureCache
	var $System_Windows_Controls_$MeasureCache = function(capacity) {
		this.$capacity = 0;
		this.$availableSizes = null;
		this.$measuredSizes = null;
		this.$nextIndex = 0;
		this.$count = 0;
		this.$capacity = capacity;
		this.$availableSizes = new Array(capacity);
		this.$measuredSizes = new Array(capacity);
	};
	$System_Windows_Controls_$MeasureCache.__typeName = 'System.Windows.Controls.$MeasureCache';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.TextBoxView
	var $System_Windows_Controls_$TextBoxView = function() {
		this.$5$TextChangedField = null;
		this.$text = null;
		this.$maxLength = 0;
		this.$5$CaretIndexChangedField = null;
		this.$caretIndex = 0;
		this.$5$SelectionStartChangedField = null;
		this.$selectionStart = 0;
		this.$5$SelectionLengthChangedField = null;
		this.$selectionLength = 0;
		this.$acceptsReturn = false;
		this.$acceptsTab = false;
		this.$isReadOnly = false;
		this.$horizontalScrollBarVisibility = 0;
		this.$verticalScrollBarVisibility = 0;
		this.$spellCheck = false;
		this.$isPassword = false;
		this.$textBoxRenderElements = null;
		this.$measuredFontSize = 0;
		this.$measuredFontFamily = null;
		this.$measuredLineHeight = 0;
		$System_Windows_FrameworkElement.call(this);
		this.$textBoxRenderElements = new (ss.makeGenericType(ss.Dictionary$2, [$System_Windows_Media_IRenderElementFactory, $System_Windows_Media_ITextBoxRenderElement]))();
		this.$measuredLineHeight = Number.NaN;
	};
	$System_Windows_Controls_$TextBoxView.__typeName = 'System.Windows.Controls.$TextBoxView';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Adorner
	var $System_Windows_Controls_Adorner = function(adornedElement) {
		this.$child = null;
		this.$5$AdornedElementField = null;
		$System_Windows_FrameworkElement.call(this);
		this.set_AdornedElement(adornedElement);
		this.set_VisualClipToBounds(false);
	};
	$System_Windows_Controls_Adorner.__typeName = 'System.Windows.Controls.Adorner';
	global.System.Windows.Controls.Adorner = $System_Windows_Controls_Adorner;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.AdornerLayer
	var $System_Windows_Controls_AdornerLayer = function() {
		this.$adornersBounds = null;
		$System_Windows_FrameworkElement.call(this);
		this.$adornersBounds = new (ss.makeGenericType(ss.Dictionary$2, [$System_Windows_Controls_Adorner, $System_Windows_Rect]))();
	};
	$System_Windows_Controls_AdornerLayer.__typeName = 'System.Windows.Controls.AdornerLayer';
	$System_Windows_Controls_AdornerLayer.GetAdornerLayer = function(visual) {
		while (ss.isValue(visual)) {
			if (ss.isInstanceOfType(visual, $System_Windows_Controls_IAdornerLayerHost)) {
				return ss.cast(visual, $System_Windows_Controls_IAdornerLayerHost).get_AdornerLayer();
			}
			visual = visual.get_VisualParent();
		}
		return null;
	};
	global.System.Windows.Controls.AdornerLayer = $System_Windows_Controls_AdornerLayer;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Border
	var $System_Windows_Controls_Border = function() {
		this.$borderRenderElements = null;
		$System_Windows_Controls_Decorator.call(this);
		this.$borderRenderElements = new (ss.makeGenericType(ss.Dictionary$2, [$System_Windows_Media_IRenderElementFactory, $System_Windows_Media_IBorderRenderElement]))();
	};
	$System_Windows_Controls_Border.__typeName = 'System.Windows.Controls.Border';
	$System_Windows_Controls_Border.$IsOverBorder = function(position, borderSize, borderTickness, cornerRadius) {
		return position.get_X() < borderTickness.get_Left() || position.get_Y() < borderTickness.get_Top() || borderSize.get_Width() - position.get_X() < borderTickness.get_Right() || borderSize.get_Height() - position.get_Y() < borderTickness.get_Bottom();
		// cornerRadius is ignored
	};
	global.System.Windows.Controls.Border = $System_Windows_Controls_Border;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Button
	var $System_Windows_Controls_Button = function() {
		$System_Windows_Controls_Primitives_ButtonBase.call(this);
	};
	$System_Windows_Controls_Button.__typeName = 'System.Windows.Controls.Button';
	global.System.Windows.Controls.Button = $System_Windows_Controls_Button;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Canvas
	var $System_Windows_Controls_Canvas = function() {
		$System_Windows_Controls_Panel.call(this);
	};
	$System_Windows_Controls_Canvas.__typeName = 'System.Windows.Controls.Canvas';
	$System_Windows_Controls_Canvas.GetLeft = function(obj) {
		return ss.unbox(ss.cast(obj.GetValue($System_Windows_Controls_Canvas.LeftProperty), Number));
	};
	$System_Windows_Controls_Canvas.SetLeft = function(obj, value) {
		obj.SetValue($System_Windows_Controls_Canvas.LeftProperty, value, 11);
	};
	$System_Windows_Controls_Canvas.GetTop = function(obj) {
		return ss.unbox(ss.cast(obj.GetValue($System_Windows_Controls_Canvas.TopProperty), Number));
	};
	$System_Windows_Controls_Canvas.SetTop = function(obj, value) {
		obj.SetValue($System_Windows_Controls_Canvas.TopProperty, value, 11);
	};
	$System_Windows_Controls_Canvas.GetRight = function(obj) {
		return ss.unbox(ss.cast(obj.GetValue($System_Windows_Controls_Canvas.RightProperty), Number));
	};
	$System_Windows_Controls_Canvas.SetRight = function(obj, value) {
		obj.SetValue($System_Windows_Controls_Canvas.RightProperty, value, 11);
	};
	$System_Windows_Controls_Canvas.GetBottom = function(obj) {
		return ss.unbox(ss.cast(obj.GetValue($System_Windows_Controls_Canvas.BottomProperty), Number));
	};
	$System_Windows_Controls_Canvas.SetBottom = function(obj, value) {
		obj.SetValue($System_Windows_Controls_Canvas.BottomProperty, value, 11);
	};
	$System_Windows_Controls_Canvas.$OnPositioningChanged = function(dependencyObject, e) {
		if (ss.isInstanceOfType(dependencyObject, $System_Windows_Media_Visual) && ss.isInstanceOfType(ss.cast(dependencyObject, $System_Windows_Media_Visual).get_VisualParent(), $System_Windows_Controls_Canvas)) {
			ss.cast(ss.cast(dependencyObject, $System_Windows_Media_Visual).get_VisualParent(), $System_Windows_Controls_Canvas).InvalidateArrange();
		}
	};
	global.System.Windows.Controls.Canvas = $System_Windows_Controls_Canvas;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.CheckBox
	var $System_Windows_Controls_CheckBox = function() {
		$System_Windows_Controls_Primitives_ToggleButton.call(this);
	};
	$System_Windows_Controls_CheckBox.__typeName = 'System.Windows.Controls.CheckBox';
	global.System.Windows.Controls.CheckBox = $System_Windows_Controls_CheckBox;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ColumnDefinition
	var $System_Windows_Controls_ColumnDefinition = function() {
		this.$actualWidthValueEntry = null;
		$System_Windows_Freezable.call(this);
		this.$actualWidthValueEntry = this.GetValueEntry$1($System_Windows_Controls_ColumnDefinition.$ActualWidthPropertyKey);
	};
	$System_Windows_Controls_ColumnDefinition.__typeName = 'System.Windows.Controls.ColumnDefinition';
	global.System.Windows.Controls.ColumnDefinition = $System_Windows_Controls_ColumnDefinition;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ContentControl
	var $System_Windows_Controls_ContentControl = function() {
		this.$itemTemplate = null;
		this.$itemContainerStyle = null;
		$System_Windows_Controls_Control.call(this);
		//
	};
	$System_Windows_Controls_ContentControl.__typeName = 'System.Windows.Controls.ContentControl';
	global.System.Windows.Controls.ContentControl = $System_Windows_Controls_ContentControl;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ContentPresenter
	var $System_Windows_Controls_ContentPresenter = function() {
		this.$template = null;
		this.$itemTemplate = null;
		this.$itemContainerStyle = null;
		$System_Windows_FrameworkElement.call(this);
		//
	};
	$System_Windows_Controls_ContentPresenter.__typeName = 'System.Windows.Controls.ContentPresenter';
	global.System.Windows.Controls.ContentPresenter = $System_Windows_Controls_ContentPresenter;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Control
	var $System_Windows_Controls_Control = function() {
		$System_Windows_FrameworkElement.call(this);
	};
	$System_Windows_Controls_Control.__typeName = 'System.Windows.Controls.Control';
	$System_Windows_Controls_Control.$OnPreviewMouseDown = function(sender, e) {
		if (e.get_ClickCount() === 2 && ss.cast(sender, $System_Windows_Controls_Control).$RaiseMouseButtonEvent(e, $System_Windows_Controls_Control.PreviewMouseDoubleClickEvent)) {
			e.set_Handled(true);
		}
	};
	$System_Windows_Controls_Control.$OnMouseDown = function(sender, e) {
		if (e.get_ClickCount() === 2 && ss.cast(sender, $System_Windows_Controls_Control).$RaiseMouseButtonEvent(e, $System_Windows_Controls_Control.MouseDoubleClickEvent)) {
			e.set_Handled(true);
		}
	};
	global.System.Windows.Controls.Control = $System_Windows_Controls_Control;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ControlPropertyMetadata
	var $System_Windows_Controls_ControlPropertyMetadata = function(defaultValue, propertyChangedCallback, coerceValueCallback, inherits, affectsMeasure, affectsArrange, affectsVisualState, bindsTwoWayByDefault, defaultUpdateSourceTrigger) {
		this.$3$AffectsVisualStateField = false;
		$System_Windows_FrameworkPropertyMetadata.call(this, defaultValue, propertyChangedCallback, coerceValueCallback, inherits, affectsMeasure, affectsArrange, bindsTwoWayByDefault, defaultUpdateSourceTrigger);
		this.set_AffectsVisualState(affectsVisualState);
	};
	$System_Windows_Controls_ControlPropertyMetadata.__typeName = 'System.Windows.Controls.ControlPropertyMetadata';
	global.System.Windows.Controls.ControlPropertyMetadata = $System_Windows_Controls_ControlPropertyMetadata;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ControlTemplate
	var $System_Windows_Controls_ControlTemplate = function() {
		this.$targetType = null;
		this.$key = null;
		$System_Windows_FrameworkTemplate.call(this);
		//
	};
	$System_Windows_Controls_ControlTemplate.__typeName = 'System.Windows.Controls.ControlTemplate';
	global.System.Windows.Controls.ControlTemplate = $System_Windows_Controls_ControlTemplate;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Decorator
	var $System_Windows_Controls_Decorator = function() {
		this.$child = null;
		$System_Windows_FrameworkElement.call(this);
	};
	$System_Windows_Controls_Decorator.__typeName = 'System.Windows.Controls.Decorator';
	global.System.Windows.Controls.Decorator = $System_Windows_Controls_Decorator;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Dock
	var $System_Windows_Controls_Dock = function() {
	};
	$System_Windows_Controls_Dock.__typeName = 'System.Windows.Controls.Dock';
	global.System.Windows.Controls.Dock = $System_Windows_Controls_Dock;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.DockPanel
	var $System_Windows_Controls_DockPanel = function() {
		$System_Windows_Controls_Panel.call(this);
	};
	$System_Windows_Controls_DockPanel.__typeName = 'System.Windows.Controls.DockPanel';
	$System_Windows_Controls_DockPanel.GetDock = function(obj) {
		return ss.cast(obj.GetValue($System_Windows_Controls_DockPanel.DockProperty), ss.Int32);
	};
	$System_Windows_Controls_DockPanel.SetDock = function(obj, value) {
		obj.SetValue($System_Windows_Controls_DockPanel.DockProperty, value, 11);
	};
	$System_Windows_Controls_DockPanel.$GetDockOrientation = function(dock) {
		return ((dock === 0 || dock === 2) ? 0 : 1);
	};
	$System_Windows_Controls_DockPanel.$OnDockChanged = function(dependencyObject, e) {
		if (ss.isInstanceOfType(dependencyObject, $System_Windows_Media_Visual) && ss.isInstanceOfType(ss.cast(dependencyObject, $System_Windows_Media_Visual).get_VisualParent(), $System_Windows_Controls_DockPanel)) {
			ss.cast(ss.cast(dependencyObject, $System_Windows_Media_Visual).get_VisualParent(), $System_Windows_Controls_DockPanel).InvalidateArrange();
		}
	};
	global.System.Windows.Controls.DockPanel = $System_Windows_Controls_DockPanel;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ExpandDirection
	var $System_Windows_Controls_ExpandDirection = function() {
	};
	$System_Windows_Controls_ExpandDirection.__typeName = 'System.Windows.Controls.ExpandDirection';
	global.System.Windows.Controls.ExpandDirection = $System_Windows_Controls_ExpandDirection;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Expander
	var $System_Windows_Controls_Expander = function() {
		$System_Windows_Controls_HeaderedContentControl.call(this);
		//
	};
	$System_Windows_Controls_Expander.__typeName = 'System.Windows.Controls.Expander';
	global.System.Windows.Controls.Expander = $System_Windows_Controls_Expander;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.FlowDirection
	var $System_Windows_Controls_FlowDirection = function() {
	};
	$System_Windows_Controls_FlowDirection.__typeName = 'System.Windows.Controls.FlowDirection';
	global.System.Windows.Controls.FlowDirection = $System_Windows_Controls_FlowDirection;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Grid
	var $System_Windows_Controls_Grid = function() {
		this.$6$RowDefinitionsField = null;
		this.$6$ColumnDefinitionsField = null;
		this.$defaultRowDefinitions = null;
		this.$defaultColumnDefinitions = null;
		$System_Windows_Controls_Panel.call(this);
		this.set_RowDefinitions(new (ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Controls_RowDefinition]))());
		this.get_RowDefinitions().SetInheritanceParent(this);
		this.set_ColumnDefinitions(new (ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Controls_ColumnDefinition]))());
		this.get_ColumnDefinitions().SetInheritanceParent(this);
		this.$defaultRowDefinitions = [new $System_Windows_Controls_RowDefinition()];
		this.$defaultColumnDefinitions = [new $System_Windows_Controls_ColumnDefinition()];
	};
	$System_Windows_Controls_Grid.__typeName = 'System.Windows.Controls.Grid';
	$System_Windows_Controls_Grid.GetRow = function(obj) {
		return ss.unbox(ss.cast(obj.GetValue($System_Windows_Controls_Grid.RowProperty), ss.Int32));
	};
	$System_Windows_Controls_Grid.SetRow = function(obj, value) {
		obj.SetValue($System_Windows_Controls_Grid.RowProperty, value, 11);
	};
	$System_Windows_Controls_Grid.GetColumn = function(obj) {
		return ss.unbox(ss.cast(obj.GetValue($System_Windows_Controls_Grid.ColumnProperty), ss.Int32));
	};
	$System_Windows_Controls_Grid.SetColumn = function(obj, value) {
		obj.SetValue($System_Windows_Controls_Grid.ColumnProperty, value, 11);
	};
	$System_Windows_Controls_Grid.GetRowSpan = function(obj) {
		return ss.unbox(ss.cast(obj.GetValue($System_Windows_Controls_Grid.RowSpanProperty), ss.Int32));
	};
	$System_Windows_Controls_Grid.SetRowSpan = function(obj, value) {
		obj.SetValue($System_Windows_Controls_Grid.RowSpanProperty, value, 11);
	};
	$System_Windows_Controls_Grid.GetColumnSpan = function(obj) {
		return ss.unbox(ss.cast(obj.GetValue($System_Windows_Controls_Grid.ColumnSpanProperty), ss.Int32));
	};
	$System_Windows_Controls_Grid.SetColumnSpan = function(obj, value) {
		obj.SetValue($System_Windows_Controls_Grid.ColumnSpanProperty, value, 11);
	};
	$System_Windows_Controls_Grid.$GetChildPosition = function(child, rowsCount, columnsCount, row, column, rowSpan, columnSpan) {
		row.$ = Granular.Extensions.IntExtensions.Bounds($System_Windows_Controls_Grid.GetRow(child), 0, rowsCount - 1);
		column.$ = Granular.Extensions.IntExtensions.Bounds($System_Windows_Controls_Grid.GetColumn(child), 0, columnsCount - 1);
		rowSpan.$ = Granular.Extensions.IntExtensions.Bounds($System_Windows_Controls_Grid.GetRowSpan(child), 1, rowsCount - row.$);
		columnSpan.$ = Granular.Extensions.IntExtensions.Bounds($System_Windows_Controls_Grid.GetColumnSpan(child), 1, columnsCount - column.$);
	};
	$System_Windows_Controls_Grid.$GetMeasureLength = function(definitionBases, availableLength, start, span) {
		var remainingLength = availableLength;
		var absoluteLength = 0;
		var allAbsolute = true;
		for (var i = 0; i < definitionBases.length; i++) {
			if (i >= start && i < start + span) {
				if (definitionBases[i].get_$Length().get_IsAbsolute()) {
					absoluteLength += definitionBases[i].get_$Length().get_Value();
				}
				else {
					allAbsolute = false;
				}
			}
			else if (definitionBases[i].get_$Length().get_IsAbsolute()) {
				remainingLength -= definitionBases[i].get_$Length().get_Value();
			}
		}
		return (allAbsolute ? absoluteLength : Math.max(0, remainingLength));
	};
	$System_Windows_Controls_Grid.$SetBoundedValues = function(definitionBases, lengths) {
		for (var i = 0; i < lengths.$.length; i++) {
			lengths.$[i] = Granular.Extensions.DoubleExtensions.Bounds(lengths.$[i], definitionBases[i].get_$MinLength(), definitionBases[i].get_$MaxLength());
		}
	};
	$System_Windows_Controls_Grid.$SetStarLengths = function(definitionBases, starLength, lengths) {
		for (var i = 0; i < definitionBases.length; i++) {
			if (definitionBases[i].get_$Length().get_IsStar()) {
				lengths.$[i] = definitionBases[i].get_$Length().get_Value() * starLength;
			}
		}
	};
	$System_Windows_Controls_Grid.$SetActualLength = function(definitionBases, actualLengths) {
		for (var i = 0; i < definitionBases.length; i++) {
			definitionBases[i].set_$ActualLength(actualLengths[i]);
		}
	};
	$System_Windows_Controls_Grid.$GetStarLength = function(definitionBases, totalStarsLength) {
		// each axis starred length is a bounded function:
		// axis.GetStarredLength(starLength) => (axis.Length.Value * starLength).Bounds(axis.MinLength, axis.MaxLength)
		// find a starLength where:
		// definitionBases.Sum(axis => axis.GetStarredLength(starLength)) == totalStarsLength
		var starredAxis = Enumerable.from(definitionBases).where(function(axis) {
			return axis.get_$Length().get_IsStar();
		});
		if (Enumerable.from(starredAxis).count() === 0 || totalStarsLength <= 0) {
			return 0;
		}
		if (Enumerable.from(starredAxis).count() === 1) {
			return totalStarsLength;
		}
		var bounds = Enumerable.from(starredAxis).select(function(axis1) {
			return axis1.get_$MinLength() / axis1.get_$Length().get_Value();
		}).union(Enumerable.from(starredAxis).select(function(axis2) {
			return axis2.get_$MaxLength() / axis2.get_$Length().get_Value();
		})).toArray();
		var smallerBound = Enumerable.from(bounds).where(function(vertex) {
			return Enumerable.from(starredAxis).sum(function(axis3) {
				return $System_Windows_Controls_Grid.$GetStarredAxisLength(axis3, vertex);
			}) <= totalStarsLength;
		}).defaultIfEmpty(Number.NaN).max();
		var largerBound = Enumerable.from(bounds).where(function(vertex1) {
			return Enumerable.from(starredAxis).sum(function(axis4) {
				return $System_Windows_Controls_Grid.$GetStarredAxisLength(axis4, vertex1);
			}) >= totalStarsLength;
		}).defaultIfEmpty(Number.NaN).min();
		if (!isNaN(smallerBound) && !isNaN(largerBound)) {
			if (smallerBound === largerBound) {
				return smallerBound;
			}
			if (Granular.Compatibility.Double.IsInfinity(largerBound)) {
				var totalSmallerStarsLength = Enumerable.from(starredAxis).where(function(axis5) {
					return axis5.get_$MaxLength() <= axis5.get_$Length().get_Value() * smallerBound;
				}).sum(function(axis6) {
					return $System_Windows_Controls_Grid.$GetStarredAxisLength(axis6, smallerBound);
				});
				var totalLargerStars = Enumerable.from(starredAxis).where(function(axis7) {
					return axis7.get_$MaxLength() > axis7.get_$Length().get_Value() * smallerBound;
				}).sum(function(axis8) {
					return axis8.get_$Length().get_Value();
				});
				return (totalStarsLength - totalSmallerStarsLength) / totalLargerStars;
			}
			var smallerBoundTotalLength = Enumerable.from(starredAxis).sum(function(axis9) {
				return $System_Windows_Controls_Grid.$GetStarredAxisLength(axis9, smallerBound);
			});
			var largerBoundTotalLength = Enumerable.from(starredAxis).sum(function(axis10) {
				return $System_Windows_Controls_Grid.$GetStarredAxisLength(axis10, largerBound);
			});
			return smallerBound + (largerBound - smallerBound) * (totalStarsLength - smallerBoundTotalLength) / (largerBoundTotalLength - smallerBoundTotalLength);
		}
		return Granular.Extensions.DoubleExtensions.DefaultIfNaN(Granular.Extensions.DoubleExtensions.DefaultIfNaN(smallerBound, largerBound), 0);
	};
	$System_Windows_Controls_Grid.$GetStarredAxisLength = function(starredAxis, starLength) {
		return Granular.Extensions.DoubleExtensions.Bounds(starredAxis.get_$Length().get_Value() * starLength, starredAxis.get_$MinLength(), starredAxis.get_$MaxLength());
	};
	global.System.Windows.Controls.Grid = $System_Windows_Controls_Grid;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.GridLength
	var $System_Windows_Controls_GridLength = function(gridUnitType, value) {
		this.$1$GridUnitTypeField = 0;
		this.$1$ValueField = 0;
		this.set_GridUnitType(gridUnitType);
		this.set_Value(value);
	};
	$System_Windows_Controls_GridLength.__typeName = 'System.Windows.Controls.GridLength';
	$System_Windows_Controls_GridLength.FromPixles = function(pixels) {
		return new $System_Windows_Controls_GridLength(1, pixels);
	};
	$System_Windows_Controls_GridLength.FromStars = function(stars) {
		return new $System_Windows_Controls_GridLength(2, stars);
	};
	global.System.Windows.Controls.GridLength = $System_Windows_Controls_GridLength;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.GridUnitType
	var $System_Windows_Controls_GridUnitType = function() {
	};
	$System_Windows_Controls_GridUnitType.__typeName = 'System.Windows.Controls.GridUnitType';
	global.System.Windows.Controls.GridUnitType = $System_Windows_Controls_GridUnitType;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.HeaderedContentControl
	var $System_Windows_Controls_HeaderedContentControl = function() {
		$System_Windows_Controls_ContentControl.call(this);
	};
	$System_Windows_Controls_HeaderedContentControl.__typeName = 'System.Windows.Controls.HeaderedContentControl';
	global.System.Windows.Controls.HeaderedContentControl = $System_Windows_Controls_HeaderedContentControl;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.IAdornerLayerHost
	var $System_Windows_Controls_IAdornerLayerHost = function() {
	};
	$System_Windows_Controls_IAdornerLayerHost.__typeName = 'System.Windows.Controls.IAdornerLayerHost';
	global.System.Windows.Controls.IAdornerLayerHost = $System_Windows_Controls_IAdornerLayerHost;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.IDataTemplateSelector
	var $System_Windows_Controls_IDataTemplateSelector = function() {
	};
	$System_Windows_Controls_IDataTemplateSelector.__typeName = 'System.Windows.Controls.IDataTemplateSelector';
	global.System.Windows.Controls.IDataTemplateSelector = $System_Windows_Controls_IDataTemplateSelector;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.IGeneratorHost
	var $System_Windows_Controls_IGeneratorHost = function() {
	};
	$System_Windows_Controls_IGeneratorHost.__typeName = 'System.Windows.Controls.IGeneratorHost';
	global.System.Windows.Controls.IGeneratorHost = $System_Windows_Controls_IGeneratorHost;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.IItemContainer
	var $System_Windows_Controls_IItemContainer = function() {
	};
	$System_Windows_Controls_IItemContainer.__typeName = 'System.Windows.Controls.IItemContainer';
	global.System.Windows.Controls.IItemContainer = $System_Windows_Controls_IItemContainer;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.IItemContainerGenerator
	var $System_Windows_Controls_IItemContainerGenerator = function() {
	};
	$System_Windows_Controls_IItemContainerGenerator.__typeName = 'System.Windows.Controls.IItemContainerGenerator';
	global.System.Windows.Controls.IItemContainerGenerator = $System_Windows_Controls_IItemContainerGenerator;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Image
	var $System_Windows_Controls_Image = function() {
		this.$bitmapSource = null;
		this.$imageRenderElements = null;
		$System_Windows_FrameworkElement.call(this);
		this.$imageRenderElements = new (ss.makeGenericType(ss.Dictionary$2, [$System_Windows_Media_IRenderElementFactory, $System_Windows_Media_IImageRenderElement]))();
	};
	$System_Windows_Controls_Image.__typeName = 'System.Windows.Controls.Image';
	$System_Windows_Controls_Image.$GetStretchRect = function(size, availableSize, stretch, stretchDirection) {
		if ($System_Windows_SizeExtensions.IsNullOrEmpty(size) || $System_Windows_Size.op_Equality(size, $System_Windows_Size.Zero) || $System_Windows_Size.op_Equality(availableSize, $System_Windows_Size.Zero)) {
			return $System_Windows_Rect.Zero;
		}
		var stretchSize = $System_Windows_Controls_Image.$GetStretchSize(size, availableSize, stretch);
		if (stretchDirection === 1) {
			stretchSize = $System_Windows_SizeExtensions.Min(stretchSize, size);
		}
		if (stretchDirection === 0) {
			stretchSize = $System_Windows_SizeExtensions.Max(stretchSize, size);
		}
		return new $System_Windows_Rect.$ctor2($System_Windows_Point.op_Division($System_Windows_Point.op_Subtraction($System_Windows_SizeExtensions.ToPoint(availableSize), $System_Windows_SizeExtensions.ToPoint(stretchSize)), 2), stretchSize);
	};
	$System_Windows_Controls_Image.$GetStretchSize = function(imageSize, availableSize, stretch) {
		switch (stretch) {
			case 0: {
				return imageSize;
			}
			case 1: {
				return availableSize;
			}
			case 2: {
				return ((imageSize.get_Height() * availableSize.get_Width() < imageSize.get_Width() * availableSize.get_Height()) ? new $System_Windows_Size(availableSize.get_Width(), imageSize.get_Height() * availableSize.get_Width() / imageSize.get_Width()) : new $System_Windows_Size(imageSize.get_Width() * availableSize.get_Height() / imageSize.get_Height(), availableSize.get_Height()));
			}
			case 3: {
				return ((imageSize.get_Height() * availableSize.get_Width() > imageSize.get_Width() * availableSize.get_Height()) ? new $System_Windows_Size(availableSize.get_Width(), imageSize.get_Height() * availableSize.get_Width() / imageSize.get_Width()) : new $System_Windows_Size(imageSize.get_Width() * availableSize.get_Height() / imageSize.get_Height(), availableSize.get_Height()));
			}
			default: {
				throw new Granular.Exception('Unexpected Stretch "{0}"', [stretch]);
			}
		}
	};
	global.System.Windows.Controls.Image = $System_Windows_Controls_Image;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.InnerCollectionView
	var $System_Windows_Controls_InnerCollectionView = function() {
		this.$1$CollectionChangedField = null;
		this.$1$CurrentChangedField = null;
		this.$currentItem = null;
		this.$currentItemIndex = 0;
		this.$1$FilterPredicateField = null;
		this.$1$SortKeySelectorField = null;
		this.$1$SortDirectionField = 0;
		this.$innerCollection = null;
		this.$innerCollection = new (ss.makeGenericType(Granular.Collections.ObservableCollection$1, [Object]))();
		this.$innerCollection.add_CollectionChanged(ss.mkdel(this, this.$OnInnerCollectionChanged));
	};
	$System_Windows_Controls_InnerCollectionView.__typeName = 'System.Windows.Controls.InnerCollectionView';
	global.System.Windows.Controls.InnerCollectionView = $System_Windows_Controls_InnerCollectionView;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.IPopupLayerHost
	var $System_Windows_Controls_IPopupLayerHost = function() {
	};
	$System_Windows_Controls_IPopupLayerHost.__typeName = 'System.Windows.Controls.IPopupLayerHost';
	global.System.Windows.Controls.IPopupLayerHost = $System_Windows_Controls_IPopupLayerHost;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.IRadioButtonGroupScope
	var $System_Windows_Controls_IRadioButtonGroupScope = function() {
	};
	$System_Windows_Controls_IRadioButtonGroupScope.__typeName = 'System.Windows.Controls.IRadioButtonGroupScope';
	global.System.Windows.Controls.IRadioButtonGroupScope = $System_Windows_Controls_IRadioButtonGroupScope;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ISelectionGroup
	var $System_Windows_Controls_ISelectionGroup$1 = function(T) {
		var $type = function() {
		};
		ss.registerGenericInterfaceInstance($type, $System_Windows_Controls_ISelectionGroup$1, [T], { add_SelectionChanged: null, remove_SelectionChanged: null, get_Selection: null, set_Selection: null }, function() {
			return [];
		});
		ss.setMetadata($type, { members: [{ name: 'Selection', type: 16, returnType: T, getter: { name: 'get_Selection', type: 8, sname: 'get_Selection', returnType: T, params: [] }, setter: { name: 'set_Selection', type: 8, sname: 'set_Selection', returnType: Object, params: [T] } }, { name: 'SelectionChanged', type: 2, adder: { name: 'add_SelectionChanged', type: 8, sname: 'add_SelectionChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_SelectionChanged', type: 8, sname: 'remove_SelectionChanged', returnType: Object, params: [Function] } }] });
		return $type;
	};
	$System_Windows_Controls_ISelectionGroup$1.__typeName = 'System.Windows.Controls.ISelectionGroup$1';
	ss.initGenericInterface($System_Windows_Controls_ISelectionGroup$1, $asm, 1);
	global.System.Windows.Controls.ISelectionGroup$1 = $System_Windows_Controls_ISelectionGroup$1;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ISelectionGroupScope
	var $System_Windows_Controls_ISelectionGroupScope$1 = function(T) {
		var $type = function() {
		};
		ss.registerGenericInterfaceInstance($type, $System_Windows_Controls_ISelectionGroupScope$1, [T], { GetSelectionGroup: null }, function() {
			return [];
		});
		ss.setMetadata($type, { members: [{ name: 'GetSelectionGroup', type: 8, sname: 'GetSelectionGroup', returnType: ss.makeGenericType($System_Windows_Controls_ISelectionGroup$1, [T]), params: [String] }] });
		return $type;
	};
	$System_Windows_Controls_ISelectionGroupScope$1.__typeName = 'System.Windows.Controls.ISelectionGroupScope$1';
	ss.initGenericInterface($System_Windows_Controls_ISelectionGroupScope$1, $asm, 1);
	global.System.Windows.Controls.ISelectionGroupScope$1 = $System_Windows_Controls_ISelectionGroupScope$1;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.IStyleSelector
	var $System_Windows_Controls_IStyleSelector = function() {
	};
	$System_Windows_Controls_IStyleSelector.__typeName = 'System.Windows.Controls.IStyleSelector';
	global.System.Windows.Controls.IStyleSelector = $System_Windows_Controls_IStyleSelector;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ItemCollection
	var $System_Windows_Controls_ItemCollection = function() {
		this.$1$CollectionChangedField = null;
		this.$1$CurrentChangedField = null;
		this.$defaultView = null;
		this.$innerView = null;
		this.$delegateView = null;
		this.$defaultView = new $System_Windows_Controls_InnerCollectionView();
		this.$SetDelegateView(this.$defaultView);
	};
	$System_Windows_Controls_ItemCollection.__typeName = 'System.Windows.Controls.ItemCollection';
	global.System.Windows.Controls.ItemCollection = $System_Windows_Controls_ItemCollection;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ItemContainerGenerator
	var $System_Windows_Controls_ItemContainerGenerator = function(host) {
		this.$1$ItemsChangedField = null;
		this.$host = null;
		this.$generatedContainers = null;
		this.$host = host;
		this.$host.get_View().add_CollectionChanged(ss.mkdel(this, this.$OnViewCollectionChanged));
		this.$generatedContainers = [];
	};
	$System_Windows_Controls_ItemContainerGenerator.__typeName = 'System.Windows.Controls.ItemContainerGenerator';
	global.System.Windows.Controls.ItemContainerGenerator = $System_Windows_Controls_ItemContainerGenerator;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ItemContainerGeneratorExtensions
	var $System_Windows_Controls_ItemContainerGeneratorExtensions = function() {
	};
	$System_Windows_Controls_ItemContainerGeneratorExtensions.__typeName = 'System.Windows.Controls.ItemContainerGeneratorExtensions';
	$System_Windows_Controls_ItemContainerGeneratorExtensions.GenerateRange = function(generator, startIndex, count) {
		for (var i = 0; i < count; i++) {
			generator.Generate(startIndex + i);
		}
	};
	$System_Windows_Controls_ItemContainerGeneratorExtensions.Remove = function(generator, index) {
		generator.RemoveRange(index, 1);
	};
	global.System.Windows.Controls.ItemContainerGeneratorExtensions = $System_Windows_Controls_ItemContainerGeneratorExtensions;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ItemsChangedEventArgs
	var $System_Windows_Controls_ItemsChangedEventArgs = function(action, oldStartingIndex, newStartingIndex, itemsCount, containersCount) {
		this.$2$ActionField = 0;
		this.$2$OldStartingIndexField = 0;
		this.$2$NewStartingIndexField = 0;
		this.$2$ItemsCountField = 0;
		this.$2$ContainersCountField = 0;
		ss.EventArgs.call(this);
		this.set_Action(action);
		this.set_OldStartingIndex(oldStartingIndex);
		this.set_NewStartingIndex(newStartingIndex);
		this.set_ItemsCount(itemsCount);
		this.set_ContainersCount(containersCount);
	};
	$System_Windows_Controls_ItemsChangedEventArgs.__typeName = 'System.Windows.Controls.ItemsChangedEventArgs';
	global.System.Windows.Controls.ItemsChangedEventArgs = $System_Windows_Controls_ItemsChangedEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ItemsControl
	var $System_Windows_Controls_ItemsControl = function() {
		this.$6$ItemsField = null;
		$System_Windows_Controls_Control.call(this);
		this.set_Items(new $System_Windows_Controls_ItemCollection());
		this.set_ItemContainerGenerator(new $System_Windows_Controls_ItemContainerGenerator(this));
	};
	$System_Windows_Controls_ItemsControl.__typeName = 'System.Windows.Controls.ItemsControl';
	global.System.Windows.Controls.ItemsControl = $System_Windows_Controls_ItemsControl;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ItemsPanelTemplate
	var $System_Windows_Controls_ItemsPanelTemplate = function() {
		$System_Windows_FrameworkTemplate.call(this);
	};
	$System_Windows_Controls_ItemsPanelTemplate.__typeName = 'System.Windows.Controls.ItemsPanelTemplate';
	global.System.Windows.Controls.ItemsPanelTemplate = $System_Windows_Controls_ItemsPanelTemplate;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ItemsPresenter
	var $System_Windows_Controls_ItemsPresenter = function() {
		this.$panel = null;
		$System_Windows_FrameworkElement.call(this);
		//
	};
	$System_Windows_Controls_ItemsPresenter.__typeName = 'System.Windows.Controls.ItemsPresenter';
	global.System.Windows.Controls.ItemsPresenter = $System_Windows_Controls_ItemsPresenter;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ListBox
	var $System_Windows_Controls_ListBox = function() {
		this.$selectionBehavior = null;
		this.$selectionAnchor = null;
		this.$isItemContainerBeingClicked = false;
		$System_Windows_Controls_Primitives_Selector.call(this);
		this.$SetSelectionBehavior();
	};
	$System_Windows_Controls_ListBox.__typeName = 'System.Windows.Controls.ListBox';
	$System_Windows_Controls_ListBox.$CreateSelectionBehavior = function(listBox, selectionMode) {
		switch (selectionMode) {
			case 0: {
				return new $System_$Windows_Controls_ListBox$SingleSelectionBehavior(listBox);
			}
			case 1: {
				return new $System_$Windows_Controls_ListBox$MultipleSelectionBehavior(listBox);
			}
			case 2: {
				return new $System_$Windows_Controls_ListBox$ExtendedSelectionBehavior(listBox);
			}
		}
		throw new Granular.Exception('Unexpected SelectionMode "{0}"', [selectionMode]);
	};
	global.System.Windows.Controls.ListBox = $System_Windows_Controls_ListBox;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ListBoxItem
	var $System_Windows_Controls_ListBoxItem = function() {
		$System_Windows_Controls_ContentControl.call(this);
	};
	$System_Windows_Controls_ListBoxItem.__typeName = 'System.Windows.Controls.ListBoxItem';
	global.System.Windows.Controls.ListBoxItem = $System_Windows_Controls_ListBoxItem;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Orientation
	var $System_Windows_Controls_Orientation = function() {
	};
	$System_Windows_Controls_Orientation.__typeName = 'System.Windows.Controls.Orientation';
	global.System.Windows.Controls.Orientation = $System_Windows_Controls_Orientation;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Panel
	var $System_Windows_Controls_Panel = function() {
		this.$5$ChildrenField = null;
		this.$itemContainerGenerator = null;
		$System_Windows_FrameworkElement.call(this);
		this.set_Children(new $System_Windows_Controls_UIElementCollection(this));
		this.get_Children().add_CollectionChanged(ss.mkdel(this, this.$OnChildrenCollectionChanged));
	};
	$System_Windows_Controls_Panel.__typeName = 'System.Windows.Controls.Panel';
	$System_Windows_Controls_Panel.GetZIndex = function(obj) {
		return ss.unbox(ss.cast(obj.GetValue($System_Windows_Controls_Panel.ZIndexProperty), ss.Int32));
	};
	$System_Windows_Controls_Panel.SetZIndex = function(obj, value) {
		obj.SetValue($System_Windows_Controls_Panel.ZIndexProperty, value, 11);
	};
	$System_Windows_Controls_Panel.$OnZIndexPropertyChanged = function(dependencyObject, e) {
		if (ss.isInstanceOfType(dependencyObject, $System_Windows_Media_Visual) && ss.isInstanceOfType(ss.cast(dependencyObject, $System_Windows_Media_Visual).get_VisualParent(), $System_Windows_Controls_Panel)) {
			$System_Windows_Controls_Panel.$MoveVisualChild(ss.cast(dependencyObject, $System_Windows_Media_Visual), ss.unbox(ss.cast(e.get_NewValue(), ss.Int32)));
		}
	};
	$System_Windows_Controls_Panel.$MoveVisualChild = function(child, childZIndex) {
		var childVisualIndex = Enumerable.from(child.get_VisualParent().get_VisualChildren()).count(function(visual) {
			return !ss.referenceEquals(visual, child) && $System_Windows_Controls_Panel.GetZIndex(visual) <= childZIndex;
		});
		child.get_VisualParent().SetVisualChildIndex(child, childVisualIndex);
	};
	global.System.Windows.Controls.Panel = $System_Windows_Controls_Panel;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.PasswordBox
	var $System_Windows_Controls_PasswordBox = function() {
		this.$password = null;
		this.$textBoxView = null;
		this.$contentHost = null;
		$System_Windows_Controls_Control.call(this);
		var $t1 = new $System_Windows_Controls_$TextBoxView();
		$t1.set_$IsPassword(true);
		this.$textBoxView = $t1;
		this.$textBoxView.add_$TextChanged(ss.mkdel(this, function(sender, e) {
			this.set_Password(this.$textBoxView.get_$Text());
		}));
	};
	$System_Windows_Controls_PasswordBox.__typeName = 'System.Windows.Controls.PasswordBox';
	global.System.Windows.Controls.PasswordBox = $System_Windows_Controls_PasswordBox;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.PopupLayer
	var $System_Windows_Controls_PopupLayer = function() {
		this.$5$ClosePopupRequestField = null;
		$System_Windows_FrameworkElement.call(this);
		//
	};
	$System_Windows_Controls_PopupLayer.__typeName = 'System.Windows.Controls.PopupLayer';
	$System_Windows_Controls_PopupLayer.GetPosition = function(obj) {
		return ss.cast(obj.GetValue($System_Windows_Controls_PopupLayer.PositionProperty), $System_Windows_Point);
	};
	$System_Windows_Controls_PopupLayer.SetPosition = function(obj, value) {
		obj.SetValue($System_Windows_Controls_PopupLayer.PositionProperty, value, 11);
	};
	$System_Windows_Controls_PopupLayer.GetIsOpen = function(obj) {
		return ss.unbox(ss.cast(obj.GetValue($System_Windows_Controls_PopupLayer.IsOpenProperty), Boolean));
	};
	$System_Windows_Controls_PopupLayer.SetIsOpen = function(obj, value) {
		obj.SetValue($System_Windows_Controls_PopupLayer.IsOpenProperty, value, 11);
	};
	$System_Windows_Controls_PopupLayer.GetStaysOpen = function(obj) {
		return ss.unbox(ss.cast(obj.GetValue($System_Windows_Controls_PopupLayer.StaysOpenProperty), Boolean));
	};
	$System_Windows_Controls_PopupLayer.SetStaysOpen = function(obj, value) {
		obj.SetValue($System_Windows_Controls_PopupLayer.StaysOpenProperty, value, 11);
	};
	$System_Windows_Controls_PopupLayer.GetPopupLayer = function(target) {
		if (ss.isNullOrUndefined(target)) {
			return null;
		}
		return (ss.isInstanceOfType(target, $System_Windows_Controls_IPopupLayerHost) ? ss.cast(target, $System_Windows_Controls_IPopupLayerHost).get_PopupLayer() : $System_Windows_Controls_PopupLayer.GetPopupLayer(target.get_VisualParent()));
	};
	$System_Windows_Controls_PopupLayer.$OnIsOpenChanged = function(dependencyObject, e) {
		if (ss.unbox(ss.cast(e.get_NewValue(), Boolean)) && ss.isInstanceOfType(dependencyObject, $System_Windows_Media_Visual) && ss.isInstanceOfType(ss.cast(dependencyObject, $System_Windows_Media_Visual).get_VisualParent(), $System_Windows_Controls_PopupLayer)) {
			ss.cast(ss.cast(dependencyObject, $System_Windows_Media_Visual).get_VisualParent(), $System_Windows_Controls_PopupLayer).$BringToFront(ss.cast(dependencyObject, $System_Windows_Media_Visual));
		}
	};
	$System_Windows_Controls_PopupLayer.$OnPositionChanged = function(dependencyObject, e) {
		if (ss.isInstanceOfType(dependencyObject, $System_Windows_Media_Visual) && ss.isInstanceOfType(ss.cast(dependencyObject, $System_Windows_Media_Visual).get_VisualParent(), $System_Windows_Controls_PopupLayer)) {
			ss.cast(ss.cast(dependencyObject, $System_Windows_Media_Visual).get_VisualParent(), $System_Windows_Controls_PopupLayer).InvalidateArrange();
		}
	};
	global.System.Windows.Controls.PopupLayer = $System_Windows_Controls_PopupLayer;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ProgressBar
	var $System_Windows_Controls_ProgressBar = function() {
		this.$track = null;
		this.$indicator = null;
		this.$glow = null;
		this.$currentAnimatedIndicatorWidth = 0;
		this.$currentAnimationClock = null;
		$System_Windows_Controls_Primitives_RangeBase.call(this);
	};
	$System_Windows_Controls_ProgressBar.__typeName = 'System.Windows.Controls.ProgressBar';
	global.System.Windows.Controls.ProgressBar = $System_Windows_Controls_ProgressBar;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.RadioButton
	var $System_Windows_Controls_RadioButton = function() {
		this.$currentGroup = null;
		$System_Windows_Controls_Primitives_ToggleButton.call(this);
		//
	};
	$System_Windows_Controls_RadioButton.__typeName = 'System.Windows.Controls.RadioButton';
	$System_Windows_Controls_RadioButton.$GetSelectionGroupScope = function(visual) {
		while (ss.isValue(visual)) {
			if (ss.isInstanceOfType(visual, $System_Windows_Controls_IRadioButtonGroupScope)) {
				return ss.cast(visual, $System_Windows_Controls_IRadioButtonGroupScope);
			}
			visual = visual.get_VisualParent();
		}
		return null;
	};
	global.System.Windows.Controls.RadioButton = $System_Windows_Controls_RadioButton;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.RowDefinition
	var $System_Windows_Controls_RowDefinition = function() {
		this.$actualHeightValueEntry = null;
		$System_Windows_Freezable.call(this);
		this.$actualHeightValueEntry = this.GetValueEntry$1($System_Windows_Controls_RowDefinition.$ActualHeightPropertyKey);
	};
	$System_Windows_Controls_RowDefinition.__typeName = 'System.Windows.Controls.RowDefinition';
	global.System.Windows.Controls.RowDefinition = $System_Windows_Controls_RowDefinition;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ScrollBarVisibility
	var $System_Windows_Controls_ScrollBarVisibility = function() {
	};
	$System_Windows_Controls_ScrollBarVisibility.__typeName = 'System.Windows.Controls.ScrollBarVisibility';
	global.System.Windows.Controls.ScrollBarVisibility = $System_Windows_Controls_ScrollBarVisibility;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ScrollChangedEventArgs
	var $System_Windows_Controls_ScrollChangedEventArgs = function(routedEvent, originalSource, offset, offsetChange, extent, extentChange, viewport, viewportChange) {
		this.$3$OffsetField = null;
		this.$3$OffsetChangeField = null;
		this.$3$ExtentField = null;
		this.$3$ExtentChangeField = null;
		this.$3$ViewportField = null;
		this.$3$ViewportChangeField = null;
		$System_Windows_RoutedEventArgs.call(this, routedEvent, originalSource);
		this.set_Offset(offset);
		this.set_OffsetChange(offsetChange);
		this.set_Extent(extent);
		this.set_ExtentChange(extentChange);
		this.set_Viewport(viewport);
		this.set_ViewportChange(viewportChange);
	};
	$System_Windows_Controls_ScrollChangedEventArgs.__typeName = 'System.Windows.Controls.ScrollChangedEventArgs';
	global.System.Windows.Controls.ScrollChangedEventArgs = $System_Windows_Controls_ScrollChangedEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ScrollContentPresenter
	var $System_Windows_Controls_ScrollContentPresenter = function() {
		this.$6$AdornerLayerField = null;
		this.$innerScrollInfo = null;
		this.$delegateScrollInfo = null;
		$System_Windows_Controls_ContentPresenter.call(this);
		this.$innerScrollInfo = new $System_$Windows_Controls_ScrollContentPresenter$InnerScrollInfo();
		this.$delegateScrollInfo = this.$innerScrollInfo;
		this.set_AdornerLayer(new $System_Windows_Controls_AdornerLayer());
		this.AddVisualChild(this.get_AdornerLayer());
	};
	$System_Windows_Controls_ScrollContentPresenter.__typeName = 'System.Windows.Controls.ScrollContentPresenter';
	$System_Windows_Controls_ScrollContentPresenter.$OnCanContentScrollChanged = function(dependencyObject, e) {
		if (ss.isInstanceOfType(dependencyObject, $System_Windows_Controls_ScrollContentPresenter)) {
			ss.cast(dependencyObject, $System_Windows_Controls_ScrollContentPresenter).$OnCanContentScrollChanged(e);
		}
	};
	global.System.Windows.Controls.ScrollContentPresenter = $System_Windows_Controls_ScrollContentPresenter;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ScrollEventArgs
	var $System_Windows_Controls_ScrollEventArgs = function(routedEvent, originalSource, scrollEventType, newValue) {
		this.$3$NewValueField = 0;
		this.$3$ScrollEventTypeField = 0;
		$System_Windows_RoutedEventArgs.call(this, routedEvent, originalSource);
		this.set_ScrollEventType(scrollEventType);
		this.set_NewValue(newValue);
	};
	$System_Windows_Controls_ScrollEventArgs.__typeName = 'System.Windows.Controls.ScrollEventArgs';
	global.System.Windows.Controls.ScrollEventArgs = $System_Windows_Controls_ScrollEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ScrollEventType
	var $System_Windows_Controls_ScrollEventType = function() {
	};
	$System_Windows_Controls_ScrollEventType.__typeName = 'System.Windows.Controls.ScrollEventType';
	global.System.Windows.Controls.ScrollEventType = $System_Windows_Controls_ScrollEventType;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.ScrollViewer
	var $System_Windows_Controls_ScrollViewer = function() {
		this.$horizontalScrollBar = null;
		this.$verticalScrollBar = null;
		this.$scrollContentPresenter = null;
		$System_Windows_Controls_ContentControl.call(this);
	};
	$System_Windows_Controls_ScrollViewer.__typeName = 'System.Windows.Controls.ScrollViewer';
	$System_Windows_Controls_ScrollViewer.GetCanContentScroll = function(obj) {
		return ss.unbox(ss.cast(obj.GetValue($System_Windows_Controls_ScrollViewer.CanContentScrollProperty), Boolean));
	};
	$System_Windows_Controls_ScrollViewer.SetCanContentScroll = function(obj, value) {
		obj.SetValue($System_Windows_Controls_ScrollViewer.CanContentScrollProperty, value, 11);
	};
	$System_Windows_Controls_ScrollViewer.$InvalidateElementMeasurePath = function(root, element) {
		if (ss.isNullOrUndefined(element)) {
			return;
		}
		while (!ss.referenceEquals(element, root)) {
			element.InvalidateMeasure();
			element = ss.cast(element.get_VisualParent(), $System_Windows_UIElement);
		}
	};
	$System_Windows_Controls_ScrollViewer.$GetScrollBarVisibility = function(scrollBarVisibility, isOverflowed) {
		switch (scrollBarVisibility) {
			case 0: {
				return 2;
			}
			case 1: {
				return (isOverflowed ? 0 : 2);
			}
			case 2: {
				return 2;
			}
			case 3: {
				return 0;
			}
		}
		throw new Granular.Exception('Unexpected ScrollBarVisibility "{0}"', [scrollBarVisibility]);
	};
	global.System.Windows.Controls.ScrollViewer = $System_Windows_Controls_ScrollViewer;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.SelectionChangedEventArgs
	var $System_Windows_Controls_SelectionChangedEventArgs = function(routedEvent, originalSource, removedItems, addedItems) {
		this.$3$AddedItemsField = null;
		this.$3$RemovedItemsField = null;
		$System_Windows_RoutedEventArgs.call(this, routedEvent, originalSource);
		this.set_RemovedItems(removedItems);
		this.set_AddedItems(addedItems);
	};
	$System_Windows_Controls_SelectionChangedEventArgs.__typeName = 'System.Windows.Controls.SelectionChangedEventArgs';
	global.System.Windows.Controls.SelectionChangedEventArgs = $System_Windows_Controls_SelectionChangedEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.SelectionGroup
	var $System_Windows_Controls_SelectionGroup$1 = function(T) {
		var $type = function() {
			this.$1$SelectionChangedField = null;
			this.selection = ss.getDefaultValue(T);
		};
		ss.registerGenericClassInstance($type, $System_Windows_Controls_SelectionGroup$1, [T], {
			add_SelectionChanged: function(value) {
				this.$1$SelectionChangedField = ss.delegateCombine(this.$1$SelectionChangedField, value);
			},
			remove_SelectionChanged: function(value) {
				this.$1$SelectionChangedField = ss.delegateRemove(this.$1$SelectionChangedField, value);
			},
			get_Selection: function() {
				return this.selection;
			},
			set_Selection: function(value) {
				if (ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Object]).Default.areEqual(this.selection, value)) {
					return;
				}
				this.selection = value;
				Granular.Extensions.EventHandlerExtensions.Raise(this.$1$SelectionChangedField, this);
			}
		}, function() {
			return null;
		}, function() {
			return [ss.makeGenericType($System_Windows_Controls_ISelectionGroup$1, [T])];
		});
		ss.setMetadata($type, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Selection', type: 16, returnType: T, getter: { name: 'get_Selection', type: 8, sname: 'get_Selection', returnType: T, params: [] }, setter: { name: 'set_Selection', type: 8, sname: 'set_Selection', returnType: Object, params: [T] } }, { name: 'selection', type: 4, returnType: T, sname: 'selection' }, { name: 'SelectionChanged', type: 2, adder: { name: 'add_SelectionChanged', type: 8, sname: 'add_SelectionChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_SelectionChanged', type: 8, sname: 'remove_SelectionChanged', returnType: Object, params: [Function] } }] });
		return $type;
	};
	$System_Windows_Controls_SelectionGroup$1.__typeName = 'System.Windows.Controls.SelectionGroup$1';
	ss.initGenericClass($System_Windows_Controls_SelectionGroup$1, $asm, 1);
	global.System.Windows.Controls.SelectionGroup$1 = $System_Windows_Controls_SelectionGroup$1;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.SelectionGroupScope
	var $System_Windows_Controls_SelectionGroupScope$1 = function(T) {
		var $type = function() {
			this.$groups = null;
			this.$groups = new (ss.makeGenericType(ss.Dictionary$2, [String, ss.makeGenericType($System_Windows_Controls_ISelectionGroup$1, [T])]))();
		};
		ss.registerGenericClassInstance($type, $System_Windows_Controls_SelectionGroupScope$1, [T], {
			GetSelectionGroup: function(groupName) {
				var group = {};
				if (!this.$groups.tryGetValue(groupName, group)) {
					group.$ = new (ss.makeGenericType($System_Windows_Controls_SelectionGroup$1, [T]))();
					this.$groups.add(groupName, group.$);
				}
				return group.$;
			}
		}, function() {
			return null;
		}, function() {
			return [ss.makeGenericType($System_Windows_Controls_ISelectionGroupScope$1, [T])];
		});
		ss.setMetadata($type, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GetSelectionGroup', type: 8, sname: 'GetSelectionGroup', returnType: ss.makeGenericType($System_Windows_Controls_ISelectionGroup$1, [T]), params: [String] }] });
		return $type;
	};
	$System_Windows_Controls_SelectionGroupScope$1.__typeName = 'System.Windows.Controls.SelectionGroupScope$1';
	ss.initGenericClass($System_Windows_Controls_SelectionGroupScope$1, $asm, 1);
	global.System.Windows.Controls.SelectionGroupScope$1 = $System_Windows_Controls_SelectionGroupScope$1;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.SelectionMode
	var $System_Windows_Controls_SelectionMode = function() {
	};
	$System_Windows_Controls_SelectionMode.__typeName = 'System.Windows.Controls.SelectionMode';
	global.System.Windows.Controls.SelectionMode = $System_Windows_Controls_SelectionMode;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.SpellCheck
	var $System_Windows_Controls_SpellCheck = function() {
	};
	$System_Windows_Controls_SpellCheck.__typeName = 'System.Windows.Controls.SpellCheck';
	$System_Windows_Controls_SpellCheck.GetIsEnabled = function(obj) {
		return ss.unbox(ss.cast(obj.GetValue($System_Windows_Controls_SpellCheck.IsEnabledProperty), Boolean));
	};
	$System_Windows_Controls_SpellCheck.SetIsEnabled = function(obj, value) {
		obj.SetValue($System_Windows_Controls_SpellCheck.IsEnabledProperty, value, 11);
	};
	global.System.Windows.Controls.SpellCheck = $System_Windows_Controls_SpellCheck;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.StackPanel
	var $System_Windows_Controls_StackPanel = function() {
		$System_Windows_Controls_Panel.call(this);
	};
	$System_Windows_Controls_StackPanel.__typeName = 'System.Windows.Controls.StackPanel';
	global.System.Windows.Controls.StackPanel = $System_Windows_Controls_StackPanel;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.TextAlignment
	var $System_Windows_Controls_TextAlignment = function() {
	};
	$System_Windows_Controls_TextAlignment.__typeName = 'System.Windows.Controls.TextAlignment';
	global.System.Windows.Controls.TextAlignment = $System_Windows_Controls_TextAlignment;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.TextBlock
	var $System_Windows_Controls_TextBlock = function() {
		this.$textBlockRenderElements = null;
		this.$measureCache = null;
		$System_Windows_FrameworkElement.call(this);
		this.$measureCache = new $System_Windows_Controls_$MeasureCache(4);
		this.$textBlockRenderElements = new (ss.makeGenericType(ss.Dictionary$2, [$System_Windows_Media_IRenderElementFactory, $System_Windows_Media_ITextBlockRenderElement]))();
	};
	$System_Windows_Controls_TextBlock.__typeName = 'System.Windows.Controls.TextBlock';
	global.System.Windows.Controls.TextBlock = $System_Windows_Controls_TextBlock;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.TextBox
	var $System_Windows_Controls_TextBox = function() {
		this.$7$LineCountField = 0;
		this.$textBoxView = null;
		$System_Windows_Controls_Primitives_TextBoxBase.call(this);
		this.$textBoxView = new $System_Windows_Controls_$TextBoxView();
		this.$textBoxView.set_$HorizontalScrollBarVisibility(this.get_HorizontalScrollBarVisibility());
		this.$textBoxView.set_$VerticalScrollBarVisibility(this.get_VerticalScrollBarVisibility());
		this.$textBoxView.set_$SpellCheck(ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_SpellCheck.IsEnabledProperty), Boolean)));
		this.$textBoxView.add_$TextChanged(ss.mkdel(this, function(sender, e) {
			this.set_Text(this.$textBoxView.get_$Text());
		}));
		this.$textBoxView.add_$CaretIndexChanged(ss.mkdel(this, function(sender1, e1) {
			this.set_CaretIndex(this.$textBoxView.get_$CaretIndex());
		}));
		this.$textBoxView.add_$SelectionStartChanged(ss.mkdel(this, function(sender2, e2) {
			this.set_SelectionStart(this.$textBoxView.get_$SelectionStart());
		}));
		this.$textBoxView.add_$SelectionLengthChanged(ss.mkdel(this, function(sender3, e3) {
			this.set_SelectionLength(this.$textBoxView.get_$SelectionLength());
		}));
	};
	$System_Windows_Controls_TextBox.__typeName = 'System.Windows.Controls.TextBox';
	global.System.Windows.Controls.TextBox = $System_Windows_Controls_TextBox;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.TextChangedEventArgs
	var $System_Windows_Controls_TextChangedEventArgs = function(routedEvent, originalSource) {
		$System_Windows_RoutedEventArgs.call(this, routedEvent, originalSource);
		//
	};
	$System_Windows_Controls_TextChangedEventArgs.__typeName = 'System.Windows.Controls.TextChangedEventArgs';
	global.System.Windows.Controls.TextChangedEventArgs = $System_Windows_Controls_TextChangedEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.UIElementCollection
	var $System_Windows_Controls_UIElementCollection = function(parent) {
		this.$1$CollectionChangedField = null;
		this.$parent = null;
		this.$children = null;
		this.$parent = parent;
		this.$children = [];
	};
	$System_Windows_Controls_UIElementCollection.__typeName = 'System.Windows.Controls.UIElementCollection';
	global.System.Windows.Controls.UIElementCollection = $System_Windows_Controls_UIElementCollection;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.UserControl
	var $System_Windows_Controls_UserControl = function() {
		$System_Windows_Controls_ContentControl.call(this);
	};
	$System_Windows_Controls_UserControl.__typeName = 'System.Windows.Controls.UserControl';
	global.System.Windows.Controls.UserControl = $System_Windows_Controls_UserControl;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.WrapPanel
	var $System_Windows_Controls_WrapPanel = function() {
		$System_Windows_Controls_Panel.call(this);
	};
	$System_Windows_Controls_WrapPanel.__typeName = 'System.Windows.Controls.WrapPanel';
	global.System.Windows.Controls.WrapPanel = $System_Windows_Controls_WrapPanel;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.ButtonBase
	var $System_Windows_Controls_Primitives_ButtonBase = function() {
		this.$keyboardFocus = null;
		$System_Windows_Controls_ContentControl.call(this);
		//
	};
	$System_Windows_Controls_Primitives_ButtonBase.__typeName = 'System.Windows.Controls.Primitives.ButtonBase';
	$System_Windows_Controls_Primitives_ButtonBase.$IsVisualChild = function(parent, child) {
		return ss.isValue(child) && (ss.referenceEquals(parent, child) || $System_Windows_Controls_Primitives_ButtonBase.$IsVisualChild(parent, child.get_VisualParent()));
	};
	global.System.Windows.Controls.Primitives.ButtonBase = $System_Windows_Controls_Primitives_ButtonBase;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.ClickMode
	var $System_Windows_Controls_Primitives_ClickMode = function() {
	};
	$System_Windows_Controls_Primitives_ClickMode.__typeName = 'System.Windows.Controls.Primitives.ClickMode';
	global.System.Windows.Controls.Primitives.ClickMode = $System_Windows_Controls_Primitives_ClickMode;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.DragCompletedEventArgs
	var $System_Windows_Controls_Primitives_DragCompletedEventArgs = function(routedEvent, originalSource, isCanceled) {
		this.$3$IsCanceledField = false;
		$System_Windows_RoutedEventArgs.call(this, routedEvent, originalSource);
		this.set_IsCanceled(isCanceled);
	};
	$System_Windows_Controls_Primitives_DragCompletedEventArgs.__typeName = 'System.Windows.Controls.Primitives.DragCompletedEventArgs';
	global.System.Windows.Controls.Primitives.DragCompletedEventArgs = $System_Windows_Controls_Primitives_DragCompletedEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.DragDeltaEventArgs
	var $System_Windows_Controls_Primitives_DragDeltaEventArgs = function(routedEvent, originalSource, delta) {
		this.$3$DeltaField = null;
		$System_Windows_RoutedEventArgs.call(this, routedEvent, originalSource);
		this.set_Delta(delta);
	};
	$System_Windows_Controls_Primitives_DragDeltaEventArgs.__typeName = 'System.Windows.Controls.Primitives.DragDeltaEventArgs';
	global.System.Windows.Controls.Primitives.DragDeltaEventArgs = $System_Windows_Controls_Primitives_DragDeltaEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.DragStartedEventArgs
	var $System_Windows_Controls_Primitives_DragStartedEventArgs = function(routedEvent, originalSource) {
		$System_Windows_RoutedEventArgs.call(this, routedEvent, originalSource);
		//
	};
	$System_Windows_Controls_Primitives_DragStartedEventArgs.__typeName = 'System.Windows.Controls.Primitives.DragStartedEventArgs';
	global.System.Windows.Controls.Primitives.DragStartedEventArgs = $System_Windows_Controls_Primitives_DragStartedEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.IScrollInfo
	var $System_Windows_Controls_Primitives_IScrollInfo = function() {
	};
	$System_Windows_Controls_Primitives_IScrollInfo.__typeName = 'System.Windows.Controls.Primitives.IScrollInfo';
	global.System.Windows.Controls.Primitives.IScrollInfo = $System_Windows_Controls_Primitives_IScrollInfo;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.Placement
	var $System_Windows_Controls_Primitives_Placement = function() {
	};
	$System_Windows_Controls_Primitives_Placement.__typeName = 'System.Windows.Controls.Primitives.Placement';
	$System_Windows_Controls_Primitives_Placement.GetPosition = function(placementMode, placementTargetRect, placementRectangle, mouseBounds, offset, popupSize, containerBounds) {
		return $System_Windows_Controls_Primitives_Placement.$GetPlacement(placementMode).$GetPosition(placementTargetRect, placementRectangle, mouseBounds, offset, popupSize, containerBounds);
	};
	$System_Windows_Controls_Primitives_Placement.$GetPlacement = function(placementMode) {
		switch (placementMode) {
			case 0: {
				return $System_$Windows_Controls_Primitives_Placement$AbsolutePlacement.$Default;
			}
			case 1: {
				return $System_$Windows_Controls_Primitives_Placement$RelativePlacement.$Default;
			}
			case 2: {
				return $System_$Windows_Controls_Primitives_Placement$BottomPlacement.$Default;
			}
			case 3: {
				return $System_$Windows_Controls_Primitives_Placement$CenterPlacement.$Default;
			}
			case 4: {
				return $System_$Windows_Controls_Primitives_Placement$RightPlacement.$Default;
			}
			case 5: {
				return $System_$Windows_Controls_Primitives_Placement$AbsolutePointPlacement.$Default;
			}
			case 6: {
				return $System_$Windows_Controls_Primitives_Placement$RelativePointPlacement.$Default;
			}
			case 7: {
				return $System_$Windows_Controls_Primitives_Placement$MousePlacement.$Default;
			}
			case 8: {
				return $System_$Windows_Controls_Primitives_Placement$MousePointPlacement.$Default;
			}
			case 9: {
				return $System_$Windows_Controls_Primitives_Placement$LeftPlacement.$Default;
			}
			case 10: {
				return $System_$Windows_Controls_Primitives_Placement$TopPlacement.$Default;
			}
		}
		throw new Granular.Exception('Unexpected PlacementMode "{0}"', [placementMode]);
	};
	$System_Windows_Controls_Primitives_Placement.$GetTopLeft = function(size) {
		return $System_Windows_Point.Zero;
	};
	$System_Windows_Controls_Primitives_Placement.$GetTopRight = function(size) {
		return new $System_Windows_Point.$ctor1(size.get_Width(), 0);
	};
	$System_Windows_Controls_Primitives_Placement.$GetBottomLeft = function(size) {
		return new $System_Windows_Point.$ctor1(0, size.get_Height());
	};
	$System_Windows_Controls_Primitives_Placement.$GetBottomRight = function(size) {
		return new $System_Windows_Point.$ctor1(size.get_Width(), size.get_Height());
	};
	global.System.Windows.Controls.Primitives.Placement = $System_Windows_Controls_Primitives_Placement;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.PlacementMode
	var $System_Windows_Controls_Primitives_PlacementMode = function() {
	};
	$System_Windows_Controls_Primitives_PlacementMode.__typeName = 'System.Windows.Controls.Primitives.PlacementMode';
	global.System.Windows.Controls.Primitives.PlacementMode = $System_Windows_Controls_Primitives_PlacementMode;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.Popup
	var $System_Windows_Controls_Primitives_Popup = function() {
		this.$5$OpenedField = null;
		this.$5$ClosedField = null;
		this.$child = null;
		this.$popupLayer = null;
		this.$popupContainer = null;
		$System_Windows_FrameworkElement.call(this);
		this.$popupContainer = new $System_$Windows_Controls_Primitives_Popup$PopupContainer();
	};
	$System_Windows_Controls_Primitives_Popup.__typeName = 'System.Windows.Controls.Primitives.Popup';
	global.System.Windows.Controls.Primitives.Popup = $System_Windows_Controls_Primitives_Popup;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.RangeBase
	var $System_Windows_Controls_Primitives_RangeBase = function() {
		$System_Windows_Controls_Control.call(this);
	};
	$System_Windows_Controls_Primitives_RangeBase.__typeName = 'System.Windows.Controls.Primitives.RangeBase';
	$System_Windows_Controls_Primitives_RangeBase.$CoerceValueRange = function(dependencyObject, value) {
		return Granular.Extensions.DoubleExtensions.Bounds(ss.unbox(ss.cast(value, Number)), ss.cast(dependencyObject, $System_Windows_Controls_Primitives_RangeBase).get_Minimum(), ss.cast(dependencyObject, $System_Windows_Controls_Primitives_RangeBase).get_Maximum());
	};
	global.System.Windows.Controls.Primitives.RangeBase = $System_Windows_Controls_Primitives_RangeBase;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.RepeatButton
	var $System_Windows_Controls_Primitives_RepeatButton = function() {
		this.$timer = null;
		$System_Windows_Controls_Primitives_ButtonBase.call(this);
		this.$timer = new $System_Windows_Threading_DispatcherTimer();
		this.$timer.add_Tick(ss.mkdel(this, this.$OnTimerTick));
	};
	$System_Windows_Controls_Primitives_RepeatButton.__typeName = 'System.Windows.Controls.Primitives.RepeatButton';
	global.System.Windows.Controls.Primitives.RepeatButton = $System_Windows_Controls_Primitives_RepeatButton;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.ScrollBar
	var $System_Windows_Controls_Primitives_ScrollBar = function() {
		this.$SnapBackThreshold = 150;
		this.$thumb = null;
		this.$track = null;
		this.$decreasePageButton = null;
		this.$increasePageButton = null;
		this.$decreaseLineButton = null;
		this.$increaseLineButton = null;
		this.$dragInitialValue = 0;
		$System_Windows_Controls_Primitives_RangeBase.call(this);
		//
	};
	$System_Windows_Controls_Primitives_ScrollBar.__typeName = 'System.Windows.Controls.Primitives.ScrollBar';
	global.System.Windows.Controls.Primitives.ScrollBar = $System_Windows_Controls_Primitives_ScrollBar;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.ScrollInfoExtensions
	var $System_Windows_Controls_Primitives_ScrollInfoExtensions = function() {
	};
	$System_Windows_Controls_Primitives_ScrollInfoExtensions.__typeName = 'System.Windows.Controls.Primitives.ScrollInfoExtensions';
	$System_Windows_Controls_Primitives_ScrollInfoExtensions.LineUp = function(scrollInfo) {
		scrollInfo.set_Offset($System_Windows_Point.op_Subtraction(scrollInfo.get_Offset(), new $System_Windows_Point.$ctor1(0, $System_Windows_Controls_Primitives_ScrollInfoExtensions.ScrollLineDelta)));
	};
	$System_Windows_Controls_Primitives_ScrollInfoExtensions.LineDown = function(scrollInfo) {
		scrollInfo.set_Offset($System_Windows_Point.op_Addition(scrollInfo.get_Offset(), new $System_Windows_Point.$ctor1(0, $System_Windows_Controls_Primitives_ScrollInfoExtensions.ScrollLineDelta)));
	};
	$System_Windows_Controls_Primitives_ScrollInfoExtensions.LineLeft = function(scrollInfo) {
		scrollInfo.set_Offset($System_Windows_Point.op_Subtraction(scrollInfo.get_Offset(), new $System_Windows_Point.$ctor1($System_Windows_Controls_Primitives_ScrollInfoExtensions.ScrollLineDelta, 0)));
	};
	$System_Windows_Controls_Primitives_ScrollInfoExtensions.LineRight = function(scrollInfo) {
		scrollInfo.set_Offset($System_Windows_Point.op_Addition(scrollInfo.get_Offset(), new $System_Windows_Point.$ctor1($System_Windows_Controls_Primitives_ScrollInfoExtensions.ScrollLineDelta, 0)));
	};
	$System_Windows_Controls_Primitives_ScrollInfoExtensions.PageUp = function(scrollInfo) {
		scrollInfo.set_Offset($System_Windows_Point.op_Subtraction(scrollInfo.get_Offset(), new $System_Windows_Point.$ctor1(0, scrollInfo.get_ViewportSize().get_Height())));
	};
	$System_Windows_Controls_Primitives_ScrollInfoExtensions.PageDown = function(scrollInfo) {
		scrollInfo.set_Offset($System_Windows_Point.op_Addition(scrollInfo.get_Offset(), new $System_Windows_Point.$ctor1(0, scrollInfo.get_ViewportSize().get_Height())));
	};
	$System_Windows_Controls_Primitives_ScrollInfoExtensions.PageLeft = function(scrollInfo) {
		scrollInfo.set_Offset($System_Windows_Point.op_Subtraction(scrollInfo.get_Offset(), new $System_Windows_Point.$ctor1(scrollInfo.get_ViewportSize().get_Width(), 0)));
	};
	$System_Windows_Controls_Primitives_ScrollInfoExtensions.PageRight = function(scrollInfo) {
		scrollInfo.set_Offset($System_Windows_Point.op_Addition(scrollInfo.get_Offset(), new $System_Windows_Point.$ctor1(scrollInfo.get_ViewportSize().get_Width(), 0)));
	};
	$System_Windows_Controls_Primitives_ScrollInfoExtensions.MouseWheelUp = function(scrollInfo) {
		scrollInfo.set_Offset($System_Windows_Point.op_Subtraction(scrollInfo.get_Offset(), new $System_Windows_Point.$ctor1(0, $System_Windows_Controls_Primitives_ScrollInfoExtensions.MouseWheelDelta)));
	};
	$System_Windows_Controls_Primitives_ScrollInfoExtensions.MouseWheelDown = function(scrollInfo) {
		scrollInfo.set_Offset($System_Windows_Point.op_Addition(scrollInfo.get_Offset(), new $System_Windows_Point.$ctor1(0, $System_Windows_Controls_Primitives_ScrollInfoExtensions.MouseWheelDelta)));
	};
	$System_Windows_Controls_Primitives_ScrollInfoExtensions.MouseWheelLeft = function(scrollInfo) {
		scrollInfo.set_Offset($System_Windows_Point.op_Subtraction(scrollInfo.get_Offset(), new $System_Windows_Point.$ctor1($System_Windows_Controls_Primitives_ScrollInfoExtensions.MouseWheelDelta, 0)));
	};
	$System_Windows_Controls_Primitives_ScrollInfoExtensions.MouseWheelRight = function(scrollInfo) {
		scrollInfo.set_Offset($System_Windows_Point.op_Addition(scrollInfo.get_Offset(), new $System_Windows_Point.$ctor1($System_Windows_Controls_Primitives_ScrollInfoExtensions.MouseWheelDelta, 0)));
	};
	$System_Windows_Controls_Primitives_ScrollInfoExtensions.ScrollToHome = function(scrollInfo) {
		scrollInfo.set_Offset($System_Windows_Point.Zero);
	};
	$System_Windows_Controls_Primitives_ScrollInfoExtensions.ScrollToEnd = function(scrollInfo) {
		scrollInfo.set_Offset(new $System_Windows_Point.$ctor1(0, $System_Windows_Controls_Primitives_ScrollInfoExtensions.GetScrollableSize(scrollInfo).get_Height()));
	};
	$System_Windows_Controls_Primitives_ScrollInfoExtensions.ScrollToHorizontalOffset = function(scrollInfo, offset) {
		scrollInfo.set_Offset(new $System_Windows_Point.$ctor1(Granular.Extensions.DoubleExtensions.Bounds(offset, 0, $System_Windows_Controls_Primitives_ScrollInfoExtensions.GetScrollableSize(scrollInfo).get_Width()), scrollInfo.get_Offset().get_Y()));
	};
	$System_Windows_Controls_Primitives_ScrollInfoExtensions.ScrollToVerticalOffset = function(scrollInfo, offset) {
		scrollInfo.set_Offset(new $System_Windows_Point.$ctor1(scrollInfo.get_Offset().get_X(), Granular.Extensions.DoubleExtensions.Bounds(offset, 0, $System_Windows_Controls_Primitives_ScrollInfoExtensions.GetScrollableSize(scrollInfo).get_Height())));
	};
	$System_Windows_Controls_Primitives_ScrollInfoExtensions.GetScrollableSize = function(scrollInfo) {
		return $System_Windows_SizeExtensions.Max($System_Windows_Size.op_Subtraction(scrollInfo.get_ExtentSize(), scrollInfo.get_ViewportSize()), $System_Windows_Size.Zero);
	};
	global.System.Windows.Controls.Primitives.ScrollInfoExtensions = $System_Windows_Controls_Primitives_ScrollInfoExtensions;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.Selector
	var $System_Windows_Controls_Primitives_Selector = function() {
		$System_Windows_Controls_ItemsControl.call(this);
		$System_Windows_Controls_Primitives_Selector.$SetIsSelectionActive(this, false);
	};
	$System_Windows_Controls_Primitives_Selector.__typeName = 'System.Windows.Controls.Primitives.Selector';
	$System_Windows_Controls_Primitives_Selector.GetIsSelectionActive = function(obj) {
		return ss.unbox(ss.cast(obj.GetValue($System_Windows_Controls_Primitives_Selector.IsSelectionActiveProperty), Boolean));
	};
	$System_Windows_Controls_Primitives_Selector.$SetIsSelectionActive = function(obj, value) {
		obj.SetValue$1($System_Windows_Controls_Primitives_Selector.$IsSelectionActivePropertyKey, value, 11);
	};
	global.System.Windows.Controls.Primitives.Selector = $System_Windows_Controls_Primitives_Selector;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.TextBoxBase
	var $System_Windows_Controls_Primitives_TextBoxBase = function() {
		this.$6$ContentHostField = null;
		$System_Windows_Controls_Control.call(this);
	};
	$System_Windows_Controls_Primitives_TextBoxBase.__typeName = 'System.Windows.Controls.Primitives.TextBoxBase';
	global.System.Windows.Controls.Primitives.TextBoxBase = $System_Windows_Controls_Primitives_TextBoxBase;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.Thumb
	var $System_Windows_Controls_Primitives_Thumb = function() {
		this.$dragStartPosition = null;
		$System_Windows_Controls_Control.call(this);
	};
	$System_Windows_Controls_Primitives_Thumb.__typeName = 'System.Windows.Controls.Primitives.Thumb';
	global.System.Windows.Controls.Primitives.Thumb = $System_Windows_Controls_Primitives_Thumb;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.ToggleButton
	var $System_Windows_Controls_Primitives_ToggleButton = function() {
		$System_Windows_Controls_Primitives_ButtonBase.call(this);
	};
	$System_Windows_Controls_Primitives_ToggleButton.__typeName = 'System.Windows.Controls.Primitives.ToggleButton';
	$System_Windows_Controls_Primitives_ToggleButton.GetToggledState = function(currentState, isThreeState) {
		// false -> true [-> null] -> false
		if (currentState === false) {
			return true;
		}
		if (ss.isNullOrUndefined(currentState) || !isThreeState) {
			return false;
		}
		return null;
	};
	global.System.Windows.Controls.Primitives.ToggleButton = $System_Windows_Controls_Primitives_ToggleButton;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Controls.Primitives.Track
	var $System_Windows_Controls_Primitives_Track = function() {
		this.$decreaseRepeatButton = null;
		this.$increaseRepeatButton = null;
		this.$thumb = null;
		this.$5$ThumbMinLengthField = 0;
		$System_Windows_FrameworkElement.call(this);
		this.set_ThumbMinLength(24);
	};
	$System_Windows_Controls_Primitives_Track.__typeName = 'System.Windows.Controls.Primitives.Track';
	global.System.Windows.Controls.Primitives.Track = $System_Windows_Controls_Primitives_Track;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Data.Binding
	var $System_Windows_Data_Binding = function() {
		this.$1$PathField = null;
		this.$1$SourceField = null;
		this.$1$RelativeSourceField = null;
		this.$1$ElementNameField = null;
		this.$1$ModeField = 0;
		this.$1$UpdateSourceTriggerField = 0;
		this.$1$StringFormatField = null;
		this.$1$ConverterField = null;
		this.$1$ConverterParameterField = null;
		this.$1$FallbackValueField = null;
		this.$1$TargetNullValueField = null;
	};
	$System_Windows_Data_Binding.__typeName = 'System.Windows.Data.Binding';
	$System_Windows_Data_Binding.$GetDataContextRelativePath = function(path, source, relativeSource, elementName) {
		if (ss.isValue(source) || ss.isValue(relativeSource) || !Granular.Extensions.StringExtensions.IsNullOrEmpty(elementName)) {
			return path;
		}
		return $System_Windows_PropertyPathExtensions.Insert(path, 0, new $System_Windows_DependencyPropertyPathElement($System_Windows_FrameworkElement.DataContextProperty));
	};
	$System_Windows_Data_Binding.$GetStringFormatConverter = function(format) {
		return (!Granular.Extensions.StringExtensions.IsNullOrEmpty(format) ? new $System_$Windows_Data_Binding$StringFormatConverter(format) : null);
	};
	global.System.Windows.Data.Binding = $System_Windows_Data_Binding;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Data.BindingExpression
	var $System_Windows_Data_BindingExpression = function(target, targetProperty, path, source, relativeSource, elementName, mode, updateSourceTrigger, converter, converterParameter, fallbackValue, targetNullValue) {
		this.$1$ValueChangedField = null;
		this.$1$TargetField = null;
		this.$1$TargetPropertyField = null;
		this.$1$PathField = null;
		this.$1$SourceField = null;
		this.$1$RelativeSourceField = null;
		this.$1$ElementNameField = null;
		this.$1$ModeField = 0;
		this.$1$UpdateSourceTriggerField = 0;
		this.$1$ConverterField = null;
		this.$1$ConverterParameterField = null;
		this.$1$FallbackValueField = null;
		this.$1$TargetNullValueField = null;
		this.$1$StatusField = 0;
		this.$sourceExpression = null;
		this.$targetValue = null;
		this.$isSourceUpdateMode = false;
		this.$isTargetUpdateMode = false;
		this.$disableSourceUpdate = null;
		this.$disableTargetUpdate = null;
		this.set_Target(target);
		this.set_TargetProperty(targetProperty);
		this.set_Path(path);
		this.set_Source(source);
		this.set_RelativeSource(relativeSource);
		this.set_ElementName(elementName);
		this.set_Mode(mode);
		this.set_UpdateSourceTrigger(updateSourceTrigger);
		this.set_Converter(converter);
		this.set_ConverterParameter(converterParameter);
		this.set_FallbackValue(fallbackValue);
		this.set_TargetNullValue(targetNullValue);
		this.set_Status(0);
		this.$disableSourceUpdate = new $System_Windows_ReentrancyLock();
		this.$disableTargetUpdate = new $System_Windows_ReentrancyLock();
		this.$targetValue = new $System_Windows_Data_ObservableValue.$ctor1(this.get_Target().GetValue(this.get_TargetProperty()));
		this.$targetValue.add_ValueChanged(ss.mkdel(this, this.$OnTargetValueChanged));
		var resolvedBindingMode = ((this.get_Mode() === 3) ? $System_Windows_Data_BindingExpression.$GetDefaultBindingMode(this.get_Target(), this.get_TargetProperty()) : this.get_Mode());
		this.$isSourceUpdateMode = resolvedBindingMode === 0 || resolvedBindingMode === 2;
		this.$isTargetUpdateMode = resolvedBindingMode === 0 || resolvedBindingMode === 1;
		var $t1 = this.get_Source();
		if (ss.isNullOrUndefined($t1)) {
			$t1 = $System_Windows_Data_BindingExpression.$GetRelativeSource(this.get_Target(), this.get_RelativeSource(), this.get_ElementName());
		}
		var resolvedSource = $t1;
		this.$sourceExpression = new $System_Windows_Data_ObservableExpression.$ctor3(resolvedSource, this.get_Path());
		// try to update the target (or the source on OneWayToSource)
		if (this.$isTargetUpdateMode) {
			this.$sourceExpression.add_ValueChanged(ss.mkdel(this, function(sender, e) {
				this.$UpdateTargetOnSourceChanged();
			}));
			this.$UpdateTargetOnSourceChanged();
		}
		else if (this.$isSourceUpdateMode) {
			this.$sourceExpression.add_ValueChanged(ss.mkdel(this, function(sender1, e1) {
				if (this.get_Status() === 4 && !ss.referenceEquals(this.$sourceExpression.get_Value(), $System_Windows_Data_ObservableValue.UnsetValue) && !$System_Windows_ReentrancyLock.op_Implicit(this.$disableTargetUpdate)) {
					// source was connected
					this.$UpdateSourceOnTargetChanged();
				}
			}));
			this.$UpdateSourceOnTargetChanged();
		}
		if ((ss.isValue(this.get_RelativeSource()) && this.get_RelativeSource().get_Mode() !== 1 || !Granular.Extensions.StringExtensions.IsNullOrEmpty(this.get_ElementName())) && ss.isInstanceOfType(this.get_Target(), $System_Windows_Media_Visual)) {
			ss.cast(this.get_Target(), $System_Windows_Media_Visual).add_VisualAncestorChanged(ss.mkdel(this, this.$OnTargetVisualAncestorChanged));
		}
		if (this.get_UpdateSourceTrigger() === 2 && this.$isSourceUpdateMode && ss.isInstanceOfType(this.get_Target(), $System_Windows_UIElement)) {
			ss.cast(this.get_Target(), $System_Windows_UIElement).add_LostFocus(ss.mkdel(this, this.$OnLostFocus));
		}
	};
	$System_Windows_Data_BindingExpression.__typeName = 'System.Windows.Data.BindingExpression';
	$System_Windows_Data_BindingExpression.$GetRelativeSource = function(target, relativeSource, elementName) {
		if (!Granular.Extensions.StringExtensions.IsNullOrEmpty(elementName)) {
			var nameScope = $System_Windows_Markup_NameScope.GetContainingNameScope(target);
			return (ss.isValue(nameScope) ? nameScope.FindName(elementName) : null);
		}
		if (ss.isNullOrUndefined(relativeSource) || relativeSource.get_Mode() === 1) {
			return target;
		}
		if (relativeSource.get_Mode() === 0) {
			return (ss.isInstanceOfType(target, $System_Windows_FrameworkElement) ? ss.cast(target, $System_Windows_FrameworkElement).get_TemplatedParent() : null);
		}
		if (relativeSource.get_Mode() === 2) {
			if (!ss.isInstanceOfType(target, $System_Windows_Media_Visual)) {
				return null;
			}
			var visual = ss.safeCast(target, $System_Windows_Media_Visual).get_VisualParent();
			var level = relativeSource.get_AncestorLevel() - 1;
			while (ss.isValue(visual) && (level > 0 || ss.isValue(relativeSource.get_AncestorType()) && !ss.isInstanceOfType(visual, relativeSource.get_AncestorType()))) {
				if (ss.isNullOrUndefined(relativeSource.get_AncestorType()) || ss.isInstanceOfType(visual, relativeSource.get_AncestorType())) {
					level--;
				}
				visual = visual.get_VisualParent();
			}
			return visual;
		}
		throw new Granular.Exception('RelativeSourceMode "{0}" is unexpected', [relativeSource.get_Mode()]);
	};
	$System_Windows_Data_BindingExpression.$GetDefaultBindingMode = function(dependencyObject, dependencyProperty) {
		var frameworkPropertyMetadata = ss.safeCast(dependencyProperty.GetMetadata(ss.getInstanceType(dependencyObject)), $System_Windows_FrameworkPropertyMetadata);
		return ((ss.isValue(frameworkPropertyMetadata) && frameworkPropertyMetadata.get_BindsTwoWayByDefault()) ? 0 : 1);
	};
	global.System.Windows.Data.BindingExpression = $System_Windows_Data_BindingExpression;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Data.BindingMode
	var $System_Windows_Data_BindingMode = function() {
	};
	$System_Windows_Data_BindingMode.__typeName = 'System.Windows.Data.BindingMode';
	global.System.Windows.Data.BindingMode = $System_Windows_Data_BindingMode;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Data.BindingStatus
	var $System_Windows_Data_BindingStatus = function() {
	};
	$System_Windows_Data_BindingStatus.__typeName = 'System.Windows.Data.BindingStatus';
	global.System.Windows.Data.BindingStatus = $System_Windows_Data_BindingStatus;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Data.ClrPropertyObserver
	var $System_Windows_Data_ClrPropertyObserver = function(propertyInfo, index) {
		this.$1$ValueChangedField = null;
		this.$observableValue = null;
		this.$propertyInfo = null;
		this.$propertyGetMethod = null;
		this.$propertySetMethod = null;
		this.$index = null;
		this.$currentPropertyNotifier = null;
		this.$currentCollectionNotifier = null;
		this.$baseValue = null;
		this.$propertyInfo = propertyInfo;
		this.$propertyGetMethod = System.Reflection.PropertyInfoExtensions.GetGetMethod(propertyInfo);
		this.$propertySetMethod = System.Reflection.PropertyInfoExtensions.GetSetMethod(propertyInfo);
		this.$index = index;
		this.$observableValue = new $System_Windows_Data_ObservableValue();
		this.$observableValue.add_ValueChanged(ss.mkdel(this, function(sender, e) {
			Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_Data_ObservableValueChangedArgs).call(null, this.$1$ValueChangedField, this, e);
		}));
	};
	$System_Windows_Data_ClrPropertyObserver.__typeName = 'System.Windows.Data.ClrPropertyObserver';
	global.System.Windows.Data.ClrPropertyObserver = $System_Windows_Data_ClrPropertyObserver;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Data.CollectionView
	var $System_Windows_Data_CollectionView = function(source) {
		this.$1$CollectionChangedField = null;
		this.$1$CurrentChangedField = null;
		this.$1$SourceCollectionField = null;
		this.$currentItem = null;
		this.$currentItemIndex = 0;
		this.$filterPredicate = null;
		this.$sortKeySelector = null;
		this.$sortDirection = 0;
		this.$innerCollection = null;
		this.set_SourceCollection(source);
		this.$currentItemIndex = -1;
		if (ss.isInstanceOfType(this.get_SourceCollection(), Granular.Collections.INotifyCollectionChanged)) {
			ss.cast(this.get_SourceCollection(), Granular.Collections.INotifyCollectionChanged).add_CollectionChanged(ss.mkdel(this, this.$OnSourceCollectionChanged));
		}
		this.$ResetInnerCollection();
	};
	$System_Windows_Data_CollectionView.__typeName = 'System.Windows.Data.CollectionView';
	$System_Windows_Data_CollectionView.$TranslateCollection = function(source, filterPredicate, sortKeySelector, sortDirection) {
		var collection = source;
		if (!ss.staticEquals(filterPredicate, null)) {
			collection = Enumerable.from(collection).where(filterPredicate);
		}
		if (!ss.staticEquals(sortKeySelector, null)) {
			collection = ((sortDirection === 0) ? Enumerable.from(collection).orderBy(sortKeySelector) : Enumerable.from(collection).orderByDescending(sortKeySelector));
		}
		return collection;
	};
	global.System.Windows.Data.CollectionView = $System_Windows_Data_CollectionView;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Data.ConstantObservableValue
	var $System_Windows_Data_ConstantObservableValue = function(value) {
		this.$1$ValueField = null;
		this.set_Value(value);
	};
	$System_Windows_Data_ConstantObservableValue.__typeName = 'System.Windows.Data.ConstantObservableValue';
	global.System.Windows.Data.ConstantObservableValue = $System_Windows_Data_ConstantObservableValue;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Data.DependencyPropertyObserver
	var $System_Windows_Data_DependencyPropertyObserver = function(dependencyProperty) {
		this.$1$ValueChangedField = null;
		this.$observableValue = null;
		this.$dependencyProperty = null;
		this.$currentDependencyObject = null;
		this.$baseValue = null;
		this.$dependencyProperty = dependencyProperty;
		this.$observableValue = new $System_Windows_Data_ObservableValue();
		this.$observableValue.add_ValueChanged(ss.mkdel(this, function(sender, e) {
			Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_Data_ObservableValueChangedArgs).call(null, this.$1$ValueChangedField, this, e);
		}));
	};
	$System_Windows_Data_DependencyPropertyObserver.__typeName = 'System.Windows.Data.DependencyPropertyObserver';
	global.System.Windows.Data.DependencyPropertyObserver = $System_Windows_Data_DependencyPropertyObserver;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Data.ICollectionView
	var $System_Windows_Data_ICollectionView = function() {
	};
	$System_Windows_Data_ICollectionView.__typeName = 'System.Windows.Data.ICollectionView';
	global.System.Windows.Data.ICollectionView = $System_Windows_Data_ICollectionView;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Data.IndexPropertyObserver
	var $System_Windows_Data_IndexPropertyObserver = function(propertyContainingType, propertyPathElement, namespaces) {
		this.$1$ValueChangedField = null;
		this.$baseObserver = null;
		this.$indexerObserver = null;
		this.$baseObserver = $System_Windows_Data_IndexPropertyObserver.$CreateBaseObserver(propertyContainingType, propertyPathElement.get_PropertyName());
		var indexPropertyInfo = (ss.isValue(this.$baseObserver) ? Granular.Extensions.TypeExtensions.GetDefaultIndexProperty(this.$baseObserver.get_ValueType()) : (propertyPathElement.get_PropertyName().get_IsEmpty() ? Granular.Extensions.TypeExtensions.GetDefaultIndexProperty(propertyContainingType) : Granular.Extensions.TypeExtensions.GetInstanceProperty(propertyContainingType, propertyPathElement.get_PropertyName().get_MemberName())));
		if (ss.isNullOrUndefined(indexPropertyInfo)) {
			throw new Granular.Exception('Property "{0}.{1}" does not have an indexer', [ss.getTypeName(propertyContainingType), propertyPathElement.get_PropertyName().get_MemberName()]);
		}
		if (Enumerable.from(System.Reflection.ParameterInfoExtensions.GetIndexParameters(indexPropertyInfo)).count() !== Enumerable.from(propertyPathElement.get_IndexRawValues()).count()) {
			throw new Granular.Exception('Invalid number of index parameters for "{0}.{1}"', [ss.getTypeName(indexPropertyInfo.typeDef), indexPropertyInfo.name]);
		}
		this.$indexerObserver = new $System_Windows_Data_ClrPropertyObserver(indexPropertyInfo, propertyPathElement.ParseIndexValues(indexPropertyInfo));
		this.$indexerObserver.add_ValueChanged(ss.mkdel(this, function(sender, e) {
			Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_Data_ObservableValueChangedArgs).call(null, this.$1$ValueChangedField, this, e);
		}));
		if (ss.isValue(this.$baseObserver)) {
			this.$baseObserver.add_ValueChanged(ss.mkdel(this, function(sender1, e1) {
				this.$indexerObserver.SetBaseValue(this.$baseObserver.get_Value());
			}));
			this.$indexerObserver.SetBaseValue(this.$baseObserver.get_Value());
		}
	};
	$System_Windows_Data_IndexPropertyObserver.__typeName = 'System.Windows.Data.IndexPropertyObserver';
	$System_Windows_Data_IndexPropertyObserver.$CreateBaseObserver = function(propertyContainingType, propertyName) {
		if (propertyName.get_IsEmpty()) {
			return null;
		}
		var dependencyProperty = $System_Windows_DependencyProperty.GetProperty(propertyContainingType, propertyName);
		if (ss.isValue(dependencyProperty)) {
			return new $System_Windows_Data_DependencyPropertyObserver(dependencyProperty);
		}
		var propertyInfo = Granular.Extensions.TypeExtensions.GetInstanceProperty(propertyContainingType, propertyName.get_MemberName());
		if (ss.isValue(propertyInfo) && !Enumerable.from(System.Reflection.ParameterInfoExtensions.GetIndexParameters(propertyInfo)).any()) {
			return new $System_Windows_Data_ClrPropertyObserver(propertyInfo, []);
		}
		return null;
	};
	global.System.Windows.Data.IndexPropertyObserver = $System_Windows_Data_IndexPropertyObserver;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Data.IObservableValue
	var $System_Windows_Data_IObservableValue = function() {
	};
	$System_Windows_Data_IObservableValue.__typeName = 'System.Windows.Data.IObservableValue';
	global.System.Windows.Data.IObservableValue = $System_Windows_Data_IObservableValue;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Data.IPropertyObserver
	var $System_Windows_Data_IPropertyObserver = function() {
	};
	$System_Windows_Data_IPropertyObserver.__typeName = 'System.Windows.Data.IPropertyObserver';
	global.System.Windows.Data.IPropertyObserver = $System_Windows_Data_IPropertyObserver;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Data.IValueConverter
	var $System_Windows_Data_IValueConverter = function() {
	};
	$System_Windows_Data_IValueConverter.__typeName = 'System.Windows.Data.IValueConverter';
	global.System.Windows.Data.IValueConverter = $System_Windows_Data_IValueConverter;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Data.ListSortDirection
	var $System_Windows_Data_ListSortDirection = function() {
	};
	$System_Windows_Data_ListSortDirection.__typeName = 'System.Windows.Data.ListSortDirection';
	global.System.Windows.Data.ListSortDirection = $System_Windows_Data_ListSortDirection;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Data.NamedObject
	var $System_Windows_Data_NamedObject = function(name) {
		this.$name = null;
		this.$name = name;
	};
	$System_Windows_Data_NamedObject.__typeName = 'System.Windows.Data.NamedObject';
	global.System.Windows.Data.NamedObject = $System_Windows_Data_NamedObject;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Data.ObservableExpression
	var $System_Windows_Data_ObservableExpression = function(propertyPath) {
		$System_Windows_Data_ObservableExpression.$ctor3.call(this, null, $System_Windows_PropertyPath.Parse(propertyPath, null));
		//
	};
	$System_Windows_Data_ObservableExpression.__typeName = 'System.Windows.Data.ObservableExpression';
	$System_Windows_Data_ObservableExpression.$ctor2 = function(baseValue, propertyPath) {
		$System_Windows_Data_ObservableExpression.$ctor3.call(this, baseValue, $System_Windows_PropertyPath.Parse(propertyPath, null));
		//
	};
	$System_Windows_Data_ObservableExpression.$ctor1 = function(propertyPath) {
		$System_Windows_Data_ObservableExpression.$ctor3.call(this, null, propertyPath);
		//
	};
	$System_Windows_Data_ObservableExpression.$ctor3 = function(baseValue, propertyPath) {
		this.$1$ValueChangedField = null;
		this.$1$ValueTypeField = null;
		this.$observableValue = null;
		this.$baseObserverValueType = null;
		this.$baseObserver = null;
		this.$delegateObserver = null;
		this.$propertyPathElement = null;
		this.$observableValue = new $System_Windows_Data_ObservableValue();
		this.$observableValue.add_ValueChanged(ss.mkdel(this, function(sender, e) {
			Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_Data_ObservableValueChangedArgs).call(null, this.$1$ValueChangedField, this, e);
		}));
		if (propertyPath.get_IsEmpty()) {
			this.$observableValue.set_Value(baseValue);
			this.set_ValueType((ss.isValue(baseValue) ? ss.getInstanceType(baseValue) : null));
		}
		else {
			this.$propertyPathElement = Enumerable.from(propertyPath.get_Elements()).last();
			this.$baseObserver = new $System_Windows_Data_ObservableExpression.$ctor3(baseValue, $System_Windows_PropertyPathExtensions.GetBasePropertyPath(propertyPath));
			this.$baseObserver.add_ValueChanged(ss.mkdel(this, function(sender1, e1) {
				this.$SetDelegateObserverBaseValue();
			}));
			this.$SetDelegateObserverBaseValue();
		}
	};
	global.System.Windows.Data.ObservableExpression = $System_Windows_Data_ObservableExpression;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Data.ObservableValue
	var $System_Windows_Data_ObservableValue = function() {
		$System_Windows_Data_ObservableValue.$ctor1.call(this, $System_Windows_Data_ObservableValue.UnsetValue);
		//
	};
	$System_Windows_Data_ObservableValue.__typeName = 'System.Windows.Data.ObservableValue';
	$System_Windows_Data_ObservableValue.$ctor1 = function(value) {
		this.$1$ValueChangedField = null;
		this.$value = null;
		this.set_Value(value);
	};
	$System_Windows_Data_ObservableValue.IsNullOrUnset = function(value) {
		return ss.isNullOrUndefined(value) || ss.referenceEquals(value, $System_Windows_Data_ObservableValue.UnsetValue);
	};
	global.System.Windows.Data.ObservableValue = $System_Windows_Data_ObservableValue;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Data.ObservableValueChangedArgs
	var $System_Windows_Data_ObservableValueChangedArgs = function(oldValue, newValue) {
		this.$2$NewValueField = null;
		this.$2$OldValueField = null;
		ss.EventArgs.call(this);
		this.set_OldValue(oldValue);
		this.set_NewValue(newValue);
	};
	$System_Windows_Data_ObservableValueChangedArgs.__typeName = 'System.Windows.Data.ObservableValueChangedArgs';
	global.System.Windows.Data.ObservableValueChangedArgs = $System_Windows_Data_ObservableValueChangedArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Data.ReadOnlyObservableValue
	var $System_Windows_Data_ReadOnlyObservableValue = function(source) {
		this.$1$ValueChangedField = null;
		this.$source = null;
		this.$source = source;
		source.add_ValueChanged(ss.mkdel(this, function(sender, e) {
			Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_Data_ObservableValueChangedArgs).call(null, this.$1$ValueChangedField, this, e);
		}));
	};
	$System_Windows_Data_ReadOnlyObservableValue.__typeName = 'System.Windows.Data.ReadOnlyObservableValue';
	global.System.Windows.Data.ReadOnlyObservableValue = $System_Windows_Data_ReadOnlyObservableValue;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Data.RelativeSource
	var $System_Windows_Data_RelativeSource = function() {
		this.$1$ModeField = 0;
		this.$1$AncestorLevelField = 0;
		this.$1$AncestorTypeField = null;
	};
	$System_Windows_Data_RelativeSource.__typeName = 'System.Windows.Data.RelativeSource';
	global.System.Windows.Data.RelativeSource = $System_Windows_Data_RelativeSource;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Data.RelativeSourceMode
	var $System_Windows_Data_RelativeSourceMode = function() {
	};
	$System_Windows_Data_RelativeSourceMode.__typeName = 'System.Windows.Data.RelativeSourceMode';
	global.System.Windows.Data.RelativeSourceMode = $System_Windows_Data_RelativeSourceMode;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Data.TemplateBindingExtension
	var $System_Windows_Data_TemplateBindingExtension = function() {
		this.$1$PropertyField = null;
		this.$1$ConverterField = null;
		this.$1$ConverterParameterField = null;
	};
	$System_Windows_Data_TemplateBindingExtension.__typeName = 'System.Windows.Data.TemplateBindingExtension';
	global.System.Windows.Data.TemplateBindingExtension = $System_Windows_Data_TemplateBindingExtension;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Data.UpdateSourceTrigger
	var $System_Windows_Data_UpdateSourceTrigger = function() {
	};
	$System_Windows_Data_UpdateSourceTrigger.__typeName = 'System.Windows.Data.UpdateSourceTrigger';
	global.System.Windows.Data.UpdateSourceTrigger = $System_Windows_Data_UpdateSourceTrigger;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.Cursor
	var $System_Windows_Input_Cursor = function(cursorType) {
		$System_Windows_Input_Cursor.$ctor2.call(this, cursorType, null, null);
		//
	};
	$System_Windows_Input_Cursor.__typeName = 'System.Windows.Input.Cursor';
	$System_Windows_Input_Cursor.$ctor1 = function(imageSource, hotspot) {
		$System_Windows_Input_Cursor.$ctor2.call(this, 0, imageSource, hotspot);
		//
	};
	$System_Windows_Input_Cursor.$ctor2 = function(cursorType, imageSource, hotspot) {
		this.$1$CursorTypeField = 0;
		this.$1$ImageSourceField = null;
		this.$1$HotspotField = null;
		this.set_CursorType(cursorType);
		this.set_ImageSource(imageSource);
		this.set_Hotspot(hotspot);
	};
	global.System.Windows.Input.Cursor = $System_Windows_Input_Cursor;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.Cursors
	var $System_Windows_Input_Cursors = function() {
	};
	$System_Windows_Input_Cursors.__typeName = 'System.Windows.Input.Cursors';
	$System_Windows_Input_Cursors.get_None = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(0);
	};
	$System_Windows_Input_Cursors.get_No = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(1);
	};
	$System_Windows_Input_Cursors.get_Arrow = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(2);
	};
	$System_Windows_Input_Cursors.get_AppStarting = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(3);
	};
	$System_Windows_Input_Cursors.get_Cross = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(4);
	};
	$System_Windows_Input_Cursors.get_Help = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(5);
	};
	$System_Windows_Input_Cursors.get_IBeam = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(6);
	};
	$System_Windows_Input_Cursors.get_SizeAll = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(7);
	};
	$System_Windows_Input_Cursors.get_SizeNESW = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(8);
	};
	$System_Windows_Input_Cursors.get_SizeNS = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(9);
	};
	$System_Windows_Input_Cursors.get_SizeNWSE = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(10);
	};
	$System_Windows_Input_Cursors.get_SizeWE = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(11);
	};
	$System_Windows_Input_Cursors.get_UpArrow = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(12);
	};
	$System_Windows_Input_Cursors.get_Wait = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(13);
	};
	$System_Windows_Input_Cursors.get_Hand = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(14);
	};
	$System_Windows_Input_Cursors.get_Pen = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(15);
	};
	$System_Windows_Input_Cursors.get_ScrollNS = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(16);
	};
	$System_Windows_Input_Cursors.get_ScrollWE = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(17);
	};
	$System_Windows_Input_Cursors.get_ScrollAll = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(18);
	};
	$System_Windows_Input_Cursors.get_ScrollN = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(19);
	};
	$System_Windows_Input_Cursors.get_ScrollS = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(20);
	};
	$System_Windows_Input_Cursors.get_ScrollW = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(21);
	};
	$System_Windows_Input_Cursors.get_ScrollE = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(22);
	};
	$System_Windows_Input_Cursors.get_ScrollNW = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(23);
	};
	$System_Windows_Input_Cursors.get_ScrollNE = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(24);
	};
	$System_Windows_Input_Cursors.get_ScrollSW = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(25);
	};
	$System_Windows_Input_Cursors.get_ScrollSE = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(26);
	};
	$System_Windows_Input_Cursors.get_ArrowCD = function() {
		return $System_Windows_Input_Cursors.$cursors.GetValue(27);
	};
	global.System.Windows.Input.Cursors = $System_Windows_Input_Cursors;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.CursorType
	var $System_Windows_Input_CursorType = function() {
	};
	$System_Windows_Input_CursorType.__typeName = 'System.Windows.Input.CursorType';
	global.System.Windows.Input.CursorType = $System_Windows_Input_CursorType;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.CursorTypeConverter
	var $System_Windows_Input_CursorTypeConverter = function() {
	};
	$System_Windows_Input_CursorTypeConverter.__typeName = 'System.Windows.Input.CursorTypeConverter';
	global.System.Windows.Input.CursorTypeConverter = $System_Windows_Input_CursorTypeConverter;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.FocusManager
	var $System_Windows_Input_FocusManager = function() {
	};
	$System_Windows_Input_FocusManager.__typeName = 'System.Windows.Input.FocusManager';
	$System_Windows_Input_FocusManager.GetFocusedElement = function(obj) {
		return ss.cast(obj.GetValue($System_Windows_Input_FocusManager.FocusedElementProperty), $System_Windows_IInputElement);
	};
	$System_Windows_Input_FocusManager.SetFocusedElement = function(obj, value) {
		obj.SetValue($System_Windows_Input_FocusManager.FocusedElementProperty, value, 11);
	};
	$System_Windows_Input_FocusManager.GetIsFocusScope = function(obj) {
		return ss.unbox(ss.cast(obj.GetValue($System_Windows_Input_FocusManager.IsFocusScopeProperty), Boolean));
	};
	$System_Windows_Input_FocusManager.SetIsFocusScope = function(obj, value) {
		obj.SetValue($System_Windows_Input_FocusManager.IsFocusScopeProperty, value, 11);
	};
	$System_Windows_Input_FocusManager.GetFocusScope = function(element) {
		while (ss.isValue(element) && !$System_Windows_Input_FocusManager.GetIsFocusScope(element)) {
			element = ss.cast(element.get_LogicalParent() || element.get_VisualParent(), $System_Windows_UIElement);
		}
		return element;
	};
	$System_Windows_Input_FocusManager.Focus = function(element) {
		if (!element.get_Focusable()) {
			return null;
		}
		var focusScope = $System_Windows_Input_FocusManager.GetFocusScope(element);
		if (ss.isValue(focusScope)) {
			$System_Windows_Input_FocusManager.SetFocusedElement(focusScope, element);
			return new $System_Windows_Disposable(function() {
				if (ss.referenceEquals($System_Windows_Input_FocusManager.GetFocusedElement(focusScope), element)) {
					$System_Windows_Input_FocusManager.SetFocusedElement(focusScope, null);
				}
			});
		}
		return null;
	};
	$System_Windows_Input_FocusManager.$OnFocusedElementChanged = function(d, e) {
		var oldElement = ss.cast(e.get_OldValue(), $System_Windows_FrameworkElement);
		var newElement = ss.cast(e.get_NewValue(), $System_Windows_FrameworkElement);
		if (ss.isValue(oldElement)) {
			oldElement.RaiseEvent(new $System_Windows_RoutedEventArgs($System_Windows_Input_FocusManager.LostFocusEvent, oldElement));
		}
		if (ss.isValue(newElement)) {
			newElement.RaiseEvent(new $System_Windows_RoutedEventArgs($System_Windows_Input_FocusManager.GotFocusEvent, newElement));
		}
	};
	global.System.Windows.Input.FocusManager = $System_Windows_Input_FocusManager;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.FocusNavigationDirection
	var $System_Windows_Input_FocusNavigationDirection = function() {
	};
	$System_Windows_Input_FocusNavigationDirection.__typeName = 'System.Windows.Input.FocusNavigationDirection';
	global.System.Windows.Input.FocusNavigationDirection = $System_Windows_Input_FocusNavigationDirection;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.IInputDevice
	var $System_Windows_Input_IInputDevice = function() {
	};
	$System_Windows_Input_IInputDevice.__typeName = 'System.Windows.Input.IInputDevice';
	global.System.Windows.Input.IInputDevice = $System_Windows_Input_IInputDevice;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.InputEventArgs
	var $System_Windows_Input_InputEventArgs = function(routedEvent, originalSource, inputDevice, timestamp) {
		this.$3$DeviceField = null;
		this.$3$TimestampField = 0;
		$System_Windows_RoutedEventArgs.call(this, routedEvent, originalSource);
		this.set_Device(inputDevice);
		this.set_Timestamp(timestamp);
	};
	$System_Windows_Input_InputEventArgs.__typeName = 'System.Windows.Input.InputEventArgs';
	global.System.Windows.Input.InputEventArgs = $System_Windows_Input_InputEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.Key
	var $System_Windows_Input_Key = function() {
	};
	$System_Windows_Input_Key.__typeName = 'System.Windows.Input.Key';
	global.System.Windows.Input.Key = $System_Windows_Input_Key;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.Keyboard
	var $System_Windows_Input_Keyboard = function() {
	};
	$System_Windows_Input_Keyboard.__typeName = 'System.Windows.Input.Keyboard';
	$System_Windows_Input_Keyboard.Focus = function(element) {
		var keyboardDevice = $System_Windows_ApplicationHostExtensions.GetKeyboardDeviceFromElement($System_Windows_ApplicationHost.get_Current(), ss.cast(element, $System_Windows_FrameworkElement));
		return (ss.isValue(keyboardDevice) ? keyboardDevice.Focus(element) : null);
	};
	global.System.Windows.Input.Keyboard = $System_Windows_Input_Keyboard;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyboardDevice
	var $System_Windows_Input_KeyboardDevice = function(presentationSource) {
		this.$1$PreProcessKeyField = null;
		this.$1$PostProcessKeyField = null;
		this.$1$TargetChangedField = null;
		this.$target = null;
		this.$downKeys = null;
		this.$presentationSource = null;
		this.$presentationSource = presentationSource;
		this.$downKeys = new (ss.makeGenericType(System.Collections.Generic.HashSet$1, [$System_Windows_Input_Key]))();
	};
	$System_Windows_Input_KeyboardDevice.__typeName = 'System.Windows.Input.KeyboardDevice';
	global.System.Windows.Input.KeyboardDevice = $System_Windows_Input_KeyboardDevice;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyboardEventArgs
	var $System_Windows_Input_KeyboardEventArgs = function(routedEvent, originalSource, keyboardDevice, timestamp) {
		this.$4$KeyboardDeviceField = null;
		$System_Windows_Input_InputEventArgs.call(this, routedEvent, originalSource, keyboardDevice, timestamp);
		this.set_KeyboardDevice(keyboardDevice);
	};
	$System_Windows_Input_KeyboardEventArgs.__typeName = 'System.Windows.Input.KeyboardEventArgs';
	global.System.Windows.Input.KeyboardEventArgs = $System_Windows_Input_KeyboardEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyboardFocusChangedEventArgs
	var $System_Windows_Input_KeyboardFocusChangedEventArgs = function(routedEvent, originalSource, keyboardDevice, timestamp, oldFocus, newFocus) {
		this.$5$OldFocusField = null;
		this.$5$NewFocusField = null;
		$System_Windows_Input_KeyboardEventArgs.call(this, routedEvent, originalSource, keyboardDevice, timestamp);
		this.set_OldFocus(oldFocus);
		this.set_NewFocus(newFocus);
	};
	$System_Windows_Input_KeyboardFocusChangedEventArgs.__typeName = 'System.Windows.Input.KeyboardFocusChangedEventArgs';
	global.System.Windows.Input.KeyboardFocusChangedEventArgs = $System_Windows_Input_KeyboardFocusChangedEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyboardNavigation
	var $System_Windows_Input_KeyboardNavigation = function(presentationSource) {
		this.$presentationSource = null;
		this.$focusVisualAdorner = null;
		this.$presentationSource = presentationSource;
		presentationSource.get_KeyboardDevice().add_TargetChanged(ss.mkdel(this, this.$OnTargetChanged));
		presentationSource.get_KeyboardDevice().add_PostProcessKey(ss.mkdel(this, this.$OnPostProcessKey));
	};
	$System_Windows_Input_KeyboardNavigation.__typeName = 'System.Windows.Input.KeyboardNavigation';
	$System_Windows_Input_KeyboardNavigation.GetTabNavigation = function(obj) {
		return ss.cast(obj.GetValue($System_Windows_Input_KeyboardNavigation.TabNavigationProperty), ss.Int32);
	};
	$System_Windows_Input_KeyboardNavigation.SetTabNavigation = function(obj, value) {
		obj.SetValue($System_Windows_Input_KeyboardNavigation.TabNavigationProperty, value, 11);
	};
	$System_Windows_Input_KeyboardNavigation.GetControlTabNavigation = function(obj) {
		return ss.cast(obj.GetValue($System_Windows_Input_KeyboardNavigation.ControlTabNavigationProperty), ss.Int32);
	};
	$System_Windows_Input_KeyboardNavigation.SetControlTabNavigation = function(obj, value) {
		obj.SetValue($System_Windows_Input_KeyboardNavigation.ControlTabNavigationProperty, value, 11);
	};
	$System_Windows_Input_KeyboardNavigation.GetDirectionalNavigation = function(obj) {
		return ss.cast(obj.GetValue($System_Windows_Input_KeyboardNavigation.DirectionalNavigationProperty), ss.Int32);
	};
	$System_Windows_Input_KeyboardNavigation.SetDirectionalNavigation = function(obj, value) {
		obj.SetValue($System_Windows_Input_KeyboardNavigation.DirectionalNavigationProperty, value, 11);
	};
	$System_Windows_Input_KeyboardNavigation.GetIsTabStop = function(obj) {
		return ss.unbox(ss.cast(obj.GetValue($System_Windows_Input_KeyboardNavigation.IsTabStopProperty), Boolean));
	};
	$System_Windows_Input_KeyboardNavigation.SetIsTabStop = function(obj, value) {
		obj.SetValue($System_Windows_Input_KeyboardNavigation.IsTabStopProperty, value, 11);
	};
	$System_Windows_Input_KeyboardNavigation.GetTabIndex = function(obj) {
		return ss.unbox(ss.cast(obj.GetValue($System_Windows_Input_KeyboardNavigation.TabIndexProperty), ss.Int32));
	};
	$System_Windows_Input_KeyboardNavigation.SetTabIndex = function(obj, value) {
		obj.SetValue($System_Windows_Input_KeyboardNavigation.TabIndexProperty, value, 11);
	};
	$System_Windows_Input_KeyboardNavigation.GetNavigationFocusElement = function(obj) {
		return ss.cast(obj.GetValue($System_Windows_Input_KeyboardNavigation.NavigationFocusElementProperty), $System_Windows_Media_VisualWeakReference);
	};
	$System_Windows_Input_KeyboardNavigation.SetNavigationFocusElement = function(obj, value) {
		obj.SetValue($System_Windows_Input_KeyboardNavigation.NavigationFocusElementProperty, value, 11);
	};
	$System_Windows_Input_KeyboardNavigation.$TryGetNavigationMode = function(e, navigationModeProperty, navigationDirection) {
		navigationModeProperty.$ = null;
		navigationDirection.$ = 0;
		if (!e.get_IsDown()) {
			return false;
		}
		if (e.get_Key() === 3) {
			navigationModeProperty.$ = (((e.get_KeyboardDevice().get_Modifiers() & 2) === 0) ? $System_Windows_Input_KeyboardNavigation.TabNavigationProperty : $System_Windows_Input_KeyboardNavigation.ControlTabNavigationProperty);
			navigationDirection.$ = (((e.get_KeyboardDevice().get_Modifiers() & 4) === 0) ? 0 : 1);
			return true;
		}
		if (e.get_Key() === 23) {
			navigationModeProperty.$ = $System_Windows_Input_KeyboardNavigation.DirectionalNavigationProperty;
			navigationDirection.$ = 4;
			return true;
		}
		if (e.get_Key() === 25) {
			navigationModeProperty.$ = $System_Windows_Input_KeyboardNavigation.DirectionalNavigationProperty;
			navigationDirection.$ = 5;
			return true;
		}
		if (e.get_Key() === 24) {
			navigationModeProperty.$ = $System_Windows_Input_KeyboardNavigation.DirectionalNavigationProperty;
			navigationDirection.$ = 6;
			return true;
		}
		if (e.get_Key() === 26) {
			navigationModeProperty.$ = $System_Windows_Input_KeyboardNavigation.DirectionalNavigationProperty;
			navigationDirection.$ = 7;
			return true;
		}
		return false;
	};
	$System_Windows_Input_KeyboardNavigation.$SetNavigationFocusElement = function(focusedElement) {
		var navigationScope = $System_Windows_Input_KeyboardNavigation.$GetNavigationScope(focusedElement);
		if (ss.isValue(navigationScope)) {
			var visualWeakReference = $System_Windows_Input_KeyboardNavigation.GetNavigationFocusElement(focusedElement);
			$System_Windows_Input_KeyboardNavigation.SetNavigationFocusElement(navigationScope, new $System_Windows_Media_VisualWeakReference(focusedElement, navigationScope));
		}
	};
	$System_Windows_Input_KeyboardNavigation.$IsNavigationScope = function(keyboardNavigationMode) {
		return keyboardNavigationMode === 1;
	};
	$System_Windows_Input_KeyboardNavigation.$GetNavigationScope = function(element) {
		while (ss.isValue(element) && !$System_Windows_Input_KeyboardNavigation.$IsNavigationScope($System_Windows_Input_KeyboardNavigation.GetTabNavigation(element)) && !$System_Windows_Input_KeyboardNavigation.$IsNavigationScope($System_Windows_Input_KeyboardNavigation.GetControlTabNavigation(element))) {
			element = element.get_VisualParent();
		}
		return element;
	};
	global.System.Windows.Input.KeyboardNavigation = $System_Windows_Input_KeyboardNavigation;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyboardNavigationMode
	var $System_Windows_Input_KeyboardNavigationMode = function() {
	};
	$System_Windows_Input_KeyboardNavigationMode.__typeName = 'System.Windows.Input.KeyboardNavigationMode';
	global.System.Windows.Input.KeyboardNavigationMode = $System_Windows_Input_KeyboardNavigationMode;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyboardNavigationTarget
	var $System_Windows_Input_KeyboardNavigationTarget = function() {
	};
	$System_Windows_Input_KeyboardNavigationTarget.__typeName = 'System.Windows.Input.KeyboardNavigationTarget';
	$System_Windows_Input_KeyboardNavigationTarget.FindTarget = function(currentElement, direction, navigationModeProperty) {
		var currentStop = new $System_$Windows_Input_KeyboardNavigationTarget$Stop(currentElement);
		switch (direction) {
			case 0: {
				return $System_Windows_Input_KeyboardNavigationTarget.$FindNextTarget(currentStop.get_$Element(), currentStop, navigationModeProperty, $System_Windows_Input_KeyboardNavigationTarget.$TabStopComparerProvider);
			}
			case 1: {
				return $System_Windows_Input_KeyboardNavigationTarget.$FindPreviousTarget(currentStop.get_$Element(), currentStop, navigationModeProperty, $System_Windows_Input_KeyboardNavigationTarget.$TabStopComparerProvider);
			}
			case 2: {
				return $System_Windows_Input_KeyboardNavigationTarget.$FindFirstTarget(currentStop.get_$Element(), currentStop, navigationModeProperty, $System_Windows_Input_KeyboardNavigationTarget.$TabStopComparerProvider);
			}
			case 3: {
				return $System_Windows_Input_KeyboardNavigationTarget.$FindLastTarget(currentStop.get_$Element(), currentStop, navigationModeProperty, $System_Windows_Input_KeyboardNavigationTarget.$TabStopComparerProvider);
			}
			case 4: {
				return $System_Windows_Input_KeyboardNavigationTarget.$FindPreviousTarget(currentStop.get_$Element(), currentStop, navigationModeProperty, $System_Windows_Input_KeyboardNavigationTarget.$LeftBoundStopComparerProvider);
			}
			case 5: {
				return $System_Windows_Input_KeyboardNavigationTarget.$FindNextTarget(currentStop.get_$Element(), currentStop, navigationModeProperty, $System_Windows_Input_KeyboardNavigationTarget.$RightBoundStopComparerProvider);
			}
			case 6: {
				return $System_Windows_Input_KeyboardNavigationTarget.$FindPreviousTarget(currentStop.get_$Element(), currentStop, navigationModeProperty, $System_Windows_Input_KeyboardNavigationTarget.$TopBoundStopComparerProvider);
			}
			case 7: {
				return $System_Windows_Input_KeyboardNavigationTarget.$FindNextTarget(currentStop.get_$Element(), currentStop, navigationModeProperty, $System_Windows_Input_KeyboardNavigationTarget.$BottomBoundStopComparerProvider);
			}
		}
		throw new Granular.Exception('Unexpected navigation direction "{0}"', [direction]);
	};
	$System_Windows_Input_KeyboardNavigationTarget.$GetNavigation = function(scope, navigationModeProperty) {
		var scopeNavigationMode = ss.cast(scope.GetValue(navigationModeProperty), ss.Int32);
		switch (scopeNavigationMode) {
			case 0: {
				return $System_$Windows_Input_KeyboardNavigationTarget$ContinueNavigation.$Default;
			}
			case 1: {
				return $System_$Windows_Input_KeyboardNavigationTarget$OnceNavigation.$Default;
			}
			case 2: {
				return $System_$Windows_Input_KeyboardNavigationTarget$CycleNavigation.$Default;
			}
			case 3: {
				return $System_$Windows_Input_KeyboardNavigationTarget$NoneNavigation.$Default;
			}
			case 4: {
				return $System_$Windows_Input_KeyboardNavigationTarget$ContainedNavigation.$Default;
			}
			case 5: {
				return $System_$Windows_Input_KeyboardNavigationTarget$LocalNavigation.$Default;
			}
		}
		throw new Granular.Exception('Unexpected KeyboardNavigationMode "{0}"', [scopeNavigationMode]);
	};
	$System_Windows_Input_KeyboardNavigationTarget.$FindNextTarget = function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
		return $System_Windows_Input_KeyboardNavigationTarget.$GetNavigation(scope, navigationModeProperty).$FindNextTarget(scope, currentStop, navigationModeProperty, stopComparerProvider);
	};
	$System_Windows_Input_KeyboardNavigationTarget.$FindPreviousTarget = function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
		return $System_Windows_Input_KeyboardNavigationTarget.$GetNavigation(scope, navigationModeProperty).$FindPreviousTarget(scope, currentStop, navigationModeProperty, stopComparerProvider);
	};
	$System_Windows_Input_KeyboardNavigationTarget.$FindFirstTarget = function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
		return $System_Windows_Input_KeyboardNavigationTarget.$GetNavigation(scope, navigationModeProperty).$FindFirstTarget(scope, currentStop, navigationModeProperty, stopComparerProvider);
	};
	$System_Windows_Input_KeyboardNavigationTarget.$FindLastTarget = function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
		return $System_Windows_Input_KeyboardNavigationTarget.$GetNavigation(scope, navigationModeProperty).$FindLastTarget(scope, currentStop, navigationModeProperty, stopComparerProvider);
	};
	$System_Windows_Input_KeyboardNavigationTarget.$FindNextContainedTarget = function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
		var stopComparer = stopComparerProvider.$CreateComparer(currentStop);
		var passedCurrentStop = false;
		var targetStop = null;
		var $t1 = ss.getEnumerator($System_Windows_Input_KeyboardNavigationTarget.$GetContainedStops(scope, currentStop.get_$Element(), navigationModeProperty));
		try {
			while ($t1.moveNext()) {
				var stop = $t1.current();
				if (ss.referenceEquals(stop.get_$Element(), currentStop.get_$Element())) {
					passedCurrentStop = true;
					continue;
				}
				var compareResult = stopComparer.compare(currentStop, stop);
				if ((compareResult < 0 || compareResult === 0 && passedCurrentStop) && (ss.isNullOrUndefined(targetStop) || stopComparer.compare(targetStop, stop) > 0)) {
					targetStop = stop;
				}
			}
		}
		finally {
			$t1.dispose();
		}
		return (ss.isValue(targetStop) ? targetStop.get_$Element() : null);
	};
	$System_Windows_Input_KeyboardNavigationTarget.$FindPreviousContainedTarget = function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
		var stopComparer = stopComparerProvider.$CreateComparer(currentStop);
		var passedCurrentStop = false;
		var targetStop = null;
		var $t1 = ss.getEnumerator($System_Windows_Input_KeyboardNavigationTarget.$GetContainedStops(scope, currentStop.get_$Element(), navigationModeProperty));
		try {
			while ($t1.moveNext()) {
				var stop = $t1.current();
				if (ss.referenceEquals(stop.get_$Element(), currentStop.get_$Element())) {
					passedCurrentStop = true;
					continue;
				}
				var compareResult = stopComparer.compare(currentStop, stop);
				if ((compareResult > 0 || compareResult === 0 && !passedCurrentStop) && (ss.isNullOrUndefined(targetStop) || stopComparer.compare(targetStop, stop) <= 0)) {
					targetStop = stop;
				}
			}
		}
		finally {
			$t1.dispose();
		}
		return (ss.isValue(targetStop) ? targetStop.get_$Element() : null);
	};
	$System_Windows_Input_KeyboardNavigationTarget.$FindFirstContainedTarget = function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
		var stopComparer = stopComparerProvider.$CreateComparer(currentStop);
		var targetStop = null;
		var $t1 = ss.getEnumerator($System_Windows_Input_KeyboardNavigationTarget.$GetContainedStops(scope, currentStop.get_$Element(), navigationModeProperty));
		try {
			while ($t1.moveNext()) {
				var stop = $t1.current();
				if (ss.isNullOrUndefined(targetStop) || stopComparer.compare(targetStop, stop) > 0) {
					targetStop = stop;
				}
			}
		}
		finally {
			$t1.dispose();
		}
		return (ss.isValue(targetStop) ? targetStop.get_$Element() : null);
	};
	$System_Windows_Input_KeyboardNavigationTarget.$FindLastContainedTarget = function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
		var stopComparer = stopComparerProvider.$CreateComparer(currentStop);
		var targetStop = null;
		var $t1 = ss.getEnumerator($System_Windows_Input_KeyboardNavigationTarget.$GetContainedStops(scope, currentStop.get_$Element(), navigationModeProperty));
		try {
			while ($t1.moveNext()) {
				var stop = $t1.current();
				if (ss.isNullOrUndefined(targetStop) || stopComparer.compare(targetStop, stop) <= 0) {
					targetStop = stop;
				}
			}
		}
		finally {
			$t1.dispose();
		}
		return (ss.isValue(targetStop) ? targetStop.get_$Element() : null);
	};
	$System_Windows_Input_KeyboardNavigationTarget.$IsStop = function(element) {
		return $System_Windows_Input_KeyboardNavigation.GetIsTabStop(element) && element.get_IsVisible() && element.get_IsEnabled() && element.get_Focusable();
	};
	$System_Windows_Input_KeyboardNavigationTarget.$GetGlobalStops = function(scope, currentElement, navigationModeProperty) {
		return $System_Windows_Input_KeyboardNavigationTarget.$GetNavigation(scope, navigationModeProperty).$GetGlobalStops(scope, currentElement, navigationModeProperty);
	};
	$System_Windows_Input_KeyboardNavigationTarget.$GetContainedStops = function(scope, currentElement, navigationModeProperty) {
		return new ss.IteratorBlockEnumerable(function() {
			return (function(scope, currentElement, navigationModeProperty) {
				var $result, $state = 0, $t1, stop;
				var $finally = function() {
					$t1.dispose();
				};
				return new ss.IteratorBlockEnumerator(function() {
					$sm1:
					for (;;) {
						switch ($state) {
							case 0: {
								$state = -1;
								if ($System_Windows_Input_KeyboardNavigationTarget.$IsStop(ss.cast(scope, $System_Windows_UIElement)) || ss.referenceEquals(scope, currentElement)) {
									$result = new $System_$Windows_Input_KeyboardNavigationTarget$Stop(scope);
									$state = 1;
									return true;
								}
								$state = 1;
								continue $sm1;
							}
							case 1: {
								$state = -1;
								$t1 = Enumerable.from(scope.get_VisualChildren()).selectMany(function(child) {
									return $System_Windows_Input_KeyboardNavigationTarget.$GetGlobalStops(child, currentElement, navigationModeProperty);
								}).getEnumerator();
								$state = 4;
								continue $sm1;
							}
							case 4: {
								$state = 2;
								if (!$t1.moveNext()) {
									$state = 3;
									continue $sm1;
								}
								stop = $t1.current();
								$result = stop;
								$state = 4;
								return true;
							}
							case 3: {
								$state = -1;
								$finally.call(this);
								$state = -1;
								break $sm1;
							}
							default: {
								break $sm1;
							}
						}
					}
					return false;
				}, function() {
					return $result;
				}, function() {
					try {
						switch ($state) {
							case 2:
							case 3:
							case 4: {
								try {
									break;
								}
								finally {
									$finally.call(this);
								}
							}
						}
					}
					finally {
						$state = -1;
					}
				}, this);
			}).call(this, scope, currentElement, navigationModeProperty);
		}, this);
	};
	$System_Windows_Input_KeyboardNavigationTarget.$GetAbsoluteBounds = function(element) {
		return new $System_Windows_Rect.$ctor2(element.PointToRoot($System_Windows_Point.Zero), element.get_VisualSize());
	};
	$System_Windows_Input_KeyboardNavigationTarget.$GetLeftBoundPosition = function(bounds) {
		return $System_Windows_Point.op_Addition(bounds.get_Location(), new $System_Windows_Point.$ctor1(0, bounds.get_Height() / 2));
	};
	$System_Windows_Input_KeyboardNavigationTarget.$GetRightBoundPosition = function(bounds) {
		return $System_Windows_Point.op_Addition(bounds.get_Location(), new $System_Windows_Point.$ctor1(bounds.get_Width(), bounds.get_Height() / 2));
	};
	$System_Windows_Input_KeyboardNavigationTarget.$GetTopBoundPosition = function(bounds) {
		return $System_Windows_Point.op_Addition(bounds.get_Location(), new $System_Windows_Point.$ctor1(bounds.get_Width() / 2, 0));
	};
	$System_Windows_Input_KeyboardNavigationTarget.$GetBottomBoundPosition = function(bounds) {
		return $System_Windows_Point.op_Addition(bounds.get_Location(), new $System_Windows_Point.$ctor1(bounds.get_Width() / 2, bounds.get_Height()));
	};
	global.System.Windows.Input.KeyboardNavigationTarget = $System_Windows_Input_KeyboardNavigationTarget;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyEventArgs
	var $System_Windows_Input_KeyEventArgs = function(routedEvent, originalSource, keyboardDevice, timestamp, key, keyStates, isRepeat) {
		this.$5$KeyField = 0;
		this.$5$KeyStatesField = 0;
		this.$5$IsRepeatField = false;
		this.$5$ForceHostHandlingField = false;
		$System_Windows_Input_KeyboardEventArgs.call(this, routedEvent, originalSource, keyboardDevice, timestamp);
		this.set_Key(key);
		this.set_KeyStates(keyStates);
		this.set_IsRepeat(isRepeat);
	};
	$System_Windows_Input_KeyEventArgs.__typeName = 'System.Windows.Input.KeyEventArgs';
	global.System.Windows.Input.KeyEventArgs = $System_Windows_Input_KeyEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyEventHandlerExtensions
	var $System_Windows_Input_KeyEventHandlerExtensions = function() {
	};
	$System_Windows_Input_KeyEventHandlerExtensions.__typeName = 'System.Windows.Input.KeyEventHandlerExtensions';
	$System_Windows_Input_KeyEventHandlerExtensions.Raise = function(handler, sender, e) {
		if (!ss.staticEquals(handler, null)) {
			handler(sender, e);
		}
	};
	global.System.Windows.Input.KeyEventHandlerExtensions = $System_Windows_Input_KeyEventHandlerExtensions;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.KeyStates
	var $System_Windows_Input_KeyStates = function() {
	};
	$System_Windows_Input_KeyStates.__typeName = 'System.Windows.Input.KeyStates';
	global.System.Windows.Input.KeyStates = $System_Windows_Input_KeyStates;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.ModifierKeys
	var $System_Windows_Input_ModifierKeys = function() {
	};
	$System_Windows_Input_ModifierKeys.__typeName = 'System.Windows.Input.ModifierKeys';
	global.System.Windows.Input.ModifierKeys = $System_Windows_Input_ModifierKeys;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.Mouse
	var $System_Windows_Input_Mouse = function() {
	};
	$System_Windows_Input_Mouse.__typeName = 'System.Windows.Input.Mouse';
	global.System.Windows.Input.Mouse = $System_Windows_Input_Mouse;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.MouseButton
	var $System_Windows_Input_MouseButton = function() {
	};
	$System_Windows_Input_MouseButton.__typeName = 'System.Windows.Input.MouseButton';
	global.System.Windows.Input.MouseButton = $System_Windows_Input_MouseButton;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.MouseButtonEventArgs
	var $System_Windows_Input_MouseButtonEventArgs = function(routedEvent, originalSource, mouseDevice, timestamp, absolutePosition, changedButton, buttonState, clickCount) {
		this.$5$ChangedButtonField = 0;
		this.$5$ButtonStateField = 0;
		this.$5$ClickCountField = 0;
		$System_Windows_Input_MouseEventArgs.call(this, routedEvent, originalSource, mouseDevice, timestamp, absolutePosition);
		this.set_ChangedButton(changedButton);
		this.set_ButtonState(buttonState);
		this.set_ClickCount(clickCount);
	};
	$System_Windows_Input_MouseButtonEventArgs.__typeName = 'System.Windows.Input.MouseButtonEventArgs';
	global.System.Windows.Input.MouseButtonEventArgs = $System_Windows_Input_MouseButtonEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.MouseButtonState
	var $System_Windows_Input_MouseButtonState = function() {
	};
	$System_Windows_Input_MouseButtonState.__typeName = 'System.Windows.Input.MouseButtonState';
	global.System.Windows.Input.MouseButtonState = $System_Windows_Input_MouseButtonState;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.MouseDevice
	var $System_Windows_Input_MouseDevice = function(presentationSource) {
		this.$hitTarget = null;
		this.$captureTarget = null;
		this.$isActive = false;
		this.$target = null;
		this.$1$PositionField = null;
		this.$1$CursorChangedField = null;
		this.$cursor = null;
		this.$presentationSource = null;
		this.$pressedButtons = null;
		this.$presentationSource = presentationSource;
		presentationSource.add_HitTestInvalidated(ss.mkdel(this, this.$OnHitTestInvalidated));
		this.$pressedButtons = new (ss.makeGenericType(System.Collections.Generic.HashSet$1, [$System_Windows_Input_MouseButton]))();
		this.set_Position($System_Windows_Point.Zero);
		this.set_Cursor($System_Windows_Input_Cursors.get_Arrow());
	};
	$System_Windows_Input_MouseDevice.__typeName = 'System.Windows.Input.MouseDevice';
	global.System.Windows.Input.MouseDevice = $System_Windows_Input_MouseDevice;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.MouseEventArgs
	var $System_Windows_Input_MouseEventArgs = function(routedEvent, originalSource, mouseDevice, timestamp, absolutePosition) {
		this.$4$MouseDeviceField = null;
		this.$4$LeftButtonField = 0;
		this.$4$MiddleButtonField = 0;
		this.$4$RightButtonField = 0;
		this.$4$XButton1Field = 0;
		this.$4$XButton2Field = 0;
		this.$4$AbsolutePositionField = null;
		$System_Windows_Input_InputEventArgs.call(this, routedEvent, originalSource, mouseDevice, timestamp);
		this.set_MouseDevice(mouseDevice);
		this.set_AbsolutePosition(absolutePosition);
		this.set_LeftButton(mouseDevice.GetButtonState(0));
		this.set_MiddleButton(mouseDevice.GetButtonState(1));
		this.set_RightButton(mouseDevice.GetButtonState(2));
		this.set_XButton1(mouseDevice.GetButtonState(3));
		this.set_XButton2(mouseDevice.GetButtonState(4));
	};
	$System_Windows_Input_MouseEventArgs.__typeName = 'System.Windows.Input.MouseEventArgs';
	global.System.Windows.Input.MouseEventArgs = $System_Windows_Input_MouseEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.MouseWheelEventArgs
	var $System_Windows_Input_MouseWheelEventArgs = function(routedEvent, originalSource, mouseDevice, timestamp, absolutePosition, delta) {
		this.$5$DeltaField = 0;
		$System_Windows_Input_MouseEventArgs.call(this, routedEvent, originalSource, mouseDevice, timestamp, absolutePosition);
		this.set_Delta(delta);
	};
	$System_Windows_Input_MouseWheelEventArgs.__typeName = 'System.Windows.Input.MouseWheelEventArgs';
	global.System.Windows.Input.MouseWheelEventArgs = $System_Windows_Input_MouseWheelEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.QueryCursorEventArgs
	var $System_Windows_Input_QueryCursorEventArgs = function(routedEvent, originalSource, mouseDevice, timestamp, absolutePosition) {
		this.$5$CursorField = null;
		$System_Windows_Input_MouseEventArgs.call(this, routedEvent, originalSource, mouseDevice, timestamp, absolutePosition);
		//
	};
	$System_Windows_Input_QueryCursorEventArgs.__typeName = 'System.Windows.Input.QueryCursorEventArgs';
	global.System.Windows.Input.QueryCursorEventArgs = $System_Windows_Input_QueryCursorEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.RawEventArgs
	var $System_Windows_Input_RawEventArgs = function(timestamp) {
		this.$1$TimestampField = 0;
		this.set_Timestamp(timestamp);
	};
	$System_Windows_Input_RawEventArgs.__typeName = 'System.Windows.Input.RawEventArgs';
	global.System.Windows.Input.RawEventArgs = $System_Windows_Input_RawEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.RawKeyboardEventArgs
	var $System_Windows_Input_RawKeyboardEventArgs = function(key, keyStates, isRepeat, timestamp) {
		this.$2$KeyField = 0;
		this.$2$KeyStatesField = 0;
		this.$2$IsRepeatField = false;
		$System_Windows_Input_RawEventArgs.call(this, timestamp);
		this.set_Key(key);
		this.set_KeyStates(keyStates);
		this.set_IsRepeat(isRepeat);
	};
	$System_Windows_Input_RawKeyboardEventArgs.__typeName = 'System.Windows.Input.RawKeyboardEventArgs';
	global.System.Windows.Input.RawKeyboardEventArgs = $System_Windows_Input_RawKeyboardEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.RawMouseButtonEventArgs
	var $System_Windows_Input_RawMouseButtonEventArgs = function(button, buttonState, position, timestamp) {
		this.$3$ButtonField = 0;
		this.$3$ButtonStateField = 0;
		$System_Windows_Input_RawMouseEventArgs.call(this, position, timestamp);
		this.set_Button(button);
		this.set_ButtonState(buttonState);
	};
	$System_Windows_Input_RawMouseButtonEventArgs.__typeName = 'System.Windows.Input.RawMouseButtonEventArgs';
	global.System.Windows.Input.RawMouseButtonEventArgs = $System_Windows_Input_RawMouseButtonEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.RawMouseEventArgs
	var $System_Windows_Input_RawMouseEventArgs = function(position, timestamp) {
		this.$2$PositionField = null;
		$System_Windows_Input_RawEventArgs.call(this, timestamp);
		this.set_Position(position);
	};
	$System_Windows_Input_RawMouseEventArgs.__typeName = 'System.Windows.Input.RawMouseEventArgs';
	global.System.Windows.Input.RawMouseEventArgs = $System_Windows_Input_RawMouseEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Input.RawMouseWheelEventArgs
	var $System_Windows_Input_RawMouseWheelEventArgs = function(delta, position, timestamp) {
		this.$3$DeltaField = 0;
		$System_Windows_Input_RawMouseEventArgs.call(this, position, timestamp);
		this.set_Delta(delta);
	};
	$System_Windows_Input_RawMouseWheelEventArgs.__typeName = 'System.Windows.Input.RawMouseWheelEventArgs';
	global.System.Windows.Input.RawMouseWheelEventArgs = $System_Windows_Input_RawMouseWheelEventArgs;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.BooleanTypeConverter
	var $System_Windows_Markup_$BooleanTypeConverter = function() {
		//
	};
	$System_Windows_Markup_$BooleanTypeConverter.__typeName = 'System.Windows.Markup.$BooleanTypeConverter';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.DoubleTypeConverter
	var $System_Windows_Markup_$DoubleTypeConverter = function() {
		//
	};
	$System_Windows_Markup_$DoubleTypeConverter.__typeName = 'System.Windows.Markup.$DoubleTypeConverter';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.EnumTypeConverter
	var $System_Windows_Markup_$EnumTypeConverter = function(type) {
		this.$type = null;
		this.$type = type;
	};
	$System_Windows_Markup_$EnumTypeConverter.__typeName = 'System.Windows.Markup.$EnumTypeConverter';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.Int32TypeConverter
	var $System_Windows_Markup_$Int32TypeConverter = function() {
		//
	};
	$System_Windows_Markup_$Int32TypeConverter.__typeName = 'System.Windows.Markup.$Int32TypeConverter';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.ObjectTypeConverter
	var $System_Windows_Markup_$ObjectTypeConverter = function() {
		//
	};
	$System_Windows_Markup_$ObjectTypeConverter.__typeName = 'System.Windows.Markup.$ObjectTypeConverter';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.ParseTypeConverter
	var $System_Windows_Markup_$ParseTypeConverter = function(type) {
		this.$parseMethod = null;
		this.$parseMethod = $System_Windows_Markup_$ParseTypeConverter.$GetParseMethod(type);
	};
	$System_Windows_Markup_$ParseTypeConverter.__typeName = 'System.Windows.Markup.$ParseTypeConverter';
	$System_Windows_Markup_$ParseTypeConverter.$ContainsParseMethod = function(type) {
		return ss.isValue($System_Windows_Markup_$ParseTypeConverter.$GetParseMethod(type));
	};
	$System_Windows_Markup_$ParseTypeConverter.$GetParseMethod = function(type) {
		return ss.getMembers(type, 8, 284, 'Parse', [String]);
	};
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.StringTypeConverter
	var $System_Windows_Markup_$StringTypeConverter = function() {
		//
	};
	$System_Windows_Markup_$StringTypeConverter.__typeName = 'System.Windows.Markup.$StringTypeConverter';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.TimeSpanTypeConverter
	var $System_Windows_Markup_$TimeSpanTypeConverter = function() {
		//
	};
	$System_Windows_Markup_$TimeSpanTypeConverter.__typeName = 'System.Windows.Markup.$TimeSpanTypeConverter';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.TypeTypeConverter
	var $System_Windows_Markup_$TypeTypeConverter = function() {
		//
	};
	$System_Windows_Markup_$TypeTypeConverter.__typeName = 'System.Windows.Markup.$TypeTypeConverter';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.ClrEventAdapter
	var $System_Windows_Markup_ClrEventAdapter = function(eventInfo) {
		this.$eventInfo = null;
		this.$eventInfo = eventInfo;
	};
	$System_Windows_Markup_ClrEventAdapter.__typeName = 'System.Windows.Markup.ClrEventAdapter';
	global.System.Windows.Markup.ClrEventAdapter = $System_Windows_Markup_ClrEventAdapter;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.ClrPropertyAdapter
	var $System_Windows_Markup_ClrPropertyAdapter = function(property, index) {
		this.$property = null;
		this.$index = null;
		this.$property = property;
		this.$index = index || [];
	};
	$System_Windows_Markup_ClrPropertyAdapter.__typeName = 'System.Windows.Markup.ClrPropertyAdapter';
	global.System.Windows.Markup.ClrPropertyAdapter = $System_Windows_Markup_ClrPropertyAdapter;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.ConstantElementFactory
	var $System_Windows_Markup_ConstantElementFactory = function(value) {
		this.$1$ElementTypeField = null;
		this.$value = null;
		this.$value = value;
		this.set_ElementType(ss.getInstanceType(value));
	};
	$System_Windows_Markup_ConstantElementFactory.__typeName = 'System.Windows.Markup.ConstantElementFactory';
	global.System.Windows.Markup.ConstantElementFactory = $System_Windows_Markup_ConstantElementFactory;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.ContentPropertyAttribute
	var $System_Windows_Markup_ContentPropertyAttribute = function(name) {
		$System_Windows_Markup_PropertyAttribute.call(this, name);
		//
	};
	$System_Windows_Markup_ContentPropertyAttribute.__typeName = 'System.Windows.Markup.ContentPropertyAttribute';
	global.System.Windows.Markup.ContentPropertyAttribute = $System_Windows_Markup_ContentPropertyAttribute;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.ConvertedElementFactory
	var $System_Windows_Markup_ConvertedElementFactory = function(elementFactory, elementTargetType, namespaces) {
		this.$1$ElementTypeField = null;
		this.$valueFactory = null;
		this.$namespaces = null;
		this.$valueFactory = elementFactory;
		this.set_ElementType(elementTargetType);
		this.$namespaces = namespaces;
	};
	$System_Windows_Markup_ConvertedElementFactory.__typeName = 'System.Windows.Markup.ConvertedElementFactory';
	global.System.Windows.Markup.ConvertedElementFactory = $System_Windows_Markup_ConvertedElementFactory;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.DependencyPropertyAdapter
	var $System_Windows_Markup_DependencyPropertyAdapter = function(property) {
		this.$property = null;
		this.$property = property;
	};
	$System_Windows_Markup_DependencyPropertyAdapter.__typeName = 'System.Windows.Markup.DependencyPropertyAdapter';
	global.System.Windows.Markup.DependencyPropertyAdapter = $System_Windows_Markup_DependencyPropertyAdapter;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.DictionaryKeyPropertyAttribute
	var $System_Windows_Markup_DictionaryKeyPropertyAttribute = function(name) {
		$System_Windows_Markup_PropertyAttribute.call(this, name);
		//
	};
	$System_Windows_Markup_DictionaryKeyPropertyAttribute.__typeName = 'System.Windows.Markup.DictionaryKeyPropertyAttribute';
	global.System.Windows.Markup.DictionaryKeyPropertyAttribute = $System_Windows_Markup_DictionaryKeyPropertyAttribute;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.ElementCollectionContentInitailizer
	var $System_Windows_Markup_ElementCollectionContentInitailizer = function() {
	};
	$System_Windows_Markup_ElementCollectionContentInitailizer.__typeName = 'System.Windows.Markup.ElementCollectionContentInitailizer';
	$System_Windows_Markup_ElementCollectionContentInitailizer.Create = function(values, containingType) {
		var keyType = {};
		var valueType = {};
		if ($System_Windows_Markup_ElementCollectionContentInitailizer.$TryGetDictionaryGenericArguments(containingType, keyType, valueType)) {
			return new $System_Windows_Markup_ElementDictionaryContentInitializer(keyType.$, valueType.$, values);
		}
		if ($System_Windows_Markup_ElementCollectionContentInitailizer.$TryGetCollectionGenericArgument(containingType, valueType)) {
			return new $System_Windows_Markup_ElementCollectionContentInitializer(valueType.$, values);
		}
		throw new Granular.Exception('Can\'t initialize type "{0}" content', [ss.getTypeName(containingType)]);
	};
	$System_Windows_Markup_ElementCollectionContentInitailizer.IsCollectionType = function(type) {
		var keyType = {};
		var valueType = {};
		return $System_Windows_Markup_ElementCollectionContentInitailizer.$TryGetDictionaryGenericArguments(type, keyType, valueType) || $System_Windows_Markup_ElementCollectionContentInitailizer.$TryGetCollectionGenericArgument(type, valueType);
	};
	$System_Windows_Markup_ElementCollectionContentInitailizer.$TryGetDictionaryGenericArguments = function(type, keyType, valueType) {
		var interfaceType = Granular.Extensions.TypeExtensions.GetInterfaceType(type, ss.IDictionary);
		if (ss.isValue(interfaceType)) {
			var arguments1 = Enumerable.from(Granular.Compatibility.Type.GetTypeInterfaceGenericArguments(type, interfaceType)).toArray();
			keyType.$ = arguments1[0];
			valueType.$ = arguments1[1];
			return true;
		}
		valueType.$ = null;
		keyType.$ = null;
		return false;
	};
	$System_Windows_Markup_ElementCollectionContentInitailizer.$TryGetCollectionGenericArgument = function(type, valueType) {
		var interfaceType = Granular.Extensions.TypeExtensions.GetInterfaceType(type, ss.ICollection);
		if (ss.isValue(interfaceType)) {
			valueType.$ = Enumerable.from(Granular.Compatibility.Type.GetTypeInterfaceGenericArguments(type, interfaceType)).first();
			return true;
		}
		valueType.$ = null;
		return false;
	};
	global.System.Windows.Markup.ElementCollectionContentInitailizer = $System_Windows_Markup_ElementCollectionContentInitailizer;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.ElementCollectionContentInitializer
	var $System_Windows_Markup_ElementCollectionContentInitializer = function(valueTargetType, values) {
		this.$elementsFactory = null;
		this.$elementsFactory = Enumerable.from(values).select(function(value) {
			return $System_Windows_Markup_ElementFactory.FromValue(value, valueTargetType, System.Xaml.XamlNamespaces.Empty);
		}).toArray();
	};
	$System_Windows_Markup_ElementCollectionContentInitializer.__typeName = 'System.Windows.Markup.ElementCollectionContentInitializer';
	global.System.Windows.Markup.ElementCollectionContentInitializer = $System_Windows_Markup_ElementCollectionContentInitializer;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.ElementDictionaryContentInitializer
	var $System_Windows_Markup_ElementDictionaryContentInitializer = function(keyType, valueType, values) {
		this.$keyElementFactories = null;
		this.$keyElementFactories = $System_Windows_Markup_ElementDictionaryContentInitializer.$CreateElementsFactories(keyType, valueType, values);
	};
	$System_Windows_Markup_ElementDictionaryContentInitializer.__typeName = 'System.Windows.Markup.ElementDictionaryContentInitializer';
	$System_Windows_Markup_ElementDictionaryContentInitializer.$CreateElementsFactories = function(keyType, valueType, values) {
		if (Enumerable.from(values).any(function(value) {
			return !ss.isInstanceOfType(value, System.Xaml.XamlElement);
		})) {
			throw new Granular.Exception('Can\'t add a value of type "{0}" to a dictionary, as it cannot have a key', [ss.getTypeName(ss.getInstanceType(Enumerable.from(values).first(function(value1) {
				return !ss.isInstanceOfType(value1, System.Xaml.XamlElement);
			})))]);
		}
		var valuesElements = Enumerable.from(values).select(function(x) {
			return ss.cast(x, System.Xaml.XamlElement);
		});
		var list = [];
		var $t1 = ss.getEnumerator(valuesElements);
		try {
			while ($t1.moveNext()) {
				var contentChild = $t1.current();
				var isShared = Enumerable.from(contentChild.get_Directives()).all(function(directive) {
					return System.Xaml.XamlName.op_Inequality(directive.get_Name(), System.Xaml.XamlLanguage.SharedDirective) || ss.unbox(ss.cast($System_Windows_Markup_TypeConverter.ConvertValue(System.Xaml.XamlMemberExtensions.GetSingleValue(directive), Boolean, System.Xaml.XamlNamespaces.Empty), Boolean));
				});
				var contentChildFactory = $System_Windows_Markup_ElementFactory.FromXamlElement(contentChild, valueType);
				if (!isShared) {
					contentChildFactory = new $System_$Windows_Markup_ElementDictionaryContentInitializer$ValueProviderFactory(contentChildFactory);
				}
				list.push(new $System_$Windows_Markup_ElementDictionaryContentInitializer$KeyValueElementFactory(keyType, contentChildFactory, contentChild));
			}
		}
		finally {
			$t1.dispose();
		}
		return list;
	};
	global.System.Windows.Markup.ElementDictionaryContentInitializer = $System_Windows_Markup_ElementDictionaryContentInitializer;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.ElementEventMemberInitializer
	var $System_Windows_Markup_ElementEventMemberInitializer = function(eventAdapter, eventHandlerName) {
		this.$eventAdapter = null;
		this.$eventHandlerName = null;
		this.$eventAdapter = eventAdapter;
		this.$eventHandlerName = eventHandlerName;
	};
	$System_Windows_Markup_ElementEventMemberInitializer.__typeName = 'System.Windows.Markup.ElementEventMemberInitializer';
	$System_Windows_Markup_ElementEventMemberInitializer.$CreateEventHandler = function(eventHandlerType, source, eventHandlerName) {
		var methodInfo = ss.getMembers(ss.getInstanceType(source), 8, Granular.Compatibility.BindingFlags.InstancePublicNonPublicFlattenHierarchy | 256, eventHandlerName);
		if (ss.isNullOrUndefined(methodInfo)) {
			throw new Granular.Exception('Type "{0}" does not contain an event handler named "{1}"', [ss.getTypeName(ss.getInstanceType(source)), eventHandlerName]);
		}
		return ss.midel(methodInfo, source);
	};
	global.System.Windows.Markup.ElementEventMemberInitializer = $System_Windows_Markup_ElementEventMemberInitializer;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.ElementFactory
	var $System_Windows_Markup_ElementFactory = function(elementType, elementInitializer) {
		this.$1$ElementTypeField = null;
		this.$elementInitializer = null;
		this.set_ElementType(elementType);
		this.$elementInitializer = elementInitializer;
	};
	$System_Windows_Markup_ElementFactory.__typeName = 'System.Windows.Markup.ElementFactory';
	$System_Windows_Markup_ElementFactory.FromValue = function(value, targetType, namespaces) {
		if (ss.isInstanceOfType(value, System.Xaml.XamlElement)) {
			return $System_Windows_Markup_ElementFactory.FromXamlElement(ss.cast(value, System.Xaml.XamlElement), targetType);
		}
		return $System_Windows_Markup_ElementFactory.$FromElementFactory(new $System_Windows_Markup_ConstantElementFactory(value), targetType, namespaces);
	};
	$System_Windows_Markup_ElementFactory.FromXamlElement = function(element, targetType) {
		var elementType = $System_Windows_Markup_XamlElementExtensions.GetElementType(element);
		if (ss.isNullOrUndefined(System.TypeExtensions.GetDefaultConstructor(elementType))) {
			return $System_Windows_Markup_ElementFactory.$FromElementFactory($System_Windows_Markup_ElementFactory.$FromXamlElementContent(element), targetType, element.get_Namespaces());
		}
		var elementInitializer = new $System_Windows_Markup_ElementInitializer(element);
		var elementFactory = new $System_Windows_Markup_ElementFactory(elementType, elementInitializer);
		return $System_Windows_Markup_ElementFactory.$FromElementFactory(elementFactory, targetType, element.get_Namespaces());
	};
	$System_Windows_Markup_ElementFactory.$FromXamlElementContent = function(element) {
		if (Enumerable.from(element.get_Members()).any()) {
			throw new Granular.Exception('Element "{0}" can\'t have members, as its type doesn\'t have a default constructor and it can only be converted from its content', [element.get_Name()]);
		}
		if (!Enumerable.from(element.get_Values()).any()) {
			throw new Granular.Exception('Element "{0}" must have a value, as its type doesn\'t have a default constructor and it can only be converted from its content', [element.get_Name()]);
		}
		if (Enumerable.from(element.get_Values()).count() > 1) {
			throw new Granular.Exception('Element "{0}" can\'t have multiple children, as its type doesn\'t have a default constructor and it can only be converted from its content', [element.get_Name()]);
		}
		return $System_Windows_Markup_ElementFactory.FromValue(Enumerable.from(element.get_Values()).first(), $System_Windows_Markup_XamlElementExtensions.GetElementType(element), element.get_Namespaces());
	};
	$System_Windows_Markup_ElementFactory.$FromElementFactory = function(elementFactory, targetType, namespaces) {
		if (ss.contains(ss.getInterfaces(elementFactory.get_ElementType()), $System_Windows_Markup_IMarkupExtension)) {
			return new $System_Windows_Markup_MarkupExtensionElementFactory(elementFactory);
		}
		if (ss.isValue(targetType) && !ss.isAssignableFrom(targetType, elementFactory.get_ElementType())) {
			return new $System_Windows_Markup_ConvertedElementFactory(elementFactory, targetType, namespaces);
		}
		return elementFactory;
	};
	global.System.Windows.Markup.ElementFactory = $System_Windows_Markup_ElementFactory;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.ElementInitializer
	var $System_Windows_Markup_ElementInitializer = function(element) {
		this.$elementType = null;
		this.$namespaces = null;
		this.$memberInitializers = null;
		this.$contentInitializer = null;
		this.$nameProperty = null;
		this.$nameDirectiveValue = null;
		this.$elementType = $System_Windows_Markup_XamlElementExtensions.GetElementType(element);
		this.$namespaces = element.get_Namespaces();
		this.$memberInitializers = $System_Windows_Markup_ElementInitializer.$CreateMemberInitializers(element);
		this.$contentInitializer = $System_Windows_Markup_ElementInitializer.$CreateContentInitializer(element);
		this.$nameDirectiveValue = $System_Windows_Markup_ElementInitializer.$GetNameDirectiveValue(element);
		this.$nameProperty = $System_Windows_Markup_ElementInitializer.$GetNameProperty($System_Windows_Markup_XamlElementExtensions.GetElementType(element));
	};
	$System_Windows_Markup_ElementInitializer.__typeName = 'System.Windows.Markup.ElementInitializer';
	$System_Windows_Markup_ElementInitializer.$CreateContentInitializer = function(element) {
		var elementType = $System_Windows_Markup_XamlElementExtensions.GetElementType(element);
		var contentPropertyName = $System_Windows_Markup_PropertyAttribute.GetPropertyName($System_Windows_Markup_ContentPropertyAttribute).call(null, elementType);
		if (!Granular.Extensions.StringExtensions.IsNullOrEmpty(contentPropertyName)) {
			return $System_Windows_Markup_ElementMemberInitializer.Create(new System.Xaml.XamlName(contentPropertyName, null), elementType, element.get_Values(), element.get_Namespaces());
		}
		if ($System_Windows_Markup_ElementCollectionContentInitailizer.IsCollectionType(elementType)) {
			return $System_Windows_Markup_ElementCollectionContentInitailizer.Create(element.get_Values(), elementType);
		}
		return null;
	};
	$System_Windows_Markup_ElementInitializer.$CreateMemberInitializers = function(element) {
		var elementType = $System_Windows_Markup_XamlElementExtensions.GetElementType(element);
		var list = [];
		var index = 0;
		var $t1 = ss.getEnumerator(element.get_Members());
		try {
			while ($t1.moveNext()) {
				var member = $t1.current();
				// markup extensions may contain members with an empty name, the name should be resolved from the member index
				var memberName = (member.get_Name().get_IsEmpty() ? $System_Windows_Markup_ElementInitializer.$GetParameterName(elementType, index) : member.get_Name());
				list.push($System_Windows_Markup_ElementMemberInitializer.Create(memberName, elementType, member.get_Values(), member.get_Namespaces()));
				index++;
			}
		}
		finally {
			$t1.dispose();
		}
		return list;
	};
	$System_Windows_Markup_ElementInitializer.$GetParameterName = function(type, index) {
		var parameterAttribute = Enumerable.from(ss.getAttributes(type, null, true)).ofType($System_Windows_Markup_MarkupExtensionParameterAttribute).firstOrDefault(function(attribute) {
			return attribute.get_Index() === index;
		}, ss.getDefaultValue($System_Windows_Markup_MarkupExtensionParameterAttribute));
		if (ss.isNullOrUndefined(parameterAttribute)) {
			throw new Granular.Exception('Type "{0}" does not declare MarkupExtensionParameter for index {1}', [ss.getTypeName(type), index]);
		}
		return new System.Xaml.XamlName(parameterAttribute.get_Name(), null);
	};
	$System_Windows_Markup_ElementInitializer.$GetNameDirectiveValue = function(element) {
		var nameDirective = Enumerable.from(element.get_Directives()).firstOrDefault(function(directive) {
			return System.Xaml.XamlName.op_Equality(directive.get_Name(), System.Xaml.XamlLanguage.NameDirective);
		}, ss.getDefaultValue(System.Xaml.XamlMember));
		return (ss.isValue(nameDirective) ? ss.cast(System.Xaml.XamlMemberExtensions.GetSingleValue(nameDirective), String) : null);
	};
	$System_Windows_Markup_ElementInitializer.$GetNameProperty = function(type) {
		return $System_Windows_Markup_PropertyAdapter.CreateAdapter(type, new System.Xaml.XamlName($System_Windows_Markup_PropertyAttribute.GetPropertyName($System_Windows_Markup_RuntimeNamePropertyAttribute).call(null, type), null));
	};
	$System_Windows_Markup_ElementInitializer.$SetFieldValue = function(target, fieldName, fieldValue) {
		var fieldInfo = ss.getMembers(ss.getInstanceType(target), 4, Granular.Compatibility.BindingFlags.InstanceNonPublic | 256, fieldName);
		if (ss.isNullOrUndefined(fieldInfo)) {
			return;
		}
		if (!ss.referenceEquals(fieldInfo.returnType, ss.getInstanceType(fieldValue))) {
			throw new Granular.Exception('Cannot assign "{0}" of type "{1}" to field "{2}.{3}" of type "{4}"', [fieldName, ss.getTypeName(ss.getInstanceType(fieldValue)), ss.getTypeName(ss.getInstanceType(target)), fieldName, fieldInfo.returnType]);
		}
		ss.fieldAccess(fieldInfo, target, fieldValue);
	};
	global.System.Windows.Markup.ElementInitializer = $System_Windows_Markup_ElementInitializer;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.ElementMemberInitializer
	var $System_Windows_Markup_ElementMemberInitializer = function() {
	};
	$System_Windows_Markup_ElementMemberInitializer.__typeName = 'System.Windows.Markup.ElementMemberInitializer';
	$System_Windows_Markup_ElementMemberInitializer.Create = function(memberName, containingType, values, namespaces) {
		var eventAdapter = $System_Windows_Markup_EventAdapter.CreateAdapter(containingType, memberName);
		if (ss.isValue(eventAdapter)) {
			return new $System_Windows_Markup_ElementEventMemberInitializer(eventAdapter, $System_Windows_Markup_ElementMemberInitializer.$GetEventHandlerName(memberName, values));
		}
		var propertyAdapter = $System_Windows_Markup_PropertyAdapter.CreateAdapter(containingType, memberName);
		if (ss.isValue(propertyAdapter)) {
			return $System_Windows_Markup_ElementPropertyMemberInitializer.Create(propertyAdapter, values, namespaces);
		}
		throw new Granular.Exception('Type "{0}" does not contain a member named "{1}"', [ss.getTypeName(containingType), memberName]);
	};
	$System_Windows_Markup_ElementMemberInitializer.$GetEventHandlerName = function(memberName, values) {
		if (!Enumerable.from(values).any()) {
			throw new Granular.Exception('Member "{0}" doesn\'t have values', [memberName]);
		}
		if (Enumerable.from(values).count() > 1) {
			throw new Granular.Exception('Member "{0}" cannot have multiple values', [memberName]);
		}
		if (!ss.isInstanceOfType(Enumerable.from(values).first(), String)) {
			throw new Granular.Exception('Member "{0}" value is not an event handler name', [memberName]);
		}
		return ss.cast(Enumerable.from(values).first(), String);
	};
	global.System.Windows.Markup.ElementMemberInitializer = $System_Windows_Markup_ElementMemberInitializer;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.ElementPropertyMemberInitializer
	var $System_Windows_Markup_ElementPropertyMemberInitializer = function(propertyAdapter, propertyValueFactory) {
		this.$propertyAdapter = null;
		this.$propertyValueFactory = null;
		this.$propertyAdapter = propertyAdapter;
		this.$propertyValueFactory = propertyValueFactory;
	};
	$System_Windows_Markup_ElementPropertyMemberInitializer.__typeName = 'System.Windows.Markup.ElementPropertyMemberInitializer';
	$System_Windows_Markup_ElementPropertyMemberInitializer.Create = function(propertyAdapter, values, namespaces) {
		if (!Enumerable.from(values).any()) {
			return $System_Windows_Markup_ElementInitializer.Empty;
		}
		if ($System_Windows_Markup_ElementCollectionContentInitailizer.IsCollectionType(propertyAdapter.get_PropertyType()) && !(Enumerable.from(values).count() === 1 && ss.isInstanceOfType(Enumerable.from(values).first(), System.Xaml.XamlElement) && ss.isAssignableFrom(propertyAdapter.get_PropertyType(), $System_Windows_Markup_XamlElementExtensions.GetElementType(ss.cast(Enumerable.from(values).first(), System.Xaml.XamlElement))))) {
			var propertyContentInitializer = $System_Windows_Markup_ElementCollectionContentInitailizer.Create(values, propertyAdapter.get_PropertyType());
			// wrap with a factory that creates the collection (when it's null) before adding its values
			return new $System_$Windows_Markup_ElementPropertyMemberInitializer$ElementPropertyMemberFactoryInitializer(propertyAdapter, propertyContentInitializer);
		}
		if (Enumerable.from(values).count() === 1) {
			if (ss.referenceEquals(propertyAdapter.get_PropertyType(), $System_Windows_IFrameworkElementFactory)) {
				return new $System_Windows_Markup_FrameworkElementFactoryInitializer(propertyAdapter, $System_Windows_Markup_ElementFactory.FromValue(Enumerable.from(values).first(), null, namespaces));
			}
			var contentFactory = $System_Windows_Markup_ElementFactory.FromValue(Enumerable.from(values).first(), propertyAdapter.get_PropertyType(), namespaces);
			return new $System_Windows_Markup_ElementPropertyMemberInitializer(propertyAdapter, contentFactory);
		}
		throw new Granular.Exception('Member of type "{0}" cannot have more than one child', [ss.getTypeName(propertyAdapter.get_PropertyType())]);
	};
	global.System.Windows.Markup.ElementPropertyMemberInitializer = $System_Windows_Markup_ElementPropertyMemberInitializer;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.EventAdapter
	var $System_Windows_Markup_EventAdapter = function() {
	};
	$System_Windows_Markup_EventAdapter.__typeName = 'System.Windows.Markup.EventAdapter';
	$System_Windows_Markup_EventAdapter.CreateAdapter = function(targetType, eventName) {
		var routedEvent = $System_Windows_Markup_EventAdapter.$GetRoutedEvent(targetType, eventName);
		if (ss.isValue(routedEvent)) {
			return new $System_Windows_Markup_RoutedEventAdapter(routedEvent);
		}
		var clrEvent = $System_Windows_Markup_EventAdapter.$GetClrEvent(targetType, eventName);
		if (ss.isValue(clrEvent)) {
			return new $System_Windows_Markup_ClrEventAdapter(clrEvent);
		}
		var eventProperty = $System_Windows_Markup_EventAdapter.$GetEventProperty(targetType, eventName);
		if (ss.isValue(eventProperty)) {
			return new $System_Windows_Markup_EventPropertyAdapter(eventProperty);
		}
		return null;
	};
	$System_Windows_Markup_EventAdapter.$GetRoutedEvent = function(containingType, eventName) {
		var eventMemberName = eventName.get_MemberName();
		var eventContainingType = (eventName.get_IsMemberName() ? $System_Windows_Markup_TypeParser.ParseType(eventName.get_ContainingTypeName()) : containingType);
		return $System_Windows_EventManager.GetOwnedRoutedEvent(containingType, eventMemberName);
	};
	$System_Windows_Markup_EventAdapter.$GetClrEvent = function(containingType, eventName) {
		var eventMemberName = eventName.get_MemberName();
		var eventContainingType = (eventName.get_IsMemberName() ? $System_Windows_Markup_TypeParser.ParseType(eventName.get_ContainingTypeName()) : containingType);
		return ss.getMembers(eventContainingType, 2, 84 | 256, eventMemberName);
	};
	$System_Windows_Markup_EventAdapter.$GetEventProperty = function(containingType, eventName) {
		var eventMemberName = eventName.get_MemberName();
		var eventContainingType = (eventName.get_IsMemberName() ? $System_Windows_Markup_TypeParser.ParseType(eventName.get_ContainingTypeName()) : containingType);
		var eventProperty = Granular.Extensions.TypeExtensions.GetInstanceProperty(eventContainingType, eventMemberName);
		return ((ss.isValue(eventProperty) && System.Reflection.PropertyInfoExtensions.IsDelegate(eventProperty)) ? eventProperty : null);
	};
	global.System.Windows.Markup.EventAdapter = $System_Windows_Markup_EventAdapter;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.EventPropertyAdapter
	var $System_Windows_Markup_EventPropertyAdapter = function(eventProperty) {
		this.$eventProperty = null;
		this.$eventProperty = eventProperty;
	};
	$System_Windows_Markup_EventPropertyAdapter.__typeName = 'System.Windows.Markup.EventPropertyAdapter';
	global.System.Windows.Markup.EventPropertyAdapter = $System_Windows_Markup_EventPropertyAdapter;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.FrameworkElementFactoryInitializer
	var $System_Windows_Markup_FrameworkElementFactoryInitializer = function(propertyAdapter, elementFactory) {
		this.$propertyAdapter = null;
		this.$elementFactory = null;
		this.$propertyAdapter = propertyAdapter;
		this.$elementFactory = elementFactory;
	};
	$System_Windows_Markup_FrameworkElementFactoryInitializer.__typeName = 'System.Windows.Markup.FrameworkElementFactoryInitializer';
	global.System.Windows.Markup.FrameworkElementFactoryInitializer = $System_Windows_Markup_FrameworkElementFactoryInitializer;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.IElementFactory
	var $System_Windows_Markup_IElementFactory = function() {
	};
	$System_Windows_Markup_IElementFactory.__typeName = 'System.Windows.Markup.IElementFactory';
	global.System.Windows.Markup.IElementFactory = $System_Windows_Markup_IElementFactory;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.IElementInitializer
	var $System_Windows_Markup_IElementInitializer = function() {
	};
	$System_Windows_Markup_IElementInitializer.__typeName = 'System.Windows.Markup.IElementInitializer';
	global.System.Windows.Markup.IElementInitializer = $System_Windows_Markup_IElementInitializer;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.IEventAdapter
	var $System_Windows_Markup_IEventAdapter = function() {
	};
	$System_Windows_Markup_IEventAdapter.__typeName = 'System.Windows.Markup.IEventAdapter';
	global.System.Windows.Markup.IEventAdapter = $System_Windows_Markup_IEventAdapter;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.IMarkupExtension
	var $System_Windows_Markup_IMarkupExtension = function() {
	};
	$System_Windows_Markup_IMarkupExtension.__typeName = 'System.Windows.Markup.IMarkupExtension';
	global.System.Windows.Markup.IMarkupExtension = $System_Windows_Markup_IMarkupExtension;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.INameScope
	var $System_Windows_Markup_INameScope = function() {
	};
	$System_Windows_Markup_INameScope.__typeName = 'System.Windows.Markup.INameScope';
	global.System.Windows.Markup.INameScope = $System_Windows_Markup_INameScope;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.InitializeContext
	var $System_Windows_Markup_InitializeContext = function() {
		$System_Windows_Markup_InitializeContext.$ctor1.call(this, null, null, new $System_Windows_Markup_NameScope(null), null, 11);
		//
	};
	$System_Windows_Markup_InitializeContext.__typeName = 'System.Windows.Markup.InitializeContext';
	$System_Windows_Markup_InitializeContext.$ctor1 = function(target, parentContext, nameScope, templatedParent, valueSource) {
		this.$1$TargetField = null;
		this.$1$ParentContextField = null;
		this.$1$ValueSourceField = 0;
		this.$1$NameScopeField = null;
		this.$1$TemplatedParentField = null;
		this.$1$RootField = null;
		this.set_Target(target);
		this.set_ParentContext(parentContext);
		this.set_NameScope(nameScope);
		this.set_TemplatedParent(templatedParent);
		this.set_ValueSource(valueSource);
		this.set_Root(((ss.isValue(parentContext) && ss.isValue(parentContext.get_Root())) ? parentContext.get_Root() : this.get_Target()));
	};
	global.System.Windows.Markup.InitializeContext = $System_Windows_Markup_InitializeContext;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.InitializeContextExtensions
	var $System_Windows_Markup_InitializeContextExtensions = function() {
	};
	$System_Windows_Markup_InitializeContextExtensions.__typeName = 'System.Windows.Markup.InitializeContextExtensions';
	$System_Windows_Markup_InitializeContextExtensions.SetTarget = function(context, target) {
		return new $System_Windows_Markup_InitializeContext.$ctor1(target, context.get_ParentContext(), context.get_NameScope(), context.get_TemplatedParent(), context.get_ValueSource());
	};
	$System_Windows_Markup_InitializeContextExtensions.SetNameScope = function(context, nameScope) {
		return new $System_Windows_Markup_InitializeContext.$ctor1(context.get_Target(), context.get_ParentContext(), nameScope, context.get_TemplatedParent(), context.get_ValueSource());
	};
	$System_Windows_Markup_InitializeContextExtensions.CreateChildContext = function(context, child) {
		return new $System_Windows_Markup_InitializeContext.$ctor1(child, context, context.get_NameScope(), context.get_TemplatedParent(), context.get_ValueSource());
	};
	global.System.Windows.Markup.InitializeContextExtensions = $System_Windows_Markup_InitializeContextExtensions;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.IPropertyAdapter
	var $System_Windows_Markup_IPropertyAdapter = function() {
	};
	$System_Windows_Markup_IPropertyAdapter.__typeName = 'System.Windows.Markup.IPropertyAdapter';
	global.System.Windows.Markup.IPropertyAdapter = $System_Windows_Markup_IPropertyAdapter;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.ISupportInitialize
	var $System_Windows_Markup_ISupportInitialize = function() {
	};
	$System_Windows_Markup_ISupportInitialize.__typeName = 'System.Windows.Markup.ISupportInitialize';
	global.System.Windows.Markup.ISupportInitialize = $System_Windows_Markup_ISupportInitialize;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.ITypeConverter
	var $System_Windows_Markup_ITypeConverter = function() {
	};
	$System_Windows_Markup_ITypeConverter.__typeName = 'System.Windows.Markup.ITypeConverter';
	global.System.Windows.Markup.ITypeConverter = $System_Windows_Markup_ITypeConverter;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.IValueProvider
	var $System_Windows_Markup_IValueProvider = function() {
	};
	$System_Windows_Markup_IValueProvider.__typeName = 'System.Windows.Markup.IValueProvider';
	global.System.Windows.Markup.IValueProvider = $System_Windows_Markup_IValueProvider;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.KnownTypes
	var $System_Windows_Markup_KnownTypes = function() {
	};
	$System_Windows_Markup_KnownTypes.__typeName = 'System.Windows.Markup.KnownTypes';
	$System_Windows_Markup_KnownTypes.GetTypeConverter = function(type) {
		if (ss.referenceEquals(type, Object)) {
			return $System_Windows_Markup_$ObjectTypeConverter.$Default;
		}
		if (ss.referenceEquals(type, String)) {
			return $System_Windows_Markup_$StringTypeConverter.$Default;
		}
		if (ss.referenceEquals(type, Boolean)) {
			return $System_Windows_Markup_$BooleanTypeConverter.$Default;
		}
		if (ss.referenceEquals(type, ss.Int32)) {
			return $System_Windows_Markup_$Int32TypeConverter.$Default;
		}
		if (ss.referenceEquals(type, Number)) {
			return $System_Windows_Markup_$DoubleTypeConverter.$Default;
		}
		if (ss.referenceEquals(type, ss.TimeSpan)) {
			return $System_Windows_Markup_$TimeSpanTypeConverter.$Default;
		}
		if (ss.isEnum(type)) {
			return new $System_Windows_Markup_$EnumTypeConverter(type);
		}
		if (ss.referenceEquals(type, Function)) {
			return $System_Windows_Markup_$TypeTypeConverter.$Default;
		}
		if (System.TypeExtensions.GetIsGenericType(type) && ss.referenceEquals(ss.getGenericTypeDefinition(type), ss.Nullable$1)) {
			return $System_Windows_Markup_KnownTypes.GetTypeConverter(Enumerable.from(ss.getGenericArguments(type)).first());
		}
		var typeConverterAttribute = ss.safeCast(Enumerable.from(ss.getAttributes(type, $System_Windows_Markup_TypeConverterAttribute, false)).firstOrDefault(null, ss.getDefaultValue(Object)), $System_Windows_Markup_TypeConverterAttribute);
		if (ss.isValue(typeConverterAttribute)) {
			return ss.safeCast(ss.createInstance(typeConverterAttribute.get_ConverterType()), $System_Windows_Markup_ITypeConverter);
		}
		if ($System_Windows_Markup_$ParseTypeConverter.$ContainsParseMethod(type)) {
			return new $System_Windows_Markup_$ParseTypeConverter(type);
		}
		return null;
	};
	global.System.Windows.Markup.KnownTypes = $System_Windows_Markup_KnownTypes;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.MarkupExtensionElementFactory
	var $System_Windows_Markup_MarkupExtensionElementFactory = function(valueFactory) {
		this.$valueFactory = null;
		this.$valueFactory = valueFactory;
	};
	$System_Windows_Markup_MarkupExtensionElementFactory.__typeName = 'System.Windows.Markup.MarkupExtensionElementFactory';
	global.System.Windows.Markup.MarkupExtensionElementFactory = $System_Windows_Markup_MarkupExtensionElementFactory;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.MarkupExtensionParameterAttribute
	var $System_Windows_Markup_MarkupExtensionParameterAttribute = function(name, index) {
		this.$3$IndexField = 0;
		$System_Windows_Markup_PropertyAttribute.call(this, name);
		this.set_Index(index);
	};
	$System_Windows_Markup_MarkupExtensionParameterAttribute.__typeName = 'System.Windows.Markup.MarkupExtensionParameterAttribute';
	global.System.Windows.Markup.MarkupExtensionParameterAttribute = $System_Windows_Markup_MarkupExtensionParameterAttribute;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.NameScope
	var $System_Windows_Markup_NameScope = function(parent) {
		this.$items = null;
		this.$parent = null;
		this.$parent = parent;
		this.$items = new (ss.makeGenericType(ss.Dictionary$2, [String, Object]))();
	};
	$System_Windows_Markup_NameScope.__typeName = 'System.Windows.Markup.NameScope';
	$System_Windows_Markup_NameScope.GetNameScope = function(obj) {
		return ss.cast(obj.GetValue($System_Windows_Markup_NameScope.NameScopeProperty), $System_Windows_Markup_INameScope);
	};
	$System_Windows_Markup_NameScope.SetNameScope = function(obj, value) {
		obj.SetValue($System_Windows_Markup_NameScope.NameScopeProperty, value, 11);
	};
	$System_Windows_Markup_NameScope.GetTemplateNameScope = function(templatedParent) {
		var templateRoot = Enumerable.from(templatedParent.get_VisualChildren()).firstOrDefault(null, ss.getDefaultValue($System_Windows_Media_Visual));
		return (ss.isValue(templateRoot) ? $System_Windows_Markup_NameScope.GetNameScope(templateRoot) : null);
	};
	$System_Windows_Markup_NameScope.GetContainingNameScope = function(element) {
		while (ss.isValue(element)) {
			var nameScope = $System_Windows_Markup_NameScope.GetNameScope(element);
			if (ss.isValue(nameScope)) {
				return nameScope;
			}
			if (!ss.isInstanceOfType(element, $System_Windows_UIElement)) {
				return null;
			}
			element = ss.cast(element, $System_Windows_UIElement).get_LogicalParent();
		}
		return null;
	};
	global.System.Windows.Markup.NameScope = $System_Windows_Markup_NameScope;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.PropertyAdapter
	var $System_Windows_Markup_PropertyAdapter = function() {
	};
	$System_Windows_Markup_PropertyAdapter.__typeName = 'System.Windows.Markup.PropertyAdapter';
	$System_Windows_Markup_PropertyAdapter.CreateAdapter = function(targetType, propertyName) {
		if (propertyName.get_IsEmpty()) {
			return null;
		}
		var dependencyProperty = $System_Windows_DependencyProperty.GetProperty(targetType, propertyName);
		if (ss.isValue(dependencyProperty)) {
			return new $System_Windows_Markup_DependencyPropertyAdapter(dependencyProperty);
		}
		var clrProperty = $System_Windows_Markup_PropertyAdapter.$GetClrProperty(targetType, propertyName);
		if (ss.isValue(clrProperty)) {
			return new $System_Windows_Markup_ClrPropertyAdapter(clrProperty, null);
		}
		return null;
	};
	$System_Windows_Markup_PropertyAdapter.$GetClrProperty = function(containingType, propertyName) {
		var propertyMemberName = propertyName.get_MemberName();
		var propertyContainingType = (propertyName.get_IsMemberName() ? $System_Windows_Markup_TypeParser.ParseType(propertyName.get_ContainingTypeName()) : containingType);
		return Granular.Extensions.TypeExtensions.GetInstanceProperty(propertyContainingType, propertyMemberName);
	};
	global.System.Windows.Markup.PropertyAdapter = $System_Windows_Markup_PropertyAdapter;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.PropertyAttribute
	var $System_Windows_Markup_PropertyAttribute = function(name) {
		this.$2$NameField = null;
		this.set_Name(name);
	};
	$System_Windows_Markup_PropertyAttribute.__typeName = 'System.Windows.Markup.PropertyAttribute';
	$System_Windows_Markup_PropertyAttribute.GetPropertyName = function(T) {
		return function(type) {
			return Enumerable.from(ss.getAttributes(type, null, true)).ofType(T).select(function(attribute) {
				return attribute.get_Name();
			}).defaultIfEmpty('').first();
		};
	};
	global.System.Windows.Markup.PropertyAttribute = $System_Windows_Markup_PropertyAttribute;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.PropertyPathParser
	var $System_Windows_Markup_PropertyPathParser = function(text, namespaces) {
		this.$text = null;
		this.$namespaces = null;
		this.$tokens = null;
		this.$text = text;
		this.$namespaces = namespaces;
	};
	$System_Windows_Markup_PropertyPathParser.__typeName = 'System.Windows.Markup.PropertyPathParser';
	global.System.Windows.Markup.PropertyPathParser = $System_Windows_Markup_PropertyPathParser;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.RoutedEventAdapter
	var $System_Windows_Markup_RoutedEventAdapter = function(routedEvent) {
		this.$routedEvent = null;
		this.$routedEvent = routedEvent;
	};
	$System_Windows_Markup_RoutedEventAdapter.__typeName = 'System.Windows.Markup.RoutedEventAdapter';
	global.System.Windows.Markup.RoutedEventAdapter = $System_Windows_Markup_RoutedEventAdapter;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.RuntimeNamePropertyAttribute
	var $System_Windows_Markup_RuntimeNamePropertyAttribute = function(name) {
		$System_Windows_Markup_PropertyAttribute.call(this, name);
		//
	};
	$System_Windows_Markup_RuntimeNamePropertyAttribute.__typeName = 'System.Windows.Markup.RuntimeNamePropertyAttribute';
	global.System.Windows.Markup.RuntimeNamePropertyAttribute = $System_Windows_Markup_RuntimeNamePropertyAttribute;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.TypeConverter
	var $System_Windows_Markup_TypeConverter = function() {
	};
	$System_Windows_Markup_TypeConverter.__typeName = 'System.Windows.Markup.TypeConverter';
	$System_Windows_Markup_TypeConverter.TryConvertValue = function(value, type, namespaces, result) {
		if (ss.isInstanceOfType(value, type)) {
			result.$ = value;
			return true;
		}
		var typeConverter = $System_Windows_Markup_KnownTypes.GetTypeConverter(type);
		if (ss.isValue(typeConverter)) {
			result.$ = typeConverter.ConvertFrom(namespaces, value);
			return true;
		}
		result.$ = null;
		return false;
	};
	$System_Windows_Markup_TypeConverter.ConvertValue = function(value, type, namespaces) {
		var result = {};
		if (!$System_Windows_Markup_TypeConverter.TryConvertValue(value, type, namespaces, result)) {
			throw new Granular.Exception('Can\'t convert "{0}" to {1}', [value, ss.getTypeName(type)]);
		}
		return result.$;
	};
	global.System.Windows.Markup.TypeConverter = $System_Windows_Markup_TypeConverter;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.TypeConverterAttribute
	var $System_Windows_Markup_TypeConverterAttribute = function(converterType) {
		this.$2$ConverterTypeField = null;
		this.set_ConverterType(converterType);
	};
	$System_Windows_Markup_TypeConverterAttribute.__typeName = 'System.Windows.Markup.TypeConverterAttribute';
	global.System.Windows.Markup.TypeConverterAttribute = $System_Windows_Markup_TypeConverterAttribute;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.TypeParser
	var $System_Windows_Markup_TypeParser = function() {
	};
	$System_Windows_Markup_TypeParser.__typeName = 'System.Windows.Markup.TypeParser';
	$System_Windows_Markup_TypeParser.ParseType$1 = function(prefixedTypeName, namespaces) {
		return $System_Windows_Markup_TypeParser.ParseType(System.Xaml.XamlName.FromPrefixedName(prefixedTypeName, namespaces));
	};
	$System_Windows_Markup_TypeParser.TryParseType$1 = function(prefixedTypeName, namespaces, type) {
		return $System_Windows_Markup_TypeParser.TryParseType(System.Xaml.XamlName.FromPrefixedName(prefixedTypeName, namespaces), type);
	};
	$System_Windows_Markup_TypeParser.ParseType = function(name) {
		var type = {};
		if (!$System_Windows_Markup_TypeParser.TryParseType(name, type)) {
			throw new Granular.Exception('Type "{0}" wasn\'t found', [name]);
		}
		return type.$;
	};
	$System_Windows_Markup_TypeParser.TryParseType = function(name, type) {
		return $System_Windows_Markup_TypeParser.$resolvedTypesCache.TryGetValue(name, type);
	};
	$System_Windows_Markup_TypeParser.TryResolveType = function(name, type) {
		if ($System_Windows_Markup_XamlTypes.TryParseXamlType(name, type)) {
			return true;
		}
		var extensionName = new System.Xaml.XamlName(ss.formatString('{0}Extension', name.get_LocalName()), name.get_NamespaceName());
		return $System_Windows_Markup_TypeParser.$TryGetType$1(name, type) || $System_Windows_Markup_TypeParser.$TryGetType$1(extensionName, type);
	};
	$System_Windows_Markup_TypeParser.$TryGetType$1 = function(xamlName, type) {
		if (ss.startsWithString(xamlName.get_NamespaceName(), $System_Windows_Markup_TypeParser.$ClrNamespacePrefix)) {
			var clrNamespace = $System_Windows_Markup_TypeParser.$GetClrNamespace(xamlName.get_NamespaceName().substring($System_Windows_Markup_TypeParser.$ClrNamespacePrefix.length));
			var assemblyName = $System_Windows_Markup_TypeParser.$GetAssemblyName(xamlName.get_NamespaceName().substring($System_Windows_Markup_TypeParser.$ClrNamespacePrefix.length));
			if ($System_Windows_Markup_TypeParser.$TryGetType$2(xamlName.get_LocalName(), clrNamespace, assemblyName, type)) {
				return true;
			}
			return false;
		}
		var $t1 = ss.getEnumerator($System_Windows_Markup_TypeParser.$GetXmlnsDefinitionAttributes());
		try {
			while ($t1.moveNext()) {
				var xmlnsDefinition = $t1.current();
				if (ss.referenceEquals(xmlnsDefinition.get_XmlNamespace(), xamlName.get_NamespaceName()) && $System_Windows_Markup_TypeParser.$TryGetType$2(xamlName.get_LocalName(), xmlnsDefinition.get_ClrNamespace(), xmlnsDefinition.get_AssemblyName(), type)) {
					return true;
				}
			}
		}
		finally {
			$t1.dispose();
		}
		type.$ = null;
		return false;
	};
	$System_Windows_Markup_TypeParser.$TryGetType$2 = function(localName, clrNamespace, assemblyName, type) {
		if (!Granular.Extensions.StringExtensions.IsNullOrEmpty(assemblyName)) {
			return $System_Windows_Markup_TypeParser.$TryGetType(ss.formatString('{0}.{1}, {2}', clrNamespace, localName, assemblyName), type);
			;
		}
		if ($System_Windows_Markup_TypeParser.$TryGetType(ss.formatString('{0}.{1}', clrNamespace, localName), type)) {
			return true;
		}
		var $t1 = ss.getAssemblies();
		for (var $t2 = 0; $t2 < $t1.length; $t2++) {
			var assembly = $t1[$t2];
			if ($System_Windows_Markup_TypeParser.$TryGetType(ss.formatString('{0}.{1}, {2}', clrNamespace, localName, System.AssemblyExtensions.GetName(assembly).get_Name()), type)) {
				return true;
			}
		}
		type.$ = null;
		return false;
	};
	$System_Windows_Markup_TypeParser.$TryGetType = function(qualifiedTypeName, type) {
		type.$ = Granular.Compatibility.Type.GetType(qualifiedTypeName);
		return ss.isValue(type.$);
	};
	$System_Windows_Markup_TypeParser.$GetClrNamespace = function(qualifiedNamespace) {
		var assemblyQualifierIndex = qualifiedNamespace.indexOf($System_Windows_Markup_TypeParser.$AssemblyQualifier);
		return ((assemblyQualifierIndex === -1) ? qualifiedNamespace : qualifiedNamespace.substr(0, assemblyQualifierIndex));
	};
	$System_Windows_Markup_TypeParser.$GetAssemblyName = function(qualifiedNamespace) {
		var assemblyQualifierIndex = qualifiedNamespace.indexOf($System_Windows_Markup_TypeParser.$AssemblyQualifier);
		return ((assemblyQualifierIndex === -1) ? '' : qualifiedNamespace.substring(assemblyQualifierIndex + $System_Windows_Markup_TypeParser.$AssemblyQualifier.length));
	};
	$System_Windows_Markup_TypeParser.$GetXmlnsDefinitionAttributes = function() {
		if (ss.isNullOrUndefined($System_Windows_Markup_TypeParser.$xmlnsDefinitionAttributesCache)) {
			$System_Windows_Markup_TypeParser.$xmlnsDefinitionAttributesCache = Enumerable.from(ss.getAssemblies()).selectMany(function(assembly) {
				return Granular.Extensions.AssemblyExtensions.GetCustomAttributesCached($System_Windows_Markup_XmlnsDefinitionAttribute).call(null, assembly);
			}).toArray();
		}
		return $System_Windows_Markup_TypeParser.$xmlnsDefinitionAttributesCache;
	};
	global.System.Windows.Markup.TypeParser = $System_Windows_Markup_TypeParser;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.ValueProvider
	var $System_Windows_Markup_ValueProvider = function(provideValue) {
		this.$provideValue = null;
		this.$provideValue = provideValue;
	};
	$System_Windows_Markup_ValueProvider.__typeName = 'System.Windows.Markup.ValueProvider';
	global.System.Windows.Markup.ValueProvider = $System_Windows_Markup_ValueProvider;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.XamlElementExtensions
	var $System_Windows_Markup_XamlElementExtensions = function() {
	};
	$System_Windows_Markup_XamlElementExtensions.__typeName = 'System.Windows.Markup.XamlElementExtensions';
	$System_Windows_Markup_XamlElementExtensions.GetElementType = function(element) {
		return $System_Windows_Markup_TypeParser.ParseType(element.get_Name());
	};
	global.System.Windows.Markup.XamlElementExtensions = $System_Windows_Markup_XamlElementExtensions;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.XamlLoader
	var $System_Windows_Markup_XamlLoader = function() {
	};
	$System_Windows_Markup_XamlLoader.__typeName = 'System.Windows.Markup.XamlLoader';
	$System_Windows_Markup_XamlLoader.Load = function(resource) {
		var factory = $System_Windows_Markup_ElementFactory.FromXamlElement(resource, null);
		return factory.CreateElement(new $System_Windows_Markup_InitializeContext());
	};
	$System_Windows_Markup_XamlLoader.Load$1 = function(target, resource) {
		var initializer = new $System_Windows_Markup_ElementInitializer(resource);
		initializer.InitializeElement(target, new $System_Windows_Markup_InitializeContext());
	};
	global.System.Windows.Markup.XamlLoader = $System_Windows_Markup_XamlLoader;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.XamlTypes
	var $System_Windows_Markup_XamlTypes = function() {
	};
	$System_Windows_Markup_XamlTypes.__typeName = 'System.Windows.Markup.XamlTypes';
	$System_Windows_Markup_XamlTypes.TryParseXamlType = function(name, type) {
		return $System_Windows_Markup_XamlTypes.$TypeProviders.tryGetValue(name, type);
	};
	$System_Windows_Markup_XamlTypes.ParseXamlType = function(xamlName) {
		var type = {};
		if (!$System_Windows_Markup_XamlTypes.TryParseXamlType(xamlName, type)) {
			throw new Granular.Exception("Type {0} wasn't found", [xamlName]);
		}
		return type.$;
	};
	global.System.Windows.Markup.XamlTypes = $System_Windows_Markup_XamlTypes;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Markup.XmlnsDefinitionAttribute
	var $System_Windows_Markup_XmlnsDefinitionAttribute = function(xmlNamespace, clrNamespace, assemblyName) {
		this.$2$XmlNamespaceField = null;
		this.$2$ClrNamespaceField = null;
		this.$2$AssemblyNameField = null;
		this.set_XmlNamespace(xmlNamespace);
		this.set_ClrNamespace(clrNamespace);
		this.set_AssemblyName(assemblyName);
	};
	$System_Windows_Markup_XmlnsDefinitionAttribute.__typeName = 'System.Windows.Markup.XmlnsDefinitionAttribute';
	global.System.Windows.Markup.XmlnsDefinitionAttribute = $System_Windows_Markup_XmlnsDefinitionAttribute;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Brush
	var $System_Windows_Media_Brush = function() {
		$System_Windows_Media_Animation_Animatable.call(this);
	};
	$System_Windows_Media_Brush.__typeName = 'System.Windows.Media.Brush';
	global.System.Windows.Media.Brush = $System_Windows_Media_Brush;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Brushes
	var $System_Windows_Media_Brushes = function() {
	};
	$System_Windows_Media_Brushes.__typeName = 'System.Windows.Media.Brushes';
	$System_Windows_Media_Brushes.get_AliceBlue = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_AliceBlue());
	};
	$System_Windows_Media_Brushes.get_AntiqueWhite = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_AntiqueWhite());
	};
	$System_Windows_Media_Brushes.get_Aqua = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Aqua());
	};
	$System_Windows_Media_Brushes.get_Aquamarine = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Aquamarine());
	};
	$System_Windows_Media_Brushes.get_Azure = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Azure());
	};
	$System_Windows_Media_Brushes.get_Beige = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Beige());
	};
	$System_Windows_Media_Brushes.get_Bisque = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Bisque());
	};
	$System_Windows_Media_Brushes.get_Black = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Black());
	};
	$System_Windows_Media_Brushes.get_BlanchedAlmond = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_BlanchedAlmond());
	};
	$System_Windows_Media_Brushes.get_Blue = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Blue());
	};
	$System_Windows_Media_Brushes.get_BlueViolet = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_BlueViolet());
	};
	$System_Windows_Media_Brushes.get_Brown = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Brown());
	};
	$System_Windows_Media_Brushes.get_BurlyWood = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_BurlyWood());
	};
	$System_Windows_Media_Brushes.get_CadetBlue = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_CadetBlue());
	};
	$System_Windows_Media_Brushes.get_Chartreuse = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Chartreuse());
	};
	$System_Windows_Media_Brushes.get_Chocolate = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Chocolate());
	};
	$System_Windows_Media_Brushes.get_Coral = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Coral());
	};
	$System_Windows_Media_Brushes.get_CornflowerBlue = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_CornflowerBlue());
	};
	$System_Windows_Media_Brushes.get_Cornsilk = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Cornsilk());
	};
	$System_Windows_Media_Brushes.get_Crimson = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Crimson());
	};
	$System_Windows_Media_Brushes.get_Cyan = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Cyan());
	};
	$System_Windows_Media_Brushes.get_DarkBlue = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_DarkBlue());
	};
	$System_Windows_Media_Brushes.get_DarkCyan = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_DarkCyan());
	};
	$System_Windows_Media_Brushes.get_DarkGoldenrod = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_DarkGoldenrod());
	};
	$System_Windows_Media_Brushes.get_DarkGray = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_DarkGray());
	};
	$System_Windows_Media_Brushes.get_DarkGreen = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_DarkGreen());
	};
	$System_Windows_Media_Brushes.get_DarkKhaki = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_DarkKhaki());
	};
	$System_Windows_Media_Brushes.get_DarkMagenta = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_DarkMagenta());
	};
	$System_Windows_Media_Brushes.get_DarkOliveGreen = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_DarkOliveGreen());
	};
	$System_Windows_Media_Brushes.get_DarkOrange = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_DarkOrange());
	};
	$System_Windows_Media_Brushes.get_DarkOrchid = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_DarkOrchid());
	};
	$System_Windows_Media_Brushes.get_DarkRed = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_DarkRed());
	};
	$System_Windows_Media_Brushes.get_DarkSalmon = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_DarkSalmon());
	};
	$System_Windows_Media_Brushes.get_DarkSeaGreen = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_DarkSeaGreen());
	};
	$System_Windows_Media_Brushes.get_DarkSlateBlue = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_DarkSlateBlue());
	};
	$System_Windows_Media_Brushes.get_DarkSlateGray = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_DarkSlateGray());
	};
	$System_Windows_Media_Brushes.get_DarkTurquoise = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_DarkTurquoise());
	};
	$System_Windows_Media_Brushes.get_DarkViolet = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_DarkViolet());
	};
	$System_Windows_Media_Brushes.get_DeepPink = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_DeepPink());
	};
	$System_Windows_Media_Brushes.get_DeepSkyBlue = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_DeepSkyBlue());
	};
	$System_Windows_Media_Brushes.get_DimGray = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_DimGray());
	};
	$System_Windows_Media_Brushes.get_DodgerBlue = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_DodgerBlue());
	};
	$System_Windows_Media_Brushes.get_Firebrick = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Firebrick());
	};
	$System_Windows_Media_Brushes.get_FloralWhite = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_FloralWhite());
	};
	$System_Windows_Media_Brushes.get_ForestGreen = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_ForestGreen());
	};
	$System_Windows_Media_Brushes.get_Fuchsia = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Fuchsia());
	};
	$System_Windows_Media_Brushes.get_Gainsboro = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Gainsboro());
	};
	$System_Windows_Media_Brushes.get_GhostWhite = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_GhostWhite());
	};
	$System_Windows_Media_Brushes.get_Gold = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Gold());
	};
	$System_Windows_Media_Brushes.get_Goldenrod = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Goldenrod());
	};
	$System_Windows_Media_Brushes.get_Gray = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Gray());
	};
	$System_Windows_Media_Brushes.get_Green = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Green());
	};
	$System_Windows_Media_Brushes.get_GreenYellow = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_GreenYellow());
	};
	$System_Windows_Media_Brushes.get_Honeydew = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Honeydew());
	};
	$System_Windows_Media_Brushes.get_HotPink = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_HotPink());
	};
	$System_Windows_Media_Brushes.get_IndianRed = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_IndianRed());
	};
	$System_Windows_Media_Brushes.get_Indigo = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Indigo());
	};
	$System_Windows_Media_Brushes.get_Ivory = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Ivory());
	};
	$System_Windows_Media_Brushes.get_Khaki = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Khaki());
	};
	$System_Windows_Media_Brushes.get_Lavender = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Lavender());
	};
	$System_Windows_Media_Brushes.get_LavenderBlush = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_LavenderBlush());
	};
	$System_Windows_Media_Brushes.get_LawnGreen = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_LawnGreen());
	};
	$System_Windows_Media_Brushes.get_LemonChiffon = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_LemonChiffon());
	};
	$System_Windows_Media_Brushes.get_LightBlue = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_LightBlue());
	};
	$System_Windows_Media_Brushes.get_LightCoral = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_LightCoral());
	};
	$System_Windows_Media_Brushes.get_LightCyan = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_LightCyan());
	};
	$System_Windows_Media_Brushes.get_LightGoldenrodYellow = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_LightGoldenrodYellow());
	};
	$System_Windows_Media_Brushes.get_LightGray = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_LightGray());
	};
	$System_Windows_Media_Brushes.get_LightGreen = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_LightGreen());
	};
	$System_Windows_Media_Brushes.get_LightPink = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_LightPink());
	};
	$System_Windows_Media_Brushes.get_LightSalmon = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_LightSalmon());
	};
	$System_Windows_Media_Brushes.get_LightSeaGreen = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_LightSeaGreen());
	};
	$System_Windows_Media_Brushes.get_LightSkyBlue = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_LightSkyBlue());
	};
	$System_Windows_Media_Brushes.get_LightSlateGray = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_LightSlateGray());
	};
	$System_Windows_Media_Brushes.get_LightSteelBlue = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_LightSteelBlue());
	};
	$System_Windows_Media_Brushes.get_LightYellow = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_LightYellow());
	};
	$System_Windows_Media_Brushes.get_Lime = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Lime());
	};
	$System_Windows_Media_Brushes.get_LimeGreen = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_LimeGreen());
	};
	$System_Windows_Media_Brushes.get_Linen = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Linen());
	};
	$System_Windows_Media_Brushes.get_Magenta = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Magenta());
	};
	$System_Windows_Media_Brushes.get_Maroon = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Maroon());
	};
	$System_Windows_Media_Brushes.get_MediumAquamarine = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_MediumAquamarine());
	};
	$System_Windows_Media_Brushes.get_MediumBlue = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_MediumBlue());
	};
	$System_Windows_Media_Brushes.get_MediumOrchid = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_MediumOrchid());
	};
	$System_Windows_Media_Brushes.get_MediumPurple = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_MediumPurple());
	};
	$System_Windows_Media_Brushes.get_MediumSeaGreen = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_MediumSeaGreen());
	};
	$System_Windows_Media_Brushes.get_MediumSlateBlue = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_MediumSlateBlue());
	};
	$System_Windows_Media_Brushes.get_MediumSpringGreen = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_MediumSpringGreen());
	};
	$System_Windows_Media_Brushes.get_MediumTurquoise = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_MediumTurquoise());
	};
	$System_Windows_Media_Brushes.get_MediumVioletRed = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_MediumVioletRed());
	};
	$System_Windows_Media_Brushes.get_MidnightBlue = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_MidnightBlue());
	};
	$System_Windows_Media_Brushes.get_MintCream = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_MintCream());
	};
	$System_Windows_Media_Brushes.get_MistyRose = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_MistyRose());
	};
	$System_Windows_Media_Brushes.get_Moccasin = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Moccasin());
	};
	$System_Windows_Media_Brushes.get_NavajoWhite = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_NavajoWhite());
	};
	$System_Windows_Media_Brushes.get_Navy = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Navy());
	};
	$System_Windows_Media_Brushes.get_OldLace = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_OldLace());
	};
	$System_Windows_Media_Brushes.get_Olive = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Olive());
	};
	$System_Windows_Media_Brushes.get_OliveDrab = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_OliveDrab());
	};
	$System_Windows_Media_Brushes.get_Orange = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Orange());
	};
	$System_Windows_Media_Brushes.get_OrangeRed = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_OrangeRed());
	};
	$System_Windows_Media_Brushes.get_Orchid = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Orchid());
	};
	$System_Windows_Media_Brushes.get_PaleGoldenrod = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_PaleGoldenrod());
	};
	$System_Windows_Media_Brushes.get_PaleGreen = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_PaleGreen());
	};
	$System_Windows_Media_Brushes.get_PaleTurquoise = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_PaleTurquoise());
	};
	$System_Windows_Media_Brushes.get_PaleVioletRed = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_PaleVioletRed());
	};
	$System_Windows_Media_Brushes.get_PapayaWhip = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_PapayaWhip());
	};
	$System_Windows_Media_Brushes.get_PeachPuff = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_PeachPuff());
	};
	$System_Windows_Media_Brushes.get_Peru = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Peru());
	};
	$System_Windows_Media_Brushes.get_Pink = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Pink());
	};
	$System_Windows_Media_Brushes.get_Plum = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Plum());
	};
	$System_Windows_Media_Brushes.get_PowderBlue = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_PowderBlue());
	};
	$System_Windows_Media_Brushes.get_Purple = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Purple());
	};
	$System_Windows_Media_Brushes.get_Red = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Red());
	};
	$System_Windows_Media_Brushes.get_RosyBrown = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_RosyBrown());
	};
	$System_Windows_Media_Brushes.get_RoyalBlue = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_RoyalBlue());
	};
	$System_Windows_Media_Brushes.get_SaddleBrown = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_SaddleBrown());
	};
	$System_Windows_Media_Brushes.get_Salmon = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Salmon());
	};
	$System_Windows_Media_Brushes.get_SandyBrown = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_SandyBrown());
	};
	$System_Windows_Media_Brushes.get_SeaGreen = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_SeaGreen());
	};
	$System_Windows_Media_Brushes.get_SeaShell = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_SeaShell());
	};
	$System_Windows_Media_Brushes.get_Sienna = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Sienna());
	};
	$System_Windows_Media_Brushes.get_Silver = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Silver());
	};
	$System_Windows_Media_Brushes.get_SkyBlue = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_SkyBlue());
	};
	$System_Windows_Media_Brushes.get_SlateBlue = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_SlateBlue());
	};
	$System_Windows_Media_Brushes.get_SlateGray = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_SlateGray());
	};
	$System_Windows_Media_Brushes.get_Snow = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Snow());
	};
	$System_Windows_Media_Brushes.get_SpringGreen = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_SpringGreen());
	};
	$System_Windows_Media_Brushes.get_SteelBlue = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_SteelBlue());
	};
	$System_Windows_Media_Brushes.get_Tan = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Tan());
	};
	$System_Windows_Media_Brushes.get_Teal = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Teal());
	};
	$System_Windows_Media_Brushes.get_Thistle = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Thistle());
	};
	$System_Windows_Media_Brushes.get_Tomato = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Tomato());
	};
	$System_Windows_Media_Brushes.get_Transparent = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Transparent());
	};
	$System_Windows_Media_Brushes.get_Turquoise = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Turquoise());
	};
	$System_Windows_Media_Brushes.get_Violet = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Violet());
	};
	$System_Windows_Media_Brushes.get_Wheat = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Wheat());
	};
	$System_Windows_Media_Brushes.get_White = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_White());
	};
	$System_Windows_Media_Brushes.get_WhiteSmoke = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_WhiteSmoke());
	};
	$System_Windows_Media_Brushes.get_Yellow = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_Yellow());
	};
	$System_Windows_Media_Brushes.get_YellowGreen = function() {
		return $System_Windows_Media_Brushes.$brushes.GetValue($System_Windows_Media_Colors.get_YellowGreen());
	};
	$System_Windows_Media_Brushes.$CreateBrush = function(color) {
		var brush = new $System_Windows_Media_SolidColorBrush.$ctor1(color);
		brush.Freeze();
		return brush;
	};
	global.System.Windows.Media.Brushes = $System_Windows_Media_Brushes;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.BrushMappingMode
	var $System_Windows_Media_BrushMappingMode = function() {
	};
	$System_Windows_Media_BrushMappingMode.__typeName = 'System.Windows.Media.BrushMappingMode';
	global.System.Windows.Media.BrushMappingMode = $System_Windows_Media_BrushMappingMode;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.BrushTypeConverter
	var $System_Windows_Media_BrushTypeConverter = function() {
		this.$colorTypeConverter = null;
		this.$colorTypeConverter = new $System_Windows_Media_ColorTypeConverter();
	};
	$System_Windows_Media_BrushTypeConverter.__typeName = 'System.Windows.Media.BrushTypeConverter';
	global.System.Windows.Media.BrushTypeConverter = $System_Windows_Media_BrushTypeConverter;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Color
	var $System_Windows_Media_Color = function(a, r, g, b) {
		this.$1$AField = 0;
		this.$1$RField = 0;
		this.$1$GField = 0;
		this.$1$BField = 0;
		this.set_A(a);
		this.set_R(r);
		this.set_G(g);
		this.set_B(b);
	};
	$System_Windows_Media_Color.__typeName = 'System.Windows.Media.Color';
	$System_Windows_Media_Color.op_Equality = function(color1, color2) {
		return (ss.referenceEquals(color1, null) ? ss.referenceEquals(color2, null) : color1.equals(color2));
	};
	$System_Windows_Media_Color.op_Inequality = function(color1, color2) {
		return !$System_Windows_Media_Color.op_Equality(color1, color2);
	};
	$System_Windows_Media_Color.op_Addition = function(color1, color2) {
		return new $System_Windows_Media_Color(Granular.Extensions.IntExtensions.Bounds(color1.get_A() + color2.get_A(), 0, 255), Granular.Extensions.IntExtensions.Bounds(color1.get_R() + color2.get_R(), 0, 255), Granular.Extensions.IntExtensions.Bounds(color1.get_G() + color2.get_G(), 0, 255), Granular.Extensions.IntExtensions.Bounds(color1.get_B() + color2.get_B(), 0, 255));
	};
	$System_Windows_Media_Color.op_Subtraction = function(color1, color2) {
		return new $System_Windows_Media_Color(Granular.Extensions.IntExtensions.Bounds(color1.get_A() - color2.get_A(), 0, 255), Granular.Extensions.IntExtensions.Bounds(color1.get_R() - color2.get_R(), 0, 255), Granular.Extensions.IntExtensions.Bounds(color1.get_G() - color2.get_G(), 0, 255), Granular.Extensions.IntExtensions.Bounds(color1.get_B() - color2.get_B(), 0, 255));
	};
	$System_Windows_Media_Color.op_Multiply$1 = function(color, scalar) {
		return new $System_Windows_Media_Color(ss.Int32.trunc(Granular.Extensions.DoubleExtensions.Bounds(scalar * color.get_A(), 0, 255)), ss.Int32.trunc(Granular.Extensions.DoubleExtensions.Bounds(scalar * color.get_R(), 0, 255)), ss.Int32.trunc(Granular.Extensions.DoubleExtensions.Bounds(scalar * color.get_G(), 0, 255)), ss.Int32.trunc(Granular.Extensions.DoubleExtensions.Bounds(scalar * color.get_B(), 0, 255)));
	};
	$System_Windows_Media_Color.op_Multiply = function(scalar, color) {
		return $System_Windows_Media_Color.op_Multiply$1(color, scalar);
	};
	$System_Windows_Media_Color.FromArgb = function(a, r, g, b) {
		return new $System_Windows_Media_Color(a, r, g, b);
	};
	$System_Windows_Media_Color.FromRgb = function(r, g, b) {
		return new $System_Windows_Media_Color(255, r, g, b);
	};
	$System_Windows_Media_Color.FromUInt32 = function(argb) {
		return new $System_Windows_Media_Color((argb & 4278190080) >>> 24, (argb & 16711680) >>> 16, (argb & 65280) >>> 8, argb & 255);
	};
	global.System.Windows.Media.Color = $System_Windows_Media_Color;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.ColorExtensions
	var $System_Windows_Media_ColorExtensions = function() {
	};
	$System_Windows_Media_ColorExtensions.__typeName = 'System.Windows.Media.ColorExtensions';
	$System_Windows_Media_ColorExtensions.ApplyOpacity = function(color, opacity) {
		return ((opacity === 1) ? color : $System_Windows_Media_Color.FromArgb(ss.Int32.trunc(opacity * color.get_A()), color.get_R(), color.get_G(), color.get_B()));
	};
	global.System.Windows.Media.ColorExtensions = $System_Windows_Media_ColorExtensions;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Colors
	var $System_Windows_Media_Colors = function() {
	};
	$System_Windows_Media_Colors.__typeName = 'System.Windows.Media.Colors';
	$System_Windows_Media_Colors.get_AliceBlue = function() {
		return $System_Windows_Media_Color.FromUInt32(4293982463);
	};
	$System_Windows_Media_Colors.get_AntiqueWhite = function() {
		return $System_Windows_Media_Color.FromUInt32(4294634455);
	};
	$System_Windows_Media_Colors.get_Aqua = function() {
		return $System_Windows_Media_Color.FromUInt32(4278255615);
	};
	$System_Windows_Media_Colors.get_Aquamarine = function() {
		return $System_Windows_Media_Color.FromUInt32(4286578644);
	};
	$System_Windows_Media_Colors.get_Azure = function() {
		return $System_Windows_Media_Color.FromUInt32(4293984255);
	};
	$System_Windows_Media_Colors.get_Beige = function() {
		return $System_Windows_Media_Color.FromUInt32(4294309340);
	};
	$System_Windows_Media_Colors.get_Bisque = function() {
		return $System_Windows_Media_Color.FromUInt32(4294960324);
	};
	$System_Windows_Media_Colors.get_Black = function() {
		return $System_Windows_Media_Color.FromUInt32(4278190080);
	};
	$System_Windows_Media_Colors.get_BlanchedAlmond = function() {
		return $System_Windows_Media_Color.FromUInt32(4294962125);
	};
	$System_Windows_Media_Colors.get_Blue = function() {
		return $System_Windows_Media_Color.FromUInt32(4278190335);
	};
	$System_Windows_Media_Colors.get_BlueViolet = function() {
		return $System_Windows_Media_Color.FromUInt32(4287245282);
	};
	$System_Windows_Media_Colors.get_Brown = function() {
		return $System_Windows_Media_Color.FromUInt32(4289014314);
	};
	$System_Windows_Media_Colors.get_BurlyWood = function() {
		return $System_Windows_Media_Color.FromUInt32(4292786311);
	};
	$System_Windows_Media_Colors.get_CadetBlue = function() {
		return $System_Windows_Media_Color.FromUInt32(4284456608);
	};
	$System_Windows_Media_Colors.get_Chartreuse = function() {
		return $System_Windows_Media_Color.FromUInt32(4286578432);
	};
	$System_Windows_Media_Colors.get_Chocolate = function() {
		return $System_Windows_Media_Color.FromUInt32(4291979550);
	};
	$System_Windows_Media_Colors.get_Coral = function() {
		return $System_Windows_Media_Color.FromUInt32(4294934352);
	};
	$System_Windows_Media_Colors.get_CornflowerBlue = function() {
		return $System_Windows_Media_Color.FromUInt32(4284782061);
	};
	$System_Windows_Media_Colors.get_Cornsilk = function() {
		return $System_Windows_Media_Color.FromUInt32(4294965468);
	};
	$System_Windows_Media_Colors.get_Crimson = function() {
		return $System_Windows_Media_Color.FromUInt32(4292613180);
	};
	$System_Windows_Media_Colors.get_Cyan = function() {
		return $System_Windows_Media_Color.FromUInt32(4278255615);
	};
	$System_Windows_Media_Colors.get_DarkBlue = function() {
		return $System_Windows_Media_Color.FromUInt32(4278190219);
	};
	$System_Windows_Media_Colors.get_DarkCyan = function() {
		return $System_Windows_Media_Color.FromUInt32(4278225803);
	};
	$System_Windows_Media_Colors.get_DarkGoldenrod = function() {
		return $System_Windows_Media_Color.FromUInt32(4290283019);
	};
	$System_Windows_Media_Colors.get_DarkGray = function() {
		return $System_Windows_Media_Color.FromUInt32(4289309097);
	};
	$System_Windows_Media_Colors.get_DarkGreen = function() {
		return $System_Windows_Media_Color.FromUInt32(4278215680);
	};
	$System_Windows_Media_Colors.get_DarkKhaki = function() {
		return $System_Windows_Media_Color.FromUInt32(4290623339);
	};
	$System_Windows_Media_Colors.get_DarkMagenta = function() {
		return $System_Windows_Media_Color.FromUInt32(4287299723);
	};
	$System_Windows_Media_Colors.get_DarkOliveGreen = function() {
		return $System_Windows_Media_Color.FromUInt32(4283788079);
	};
	$System_Windows_Media_Colors.get_DarkOrange = function() {
		return $System_Windows_Media_Color.FromUInt32(4294937600);
	};
	$System_Windows_Media_Colors.get_DarkOrchid = function() {
		return $System_Windows_Media_Color.FromUInt32(4288230092);
	};
	$System_Windows_Media_Colors.get_DarkRed = function() {
		return $System_Windows_Media_Color.FromUInt32(4287299584);
	};
	$System_Windows_Media_Colors.get_DarkSalmon = function() {
		return $System_Windows_Media_Color.FromUInt32(4293498490);
	};
	$System_Windows_Media_Colors.get_DarkSeaGreen = function() {
		return $System_Windows_Media_Color.FromUInt32(4287609999);
	};
	$System_Windows_Media_Colors.get_DarkSlateBlue = function() {
		return $System_Windows_Media_Color.FromUInt32(4282924427);
	};
	$System_Windows_Media_Colors.get_DarkSlateGray = function() {
		return $System_Windows_Media_Color.FromUInt32(4281290575);
	};
	$System_Windows_Media_Colors.get_DarkTurquoise = function() {
		return $System_Windows_Media_Color.FromUInt32(4278243025);
	};
	$System_Windows_Media_Colors.get_DarkViolet = function() {
		return $System_Windows_Media_Color.FromUInt32(4287889619);
	};
	$System_Windows_Media_Colors.get_DeepPink = function() {
		return $System_Windows_Media_Color.FromUInt32(4294907027);
	};
	$System_Windows_Media_Colors.get_DeepSkyBlue = function() {
		return $System_Windows_Media_Color.FromUInt32(4278239231);
	};
	$System_Windows_Media_Colors.get_DimGray = function() {
		return $System_Windows_Media_Color.FromUInt32(4285098345);
	};
	$System_Windows_Media_Colors.get_DodgerBlue = function() {
		return $System_Windows_Media_Color.FromUInt32(4280193279);
	};
	$System_Windows_Media_Colors.get_Firebrick = function() {
		return $System_Windows_Media_Color.FromUInt32(4289864226);
	};
	$System_Windows_Media_Colors.get_FloralWhite = function() {
		return $System_Windows_Media_Color.FromUInt32(4294966000);
	};
	$System_Windows_Media_Colors.get_ForestGreen = function() {
		return $System_Windows_Media_Color.FromUInt32(4280453922);
	};
	$System_Windows_Media_Colors.get_Fuchsia = function() {
		return $System_Windows_Media_Color.FromUInt32(4294902015);
	};
	$System_Windows_Media_Colors.get_Gainsboro = function() {
		return $System_Windows_Media_Color.FromUInt32(4292664540);
	};
	$System_Windows_Media_Colors.get_GhostWhite = function() {
		return $System_Windows_Media_Color.FromUInt32(4294506751);
	};
	$System_Windows_Media_Colors.get_Gold = function() {
		return $System_Windows_Media_Color.FromUInt32(4294956800);
	};
	$System_Windows_Media_Colors.get_Goldenrod = function() {
		return $System_Windows_Media_Color.FromUInt32(4292519200);
	};
	$System_Windows_Media_Colors.get_Gray = function() {
		return $System_Windows_Media_Color.FromUInt32(4286611584);
	};
	$System_Windows_Media_Colors.get_Green = function() {
		return $System_Windows_Media_Color.FromUInt32(4278222848);
	};
	$System_Windows_Media_Colors.get_GreenYellow = function() {
		return $System_Windows_Media_Color.FromUInt32(4289593135);
	};
	$System_Windows_Media_Colors.get_Honeydew = function() {
		return $System_Windows_Media_Color.FromUInt32(4293984240);
	};
	$System_Windows_Media_Colors.get_HotPink = function() {
		return $System_Windows_Media_Color.FromUInt32(4294928820);
	};
	$System_Windows_Media_Colors.get_IndianRed = function() {
		return $System_Windows_Media_Color.FromUInt32(4291648604);
	};
	$System_Windows_Media_Colors.get_Indigo = function() {
		return $System_Windows_Media_Color.FromUInt32(4283105410);
	};
	$System_Windows_Media_Colors.get_Ivory = function() {
		return $System_Windows_Media_Color.FromUInt32(4294967280);
	};
	$System_Windows_Media_Colors.get_Khaki = function() {
		return $System_Windows_Media_Color.FromUInt32(4293977740);
	};
	$System_Windows_Media_Colors.get_Lavender = function() {
		return $System_Windows_Media_Color.FromUInt32(4293322490);
	};
	$System_Windows_Media_Colors.get_LavenderBlush = function() {
		return $System_Windows_Media_Color.FromUInt32(4294963445);
	};
	$System_Windows_Media_Colors.get_LawnGreen = function() {
		return $System_Windows_Media_Color.FromUInt32(4286381056);
	};
	$System_Windows_Media_Colors.get_LemonChiffon = function() {
		return $System_Windows_Media_Color.FromUInt32(4294965965);
	};
	$System_Windows_Media_Colors.get_LightBlue = function() {
		return $System_Windows_Media_Color.FromUInt32(4289583334);
	};
	$System_Windows_Media_Colors.get_LightCoral = function() {
		return $System_Windows_Media_Color.FromUInt32(4293951616);
	};
	$System_Windows_Media_Colors.get_LightCyan = function() {
		return $System_Windows_Media_Color.FromUInt32(4292935679);
	};
	$System_Windows_Media_Colors.get_LightGoldenrodYellow = function() {
		return $System_Windows_Media_Color.FromUInt32(4294638290);
	};
	$System_Windows_Media_Colors.get_LightGray = function() {
		return $System_Windows_Media_Color.FromUInt32(4292072403);
	};
	$System_Windows_Media_Colors.get_LightGreen = function() {
		return $System_Windows_Media_Color.FromUInt32(4287688336);
	};
	$System_Windows_Media_Colors.get_LightPink = function() {
		return $System_Windows_Media_Color.FromUInt32(4294948545);
	};
	$System_Windows_Media_Colors.get_LightSalmon = function() {
		return $System_Windows_Media_Color.FromUInt32(4294942842);
	};
	$System_Windows_Media_Colors.get_LightSeaGreen = function() {
		return $System_Windows_Media_Color.FromUInt32(4280332970);
	};
	$System_Windows_Media_Colors.get_LightSkyBlue = function() {
		return $System_Windows_Media_Color.FromUInt32(4287090426);
	};
	$System_Windows_Media_Colors.get_LightSlateGray = function() {
		return $System_Windows_Media_Color.FromUInt32(4286023833);
	};
	$System_Windows_Media_Colors.get_LightSteelBlue = function() {
		return $System_Windows_Media_Color.FromUInt32(4289774814);
	};
	$System_Windows_Media_Colors.get_LightYellow = function() {
		return $System_Windows_Media_Color.FromUInt32(4294967264);
	};
	$System_Windows_Media_Colors.get_Lime = function() {
		return $System_Windows_Media_Color.FromUInt32(4278255360);
	};
	$System_Windows_Media_Colors.get_LimeGreen = function() {
		return $System_Windows_Media_Color.FromUInt32(4281519410);
	};
	$System_Windows_Media_Colors.get_Linen = function() {
		return $System_Windows_Media_Color.FromUInt32(4294635750);
	};
	$System_Windows_Media_Colors.get_Magenta = function() {
		return $System_Windows_Media_Color.FromUInt32(4294902015);
	};
	$System_Windows_Media_Colors.get_Maroon = function() {
		return $System_Windows_Media_Color.FromUInt32(4286578688);
	};
	$System_Windows_Media_Colors.get_MediumAquamarine = function() {
		return $System_Windows_Media_Color.FromUInt32(4284927402);
	};
	$System_Windows_Media_Colors.get_MediumBlue = function() {
		return $System_Windows_Media_Color.FromUInt32(4278190285);
	};
	$System_Windows_Media_Colors.get_MediumOrchid = function() {
		return $System_Windows_Media_Color.FromUInt32(4290401747);
	};
	$System_Windows_Media_Colors.get_MediumPurple = function() {
		return $System_Windows_Media_Color.FromUInt32(4287852763);
	};
	$System_Windows_Media_Colors.get_MediumSeaGreen = function() {
		return $System_Windows_Media_Color.FromUInt32(4282168177);
	};
	$System_Windows_Media_Colors.get_MediumSlateBlue = function() {
		return $System_Windows_Media_Color.FromUInt32(4286277870);
	};
	$System_Windows_Media_Colors.get_MediumSpringGreen = function() {
		return $System_Windows_Media_Color.FromUInt32(4278254234);
	};
	$System_Windows_Media_Colors.get_MediumTurquoise = function() {
		return $System_Windows_Media_Color.FromUInt32(4282962380);
	};
	$System_Windows_Media_Colors.get_MediumVioletRed = function() {
		return $System_Windows_Media_Color.FromUInt32(4291237253);
	};
	$System_Windows_Media_Colors.get_MidnightBlue = function() {
		return $System_Windows_Media_Color.FromUInt32(4279834992);
	};
	$System_Windows_Media_Colors.get_MintCream = function() {
		return $System_Windows_Media_Color.FromUInt32(4294311930);
	};
	$System_Windows_Media_Colors.get_MistyRose = function() {
		return $System_Windows_Media_Color.FromUInt32(4294960353);
	};
	$System_Windows_Media_Colors.get_Moccasin = function() {
		return $System_Windows_Media_Color.FromUInt32(4294960309);
	};
	$System_Windows_Media_Colors.get_NavajoWhite = function() {
		return $System_Windows_Media_Color.FromUInt32(4294958765);
	};
	$System_Windows_Media_Colors.get_Navy = function() {
		return $System_Windows_Media_Color.FromUInt32(4278190208);
	};
	$System_Windows_Media_Colors.get_OldLace = function() {
		return $System_Windows_Media_Color.FromUInt32(4294833638);
	};
	$System_Windows_Media_Colors.get_Olive = function() {
		return $System_Windows_Media_Color.FromUInt32(4286611456);
	};
	$System_Windows_Media_Colors.get_OliveDrab = function() {
		return $System_Windows_Media_Color.FromUInt32(4285238819);
	};
	$System_Windows_Media_Colors.get_Orange = function() {
		return $System_Windows_Media_Color.FromUInt32(4294944000);
	};
	$System_Windows_Media_Colors.get_OrangeRed = function() {
		return $System_Windows_Media_Color.FromUInt32(4294919424);
	};
	$System_Windows_Media_Colors.get_Orchid = function() {
		return $System_Windows_Media_Color.FromUInt32(4292505814);
	};
	$System_Windows_Media_Colors.get_PaleGoldenrod = function() {
		return $System_Windows_Media_Color.FromUInt32(4293847210);
	};
	$System_Windows_Media_Colors.get_PaleGreen = function() {
		return $System_Windows_Media_Color.FromUInt32(4288215960);
	};
	$System_Windows_Media_Colors.get_PaleTurquoise = function() {
		return $System_Windows_Media_Color.FromUInt32(4289720046);
	};
	$System_Windows_Media_Colors.get_PaleVioletRed = function() {
		return $System_Windows_Media_Color.FromUInt32(4292571283);
	};
	$System_Windows_Media_Colors.get_PapayaWhip = function() {
		return $System_Windows_Media_Color.FromUInt32(4294963157);
	};
	$System_Windows_Media_Colors.get_PeachPuff = function() {
		return $System_Windows_Media_Color.FromUInt32(4294957753);
	};
	$System_Windows_Media_Colors.get_Peru = function() {
		return $System_Windows_Media_Color.FromUInt32(4291659071);
	};
	$System_Windows_Media_Colors.get_Pink = function() {
		return $System_Windows_Media_Color.FromUInt32(4294951115);
	};
	$System_Windows_Media_Colors.get_Plum = function() {
		return $System_Windows_Media_Color.FromUInt32(4292714717);
	};
	$System_Windows_Media_Colors.get_PowderBlue = function() {
		return $System_Windows_Media_Color.FromUInt32(4289781990);
	};
	$System_Windows_Media_Colors.get_Purple = function() {
		return $System_Windows_Media_Color.FromUInt32(4286578816);
	};
	$System_Windows_Media_Colors.get_Red = function() {
		return $System_Windows_Media_Color.FromUInt32(4294901760);
	};
	$System_Windows_Media_Colors.get_RosyBrown = function() {
		return $System_Windows_Media_Color.FromUInt32(4290547599);
	};
	$System_Windows_Media_Colors.get_RoyalBlue = function() {
		return $System_Windows_Media_Color.FromUInt32(4282477025);
	};
	$System_Windows_Media_Colors.get_SaddleBrown = function() {
		return $System_Windows_Media_Color.FromUInt32(4287317267);
	};
	$System_Windows_Media_Colors.get_Salmon = function() {
		return $System_Windows_Media_Color.FromUInt32(4294606962);
	};
	$System_Windows_Media_Colors.get_SandyBrown = function() {
		return $System_Windows_Media_Color.FromUInt32(4294222944);
	};
	$System_Windows_Media_Colors.get_SeaGreen = function() {
		return $System_Windows_Media_Color.FromUInt32(4281240407);
	};
	$System_Windows_Media_Colors.get_SeaShell = function() {
		return $System_Windows_Media_Color.FromUInt32(4294964718);
	};
	$System_Windows_Media_Colors.get_Sienna = function() {
		return $System_Windows_Media_Color.FromUInt32(4288696877);
	};
	$System_Windows_Media_Colors.get_Silver = function() {
		return $System_Windows_Media_Color.FromUInt32(4290822336);
	};
	$System_Windows_Media_Colors.get_SkyBlue = function() {
		return $System_Windows_Media_Color.FromUInt32(4287090411);
	};
	$System_Windows_Media_Colors.get_SlateBlue = function() {
		return $System_Windows_Media_Color.FromUInt32(4285160141);
	};
	$System_Windows_Media_Colors.get_SlateGray = function() {
		return $System_Windows_Media_Color.FromUInt32(4285563024);
	};
	$System_Windows_Media_Colors.get_Snow = function() {
		return $System_Windows_Media_Color.FromUInt32(4294966010);
	};
	$System_Windows_Media_Colors.get_SpringGreen = function() {
		return $System_Windows_Media_Color.FromUInt32(4278255487);
	};
	$System_Windows_Media_Colors.get_SteelBlue = function() {
		return $System_Windows_Media_Color.FromUInt32(4282811060);
	};
	$System_Windows_Media_Colors.get_Tan = function() {
		return $System_Windows_Media_Color.FromUInt32(4291998860);
	};
	$System_Windows_Media_Colors.get_Teal = function() {
		return $System_Windows_Media_Color.FromUInt32(4278222976);
	};
	$System_Windows_Media_Colors.get_Thistle = function() {
		return $System_Windows_Media_Color.FromUInt32(4292394968);
	};
	$System_Windows_Media_Colors.get_Tomato = function() {
		return $System_Windows_Media_Color.FromUInt32(4294927175);
	};
	$System_Windows_Media_Colors.get_Transparent = function() {
		return $System_Windows_Media_Color.FromUInt32(16777215);
	};
	$System_Windows_Media_Colors.get_Turquoise = function() {
		return $System_Windows_Media_Color.FromUInt32(4282441936);
	};
	$System_Windows_Media_Colors.get_Violet = function() {
		return $System_Windows_Media_Color.FromUInt32(4293821166);
	};
	$System_Windows_Media_Colors.get_Wheat = function() {
		return $System_Windows_Media_Color.FromUInt32(4294303411);
	};
	$System_Windows_Media_Colors.get_White = function() {
		return $System_Windows_Media_Color.FromUInt32(4294967295);
	};
	$System_Windows_Media_Colors.get_WhiteSmoke = function() {
		return $System_Windows_Media_Color.FromUInt32(4294309365);
	};
	$System_Windows_Media_Colors.get_Yellow = function() {
		return $System_Windows_Media_Color.FromUInt32(4294967040);
	};
	$System_Windows_Media_Colors.get_YellowGreen = function() {
		return $System_Windows_Media_Color.FromUInt32(4288335154);
	};
	global.System.Windows.Media.Colors = $System_Windows_Media_Colors;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.ColorTypeConverter
	var $System_Windows_Media_ColorTypeConverter = function() {
	};
	$System_Windows_Media_ColorTypeConverter.__typeName = 'System.Windows.Media.ColorTypeConverter';
	global.System.Windows.Media.ColorTypeConverter = $System_Windows_Media_ColorTypeConverter;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.GradientBrush
	var $System_Windows_Media_GradientBrush = function() {
		$System_Windows_Media_Brush.call(this);
		//
	};
	$System_Windows_Media_GradientBrush.__typeName = 'System.Windows.Media.GradientBrush';
	$System_Windows_Media_GradientBrush.$ctor1 = function(gradientStops) {
		$System_Windows_Media_Brush.call(this);
		this.set_GradientStops(new $System_Windows_Media_GradientStopCollection.$ctor1(gradientStops));
	};
	global.System.Windows.Media.GradientBrush = $System_Windows_Media_GradientBrush;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.GradientSpreadMethod
	var $System_Windows_Media_GradientSpreadMethod = function() {
	};
	$System_Windows_Media_GradientSpreadMethod.__typeName = 'System.Windows.Media.GradientSpreadMethod';
	global.System.Windows.Media.GradientSpreadMethod = $System_Windows_Media_GradientSpreadMethod;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.GradientStop
	var $System_Windows_Media_GradientStop = function() {
		$System_Windows_Media_Animation_Animatable.call(this);
		//
	};
	$System_Windows_Media_GradientStop.__typeName = 'System.Windows.Media.GradientStop';
	$System_Windows_Media_GradientStop.$ctor1 = function(color, offset) {
		$System_Windows_Media_Animation_Animatable.call(this);
		this.set_Color(color);
		this.set_Offset(offset);
	};
	global.System.Windows.Media.GradientStop = $System_Windows_Media_GradientStop;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.GradientStopCollection
	var $System_Windows_Media_GradientStopCollection = function() {
		ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Media_GradientStop]).call(this);
		//
	};
	$System_Windows_Media_GradientStopCollection.__typeName = 'System.Windows.Media.GradientStopCollection';
	$System_Windows_Media_GradientStopCollection.$ctor1 = function(collection) {
		ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Media_GradientStop]).$ctor1.call(this, collection);
		//
	};
	global.System.Windows.Media.GradientStopCollection = $System_Windows_Media_GradientStopCollection;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.IBorderRenderElement
	var $System_Windows_Media_IBorderRenderElement = function() {
	};
	$System_Windows_Media_IBorderRenderElement.__typeName = 'System.Windows.Media.IBorderRenderElement';
	global.System.Windows.Media.IBorderRenderElement = $System_Windows_Media_IBorderRenderElement;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.IDrawingRenderElement
	var $System_Windows_Media_IDrawingRenderElement = function() {
	};
	$System_Windows_Media_IDrawingRenderElement.__typeName = 'System.Windows.Media.IDrawingRenderElement';
	global.System.Windows.Media.IDrawingRenderElement = $System_Windows_Media_IDrawingRenderElement;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.IImageRenderElement
	var $System_Windows_Media_IImageRenderElement = function() {
	};
	$System_Windows_Media_IImageRenderElement.__typeName = 'System.Windows.Media.IImageRenderElement';
	global.System.Windows.Media.IImageRenderElement = $System_Windows_Media_IImageRenderElement;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.ImageBrush
	var $System_Windows_Media_ImageBrush = function() {
		$System_Windows_Media_TileBrush.call(this);
	};
	$System_Windows_Media_ImageBrush.__typeName = 'System.Windows.Media.ImageBrush';
	global.System.Windows.Media.ImageBrush = $System_Windows_Media_ImageBrush;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.ImageSource
	var $System_Windows_Media_ImageSource = function() {
		$System_Windows_Media_Animation_Animatable.call(this);
	};
	$System_Windows_Media_ImageSource.__typeName = 'System.Windows.Media.ImageSource';
	global.System.Windows.Media.ImageSource = $System_Windows_Media_ImageSource;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.ImageSourceTypeConverter
	var $System_Windows_Media_ImageSourceTypeConverter = function() {
	};
	$System_Windows_Media_ImageSourceTypeConverter.__typeName = 'System.Windows.Media.ImageSourceTypeConverter';
	global.System.Windows.Media.ImageSourceTypeConverter = $System_Windows_Media_ImageSourceTypeConverter;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.IRenderElementFactory
	var $System_Windows_Media_IRenderElementFactory = function() {
	};
	$System_Windows_Media_IRenderElementFactory.__typeName = 'System.Windows.Media.IRenderElementFactory';
	global.System.Windows.Media.IRenderElementFactory = $System_Windows_Media_IRenderElementFactory;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.IRenderImageSource
	var $System_Windows_Media_IRenderImageSource = function() {
	};
	$System_Windows_Media_IRenderImageSource.__typeName = 'System.Windows.Media.IRenderImageSource';
	global.System.Windows.Media.IRenderImageSource = $System_Windows_Media_IRenderImageSource;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.ITextBlockRenderElement
	var $System_Windows_Media_ITextBlockRenderElement = function() {
	};
	$System_Windows_Media_ITextBlockRenderElement.__typeName = 'System.Windows.Media.ITextBlockRenderElement';
	global.System.Windows.Media.ITextBlockRenderElement = $System_Windows_Media_ITextBlockRenderElement;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.ITextBoxRenderElement
	var $System_Windows_Media_ITextBoxRenderElement = function() {
	};
	$System_Windows_Media_ITextBoxRenderElement.__typeName = 'System.Windows.Media.ITextBoxRenderElement';
	global.System.Windows.Media.ITextBoxRenderElement = $System_Windows_Media_ITextBoxRenderElement;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.IVisualRenderElement
	var $System_Windows_Media_IVisualRenderElement = function() {
	};
	$System_Windows_Media_IVisualRenderElement.__typeName = 'System.Windows.Media.IVisualRenderElement';
	global.System.Windows.Media.IVisualRenderElement = $System_Windows_Media_IVisualRenderElement;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.LinearGradientBrush
	var $System_Windows_Media_LinearGradientBrush = function() {
		$System_Windows_Media_GradientBrush.call(this);
		//
	};
	$System_Windows_Media_LinearGradientBrush.__typeName = 'System.Windows.Media.LinearGradientBrush';
	$System_Windows_Media_LinearGradientBrush.$ctor2 = function(angle, startColor, endColor) {
		$System_Windows_Media_LinearGradientBrush.$ctor3.call(this, $System_Windows_Point.Zero, $System_Windows_Media_LinearGradientBrush.$GetEndPoint(angle), [new $System_Windows_Media_GradientStop.$ctor1(startColor, 0), new $System_Windows_Media_GradientStop.$ctor1(endColor, 1)]);
		//
	};
	$System_Windows_Media_LinearGradientBrush.$ctor1 = function(angle, gradientStops) {
		$System_Windows_Media_LinearGradientBrush.$ctor3.call(this, $System_Windows_Point.Zero, $System_Windows_Media_LinearGradientBrush.$GetEndPoint(angle), gradientStops);
		//
	};
	$System_Windows_Media_LinearGradientBrush.$ctor4 = function(startPoint, endPoint, startColor, endColor) {
		$System_Windows_Media_LinearGradientBrush.$ctor3.call(this, startPoint, endPoint, [new $System_Windows_Media_GradientStop.$ctor1(startColor, 0), new $System_Windows_Media_GradientStop.$ctor1(endColor, 1)]);
		//
	};
	$System_Windows_Media_LinearGradientBrush.$ctor3 = function(startPoint, endPoint, gradientStops) {
		$System_Windows_Media_GradientBrush.$ctor1.call(this, gradientStops);
		this.set_StartPoint(startPoint);
		this.set_EndPoint(endPoint);
	};
	$System_Windows_Media_LinearGradientBrush.$GetEndPoint = function(angle) {
		var radians = Math.PI * angle / 180;
		return new $System_Windows_Point.$ctor1(Math.cos(radians), Math.sin(radians));
	};
	global.System.Windows.Media.LinearGradientBrush = $System_Windows_Media_LinearGradientBrush;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Matrix
	var $System_Windows_Media_Matrix = function(m11, m12, m21, m22, offsetX, offsetY) {
		this.$1$M11Field = 0;
		this.$1$M12Field = 0;
		this.$1$M21Field = 0;
		this.$1$M22Field = 0;
		this.$1$OffsetXField = 0;
		this.$1$OffsetYField = 0;
		this.set_M11(m11);
		this.set_M12(m12);
		this.set_M21(m21);
		this.set_M22(m22);
		this.set_OffsetX(offsetX);
		this.set_OffsetY(offsetY);
	};
	$System_Windows_Media_Matrix.__typeName = 'System.Windows.Media.Matrix';
	$System_Windows_Media_Matrix.op_Equality = function(matrix1, matrix2) {
		return (ss.referenceEquals(matrix1, null) ? ss.referenceEquals(matrix2, null) : matrix1.equals(matrix2));
	};
	$System_Windows_Media_Matrix.op_Inequality = function(matrix1, matrix2) {
		return !$System_Windows_Media_Matrix.op_Equality(matrix1, matrix2);
	};
	$System_Windows_Media_Matrix.op_Multiply = function(matrix1, matrix2) {
		var m11 = matrix1.get_M11() * matrix2.get_M11() + matrix1.get_M12() * matrix2.get_M21();
		var m12 = matrix1.get_M11() * matrix2.get_M12() + matrix1.get_M12() * matrix2.get_M22();
		var m21 = matrix1.get_M21() * matrix2.get_M11() + matrix1.get_M22() * matrix2.get_M21();
		var m22 = matrix1.get_M21() * matrix2.get_M12() + matrix1.get_M22() * matrix2.get_M22();
		var offsetX = matrix1.get_OffsetX() * matrix2.get_M11() + matrix1.get_OffsetY() * matrix2.get_M21() + matrix2.get_OffsetX();
		var offsetY = matrix1.get_OffsetX() * matrix2.get_M12() + matrix1.get_OffsetY() * matrix2.get_M22() + matrix2.get_OffsetY();
		return new $System_Windows_Media_Matrix(m11, m12, m21, m22, offsetX, offsetY);
	};
	$System_Windows_Media_Matrix.op_Multiply$1 = function(point, matrix) {
		var x = point.get_X() * matrix.get_M11() + point.get_Y() * matrix.get_M21() + matrix.get_OffsetX();
		var y = point.get_X() * matrix.get_M12() + point.get_Y() * matrix.get_M22() + matrix.get_OffsetY();
		return new $System_Windows_Point.$ctor1(x, y);
	};
	$System_Windows_Media_Matrix.RotationMatrix = function(radians, centerX, centerY) {
		var sin = Math.sin(radians);
		var cos = Math.cos(radians);
		var offsetX = centerX * (1 - cos) + centerY * sin;
		var offsetY = centerY * (1 - cos) - centerX * sin;
		return new $System_Windows_Media_Matrix(cos, sin, -sin, cos, offsetX, offsetY);
	};
	$System_Windows_Media_Matrix.ScalingMatrix = function(scaleX, scaleY, centerX, centerY) {
		var offsetX = centerX - scaleX * centerX;
		var offsetY = centerY - scaleY * centerY;
		return new $System_Windows_Media_Matrix(scaleX, 0, 0, scaleY, offsetX, offsetY);
	};
	$System_Windows_Media_Matrix.SkewMatrix = function(radiansX, radiansY, centerX, centerY) {
		var offsetX = -centerY * Math.tan(radiansX);
		var offsetY = -centerX * Math.tan(radiansY);
		return new $System_Windows_Media_Matrix(1, Math.tan(radiansY), Math.tan(radiansX), 1, offsetX, offsetY);
	};
	$System_Windows_Media_Matrix.TranslationMatrix = function(offsetX, offsetY) {
		return new $System_Windows_Media_Matrix(1, 0, 0, 1, offsetX, offsetY);
	};
	$System_Windows_Media_Matrix.Parse = function(value) {
		var values = Enumerable.from(value.split(String.fromCharCode(44))).select(function(v) {
			return parseFloat(v);
		}).toArray();
		if (values.length === 6) {
			return new $System_Windows_Media_Matrix(values[0], values[1], values[2], values[3], values[4], values[5]);
		}
		throw new Granular.Exception('Can\'t parse Matrix value "{0}"', [value]);
	};
	global.System.Windows.Media.Matrix = $System_Windows_Media_Matrix;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.RadialGradientBrush
	var $System_Windows_Media_RadialGradientBrush = function() {
		$System_Windows_Media_GradientBrush.call(this);
		//
	};
	$System_Windows_Media_RadialGradientBrush.__typeName = 'System.Windows.Media.RadialGradientBrush';
	$System_Windows_Media_RadialGradientBrush.$ctor2 = function(startColor, endColor) {
		$System_Windows_Media_RadialGradientBrush.$ctor1.call(this, [new $System_Windows_Media_GradientStop.$ctor1(startColor, 0), new $System_Windows_Media_GradientStop.$ctor1(endColor, 1)]);
		//
	};
	$System_Windows_Media_RadialGradientBrush.$ctor1 = function(gradientStops) {
		$System_Windows_Media_GradientBrush.$ctor1.call(this, gradientStops);
		//
	};
	global.System.Windows.Media.RadialGradientBrush = $System_Windows_Media_RadialGradientBrush;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.RenderImageState
	var $System_Windows_Media_RenderImageState = function() {
	};
	$System_Windows_Media_RenderImageState.__typeName = 'System.Windows.Media.RenderImageState';
	global.System.Windows.Media.RenderImageState = $System_Windows_Media_RenderImageState;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.RenderImageType
	var $System_Windows_Media_RenderImageType = function() {
	};
	$System_Windows_Media_RenderImageType.__typeName = 'System.Windows.Media.RenderImageType';
	global.System.Windows.Media.RenderImageType = $System_Windows_Media_RenderImageType;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.RotateTransform
	var $System_Windows_Media_RotateTransform = function() {
		this.$matrix = null;
		$System_Windows_Media_Transform.call(this);
		this.$matrix = $System_Windows_Media_Matrix.Identity;
	};
	$System_Windows_Media_RotateTransform.__typeName = 'System.Windows.Media.RotateTransform';
	$System_Windows_Media_RotateTransform.$SetMatrix = function(dependencyObject, e) {
		ss.safeCast(dependencyObject, $System_Windows_Media_RotateTransform).$SetMatrix();
	};
	global.System.Windows.Media.RotateTransform = $System_Windows_Media_RotateTransform;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.ScaleTransform
	var $System_Windows_Media_ScaleTransform = function() {
		this.$matrix = null;
		$System_Windows_Media_Transform.call(this);
		this.$matrix = $System_Windows_Media_Matrix.Identity;
	};
	$System_Windows_Media_ScaleTransform.__typeName = 'System.Windows.Media.ScaleTransform';
	$System_Windows_Media_ScaleTransform.$SetMatrix = function(dependencyObject, e) {
		ss.safeCast(dependencyObject, $System_Windows_Media_ScaleTransform).$SetMatrix();
	};
	global.System.Windows.Media.ScaleTransform = $System_Windows_Media_ScaleTransform;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.SkewTransform
	var $System_Windows_Media_SkewTransform = function() {
		this.$matrix = null;
		$System_Windows_Media_Transform.call(this);
		this.$matrix = $System_Windows_Media_Matrix.Identity;
	};
	$System_Windows_Media_SkewTransform.__typeName = 'System.Windows.Media.SkewTransform';
	$System_Windows_Media_SkewTransform.$SetMatrix = function(dependencyObject, e) {
		ss.safeCast(dependencyObject, $System_Windows_Media_SkewTransform).$SetMatrix();
	};
	global.System.Windows.Media.SkewTransform = $System_Windows_Media_SkewTransform;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.SolidColorBrush
	var $System_Windows_Media_SolidColorBrush = function() {
		$System_Windows_Media_Brush.call(this);
		//
	};
	$System_Windows_Media_SolidColorBrush.__typeName = 'System.Windows.Media.SolidColorBrush';
	$System_Windows_Media_SolidColorBrush.$ctor1 = function(color) {
		$System_Windows_Media_Brush.call(this);
		this.set_Color(color);
	};
	global.System.Windows.Media.SolidColorBrush = $System_Windows_Media_SolidColorBrush;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Stretch
	var $System_Windows_Media_Stretch = function() {
	};
	$System_Windows_Media_Stretch.__typeName = 'System.Windows.Media.Stretch';
	global.System.Windows.Media.Stretch = $System_Windows_Media_Stretch;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.StretchDirection
	var $System_Windows_Media_StretchDirection = function() {
	};
	$System_Windows_Media_StretchDirection.__typeName = 'System.Windows.Media.StretchDirection';
	global.System.Windows.Media.StretchDirection = $System_Windows_Media_StretchDirection;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.TileBrush
	var $System_Windows_Media_TileBrush = function() {
		$System_Windows_Media_Brush.call(this);
	};
	$System_Windows_Media_TileBrush.__typeName = 'System.Windows.Media.TileBrush';
	global.System.Windows.Media.TileBrush = $System_Windows_Media_TileBrush;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.TileMode
	var $System_Windows_Media_TileMode = function() {
	};
	$System_Windows_Media_TileMode.__typeName = 'System.Windows.Media.TileMode';
	global.System.Windows.Media.TileMode = $System_Windows_Media_TileMode;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Transform
	var $System_Windows_Media_Transform = function() {
		$System_Windows_DependencyObject.call(this);
	};
	$System_Windows_Media_Transform.__typeName = 'System.Windows.Media.Transform';
	global.System.Windows.Media.Transform = $System_Windows_Media_Transform;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Typeface
	var $System_Windows_Media_Typeface = function(typefaceName, style, weight, stretch) {
		$System_Windows_Media_Typeface.$ctor1.call(this, new $System_Windows_FontFamily.$ctor1(typefaceName), style, weight, stretch);
		//
	};
	$System_Windows_Media_Typeface.__typeName = 'System.Windows.Media.Typeface';
	$System_Windows_Media_Typeface.$ctor1 = function(fontFamily, style, weight, stretch) {
		this.$1$FontFamilyField = null;
		this.$1$StretchField = 0;
		this.$1$StyleField = 0;
		this.$1$WeightField = 0;
		this.set_FontFamily(fontFamily);
		this.set_Style(style);
		this.set_Weight(weight);
		this.set_Stretch(stretch);
	};
	global.System.Windows.Media.Typeface = $System_Windows_Media_Typeface;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Visual
	var $System_Windows_Media_Visual = function() {
		this.$2$VisualAncestorChangedField = null;
		this.$2$VisualParentChangedField = null;
		this.$visualParent = null;
		this.$visualChildren = null;
		this.$2$VisualChildrenField = null;
		this.$visualBackground = null;
		this.$visualBounds = null;
		this.$visualClipToBounds = false;
		this.$visualIsHitTestVisible = false;
		this.$visualIsVisible = false;
		this.$visualOpacity = 0;
		this.$visualTransform = null;
		this.$visualLevel = 0;
		this.$visualRenderElements = null;
		this.$containsContentRenderElement = false;
		$System_Windows_DependencyObject.call(this);
		this.$visualChildren = [];
		this.set_VisualChildren(this.$visualChildren);
		this.$visualRenderElements = new (ss.makeGenericType(ss.Dictionary$2, [$System_Windows_Media_IRenderElementFactory, $System_Windows_Media_IVisualRenderElement]))();
		this.set_VisualBackground(null);
		this.set_VisualBounds($System_Windows_Rect.Zero);
		this.set_VisualClipToBounds(true);
		this.set_VisualIsHitTestVisible(true);
		this.set_VisualIsVisible(true);
		this.set_VisualOpacity(1);
		this.set_VisualTransform($System_Windows_Media_Transform.Identity);
		this.$visualLevel = -1;
	};
	$System_Windows_Media_Visual.__typeName = 'System.Windows.Media.Visual';
	global.System.Windows.Media.Visual = $System_Windows_Media_Visual;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.VisualExtensions
	var $System_Windows_Media_VisualExtensions = function() {
	};
	$System_Windows_Media_VisualExtensions.__typeName = 'System.Windows.Media.VisualExtensions';
	$System_Windows_Media_VisualExtensions.IsAncestorOf = function(visual, descendant) {
		while (ss.isValue(descendant)) {
			if (ss.referenceEquals(descendant.get_VisualParent(), visual)) {
				return true;
			}
			descendant = descendant.get_VisualParent();
		}
		return false;
	};
	global.System.Windows.Media.VisualExtensions = $System_Windows_Media_VisualExtensions;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.VisualWeakReference
	var $System_Windows_Media_VisualWeakReference = function(visual, ancestor) {
		this.$1$VisualField = null;
		this.$ancestor = null;
		this.set_Visual(visual);
		this.$ancestor = ancestor;
		visual.add_VisualAncestorChanged(ss.mkdel(this, this.$OnVisualAncestorChanged));
	};
	$System_Windows_Media_VisualWeakReference.__typeName = 'System.Windows.Media.VisualWeakReference';
	global.System.Windows.Media.VisualWeakReference = $System_Windows_Media_VisualWeakReference;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.ColorAnimationOperations
	var $System_Windows_Media_Animation_$ColorAnimationOperations = function() {
		//
	};
	$System_Windows_Media_Animation_$ColorAnimationOperations.__typeName = 'System.Windows.Media.Animation.$ColorAnimationOperations';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.DoubleAnimationOperations
	var $System_Windows_Media_Animation_$DoubleAnimationOperations = function() {
		//
	};
	$System_Windows_Media_Animation_$DoubleAnimationOperations.__typeName = 'System.Windows.Media.Animation.$DoubleAnimationOperations';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.RectAnimationOperations
	var $System_Windows_Media_Animation_$RectAnimationOperations = function() {
		//
	};
	$System_Windows_Media_Animation_$RectAnimationOperations.__typeName = 'System.Windows.Media.Animation.$RectAnimationOperations';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.ThicknessAnimationOperations
	var $System_Windows_Media_Animation_$ThicknessAnimationOperations = function() {
		//
	};
	$System_Windows_Media_Animation_$ThicknessAnimationOperations.__typeName = 'System.Windows.Media.Animation.$ThicknessAnimationOperations';
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.Animatable
	var $System_Windows_Media_Animation_Animatable = function() {
		this.$3$RootClockField = null;
		$System_Windows_Freezable.call(this);
	};
	$System_Windows_Media_Animation_Animatable.__typeName = 'System.Windows.Media.Animation.Animatable';
	global.System.Windows.Media.Animation.Animatable = $System_Windows_Media_Animation_Animatable;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.AnimatableExtensions
	var $System_Windows_Media_Animation_AnimatableExtensions = function() {
	};
	$System_Windows_Media_Animation_AnimatableExtensions.__typeName = 'System.Windows.Media.Animation.AnimatableExtensions';
	$System_Windows_Media_Animation_AnimatableExtensions.ClearAnimationClocks = function(animatable, dependencyProperty, layerOwner) {
		animatable.SetAnimationClocks(dependencyProperty, [], layerOwner);
	};
	$System_Windows_Media_Animation_AnimatableExtensions.ApplyAnimationClock = function(animatable, dependencyProperty, animationClock, handoffBehavior, layerOwner) {
		var animationClocks = (ss.isValue(animationClock) ? [animationClock] : []);
		$System_Windows_Media_Animation_AnimatableExtensions.ApplyAnimationClocks(animatable, dependencyProperty, animationClocks, handoffBehavior, layerOwner);
	};
	$System_Windows_Media_Animation_AnimatableExtensions.ApplyAnimationClocks = function(animatable, dependencyProperty, animationClocks, handoffBehavior, layerOwner) {
		if (handoffBehavior === 0) {
			animatable.SetAnimationClocks(dependencyProperty, animationClocks, layerOwner);
		}
		else {
			animatable.AddAnimationClocks(dependencyProperty, animationClocks, layerOwner);
		}
	};
	$System_Windows_Media_Animation_AnimatableExtensions.BeginAnimation = function(animatable, dependencyProperty, animation, handoffBehavior, layerOwner) {
		var animationClock = ss.cast(animation.CreateClock(), $System_Windows_Media_Animation_AnimationTimelineClock);
		$System_Windows_Media_Animation_AnimatableExtensions.ApplyAnimationClock(animatable, dependencyProperty, animationClock, handoffBehavior, layerOwner);
		animationClock.Begin(animatable.get_RootClock());
	};
	global.System.Windows.Media.Animation.AnimatableExtensions = $System_Windows_Media_Animation_AnimatableExtensions;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.AnimatableRootClock
	var $System_Windows_Media_Animation_AnimatableRootClock = function(rootClock, isConnected) {
		this.$rootClock = null;
		this.$clocks = null;
		this.$isConnected = false;
		this.$rootClock = rootClock;
		this.$isConnected = isConnected;
		this.$clocks = [];
	};
	$System_Windows_Media_Animation_AnimatableRootClock.__typeName = 'System.Windows.Media.Animation.AnimatableRootClock';
	global.System.Windows.Media.Animation.AnimatableRootClock = $System_Windows_Media_Animation_AnimatableRootClock;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.AnimationClock
	var $System_Windows_Media_Animation_AnimationClock = function(duration) {
		this.$1$DurationField = ss.getDefaultValue(ss.TimeSpan);
		this.set_Duration(duration);
	};
	$System_Windows_Media_Animation_AnimationClock.__typeName = 'System.Windows.Media.Animation.AnimationClock';
	global.System.Windows.Media.Animation.AnimationClock = $System_Windows_Media_Animation_AnimationClock;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.AnimationExpression
	var $System_Windows_Media_Animation_AnimationExpression = function(dependencyObject, dependencyProperty) {
		this.$1$ValueChangedField = null;
		this.$layers = null;
		this.$observableValue = null;
		this.$dependencyObject = null;
		this.$dependencyProperty = null;
		this.$dependencyObject = dependencyObject;
		this.$dependencyProperty = dependencyProperty;
		this.$observableValue = new $System_Windows_Data_ObservableValue();
		this.$observableValue.add_ValueChanged(ss.mkdel(this, function(sender, e) {
			Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_Data_ObservableValueChangedArgs).call(null, this.$1$ValueChangedField, this, e);
		}));
		this.$layers = new $System_Windows_Media_Animation_AnimationLayerCollection();
		this.$layers.add_LayerInvalidated(ss.mkdel(this, this.$OnLayerInvalidated));
		this.$SetAnimationValue();
	};
	$System_Windows_Media_Animation_AnimationExpression.__typeName = 'System.Windows.Media.Animation.AnimationExpression';
	global.System.Windows.Media.Animation.AnimationExpression = $System_Windows_Media_Animation_AnimationExpression;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.AnimationLayer
	var $System_Windows_Media_Animation_AnimationLayer = function() {
		this.$1$ClockInvalidatedField = null;
		this.$clocks = null;
		this.$snapshotValue = null;
		this.$clocks = [];
		this.$snapshotValue = $System_Windows_Media_Animation_AnimationLayer.$UnsetValue;
	};
	$System_Windows_Media_Animation_AnimationLayer.__typeName = 'System.Windows.Media.Animation.AnimationLayer';
	global.System.Windows.Media.Animation.AnimationLayer = $System_Windows_Media_Animation_AnimationLayer;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.AnimationLayerCollection
	var $System_Windows_Media_Animation_AnimationLayerCollection = function() {
		this.$1$LayerInvalidatedField = null;
		this.$defaultLayer = null;
		this.$layers = null;
		this.$defaultLayer = new $System_Windows_Media_Animation_AnimationLayer();
		this.$defaultLayer.add_ClockInvalidated(ss.mkdel(this, this.$OnAnimationLayerClockInvalidated));
		this.$layers = new (ss.makeGenericType(ss.Dictionary$2, [$System_Windows_Media_Animation_AnimationLayerKey, $System_Windows_Media_Animation_AnimationLayer]))();
	};
	$System_Windows_Media_Animation_AnimationLayerCollection.__typeName = 'System.Windows.Media.Animation.AnimationLayerCollection';
	global.System.Windows.Media.Animation.AnimationLayerCollection = $System_Windows_Media_Animation_AnimationLayerCollection;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.AnimationLayerKey
	var $System_Windows_Media_Animation_AnimationLayerKey = function(layerOwner) {
		this.$layerOwner = null;
		this.$layerOwner = layerOwner;
	};
	$System_Windows_Media_Animation_AnimationLayerKey.__typeName = 'System.Windows.Media.Animation.AnimationLayerKey';
	$System_Windows_Media_Animation_AnimationLayerKey.FromLayerOwner = function(layerOwner) {
		return (ss.isNullOrUndefined(layerOwner) ? $System_Windows_Media_Animation_AnimationLayerKey.Default : new $System_Windows_Media_Animation_AnimationLayerKey(layerOwner));
	};
	global.System.Windows.Media.Animation.AnimationLayerKey = $System_Windows_Media_Animation_AnimationLayerKey;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.AnimationTimeline
	var $System_Windows_Media_Animation_AnimationTimeline = function() {
		$System_Windows_Media_Animation_Timeline.call(this);
	};
	$System_Windows_Media_Animation_AnimationTimeline.__typeName = 'System.Windows.Media.Animation.AnimationTimeline';
	global.System.Windows.Media.Animation.AnimationTimeline = $System_Windows_Media_Animation_AnimationTimeline;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.AnimationTimelineClock
	var $System_Windows_Media_Animation_AnimationTimelineClock = function(timeline) {
		this.$timeline = null;
		$System_Windows_Media_Animation_TimelineClock.call(this, $System_Windows_Media_Animation_AnimationTimelineClock.$CreateAnimationClock(timeline), timeline);
		this.$timeline = timeline;
	};
	$System_Windows_Media_Animation_AnimationTimelineClock.__typeName = 'System.Windows.Media.Animation.AnimationTimelineClock';
	$System_Windows_Media_Animation_AnimationTimelineClock.$CreateAnimationClock = function(timeline) {
		if (!timeline.get_Duration().get_HasTimeSpan()) {
			throw new Granular.Exception('Can\'t resolve animation duration "{0}"', [timeline.get_Duration()]);
		}
		return new $System_Windows_Media_Animation_AnimationClock(timeline.get_Duration().get_TimeSpan());
	};
	global.System.Windows.Media.Animation.AnimationTimelineClock = $System_Windows_Media_Animation_AnimationTimelineClock;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.BackEase
	var $System_Windows_Media_Animation_BackEase = function() {
		$System_Windows_Media_Animation_EasingFunctionBase.call(this);
	};
	$System_Windows_Media_Animation_BackEase.__typeName = 'System.Windows.Media.Animation.BackEase';
	global.System.Windows.Media.Animation.BackEase = $System_Windows_Media_Animation_BackEase;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.BeginStoryboard
	var $System_Windows_Media_Animation_BeginStoryboard = function() {
		this.$3$HandoffBehaviorField = 0;
		this.$3$NameField = null;
		$System_Windows_Freezable.call(this);
	};
	$System_Windows_Media_Animation_BeginStoryboard.__typeName = 'System.Windows.Media.Animation.BeginStoryboard';
	global.System.Windows.Media.Animation.BeginStoryboard = $System_Windows_Media_Animation_BeginStoryboard;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.CircleEase
	var $System_Windows_Media_Animation_CircleEase = function() {
		$System_Windows_Media_Animation_EasingFunctionBase.call(this);
	};
	$System_Windows_Media_Animation_CircleEase.__typeName = 'System.Windows.Media.Animation.CircleEase';
	global.System.Windows.Media.Animation.CircleEase = $System_Windows_Media_Animation_CircleEase;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.ClockProgressState
	var $System_Windows_Media_Animation_ClockProgressState = function() {
	};
	$System_Windows_Media_Animation_ClockProgressState.__typeName = 'System.Windows.Media.Animation.ClockProgressState';
	global.System.Windows.Media.Animation.ClockProgressState = $System_Windows_Media_Animation_ClockProgressState;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.ClockState
	var $System_Windows_Media_Animation_ClockState = function(progressState, progress, iteration, previousTick, nextTick) {
		this.$1$ProgressStateField = 0;
		this.$1$ProgressField = 0;
		this.$1$IterationField = 0;
		this.$1$PreviousTickField = ss.getDefaultValue(ss.TimeSpan);
		this.$1$NextTickField = ss.getDefaultValue(ss.TimeSpan);
		this.set_ProgressState(progressState);
		this.set_Progress(progress);
		this.set_Iteration(iteration);
		this.set_PreviousTick(previousTick);
		this.set_NextTick(nextTick);
	};
	$System_Windows_Media_Animation_ClockState.__typeName = 'System.Windows.Media.Animation.ClockState';
	global.System.Windows.Media.Animation.ClockState = $System_Windows_Media_Animation_ClockState;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.ColorAnimation
	var $System_Windows_Media_Animation_ColorAnimation = function() {
		this.$animationOperations = null;
		this.$isAccumulable = false;
		$System_Windows_Media_Animation_AnimationTimeline.call(this);
		this.$animationOperations = $System_Windows_Media_Animation_$ColorAnimationOperations.$Default;
		this.$isAccumulable = true;
	};
	$System_Windows_Media_Animation_ColorAnimation.__typeName = 'System.Windows.Media.Animation.ColorAnimation';
	global.System.Windows.Media.Animation.ColorAnimation = $System_Windows_Media_Animation_ColorAnimation;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.ColorAnimationUsingKeyFrames
	var $System_Windows_Media_Animation_ColorAnimationUsingKeyFrames = function() {
		this.$5$KeyFramesField = null;
		this.$animationOperations = null;
		this.$isAccumulable = false;
		$System_Windows_Media_Animation_AnimationTimeline.call(this);
		this.$animationOperations = $System_Windows_Media_Animation_$ColorAnimationOperations.$Default;
		this.$isAccumulable = true;
		this.set_KeyFrames(new (ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Media_Animation_ColorKeyFrame]))());
		this.get_KeyFrames().SetInheritanceParent(this);
	};
	$System_Windows_Media_Animation_ColorAnimationUsingKeyFrames.__typeName = 'System.Windows.Media.Animation.ColorAnimationUsingKeyFrames';
	global.System.Windows.Media.Animation.ColorAnimationUsingKeyFrames = $System_Windows_Media_Animation_ColorAnimationUsingKeyFrames;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.ColorKeyFrame
	var $System_Windows_Media_Animation_ColorKeyFrame = function() {
		$System_Windows_Freezable.call(this);
	};
	$System_Windows_Media_Animation_ColorKeyFrame.__typeName = 'System.Windows.Media.Animation.ColorKeyFrame';
	global.System.Windows.Media.Animation.ColorKeyFrame = $System_Windows_Media_Animation_ColorKeyFrame;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.CubicEase
	var $System_Windows_Media_Animation_CubicEase = function() {
		$System_Windows_Media_Animation_EasingFunctionBase.call(this);
	};
	$System_Windows_Media_Animation_CubicEase.__typeName = 'System.Windows.Media.Animation.CubicEase';
	global.System.Windows.Media.Animation.CubicEase = $System_Windows_Media_Animation_CubicEase;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.DiscreteColorKeyFrame
	var $System_Windows_Media_Animation_DiscreteColorKeyFrame = function() {
		$System_Windows_Media_Animation_ColorKeyFrame.call(this);
	};
	$System_Windows_Media_Animation_DiscreteColorKeyFrame.__typeName = 'System.Windows.Media.Animation.DiscreteColorKeyFrame';
	global.System.Windows.Media.Animation.DiscreteColorKeyFrame = $System_Windows_Media_Animation_DiscreteColorKeyFrame;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.DiscreteDoubleKeyFrame
	var $System_Windows_Media_Animation_DiscreteDoubleKeyFrame = function() {
		$System_Windows_Media_Animation_DoubleKeyFrame.call(this);
	};
	$System_Windows_Media_Animation_DiscreteDoubleKeyFrame.__typeName = 'System.Windows.Media.Animation.DiscreteDoubleKeyFrame';
	global.System.Windows.Media.Animation.DiscreteDoubleKeyFrame = $System_Windows_Media_Animation_DiscreteDoubleKeyFrame;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.DiscreteRectKeyFrame
	var $System_Windows_Media_Animation_DiscreteRectKeyFrame = function() {
		$System_Windows_Media_Animation_RectKeyFrame.call(this);
	};
	$System_Windows_Media_Animation_DiscreteRectKeyFrame.__typeName = 'System.Windows.Media.Animation.DiscreteRectKeyFrame';
	global.System.Windows.Media.Animation.DiscreteRectKeyFrame = $System_Windows_Media_Animation_DiscreteRectKeyFrame;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.DiscreteThicknessKeyFrame
	var $System_Windows_Media_Animation_DiscreteThicknessKeyFrame = function() {
		$System_Windows_Media_Animation_ThicknessKeyFrame.call(this);
	};
	$System_Windows_Media_Animation_DiscreteThicknessKeyFrame.__typeName = 'System.Windows.Media.Animation.DiscreteThicknessKeyFrame';
	global.System.Windows.Media.Animation.DiscreteThicknessKeyFrame = $System_Windows_Media_Animation_DiscreteThicknessKeyFrame;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.DoubleAnimation
	var $System_Windows_Media_Animation_DoubleAnimation = function() {
		this.$animationOperations = null;
		this.$isAccumulable = false;
		$System_Windows_Media_Animation_AnimationTimeline.call(this);
		this.$animationOperations = $System_Windows_Media_Animation_$DoubleAnimationOperations.$Default;
		this.$isAccumulable = true;
	};
	$System_Windows_Media_Animation_DoubleAnimation.__typeName = 'System.Windows.Media.Animation.DoubleAnimation';
	global.System.Windows.Media.Animation.DoubleAnimation = $System_Windows_Media_Animation_DoubleAnimation;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames
	var $System_Windows_Media_Animation_DoubleAnimationUsingKeyFrames = function() {
		this.$5$KeyFramesField = null;
		this.$animationOperations = null;
		this.$isAccumulable = false;
		$System_Windows_Media_Animation_AnimationTimeline.call(this);
		this.$animationOperations = $System_Windows_Media_Animation_$DoubleAnimationOperations.$Default;
		this.$isAccumulable = true;
		this.set_KeyFrames(new (ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Media_Animation_DoubleKeyFrame]))());
		this.get_KeyFrames().SetInheritanceParent(this);
	};
	$System_Windows_Media_Animation_DoubleAnimationUsingKeyFrames.__typeName = 'System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames';
	global.System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames = $System_Windows_Media_Animation_DoubleAnimationUsingKeyFrames;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.DoubleKeyFrame
	var $System_Windows_Media_Animation_DoubleKeyFrame = function() {
		$System_Windows_Freezable.call(this);
	};
	$System_Windows_Media_Animation_DoubleKeyFrame.__typeName = 'System.Windows.Media.Animation.DoubleKeyFrame';
	global.System.Windows.Media.Animation.DoubleKeyFrame = $System_Windows_Media_Animation_DoubleKeyFrame;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.DurationClock
	var $System_Windows_Media_Animation_DurationClock = function(clock, duration) {
		this.$1$FirstTickField = ss.getDefaultValue(ss.TimeSpan);
		this.$1$LastTickField = ss.getDefaultValue(ss.TimeSpan);
		this.$1$DurationField = ss.getDefaultValue(ss.TimeSpan);
		this.$clock = null;
		this.$clock = clock;
		this.set_Duration(duration);
		this.$SetTickBounds();
	};
	$System_Windows_Media_Animation_DurationClock.__typeName = 'System.Windows.Media.Animation.DurationClock';
	global.System.Windows.Media.Animation.DurationClock = $System_Windows_Media_Animation_DurationClock;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.EasingColorKeyFrame
	var $System_Windows_Media_Animation_EasingColorKeyFrame = function() {
		$System_Windows_Media_Animation_ColorKeyFrame.call(this);
	};
	$System_Windows_Media_Animation_EasingColorKeyFrame.__typeName = 'System.Windows.Media.Animation.EasingColorKeyFrame';
	global.System.Windows.Media.Animation.EasingColorKeyFrame = $System_Windows_Media_Animation_EasingColorKeyFrame;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.EasingDoubleKeyFrame
	var $System_Windows_Media_Animation_EasingDoubleKeyFrame = function() {
		$System_Windows_Media_Animation_DoubleKeyFrame.call(this);
	};
	$System_Windows_Media_Animation_EasingDoubleKeyFrame.__typeName = 'System.Windows.Media.Animation.EasingDoubleKeyFrame';
	global.System.Windows.Media.Animation.EasingDoubleKeyFrame = $System_Windows_Media_Animation_EasingDoubleKeyFrame;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.EasingFunctionBase
	var $System_Windows_Media_Animation_EasingFunctionBase = function() {
		$System_Windows_Freezable.call(this);
	};
	$System_Windows_Media_Animation_EasingFunctionBase.__typeName = 'System.Windows.Media.Animation.EasingFunctionBase';
	global.System.Windows.Media.Animation.EasingFunctionBase = $System_Windows_Media_Animation_EasingFunctionBase;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.EasingMode
	var $System_Windows_Media_Animation_EasingMode = function() {
	};
	$System_Windows_Media_Animation_EasingMode.__typeName = 'System.Windows.Media.Animation.EasingMode';
	global.System.Windows.Media.Animation.EasingMode = $System_Windows_Media_Animation_EasingMode;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.EasingRectKeyFrame
	var $System_Windows_Media_Animation_EasingRectKeyFrame = function() {
		$System_Windows_Media_Animation_RectKeyFrame.call(this);
	};
	$System_Windows_Media_Animation_EasingRectKeyFrame.__typeName = 'System.Windows.Media.Animation.EasingRectKeyFrame';
	global.System.Windows.Media.Animation.EasingRectKeyFrame = $System_Windows_Media_Animation_EasingRectKeyFrame;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.EasingThicknessKeyFrame
	var $System_Windows_Media_Animation_EasingThicknessKeyFrame = function() {
		$System_Windows_Media_Animation_ThicknessKeyFrame.call(this);
	};
	$System_Windows_Media_Animation_EasingThicknessKeyFrame.__typeName = 'System.Windows.Media.Animation.EasingThicknessKeyFrame';
	global.System.Windows.Media.Animation.EasingThicknessKeyFrame = $System_Windows_Media_Animation_EasingThicknessKeyFrame;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.ElasticEase
	var $System_Windows_Media_Animation_ElasticEase = function() {
		$System_Windows_Media_Animation_EasingFunctionBase.call(this);
	};
	$System_Windows_Media_Animation_ElasticEase.__typeName = 'System.Windows.Media.Animation.ElasticEase';
	global.System.Windows.Media.Animation.ElasticEase = $System_Windows_Media_Animation_ElasticEase;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.ExponentialEase
	var $System_Windows_Media_Animation_ExponentialEase = function() {
		$System_Windows_Media_Animation_EasingFunctionBase.call(this);
	};
	$System_Windows_Media_Animation_ExponentialEase.__typeName = 'System.Windows.Media.Animation.ExponentialEase';
	global.System.Windows.Media.Animation.ExponentialEase = $System_Windows_Media_Animation_ExponentialEase;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.FillBehavior
	var $System_Windows_Media_Animation_FillBehavior = function() {
	};
	$System_Windows_Media_Animation_FillBehavior.__typeName = 'System.Windows.Media.Animation.FillBehavior';
	global.System.Windows.Media.Animation.FillBehavior = $System_Windows_Media_Animation_FillBehavior;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.HandoffBehavior
	var $System_Windows_Media_Animation_HandoffBehavior = function() {
	};
	$System_Windows_Media_Animation_HandoffBehavior.__typeName = 'System.Windows.Media.Animation.HandoffBehavior';
	global.System.Windows.Media.Animation.HandoffBehavior = $System_Windows_Media_Animation_HandoffBehavior;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.IAnimatable
	var $System_Windows_Media_Animation_IAnimatable = function() {
	};
	$System_Windows_Media_Animation_IAnimatable.__typeName = 'System.Windows.Media.Animation.IAnimatable';
	global.System.Windows.Media.Animation.IAnimatable = $System_Windows_Media_Animation_IAnimatable;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.IAnimationOperations
	var $System_Windows_Media_Animation_IAnimationOperations$1 = function(T) {
		var $type = function() {
		};
		ss.registerGenericInterfaceInstance($type, $System_Windows_Media_Animation_IAnimationOperations$1, [T], { get_Zero: null, Add: null, Subtract: null, Scale: null, Interpolate: null }, function() {
			return [];
		});
		ss.setMetadata($type, { members: [{ name: 'Add', type: 8, sname: 'Add', returnType: T, params: [T, T] }, { name: 'Interpolate', type: 8, sname: 'Interpolate', returnType: T, params: [T, T, Number] }, { name: 'Scale', type: 8, sname: 'Scale', returnType: T, params: [T, Number] }, { name: 'Subtract', type: 8, sname: 'Subtract', returnType: T, params: [T, T] }, { name: 'Zero', type: 16, returnType: T, getter: { name: 'get_Zero', type: 8, sname: 'get_Zero', returnType: T, params: [] } }] });
		return $type;
	};
	$System_Windows_Media_Animation_IAnimationOperations$1.__typeName = 'System.Windows.Media.Animation.IAnimationOperations$1';
	ss.initGenericInterface($System_Windows_Media_Animation_IAnimationOperations$1, $asm, 1);
	global.System.Windows.Media.Animation.IAnimationOperations$1 = $System_Windows_Media_Animation_IAnimationOperations$1;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.IClock
	var $System_Windows_Media_Animation_IClock = function() {
	};
	$System_Windows_Media_Animation_IClock.__typeName = 'System.Windows.Media.Animation.IClock';
	global.System.Windows.Media.Animation.IClock = $System_Windows_Media_Animation_IClock;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.IEasingFunction
	var $System_Windows_Media_Animation_IEasingFunction = function() {
	};
	$System_Windows_Media_Animation_IEasingFunction.__typeName = 'System.Windows.Media.Animation.IEasingFunction';
	global.System.Windows.Media.Animation.IEasingFunction = $System_Windows_Media_Animation_IEasingFunction;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.IRootClock
	var $System_Windows_Media_Animation_IRootClock = function() {
	};
	$System_Windows_Media_Animation_IRootClock.__typeName = 'System.Windows.Media.Animation.IRootClock';
	global.System.Windows.Media.Animation.IRootClock = $System_Windows_Media_Animation_IRootClock;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.KeyTime
	var $System_Windows_Media_Animation_KeyTime = function(type, timeSpan, percent) {
		this.$1$TypeField = 0;
		this.$1$TimeSpanField = ss.getDefaultValue(ss.TimeSpan);
		this.$1$PercentField = 0;
		this.set_Type(type);
		this.set_TimeSpan(timeSpan);
		this.set_Percent(percent);
	};
	$System_Windows_Media_Animation_KeyTime.__typeName = 'System.Windows.Media.Animation.KeyTime';
	$System_Windows_Media_Animation_KeyTime.FromTimeSpan = function(timeSpan) {
		return new $System_Windows_Media_Animation_KeyTime(2, timeSpan, Number.NaN);
	};
	$System_Windows_Media_Animation_KeyTime.FromPercent = function(percent) {
		return new $System_Windows_Media_Animation_KeyTime(1, new ss.TimeSpan(0), percent);
	};
	$System_Windows_Media_Animation_KeyTime.Parse = function(value) {
		value = value.trim();
		if (value === 'Paced') {
			return $System_Windows_Media_Animation_KeyTime.Paced;
		}
		if (value === 'Uniform') {
			return $System_Windows_Media_Animation_KeyTime.Uniform;
		}
		if (ss.endsWithString(value, '%')) {
			var percent = {};
			if (Granular.Compatibility.Double.TryParse(value.substr(0, value.length - 1), percent)) {
				return $System_Windows_Media_Animation_KeyTime.FromPercent(percent.$ / 100);
			}
		}
		var timeSpan = {};
		if (Granular.Compatibility.TimeSpan.TryParse(value, timeSpan)) {
			return $System_Windows_Media_Animation_KeyTime.FromTimeSpan(timeSpan.$);
		}
		throw new Granular.Exception('Can\'t parse KeyTime value "{0}"', [value]);
	};
	global.System.Windows.Media.Animation.KeyTime = $System_Windows_Media_Animation_KeyTime;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.KeyTimeType
	var $System_Windows_Media_Animation_KeyTimeType = function() {
	};
	$System_Windows_Media_Animation_KeyTimeType.__typeName = 'System.Windows.Media.Animation.KeyTimeType';
	global.System.Windows.Media.Animation.KeyTimeType = $System_Windows_Media_Animation_KeyTimeType;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.LinearColorKeyFrame
	var $System_Windows_Media_Animation_LinearColorKeyFrame = function() {
		$System_Windows_Media_Animation_ColorKeyFrame.call(this);
	};
	$System_Windows_Media_Animation_LinearColorKeyFrame.__typeName = 'System.Windows.Media.Animation.LinearColorKeyFrame';
	global.System.Windows.Media.Animation.LinearColorKeyFrame = $System_Windows_Media_Animation_LinearColorKeyFrame;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.LinearDoubleKeyFrame
	var $System_Windows_Media_Animation_LinearDoubleKeyFrame = function() {
		$System_Windows_Media_Animation_DoubleKeyFrame.call(this);
	};
	$System_Windows_Media_Animation_LinearDoubleKeyFrame.__typeName = 'System.Windows.Media.Animation.LinearDoubleKeyFrame';
	global.System.Windows.Media.Animation.LinearDoubleKeyFrame = $System_Windows_Media_Animation_LinearDoubleKeyFrame;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.LinearRectKeyFrame
	var $System_Windows_Media_Animation_LinearRectKeyFrame = function() {
		$System_Windows_Media_Animation_RectKeyFrame.call(this);
	};
	$System_Windows_Media_Animation_LinearRectKeyFrame.__typeName = 'System.Windows.Media.Animation.LinearRectKeyFrame';
	global.System.Windows.Media.Animation.LinearRectKeyFrame = $System_Windows_Media_Animation_LinearRectKeyFrame;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.LinearThicknessKeyFrame
	var $System_Windows_Media_Animation_LinearThicknessKeyFrame = function() {
		$System_Windows_Media_Animation_ThicknessKeyFrame.call(this);
	};
	$System_Windows_Media_Animation_LinearThicknessKeyFrame.__typeName = 'System.Windows.Media.Animation.LinearThicknessKeyFrame';
	global.System.Windows.Media.Animation.LinearThicknessKeyFrame = $System_Windows_Media_Animation_LinearThicknessKeyFrame;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.OffsetClock
	var $System_Windows_Media_Animation_OffsetClock = function(clock, offset) {
		this.$clock = null;
		this.$offset = ss.getDefaultValue(ss.TimeSpan);
		this.$clock = clock;
		this.$offset = offset;
	};
	$System_Windows_Media_Animation_OffsetClock.__typeName = 'System.Windows.Media.Animation.OffsetClock';
	global.System.Windows.Media.Animation.OffsetClock = $System_Windows_Media_Animation_OffsetClock;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.ParallelClock
	var $System_Windows_Media_Animation_ParallelClock = function(clocks) {
		this.$1$FirstTickField = ss.getDefaultValue(ss.TimeSpan);
		this.$1$LastTickField = ss.getDefaultValue(ss.TimeSpan);
		this.$1$DurationField = ss.getDefaultValue(ss.TimeSpan);
		this.$clocks = null;
		this.$clocks = clocks;
		this.set_FirstTick(System.Linq.EnumerableExtensions.Min(ss.TimeSpan).call(null, Enumerable.from(clocks).select(function(clock) {
			return clock.get_FirstTick();
		}).defaultIfEmpty(new ss.TimeSpan(0))));
		this.set_LastTick(System.Linq.EnumerableExtensions.Max(ss.TimeSpan).call(null, Enumerable.from(clocks).select(function(clock1) {
			return clock1.get_LastTick();
		}).defaultIfEmpty(new ss.TimeSpan(0))));
		this.set_Duration(System.Linq.EnumerableExtensions.Max(ss.TimeSpan).call(null, Enumerable.from(clocks).select(function(clock2) {
			return clock2.get_Duration();
		}).defaultIfEmpty(new ss.TimeSpan(0))));
	};
	$System_Windows_Media_Animation_ParallelClock.__typeName = 'System.Windows.Media.Animation.ParallelClock';
	global.System.Windows.Media.Animation.ParallelClock = $System_Windows_Media_Animation_ParallelClock;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.ParallelTimeline
	var $System_Windows_Media_Animation_ParallelTimeline = function() {
		$System_Windows_Media_Animation_TimelineGroup.call(this);
	};
	$System_Windows_Media_Animation_ParallelTimeline.__typeName = 'System.Windows.Media.Animation.ParallelTimeline';
	global.System.Windows.Media.Animation.ParallelTimeline = $System_Windows_Media_Animation_ParallelTimeline;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.ParallelTimelineClock
	var $System_Windows_Media_Animation_ParallelTimelineClock = function(parallelTimeline, children) {
		$System_Windows_Media_Animation_TimelineGroupClock.call(this, new $System_Windows_Media_Animation_ParallelClock(children), parallelTimeline, children);
		//
	};
	$System_Windows_Media_Animation_ParallelTimelineClock.__typeName = 'System.Windows.Media.Animation.ParallelTimelineClock';
	global.System.Windows.Media.Animation.ParallelTimelineClock = $System_Windows_Media_Animation_ParallelTimelineClock;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.PauseStoryboard
	var $System_Windows_Media_Animation_PauseStoryboard = function() {
		$System_Windows_Media_Animation_StoryboardAction.call(this);
	};
	$System_Windows_Media_Animation_PauseStoryboard.__typeName = 'System.Windows.Media.Animation.PauseStoryboard';
	global.System.Windows.Media.Animation.PauseStoryboard = $System_Windows_Media_Animation_PauseStoryboard;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.PowerEase
	var $System_Windows_Media_Animation_PowerEase = function() {
		$System_Windows_Media_Animation_EasingFunctionBase.call(this);
	};
	$System_Windows_Media_Animation_PowerEase.__typeName = 'System.Windows.Media.Animation.PowerEase';
	global.System.Windows.Media.Animation.PowerEase = $System_Windows_Media_Animation_PowerEase;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.QuadraticEase
	var $System_Windows_Media_Animation_QuadraticEase = function() {
		$System_Windows_Media_Animation_EasingFunctionBase.call(this);
	};
	$System_Windows_Media_Animation_QuadraticEase.__typeName = 'System.Windows.Media.Animation.QuadraticEase';
	global.System.Windows.Media.Animation.QuadraticEase = $System_Windows_Media_Animation_QuadraticEase;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.QuarticEase
	var $System_Windows_Media_Animation_QuarticEase = function() {
		$System_Windows_Media_Animation_EasingFunctionBase.call(this);
	};
	$System_Windows_Media_Animation_QuarticEase.__typeName = 'System.Windows.Media.Animation.QuarticEase';
	global.System.Windows.Media.Animation.QuarticEase = $System_Windows_Media_Animation_QuarticEase;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.QuinticEase
	var $System_Windows_Media_Animation_QuinticEase = function() {
		$System_Windows_Media_Animation_EasingFunctionBase.call(this);
	};
	$System_Windows_Media_Animation_QuinticEase.__typeName = 'System.Windows.Media.Animation.QuinticEase';
	global.System.Windows.Media.Animation.QuinticEase = $System_Windows_Media_Animation_QuinticEase;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.RectAnimation
	var $System_Windows_Media_Animation_RectAnimation = function() {
		this.$animationOperations = null;
		this.$isAccumulable = false;
		$System_Windows_Media_Animation_AnimationTimeline.call(this);
		this.$animationOperations = $System_Windows_Media_Animation_$RectAnimationOperations.$Default;
		this.$isAccumulable = true;
	};
	$System_Windows_Media_Animation_RectAnimation.__typeName = 'System.Windows.Media.Animation.RectAnimation';
	global.System.Windows.Media.Animation.RectAnimation = $System_Windows_Media_Animation_RectAnimation;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.RectAnimationUsingKeyFrames
	var $System_Windows_Media_Animation_RectAnimationUsingKeyFrames = function() {
		this.$5$KeyFramesField = null;
		this.$animationOperations = null;
		this.$isAccumulable = false;
		$System_Windows_Media_Animation_AnimationTimeline.call(this);
		this.$animationOperations = $System_Windows_Media_Animation_$RectAnimationOperations.$Default;
		this.$isAccumulable = true;
		this.set_KeyFrames(new (ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Media_Animation_RectKeyFrame]))());
		this.get_KeyFrames().SetInheritanceParent(this);
	};
	$System_Windows_Media_Animation_RectAnimationUsingKeyFrames.__typeName = 'System.Windows.Media.Animation.RectAnimationUsingKeyFrames';
	global.System.Windows.Media.Animation.RectAnimationUsingKeyFrames = $System_Windows_Media_Animation_RectAnimationUsingKeyFrames;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.RectKeyFrame
	var $System_Windows_Media_Animation_RectKeyFrame = function() {
		$System_Windows_Freezable.call(this);
	};
	$System_Windows_Media_Animation_RectKeyFrame.__typeName = 'System.Windows.Media.Animation.RectKeyFrame';
	global.System.Windows.Media.Animation.RectKeyFrame = $System_Windows_Media_Animation_RectKeyFrame;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.RemoveStoryboard
	var $System_Windows_Media_Animation_RemoveStoryboard = function() {
		$System_Windows_Media_Animation_StoryboardAction.call(this);
	};
	$System_Windows_Media_Animation_RemoveStoryboard.__typeName = 'System.Windows.Media.Animation.RemoveStoryboard';
	global.System.Windows.Media.Animation.RemoveStoryboard = $System_Windows_Media_Animation_RemoveStoryboard;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.RepeatBehavior
	var $System_Windows_Media_Animation_RepeatBehavior = function(count, duration) {
		this.$1$CountField = 0;
		this.$1$DurationField = ss.getDefaultValue(ss.TimeSpan);
		this.set_Count(count);
		this.set_Duration(duration);
	};
	$System_Windows_Media_Animation_RepeatBehavior.__typeName = 'System.Windows.Media.Animation.RepeatBehavior';
	$System_Windows_Media_Animation_RepeatBehavior.FromRepeatCount = function(count) {
		return new $System_Windows_Media_Animation_RepeatBehavior(count, new ss.TimeSpan(0));
	};
	$System_Windows_Media_Animation_RepeatBehavior.FromTimeSpan = function(timeSpan) {
		return new $System_Windows_Media_Animation_RepeatBehavior(Number.NaN, timeSpan);
	};
	$System_Windows_Media_Animation_RepeatBehavior.Parse = function(value) {
		value = value.trim();
		if (value === 'Forever') {
			return $System_Windows_Media_Animation_RepeatBehavior.Forever;
		}
		if (value === 'OneTime') {
			return $System_Windows_Media_Animation_RepeatBehavior.OneTime;
		}
		if (ss.endsWithString(value, 'x')) {
			var count = {};
			if (Granular.Compatibility.Double.TryParse(value.substr(0, value.length - 1), count)) {
				return $System_Windows_Media_Animation_RepeatBehavior.FromRepeatCount(count.$);
			}
		}
		var timeSpan = {};
		if (Granular.Compatibility.TimeSpan.TryParse(value, timeSpan)) {
			return $System_Windows_Media_Animation_RepeatBehavior.FromTimeSpan(timeSpan.$);
		}
		throw new Granular.Exception('Can\'t parse RepeatBehavior value "{0}"', [value]);
	};
	global.System.Windows.Media.Animation.RepeatBehavior = $System_Windows_Media_Animation_RepeatBehavior;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.RepeatClock
	var $System_Windows_Media_Animation_RepeatClock = function(clock, iterationsCount) {
		this.$1$FirstTickField = ss.getDefaultValue(ss.TimeSpan);
		this.$1$LastTickField = ss.getDefaultValue(ss.TimeSpan);
		this.$1$DurationField = ss.getDefaultValue(ss.TimeSpan);
		this.$clock = null;
		this.$iterationDuration = ss.getDefaultValue(ss.TimeSpan);
		this.$iterationsCount = 0;
		this.$clock = clock;
		this.$iterationDuration = clock.get_Duration();
		this.$iterationsCount = iterationsCount;
		this.set_Duration((Granular.Compatibility.Double.IsInfinity(iterationsCount) ? Granular.Compatibility.TimeSpan.MaxValue : Granular.Extensions.TimeSpanExtensions.Scale(this.$iterationDuration, iterationsCount)));
		if (iterationsCount <= 0) {
			throw new Granular.Exception('Invalid iterations count "{0}"', [iterationsCount]);
		}
		if (this.$iterationDuration.ticks <= (new ss.TimeSpan(0)).ticks) {
			throw new Granular.Exception('Invalid iteration duration "{0}"', [this.$iterationDuration]);
		}
		this.$SetTickBounds();
	};
	$System_Windows_Media_Animation_RepeatClock.__typeName = 'System.Windows.Media.Animation.RepeatClock';
	global.System.Windows.Media.Animation.RepeatClock = $System_Windows_Media_Animation_RepeatClock;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.ResumeStoryboard
	var $System_Windows_Media_Animation_ResumeStoryboard = function() {
		$System_Windows_Media_Animation_StoryboardAction.call(this);
	};
	$System_Windows_Media_Animation_ResumeStoryboard.__typeName = 'System.Windows.Media.Animation.ResumeStoryboard';
	global.System.Windows.Media.Animation.ResumeStoryboard = $System_Windows_Media_Animation_ResumeStoryboard;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.ReverseClock
	var $System_Windows_Media_Animation_ReverseClock = function(clock) {
		this.$1$LastTickField = ss.getDefaultValue(ss.TimeSpan);
		this.$1$DurationField = ss.getDefaultValue(ss.TimeSpan);
		this.$clock = null;
		this.$clock = clock;
		this.set_Duration(Granular.Extensions.TimeSpanExtensions.Scale(clock.get_Duration(), 2));
		this.set_LastTick(new ss.TimeSpan(this.get_Duration().ticks - clock.get_FirstTick().ticks));
	};
	$System_Windows_Media_Animation_ReverseClock.__typeName = 'System.Windows.Media.Animation.ReverseClock';
	global.System.Windows.Media.Animation.ReverseClock = $System_Windows_Media_Animation_ReverseClock;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.RootClock
	var $System_Windows_Media_Animation_RootClock = function() {
		this.$startTime = new Date(0);
		this.$scheduledTick = null;
		this.$scheduledTickTime = ss.getDefaultValue(ss.TimeSpan);
		this.$lastTickTime = ss.getDefaultValue(ss.TimeSpan);
		this.$clocksSchedule = null;
		this.$clocksSchedule = [];
		this.$startTime = new Date();
		this.$lastTickTime = Granular.Compatibility.TimeSpan.MinValue;
	};
	$System_Windows_Media_Animation_RootClock.__typeName = 'System.Windows.Media.Animation.RootClock';
	global.System.Windows.Media.Animation.RootClock = $System_Windows_Media_Animation_RootClock;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.SequentialClock
	var $System_Windows_Media_Animation_SequentialClock = function(clocks) {
		this.$1$FirstTickField = ss.getDefaultValue(ss.TimeSpan);
		this.$1$LastTickField = ss.getDefaultValue(ss.TimeSpan);
		this.$1$DurationField = ss.getDefaultValue(ss.TimeSpan);
		this.$clocks = null;
		this.$clocks = clocks;
		if (!Enumerable.from(clocks).any()) {
			this.set_FirstTick(new ss.TimeSpan(0));
			this.set_LastTick(new ss.TimeSpan(0));
			this.set_Duration(new ss.TimeSpan(0));
		}
		else {
			this.set_FirstTick(Enumerable.from(clocks).first().get_FirstTick());
			this.set_LastTick(new ss.TimeSpan(Enumerable.from(clocks).take(Enumerable.from(clocks).count() - 1).select(function(clock) {
				return clock.get_Duration();
			}).aggregate(function(t1, t2) {
				return new ss.TimeSpan(t1.ticks + t2.ticks);
			}).ticks + Enumerable.from(clocks).last().get_LastTick().ticks));
			this.set_Duration(Enumerable.from(clocks).select(function(clock1) {
				return clock1.get_Duration();
			}).aggregate(function(t11, t21) {
				return new ss.TimeSpan(t11.ticks + t21.ticks);
			}));
		}
	};
	$System_Windows_Media_Animation_SequentialClock.__typeName = 'System.Windows.Media.Animation.SequentialClock';
	global.System.Windows.Media.Animation.SequentialClock = $System_Windows_Media_Animation_SequentialClock;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.SequentialTimeline
	var $System_Windows_Media_Animation_SequentialTimeline = function() {
		$System_Windows_Media_Animation_TimelineGroup.call(this);
	};
	$System_Windows_Media_Animation_SequentialTimeline.__typeName = 'System.Windows.Media.Animation.SequentialTimeline';
	global.System.Windows.Media.Animation.SequentialTimeline = $System_Windows_Media_Animation_SequentialTimeline;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.SequentialTimelineClock
	var $System_Windows_Media_Animation_SequentialTimelineClock = function(SequentialTimeline, children) {
		$System_Windows_Media_Animation_TimelineGroupClock.call(this, new $System_Windows_Media_Animation_SequentialClock(children), SequentialTimeline, children);
		//
	};
	$System_Windows_Media_Animation_SequentialTimelineClock.__typeName = 'System.Windows.Media.Animation.SequentialTimelineClock';
	global.System.Windows.Media.Animation.SequentialTimelineClock = $System_Windows_Media_Animation_SequentialTimelineClock;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.SineEase
	var $System_Windows_Media_Animation_SineEase = function() {
		$System_Windows_Media_Animation_EasingFunctionBase.call(this);
	};
	$System_Windows_Media_Animation_SineEase.__typeName = 'System.Windows.Media.Animation.SineEase';
	global.System.Windows.Media.Animation.SineEase = $System_Windows_Media_Animation_SineEase;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.SkipToFillStoryboard
	var $System_Windows_Media_Animation_SkipToFillStoryboard = function() {
		$System_Windows_Media_Animation_StoryboardAction.call(this);
	};
	$System_Windows_Media_Animation_SkipToFillStoryboard.__typeName = 'System.Windows.Media.Animation.SkipToFillStoryboard';
	global.System.Windows.Media.Animation.SkipToFillStoryboard = $System_Windows_Media_Animation_SkipToFillStoryboard;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.StopStoryboard
	var $System_Windows_Media_Animation_StopStoryboard = function() {
		$System_Windows_Media_Animation_StoryboardAction.call(this);
	};
	$System_Windows_Media_Animation_StopStoryboard.__typeName = 'System.Windows.Media.Animation.StopStoryboard';
	global.System.Windows.Media.Animation.StopStoryboard = $System_Windows_Media_Animation_StopStoryboard;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.Storyboard
	var $System_Windows_Media_Animation_Storyboard = function() {
		this.$clocks = null;
		$System_Windows_Media_Animation_ParallelTimeline.call(this);
		this.$clocks = new (ss.makeGenericType(ss.Dictionary$2, [$System_Windows_FrameworkElement, $System_Windows_Media_Animation_TimelineClock]))();
	};
	$System_Windows_Media_Animation_Storyboard.__typeName = 'System.Windows.Media.Animation.Storyboard';
	$System_Windows_Media_Animation_Storyboard.GetTargetName = function(obj) {
		return ss.cast(obj.GetValue($System_Windows_Media_Animation_Storyboard.TargetNameProperty), String);
	};
	$System_Windows_Media_Animation_Storyboard.SetTargetName = function(obj, value) {
		obj.SetValue($System_Windows_Media_Animation_Storyboard.TargetNameProperty, value, 11);
	};
	$System_Windows_Media_Animation_Storyboard.GetTarget = function(obj) {
		return ss.cast(obj.GetValue($System_Windows_Media_Animation_Storyboard.TargetProperty), $System_Windows_DependencyObject);
	};
	$System_Windows_Media_Animation_Storyboard.SetTarget = function(obj, value) {
		obj.SetValue($System_Windows_Media_Animation_Storyboard.TargetProperty, value, 11);
	};
	$System_Windows_Media_Animation_Storyboard.GetTargetProperty = function(obj) {
		return ss.cast(obj.GetValue($System_Windows_Media_Animation_Storyboard.TargetPropertyProperty), $System_Windows_PropertyPath);
	};
	$System_Windows_Media_Animation_Storyboard.SetTargetProperty = function(obj, value) {
		obj.SetValue($System_Windows_Media_Animation_Storyboard.TargetPropertyProperty, value, 11);
	};
	$System_Windows_Media_Animation_Storyboard.$TryGetPropertyPathTarget = function(root, propertyPath, target, targetProperty) {
		var baseValue = {};
		target.$ = ((Enumerable.from(propertyPath.get_Elements()).count() > 1 && $System_Windows_PropertyPathExtensions.TryGetValue($System_Windows_PropertyPathExtensions.GetBasePropertyPath(propertyPath), root, baseValue)) ? ss.safeCast(baseValue.$, $System_Windows_DependencyObject) : root);
		if (ss.isValue(target.$) && !propertyPath.get_IsEmpty()) {
			return Enumerable.from(propertyPath.get_Elements()).last().TryGetDependencyProperty(ss.getInstanceType(target.$), targetProperty);
		}
		target.$ = null;
		targetProperty.$ = null;
		return false;
	};
	global.System.Windows.Media.Animation.Storyboard = $System_Windows_Media_Animation_Storyboard;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.StoryboardAction
	var $System_Windows_Media_Animation_StoryboardAction = function() {
		this.$3$BeginStoryboardNameField = null;
		$System_Windows_Freezable.call(this);
	};
	$System_Windows_Media_Animation_StoryboardAction.__typeName = 'System.Windows.Media.Animation.StoryboardAction';
	global.System.Windows.Media.Animation.StoryboardAction = $System_Windows_Media_Animation_StoryboardAction;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.ThicknessAnimation
	var $System_Windows_Media_Animation_ThicknessAnimation = function() {
		this.$animationOperations = null;
		this.$isAccumulable = false;
		$System_Windows_Media_Animation_AnimationTimeline.call(this);
		this.$animationOperations = $System_Windows_Media_Animation_$ThicknessAnimationOperations.$Default;
		this.$isAccumulable = true;
	};
	$System_Windows_Media_Animation_ThicknessAnimation.__typeName = 'System.Windows.Media.Animation.ThicknessAnimation';
	global.System.Windows.Media.Animation.ThicknessAnimation = $System_Windows_Media_Animation_ThicknessAnimation;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames
	var $System_Windows_Media_Animation_ThicknessAnimationUsingKeyFrames = function() {
		this.$5$KeyFramesField = null;
		this.$animationOperations = null;
		this.$isAccumulable = false;
		$System_Windows_Media_Animation_AnimationTimeline.call(this);
		this.$animationOperations = $System_Windows_Media_Animation_$ThicknessAnimationOperations.$Default;
		this.$isAccumulable = true;
		this.set_KeyFrames(new (ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Media_Animation_ThicknessKeyFrame]))());
		this.get_KeyFrames().SetInheritanceParent(this);
	};
	$System_Windows_Media_Animation_ThicknessAnimationUsingKeyFrames.__typeName = 'System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames';
	global.System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames = $System_Windows_Media_Animation_ThicknessAnimationUsingKeyFrames;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.ThicknessKeyFrame
	var $System_Windows_Media_Animation_ThicknessKeyFrame = function() {
		$System_Windows_Freezable.call(this);
	};
	$System_Windows_Media_Animation_ThicknessKeyFrame.__typeName = 'System.Windows.Media.Animation.ThicknessKeyFrame';
	global.System.Windows.Media.Animation.ThicknessKeyFrame = $System_Windows_Media_Animation_ThicknessKeyFrame;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.Timeline
	var $System_Windows_Media_Animation_Timeline = function() {
		this.$parent = null;
		$System_Windows_Freezable.call(this);
	};
	$System_Windows_Media_Animation_Timeline.__typeName = 'System.Windows.Media.Animation.Timeline';
	global.System.Windows.Media.Animation.Timeline = $System_Windows_Media_Animation_Timeline;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.TimelineClock
	var $System_Windows_Media_Animation_TimelineClock = function(baseClock, timeline) {
		this.$1$InvalidatedField = null;
		this.$1$TimelineField = null;
		this.$1$CurrentStateField = null;
		this.$clock = null;
		this.$beginTime = ss.getDefaultValue(ss.TimeSpan);
		this.$pauseOffset = ss.getDefaultValue(ss.TimeSpan);
		this.$rootClock = null;
		this.$currentFillBehavior = 0;
		this.$clock = $System_Windows_Media_Animation_TimelineClock.$CreateClock(baseClock, timeline);
		this.set_Timeline(timeline);
		this.set_CurrentState($System_Windows_Media_Animation_ClockState.Empty);
	};
	$System_Windows_Media_Animation_TimelineClock.__typeName = 'System.Windows.Media.Animation.TimelineClock';
	$System_Windows_Media_Animation_TimelineClock.$CreateClock = function(baseClock, timeline) {
		if (timeline.get_Duration().get_HasTimeSpan()) {
			baseClock = new $System_Windows_Media_Animation_DurationClock(baseClock, timeline.get_Duration().get_TimeSpan());
		}
		if (timeline.get_AutoReverse()) {
			baseClock = new $System_Windows_Media_Animation_ReverseClock(baseClock);
		}
		if (!ss.referenceEquals(timeline.get_RepeatBehavior(), $System_Windows_Media_Animation_RepeatBehavior.OneTime)) {
			var iterationsCount = Granular.Extensions.DoubleExtensions.DefaultIfNaN(timeline.get_RepeatBehavior().get_Count(), timeline.get_RepeatBehavior().get_Duration().ticks / baseClock.get_Duration().ticks);
			baseClock = new $System_Windows_Media_Animation_RepeatClock(baseClock, iterationsCount);
		}
		if (timeline.get_BeginTime().ticks !== (new ss.TimeSpan(0)).ticks) {
			baseClock = new $System_Windows_Media_Animation_OffsetClock(baseClock, timeline.get_BeginTime());
		}
		return baseClock;
	};
	global.System.Windows.Media.Animation.TimelineClock = $System_Windows_Media_Animation_TimelineClock;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.TimelineGroup
	var $System_Windows_Media_Animation_TimelineGroup = function() {
		this.$4$ChildrenField = null;
		$System_Windows_Media_Animation_Timeline.call(this);
		this.set_Children(new (ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_Media_Animation_Timeline]))());
		this.get_Children().add_CollectionChanged(ss.mkdel(this, this.$OnChildrenCollectionChanged));
	};
	$System_Windows_Media_Animation_TimelineGroup.__typeName = 'System.Windows.Media.Animation.TimelineGroup';
	global.System.Windows.Media.Animation.TimelineGroup = $System_Windows_Media_Animation_TimelineGroup;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.TimelineGroupClock
	var $System_Windows_Media_Animation_TimelineGroupClock = function(baseGroupClock, timelineGroup, children) {
		this.$2$ChildrenField = null;
		$System_Windows_Media_Animation_TimelineClock.call(this, baseGroupClock, timelineGroup);
		this.set_Children(children);
	};
	$System_Windows_Media_Animation_TimelineGroupClock.__typeName = 'System.Windows.Media.Animation.TimelineGroupClock';
	global.System.Windows.Media.Animation.TimelineGroupClock = $System_Windows_Media_Animation_TimelineGroupClock;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Animation.TransitionAnimationTimeline
	var $System_Windows_Media_Animation_TransitionAnimationTimeline$1 = function(T) {
		var $type = function(animationOperations, isAccumulable) {
			this.$animationOperations = null;
			this.$isAccumulable = false;
			$System_Windows_Media_Animation_AnimationTimeline.call(this);
			this.$animationOperations = animationOperations;
			this.$isAccumulable = isAccumulable;
		};
		ss.registerGenericClassInstance($type, $System_Windows_Media_Animation_TransitionAnimationTimeline$1, [T], {
			get_To: function() {
				return ss.cast(this.GetValue($type.ToProperty), T);
			},
			set_To: function(value) {
				this.SetValue($type.ToProperty, value, 11);
			},
			get_From: function() {
				return ss.cast(this.GetValue($type.FromProperty), T);
			},
			set_From: function(value) {
				this.SetValue($type.FromProperty, value, 11);
			},
			get_By: function() {
				return ss.cast(this.GetValue($type.ByProperty), T);
			},
			set_By: function(value) {
				this.SetValue($type.ByProperty, value, 11);
			},
			get_EasingFunction: function() {
				return ss.cast(this.GetValue($type.EasingFunctionProperty), $System_Windows_Media_Animation_IEasingFunction);
			},
			set_EasingFunction: function(value) {
				this.SetValue($type.EasingFunctionProperty, value, 11);
			},
			GetCurrentValue: function(defaultOriginValue, defaultDestinationValue, animationClock) {
				var progress = (ss.isValue(this.get_EasingFunction()) ? this.get_EasingFunction().Ease(animationClock.get_CurrentState().get_Progress()) : animationClock.get_CurrentState().get_Progress());
				var baseValue = this.$animationOperations.get_Zero();
				var from;
				var to;
				if (ss.isValue(this.get_From())) {
					if (ss.isValue(this.get_To())) {
						if (this.get_IsAdditive() && this.$isAccumulable) {
							baseValue = ss.cast(defaultOriginValue, T);
						}
						from = this.get_From();
						to = this.get_To();
					}
					else if (ss.isValue(this.get_By())) {
						if (this.get_IsAdditive() && this.$isAccumulable) {
							baseValue = ss.cast(defaultOriginValue, T);
						}
						from = this.get_From();
						to = this.$animationOperations.Add(this.get_From(), this.get_By());
					}
					else {
						from = this.get_From();
						to = ss.cast(defaultDestinationValue, T);
					}
				}
				else if (ss.isValue(this.get_To())) {
					from = ss.cast(defaultOriginValue, T);
					to = this.get_To();
				}
				else if (ss.isValue(this.get_By())) {
					if (this.$isAccumulable) {
						baseValue = ss.cast(defaultOriginValue, T);
					}
					from = this.$animationOperations.get_Zero();
					to = this.get_By();
				}
				else {
					from = ss.cast(defaultOriginValue, T);
					to = ss.cast(defaultDestinationValue, T);
				}
				if (this.get_IsCumulative() && this.$isAccumulable) {
					baseValue = this.$animationOperations.Add(baseValue, this.$animationOperations.Scale(this.$animationOperations.Subtract(to, from), Math.floor(animationClock.get_CurrentState().get_Iteration())));
				}
				return this.$animationOperations.Add(baseValue, this.$animationOperations.Interpolate(from, to, progress));
			}
		}, function() {
			return $System_Windows_Media_Animation_AnimationTimeline;
		}, function() {
			return [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject];
		});
		ss.setMetadata($type, { members: [{ name: '.ctor', type: 1, params: [ss.makeGenericType($System_Windows_Media_Animation_IAnimationOperations$1, [T]), Boolean] }, { name: 'GetCurrentValue', type: 8, sname: 'GetCurrentValue', returnType: Object, params: [Object, Object, $System_Windows_Media_Animation_AnimationTimelineClock] }, { name: 'By', type: 16, returnType: T, getter: { name: 'get_By', type: 8, sname: 'get_By', returnType: T, params: [] }, setter: { name: 'set_By', type: 8, sname: 'set_By', returnType: Object, params: [T] } }, { name: 'EasingFunction', type: 16, returnType: $System_Windows_Media_Animation_IEasingFunction, getter: { name: 'get_EasingFunction', type: 8, sname: 'get_EasingFunction', returnType: $System_Windows_Media_Animation_IEasingFunction, params: [] }, setter: { name: 'set_EasingFunction', type: 8, sname: 'set_EasingFunction', returnType: Object, params: [$System_Windows_Media_Animation_IEasingFunction] } }, { name: 'From', type: 16, returnType: T, getter: { name: 'get_From', type: 8, sname: 'get_From', returnType: T, params: [] }, setter: { name: 'set_From', type: 8, sname: 'set_From', returnType: Object, params: [T] } }, { name: 'To', type: 16, returnType: T, getter: { name: 'get_To', type: 8, sname: 'get_To', returnType: T, params: [] }, setter: { name: 'set_To', type: 8, sname: 'set_To', returnType: Object, params: [T] } }, { name: 'ByProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ByProperty' }, { name: 'EasingFunctionProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'EasingFunctionProperty' }, { name: 'FromProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'FromProperty' }, { name: 'ToProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ToProperty' }] });
		$type.ToProperty = $System_Windows_DependencyProperty.Register('To', T, $type, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$type.FromProperty = $System_Windows_DependencyProperty.Register('From', T, $type, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$type.ByProperty = $System_Windows_DependencyProperty.Register('By', T, $type, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$type.EasingFunctionProperty = $System_Windows_DependencyProperty.Register('EasingFunction', $System_Windows_Media_Animation_IEasingFunction, $type, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		return $type;
	};
	$System_Windows_Media_Animation_TransitionAnimationTimeline$1.__typeName = 'System.Windows.Media.Animation.TransitionAnimationTimeline$1';
	ss.initGenericClass($System_Windows_Media_Animation_TransitionAnimationTimeline$1, $asm, 1);
	global.System.Windows.Media.Animation.TransitionAnimationTimeline$1 = $System_Windows_Media_Animation_TransitionAnimationTimeline$1;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Imaging.BitmapCacheOption
	var $System_Windows_Media_Imaging_BitmapCacheOption = function() {
	};
	$System_Windows_Media_Imaging_BitmapCacheOption.__typeName = 'System.Windows.Media.Imaging.BitmapCacheOption';
	global.System.Windows.Media.Imaging.BitmapCacheOption = $System_Windows_Media_Imaging_BitmapCacheOption;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Imaging.BitmapImage
	var $System_Windows_Media_Imaging_BitmapImage = function() {
		this.$renderImageSource$1 = null;
		this.$isInitializing = false;
		$System_Windows_Media_Imaging_BitmapSource.call(this);
		//
	};
	$System_Windows_Media_Imaging_BitmapImage.__typeName = 'System.Windows.Media.Imaging.BitmapImage';
	$System_Windows_Media_Imaging_BitmapImage.$ctor1 = function(uriSource, cacheOption) {
		this.$renderImageSource$1 = null;
		this.$isInitializing = false;
		$System_Windows_Media_Imaging_BitmapSource.call(this);
		this.BeginInit();
		this.set_UriSource(uriSource);
		this.set_CacheOption(cacheOption);
		this.EndInit();
	};
	global.System.Windows.Media.Imaging.BitmapImage = $System_Windows_Media_Imaging_BitmapImage;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Media.Imaging.BitmapSource
	var $System_Windows_Media_Imaging_BitmapSource = function() {
		this.$5$DownloadProgressField = null;
		this.$5$DownloadCompletedField = null;
		this.$5$DownloadFailedField = null;
		this.$5$IsDownloadingField = false;
		this.$renderImageSource = null;
		this.$renderImageState = 0;
		$System_Windows_Media_ImageSource.call(this);
		//
	};
	$System_Windows_Media_Imaging_BitmapSource.__typeName = 'System.Windows.Media.Imaging.BitmapSource';
	$System_Windows_Media_Imaging_BitmapSource.$ctor1 = function(renderImageSource) {
		this.$5$DownloadProgressField = null;
		this.$5$DownloadCompletedField = null;
		this.$5$DownloadFailedField = null;
		this.$5$IsDownloadingField = false;
		this.$renderImageSource = null;
		this.$renderImageState = 0;
		$System_Windows_Media_ImageSource.call(this);
		this.$renderImageSource = renderImageSource;
	};
	$System_Windows_Media_Imaging_BitmapSource.Create = function(data, sourceRect) {
		return $System_Windows_Media_Imaging_BitmapSource.Create$1(0, data, sourceRect);
	};
	$System_Windows_Media_Imaging_BitmapSource.Create$1 = function(imageType, data, sourceRect) {
		return new $System_Windows_Media_Imaging_BitmapSource.$ctor1($System_Windows_ApplicationHost.get_Current().get_RenderImageSourceFactory().CreateRenderImageSource$1(imageType, data, sourceRect));
	};
	global.System.Windows.Media.Imaging.BitmapSource = $System_Windows_Media_Imaging_BitmapSource;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Threading.Dispatcher
	var $System_Windows_Threading_Dispatcher = function() {
		this.$queue = null;
		this.$disableProcessingRequests = 0;
		this.$queue = new (ss.makeGenericType(Granular.Collections.PriorityQueue$2, [$System_Windows_Threading_DispatcherPriority, $System_Windows_Threading_DispatcherOperation]))();
	};
	$System_Windows_Threading_Dispatcher.__typeName = 'System.Windows.Threading.Dispatcher';
	global.System.Windows.Threading.Dispatcher = $System_Windows_Threading_Dispatcher;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Threading.DispatcherOperation
	var $System_Windows_Threading_DispatcherOperation = function(action) {
		$System_Windows_Threading_DispatcherOperation.$ctor2.call(this, 4, action);
		//
	};
	$System_Windows_Threading_DispatcherOperation.__typeName = 'System.Windows.Threading.DispatcherOperation';
	$System_Windows_Threading_DispatcherOperation.$ctor1 = function(action) {
		$System_Windows_Threading_DispatcherOperation.$ctor3.call(this, 4, action);
		//
	};
	$System_Windows_Threading_DispatcherOperation.$ctor2 = function(priority, action) {
		$System_Windows_Threading_DispatcherOperation.$ctor3.call(this, priority, function() {
			action();
			return null;
		});
		//
	};
	$System_Windows_Threading_DispatcherOperation.$ctor3 = function(priority, action) {
		this.$1$CompletedField = null;
		this.$1$AbortedField = null;
		this.$1$PriorityField = 0;
		this.$1$StatusField = 0;
		this.$1$ResultField = null;
		this.$action = null;
		this.set_Priority(priority);
		this.$action = action;
	};
	global.System.Windows.Threading.DispatcherOperation = $System_Windows_Threading_DispatcherOperation;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Threading.DispatcherOperationStatus
	var $System_Windows_Threading_DispatcherOperationStatus = function() {
	};
	$System_Windows_Threading_DispatcherOperationStatus.__typeName = 'System.Windows.Threading.DispatcherOperationStatus';
	global.System.Windows.Threading.DispatcherOperationStatus = $System_Windows_Threading_DispatcherOperationStatus;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Threading.DispatcherPriority
	var $System_Windows_Threading_DispatcherPriority = function() {
	};
	$System_Windows_Threading_DispatcherPriority.__typeName = 'System.Windows.Threading.DispatcherPriority';
	global.System.Windows.Threading.DispatcherPriority = $System_Windows_Threading_DispatcherPriority;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Threading.DispatcherTimer
	var $System_Windows_Threading_DispatcherTimer = function() {
		$System_Windows_Threading_DispatcherTimer.$ctor1.call(this, $System_Windows_Threading_Dispatcher.CurrentDispatcher, $System_Windows_ApplicationHost.get_Current().get_TaskScheduler(), new ss.TimeSpan(1 * 10000000), 9);
		//
	};
	$System_Windows_Threading_DispatcherTimer.__typeName = 'System.Windows.Threading.DispatcherTimer';
	$System_Windows_Threading_DispatcherTimer.$ctor1 = function(dispatcher, scheduler, interval, priority) {
		this.$1$TickField = null;
		this.$priority = 0;
		this.$interval = ss.getDefaultValue(ss.TimeSpan);
		this.$isEnabled = false;
		this.$dispatcher = null;
		this.$scheduler = null;
		this.$scheduledTask = null;
		this.$dispatcher = dispatcher;
		this.$scheduler = scheduler;
		this.set_Interval(interval);
		this.set_Priority(priority);
	};
	global.System.Windows.Threading.DispatcherTimer = $System_Windows_Threading_DispatcherTimer;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Threading.ITaskScheduler
	var $System_Windows_Threading_ITaskScheduler = function() {
	};
	$System_Windows_Threading_ITaskScheduler.__typeName = 'System.Windows.Threading.ITaskScheduler';
	global.System.Windows.Threading.ITaskScheduler = $System_Windows_Threading_ITaskScheduler;
	////////////////////////////////////////////////////////////////////////////////
	// System.Windows.Threading.TaskSchedulerExtensions
	var $System_Windows_Threading_TaskSchedulerExtensions = function() {
	};
	$System_Windows_Threading_TaskSchedulerExtensions.__typeName = 'System.Windows.Threading.TaskSchedulerExtensions';
	$System_Windows_Threading_TaskSchedulerExtensions.ScheduleTask = function(taskScheduler, action) {
		return taskScheduler.ScheduleTask(new ss.TimeSpan(0), action);
	};
	global.System.Windows.Threading.TaskSchedulerExtensions = $System_Windows_Threading_TaskSchedulerExtensions;
	ss.initClass($System_$Windows_DependencyProperty$DependencyPropertyHashKey, $asm, {
		get_$Owner: function() {
			return this.$1$OwnerField;
		},
		set_$Owner: function(value) {
			this.$1$OwnerField = value;
		},
		get_$Name: function() {
			return this.$1$NameField;
		},
		set_$Name: function(value) {
			this.$1$NameField = value;
		},
		equals: function(obj) {
			var other = ss.safeCast(obj, $System_$Windows_DependencyProperty$DependencyPropertyHashKey);
			return ss.referenceEquals(this, other) || !ss.referenceEquals(other, null) && ss.staticEquals(this.get_$Owner(), other.get_$Owner()) && ss.staticEquals(this.get_$Name(), other.get_$Name());
		},
		getHashCode: function() {
			return this.$hashCode;
		},
		toString: function() {
			return ss.formatString('{0}.{1}', ss.getTypeFullName(this.get_$Owner()), this.get_$Name());
		}
	});
	ss.initClass($System_$Windows_DependencyProperty$TypeComparer, $asm, {
		compare: function(x, y) {
			if (y.prototype instanceof x) {
				return -1;
			}
			if (x.prototype instanceof y) {
				return 1;
			}
			return 0;
		}
	}, null, [ss.IComparer]);
	ss.initClass($System_$Windows_Disposable$EmptyDisposable, $asm, {
		dispose: function() {
			//
		}
	}, null, [ss.IDisposable]);
	ss.initEnum($System_$Windows_Duration$DurationType, $asm, { $Automatic: 0, $TimeSpan: 1, $Forever: 2 });
	ss.initClass($System_$Windows_EmbeddedResourceLoader$EmbeddedResourceKey, $asm, {
		get_$AssemblyName: function() {
			return this.$1$AssemblyNameField;
		},
		set_$AssemblyName: function(value) {
			this.$1$AssemblyNameField = value;
		},
		get_$ResourcePath: function() {
			return this.$1$ResourcePathField;
		},
		set_$ResourcePath: function(value) {
			this.$1$ResourcePathField = value;
		},
		equals: function(obj) {
			var other = ss.safeCast(obj, $System_$Windows_EmbeddedResourceLoader$EmbeddedResourceKey);
			return ss.referenceEquals(this, other) || !ss.referenceEquals(other, null) && ss.staticEquals(this.get_$AssemblyName(), other.get_$AssemblyName()) && ss.staticEquals(this.get_$ResourcePath(), other.get_$ResourcePath());
		},
		getHashCode: function() {
			return ss.getHashCode(this.get_$AssemblyName()) ^ ss.getHashCode(this.get_$ResourcePath());
		}
	});
	ss.initClass($System_$Windows_EventManager$ClassHandlerKey, $asm, {
		get_$ClassType: function() {
			return this.$1$ClassTypeField;
		},
		set_$ClassType: function(value) {
			this.$1$ClassTypeField = value;
		},
		get_$RoutedEvent: function() {
			return this.$1$RoutedEventField;
		},
		set_$RoutedEvent: function(value) {
			this.$1$RoutedEventField = value;
		},
		equals: function(obj) {
			var other = ss.safeCast(obj, $System_$Windows_EventManager$ClassHandlerKey);
			return ss.referenceEquals(this, other) || !ss.referenceEquals(other, null) && ss.staticEquals(this.get_$ClassType(), other.get_$ClassType()) && ss.staticEquals(this.get_$RoutedEvent(), other.get_$RoutedEvent());
		},
		getHashCode: function() {
			return ss.getHashCode(this.get_$ClassType()) ^ this.get_$RoutedEvent().getHashCode();
		}
	});
	ss.initClass($System_$Windows_EventManager$RoutedEventKey, $asm, {
		get_$Owner: function() {
			return this.$1$OwnerField;
		},
		set_$Owner: function(value) {
			this.$1$OwnerField = value;
		},
		get_$Name: function() {
			return this.$1$NameField;
		},
		set_$Name: function(value) {
			this.$1$NameField = value;
		},
		equals: function(obj) {
			var other = ss.safeCast(obj, $System_$Windows_EventManager$RoutedEventKey);
			return ss.referenceEquals(this, other) || !ss.referenceEquals(other, null) && ss.staticEquals(this.get_$Owner(), other.get_$Owner()) && ss.staticEquals(this.get_$Name(), other.get_$Name());
		},
		getHashCode: function() {
			return ss.getHashCode(this.get_$Owner()) ^ ss.getHashCode(this.get_$Name());
		},
		toString: function() {
			return ss.formatString('{0}.{1}', ss.getTypeFullName(this.get_$Owner()), this.get_$Name());
		}
	});
	ss.initInterface($System_Windows_IEventTriggerCondition, $asm, { add_EventRaised: null, remove_EventRaised: null });
	ss.initClass($System_$Windows_EventTrigger$EventTriggerCondition, $asm, {
		add_EventRaised: function(value) {
			this.$1$EventRaisedField = ss.delegateCombine(this.$1$EventRaisedField, value);
		},
		remove_EventRaised: function(value) {
			this.$1$EventRaisedField = ss.delegateRemove(this.$1$EventRaisedField, value);
		},
		$Register: function() {
			this.$element.AddHandler(this.$routedEvent, ss.mkdel(this, this.$RoutedEventHandler), false);
		},
		dispose: function() {
			this.$element.RemoveHandler(this.$routedEvent, ss.mkdel(this, this.$RoutedEventHandler));
		},
		$RoutedEventHandler: function(sender, e) {
			Granular.Extensions.EventHandlerExtensions.Raise(this.$1$EventRaisedField, this);
		}
	}, null, [$System_Windows_IEventTriggerCondition, ss.IDisposable]);
	ss.initInterface($System_Windows_IFrameworkTemplate, $asm, { Attach: null, Detach: null });
	ss.initClass($System_$Windows_FrameworkTemplate$EmptyFrameworkTemplate, $asm, {
		Attach: function(element) {
			element.set_TemplateChild(null);
		},
		Detach: function(element) {
			//
		}
	}, null, [$System_Windows_IFrameworkTemplate]);
	ss.initInterface($System_Windows_IDataTriggerConditionProvider, $asm, { CreateDataTriggerCondition: null });
	ss.initClass($System_$Windows_MultiDataTrigger$MultiDataTriggerConditionProvider, $asm, {
		CreateDataTriggerCondition: function(element) {
			return this.$condition.CreateDataTriggerCondition(element);
		}
	}, null, [$System_Windows_IDataTriggerConditionProvider]);
	ss.initClass($System_$Windows_MultiTrigger$TriggerConditionProvider, $asm, {
		CreateDataTriggerCondition: function(element) {
			return this.$condition.CreateTriggerCondition(element);
		}
	}, null, [$System_Windows_IDataTriggerConditionProvider]);
	ss.initInterface($System_Windows_IExpressionProvider, $asm, { CreateExpression: null });
	ss.initInterface($System_Windows_Data_IObservableValue, $asm, { add_ValueChanged: null, remove_ValueChanged: null, get_Value: null });
	ss.initInterface($System_Windows_IExpression, $asm, { SetValue: null }, [$System_Windows_Data_IObservableValue]);
	ss.initClass($System_$Windows_Setter$ValueOverlapExpression, $asm, {
		add_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateCombine(this.$1$ValueChangedField, value);
		},
		remove_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateRemove(this.$1$ValueChangedField, value);
		},
		get_Value: function() {
			return this.$observableValue.get_Value();
		},
		CreateExpression: function(dependencyObject, dependencyProperty) {
			return this;
		},
		SetValue: function(value) {
			return false;
		},
		$SetValue: function(owner, value) {
			ss.remove(this.$values, Enumerable.from(this.$values).firstOrDefault(function(tuple) {
				return ss.referenceEquals(tuple.item1, owner);
			}, ss.getDefaultValue(Object)));
			this.$values.push({ item1: owner, item2: value });
			this.$observableValue.set_Value(value);
		},
		$ClearValue: function(owner) {
			ss.remove(this.$values, Enumerable.from(this.$values).firstOrDefault(function(tuple) {
				return ss.referenceEquals(tuple.item1, owner);
			}, ss.getDefaultValue(Object)));
			this.$observableValue.set_Value(((this.$values.length > 0) ? Enumerable.from(this.$values).last().item2 : $System_Windows_Data_ObservableValue.UnsetValue));
		}
	}, null, [$System_Windows_IExpressionProvider, $System_Windows_Data_IObservableValue, $System_Windows_IExpression]);
	ss.initClass($System_$Windows_Controls_ContentPresenter$DefaultContentTemplate, $asm, {
		Attach: function(element) {
			var textBlock = new $System_Windows_Controls_TextBlock();
			var $t2 = $System_Windows_Controls_TextBlock.TextProperty;
			var $t1 = new $System_Windows_Data_Binding();
			$t1.set_Source(element);
			$t1.set_Path($System_Windows_PropertyPath.FromDependencyProperty($System_Windows_Controls_ContentPresenter.ContentProperty));
			$t1.set_Mode(1);
			$t1.set_Converter($System_$Windows_Controls_ContentPresenter$DefaultContentTemplate$ToStringConverter.$Default);
			textBlock.SetValue($t2, $t1, 11);
			element.set_TemplateChild(textBlock);
		},
		Detach: function(element) {
			element.set_TemplateChild(null);
		}
	}, null, [$System_Windows_IFrameworkTemplate]);
	ss.initInterface($System_Windows_Data_IValueConverter, $asm, { Convert: null, ConvertBack: null });
	ss.initClass($System_$Windows_Controls_ContentPresenter$DefaultContentTemplate$ToStringConverter, $asm, {
		Convert: function(value, targetType, parameter) {
			return (ss.isValue(value) ? value.toString() : '');
		},
		ConvertBack: function(value, targetType, parameter) {
			return null;
		}
	}, null, [$System_Windows_Data_IValueConverter]);
	ss.initClass($System_$Windows_Controls_ContentPresenter$UIElementTemplate, $asm, {
		Attach: function(element) {
			element.set_TemplateChild(this.$content);
		},
		Detach: function(element) {
			element.set_TemplateChild(null);
		}
	}, null, [$System_Windows_IFrameworkTemplate]);
	ss.initClass($System_$Windows_Controls_ItemContainerGenerator$GeneratedItemContainer, $asm, {
		get_$Container: function() {
			return this.$1$ContainerField;
		},
		set_$Container: function(value) {
			this.$1$ContainerField = value;
		},
		get_$Item: function() {
			return this.$1$ItemField;
		},
		set_$Item: function(value) {
			this.$1$ItemField = value;
		},
		get_$Index: function() {
			return this.$1$IndexField;
		},
		set_$Index: function(value) {
			this.$1$IndexField = value;
		}
	});
	ss.initClass($System_$Windows_Controls_ItemsControl$DefaultItemsPanelTemplate, $asm, {
		Attach: function(element) {
			element.set_TemplateChild(new $System_Windows_Controls_StackPanel());
		},
		Detach: function(element) {
			element.set_TemplateChild(null);
		}
	}, null, [$System_Windows_IFrameworkTemplate]);
	ss.initInterface($System_$Windows_Controls_ListBox$ISelectionBehavior, $asm, { $SetClickSelection: null, $SetFocusChangeSelection: null });
	ss.initClass($System_$Windows_Controls_ListBox$ExtendedSelectionBehavior, $asm, {
		$SetClickSelection: function(item, modifiers) {
			if (modifiers === 0) {
				this.$listBox.$SetSelectionAnchor(item);
				this.$listBox.$SetSingleSelection(item);
			}
			else if (modifiers === 4) {
				this.$listBox.$SetRangeSelection(item);
			}
			else if (modifiers === 2) {
				this.$listBox.$SetSelectionAnchor(item);
				this.$listBox.$ToggleSelection(item);
			}
		},
		$SetFocusChangeSelection: function(item, modifiers) {
			if (modifiers === 0) {
				this.$listBox.$SetSelectionAnchor(item);
				this.$listBox.$SetSingleSelection(item);
			}
			else if (modifiers === 4) {
				this.$listBox.$SetRangeSelection(item);
			}
		}
	}, null, [$System_$Windows_Controls_ListBox$ISelectionBehavior]);
	ss.initClass($System_$Windows_Controls_ListBox$MultipleSelectionBehavior, $asm, {
		$SetClickSelection: function(item, modifiers) {
			this.$listBox.$SetSelectionAnchor(item);
			this.$listBox.$ToggleSelection(item);
		},
		$SetFocusChangeSelection: function(item, modifiers) {
			//
		}
	}, null, [$System_$Windows_Controls_ListBox$ISelectionBehavior]);
	ss.initClass($System_$Windows_Controls_ListBox$SingleSelectionBehavior, $asm, {
		$SetClickSelection: function(item, modifiers) {
			if (modifiers !== 2) {
				this.$listBox.$SetSingleSelection(item);
			}
			else {
				this.$listBox.$SetSelectionAnchor(item);
				this.$listBox.$ToggleSingleSelection(item);
			}
		},
		$SetFocusChangeSelection: function(item, modifiers) {
			if (modifiers !== 2) {
				this.$listBox.$SetSingleSelection(item);
			}
		}
	}, null, [$System_$Windows_Controls_ListBox$ISelectionBehavior]);
	ss.initInterface($System_Windows_Controls_Primitives_IScrollInfo, $asm, { get_ExtentSize: null, get_ViewportSize: null, get_CanHorizontallyScroll: null, set_CanHorizontallyScroll: null, get_CanVerticallyScroll: null, set_CanVerticallyScroll: null, get_Offset: null, set_Offset: null });
	ss.initClass($System_$Windows_Controls_ScrollContentPresenter$InnerScrollInfo, $asm, {
		get_ExtentSize: function() {
			return this.$1$ExtentSizeField;
		},
		set_$ExtentSize: function(value) {
			this.$1$ExtentSizeField = value;
		},
		get_ViewportSize: function() {
			return this.$1$ViewportSizeField;
		},
		set_$ViewportSize: function(value) {
			this.$1$ViewportSizeField = value;
		},
		get_CanHorizontallyScroll: function() {
			return this.$1$CanHorizontallyScrollField;
		},
		set_CanHorizontallyScroll: function(value) {
			this.$1$CanHorizontallyScrollField = value;
		},
		get_CanVerticallyScroll: function() {
			return this.$1$CanVerticallyScrollField;
		},
		set_CanVerticallyScroll: function(value) {
			this.$1$CanVerticallyScrollField = value;
		},
		get_Offset: function() {
			return this.$1$OffsetField;
		},
		set_Offset: function(value) {
			this.$1$OffsetField = value;
		}
	}, null, [$System_Windows_Controls_Primitives_IScrollInfo]);
	ss.initClass($System_$Windows_Controls_Primitives_Placement$PlacementBase, $asm, {
		$GetPosition: function(placementTargetBounds, placementRectangle, mouseBounds, offset, popupSize, containerBounds) {
			var targetObjectRect = (!placementTargetBounds.get_IsEmpty() ? placementTargetBounds : containerBounds);
			var targetArea = this.$GetTargetArea(targetObjectRect, placementRectangle, mouseBounds, containerBounds);
			var targetOrigin = this.$GetTargetOrigin(targetArea);
			var popupAlignmentPoint = this.$GetPopupAlignmentPoint(popupSize);
			// calculate initial position
			var position = $System_$Windows_Controls_Primitives_Placement$PlacementBase.$GetPosition(targetOrigin, popupAlignmentPoint, offset);
			// check edges overflow and get alternative origin and alignment points
			if (position.get_X() < containerBounds.get_Left()) {
				targetOrigin = this.$GetLeftEdgeTargetOrigin(targetArea, targetOrigin);
				popupAlignmentPoint = this.$GetLeftEdgePopupAlignmentPoint(popupSize, popupAlignmentPoint);
			}
			if (position.get_Y() < containerBounds.get_Top()) {
				targetOrigin = this.$GetTopEdgeTargetOrigin(targetArea, targetOrigin);
				popupAlignmentPoint = this.$GetTopEdgePopupAlignmentPoint(popupSize, popupAlignmentPoint);
			}
			if (position.get_X() + popupSize.get_Width() > containerBounds.get_Right()) {
				targetOrigin = this.$GetRightEdgeTargetOrigin(targetArea, targetOrigin);
				popupAlignmentPoint = this.$GetRightEdgePopupAlignmentPoint(popupSize, popupAlignmentPoint);
			}
			if (position.get_Y() + popupSize.get_Height() > containerBounds.get_Bottom()) {
				targetOrigin = this.$GetBottomEdgeTargetOrigin(targetArea, targetOrigin);
				popupAlignmentPoint = this.$GetBottomEdgePopupAlignmentPoint(popupSize, popupAlignmentPoint);
			}
			// recalculate position with the alternative origin and alignment points
			position = $System_$Windows_Controls_Primitives_Placement$PlacementBase.$GetPosition(targetOrigin, popupAlignmentPoint, offset);
			// after the recalculation, overflow can occur from opposite edges if the containerBounds is too small, so apply bounds
			return $System_Windows_PointExtensions.Bounds(position, $System_Windows_RectExtensions.GetTopLeft(containerBounds), $System_Windows_Point.op_Subtraction($System_Windows_RectExtensions.GetBottomRight(containerBounds), $System_Windows_Controls_Primitives_Placement.$GetBottomRight(popupSize)));
		},
		$GetTargetArea: function(targetObjectRect, placementRectangle, mouseBounds, containerBounds) {
			return (!placementRectangle.get_IsEmpty() ? $System_Windows_RectExtensions.AddOffset(placementRectangle, targetObjectRect.get_Location()) : targetObjectRect);
		},
		$GetTargetOrigin: function(targetArea) {
			return $System_Windows_RectExtensions.GetTopLeft(targetArea);
		},
		$GetPopupAlignmentPoint: function(popupSize) {
			return $System_Windows_Controls_Primitives_Placement.$GetTopLeft(popupSize);
		},
		$GetLeftEdgeTargetOrigin: function(targetArea, currentTargetOrigin) {
			return currentTargetOrigin;
		},
		$GetRightEdgeTargetOrigin: function(targetArea, currentTargetOrigin) {
			return currentTargetOrigin;
		},
		$GetTopEdgeTargetOrigin: function(targetArea, currentTargetOrigin) {
			return currentTargetOrigin;
		},
		$GetBottomEdgeTargetOrigin: function(targetArea, currentTargetOrigin) {
			return currentTargetOrigin;
		},
		$GetLeftEdgePopupAlignmentPoint: function(popupSize, currentAlignmentPoint) {
			return currentAlignmentPoint;
		},
		$GetRightEdgePopupAlignmentPoint: function(popupSize, currentAlignmentPoint) {
			return currentAlignmentPoint;
		},
		$GetTopEdgePopupAlignmentPoint: function(popupSize, currentAlignmentPoint) {
			return currentAlignmentPoint;
		},
		$GetBottomEdgePopupAlignmentPoint: function(popupSize, currentAlignmentPoint) {
			return currentAlignmentPoint;
		}
	});
	ss.initClass($System_$Windows_Controls_Primitives_Placement$AbsolutePlacement, $asm, {
		$GetTargetArea: function(targetObjectRect, placementRectangle, mouseBounds, containerBounds) {
			return (!placementRectangle.get_IsEmpty() ? $System_Windows_RectExtensions.AddOffset(placementRectangle, containerBounds.get_Location()) : containerBounds);
		}
	}, $System_$Windows_Controls_Primitives_Placement$PlacementBase);
	ss.initClass($System_$Windows_Controls_Primitives_Placement$AbsolutePointPlacement, $asm, {
		$GetTargetArea: function(targetObjectRect, placementRectangle, mouseBounds, containerBounds) {
			return (!placementRectangle.get_IsEmpty() ? $System_Windows_RectExtensions.AddOffset(placementRectangle, containerBounds.get_Location()) : containerBounds);
		},
		$GetRightEdgePopupAlignmentPoint: function(popupSize, currentAlignmentPoint) {
			return new $System_Windows_Point.$ctor1(popupSize.get_Width(), currentAlignmentPoint.get_Y());
		},
		$GetBottomEdgePopupAlignmentPoint: function(popupSize, currentAlignmentPoint) {
			return new $System_Windows_Point.$ctor1(currentAlignmentPoint.get_X(), popupSize.get_Height());
		}
	}, $System_$Windows_Controls_Primitives_Placement$PlacementBase);
	ss.initClass($System_$Windows_Controls_Primitives_Placement$BottomPlacement, $asm, {
		$GetTargetOrigin: function(targetArea) {
			return $System_Windows_RectExtensions.GetBottomLeft(targetArea);
		},
		$GetBottomEdgePopupAlignmentPoint: function(popupSize, currentAlignmentPoint) {
			return new $System_Windows_Point.$ctor1(currentAlignmentPoint.get_X(), popupSize.get_Height());
		},
		$GetBottomEdgeTargetOrigin: function(targetArea, currentTargetOrigin) {
			return new $System_Windows_Point.$ctor1(currentTargetOrigin.get_X(), targetArea.get_Top());
		}
	}, $System_$Windows_Controls_Primitives_Placement$PlacementBase);
	ss.initClass($System_$Windows_Controls_Primitives_Placement$CenterPlacement, $asm, {
		$GetTargetOrigin: function(targetArea) {
			return new $System_Windows_Point.$ctor1(targetArea.get_Left() + targetArea.get_Width() / 2, targetArea.get_Top() + targetArea.get_Height() / 2);
		},
		$GetPopupAlignmentPoint: function(popupSize) {
			return new $System_Windows_Point.$ctor1(popupSize.get_Width() / 2, popupSize.get_Height() / 2);
		}
	}, $System_$Windows_Controls_Primitives_Placement$PlacementBase);
	ss.initClass($System_$Windows_Controls_Primitives_Placement$LeftPlacement, $asm, {
		$GetPopupAlignmentPoint: function(popupSize) {
			return $System_Windows_Controls_Primitives_Placement.$GetTopRight(popupSize);
		},
		$GetLeftEdgeTargetOrigin: function(targetArea, currentTargetOrigin) {
			return new $System_Windows_Point.$ctor1(targetArea.get_Right(), currentTargetOrigin.get_Y());
		},
		$GetLeftEdgePopupAlignmentPoint: function(popupSize, currentAlignmentPoint) {
			return new $System_Windows_Point.$ctor1(0, currentAlignmentPoint.get_Y());
		}
	}, $System_$Windows_Controls_Primitives_Placement$PlacementBase);
	ss.initClass($System_$Windows_Controls_Primitives_Placement$MousePlacement, $asm, {
		$GetTargetArea: function(targetObjectRect, placementRectangle, mouseBounds, containerBounds) {
			return mouseBounds;
		},
		$GetTargetOrigin: function(targetArea) {
			return $System_Windows_RectExtensions.GetBottomLeft(targetArea);
		},
		$GetBottomEdgeTargetOrigin: function(targetArea, currentTargetOrigin) {
			return new $System_Windows_Point.$ctor1(currentTargetOrigin.get_X(), targetArea.get_Top());
		},
		$GetBottomEdgePopupAlignmentPoint: function(popupSize, currentAlignmentPoint) {
			return new $System_Windows_Point.$ctor1(currentAlignmentPoint.get_X(), popupSize.get_Height());
		}
	}, $System_$Windows_Controls_Primitives_Placement$PlacementBase);
	ss.initClass($System_$Windows_Controls_Primitives_Placement$MousePointPlacement, $asm, {
		$GetTargetArea: function(targetObjectRect, placementRectangle, mouseBounds, containerBounds) {
			return mouseBounds;
		},
		$GetBottomEdgePopupAlignmentPoint: function(popupSize, currentAlignmentPoint) {
			return new $System_Windows_Point.$ctor1(currentAlignmentPoint.get_X(), popupSize.get_Height());
		},
		$GetRightEdgePopupAlignmentPoint: function(popupSize, currentAlignmentPoint) {
			return new $System_Windows_Point.$ctor1(popupSize.get_Width(), currentAlignmentPoint.get_Y());
		}
	}, $System_$Windows_Controls_Primitives_Placement$PlacementBase);
	ss.initClass($System_$Windows_Controls_Primitives_Placement$RelativePlacement, $asm, {}, $System_$Windows_Controls_Primitives_Placement$PlacementBase);
	ss.initClass($System_$Windows_Controls_Primitives_Placement$RelativePointPlacement, $asm, {
		$GetBottomEdgePopupAlignmentPoint: function(popupSize, currentAlignmentPoint) {
			return new $System_Windows_Point.$ctor1(currentAlignmentPoint.get_X(), popupSize.get_Height());
		},
		$GetRightEdgePopupAlignmentPoint: function(popupSize, currentAlignmentPoint) {
			return new $System_Windows_Point.$ctor1(popupSize.get_Width(), currentAlignmentPoint.get_Y());
		}
	}, $System_$Windows_Controls_Primitives_Placement$PlacementBase);
	ss.initClass($System_$Windows_Controls_Primitives_Placement$RightPlacement, $asm, {
		$GetTargetOrigin: function(targetArea) {
			return $System_Windows_RectExtensions.GetTopRight(targetArea);
		},
		$GetRightEdgeTargetOrigin: function(targetArea, currentTargetOrigin) {
			return new $System_Windows_Point.$ctor1(targetArea.get_Left(), currentTargetOrigin.get_Y());
		},
		$GetRightEdgePopupAlignmentPoint: function(popupSize, currentAlignmentPoint) {
			return new $System_Windows_Point.$ctor1(popupSize.get_Width(), currentAlignmentPoint.get_Y());
		}
	}, $System_$Windows_Controls_Primitives_Placement$PlacementBase);
	ss.initClass($System_$Windows_Controls_Primitives_Placement$TopPlacement, $asm, {
		$GetPopupAlignmentPoint: function(popupSize) {
			return $System_Windows_Controls_Primitives_Placement.$GetBottomLeft(popupSize);
		},
		$GetTopEdgeTargetOrigin: function(targetArea, currentTargetOrigin) {
			return new $System_Windows_Point.$ctor1(currentTargetOrigin.get_X(), targetArea.get_Bottom());
		},
		$GetTopEdgePopupAlignmentPoint: function(popupSize, currentAlignmentPoint) {
			return new $System_Windows_Point.$ctor1(currentAlignmentPoint.get_X(), 0);
		}
	}, $System_$Windows_Controls_Primitives_Placement$PlacementBase);
	ss.initClass($System_Windows_DependencyObject, $asm, {
		add_PropertyChanged: function(value) {
			this.$1$PropertyChangedField = ss.delegateCombine(this.$1$PropertyChangedField, value);
		},
		remove_PropertyChanged: function(value) {
			this.$1$PropertyChangedField = ss.delegateRemove(this.$1$PropertyChangedField, value);
		},
		ContainsValue: function(dependencyProperty) {
			var entry = {};
			if (!this.$entries.tryGetValue(dependencyProperty, entry)) {
				return false;
			}
			return entry.$.GetBaseValuePriority() > 2;
		},
		ContainsValue$1: function(dependencyPropertyKey) {
			return this.ContainsValue(dependencyPropertyKey.get_DependencyProperty());
		},
		GetValue: function(dependencyProperty) {
			return this.$GetInitializedValueEntry(dependencyProperty).get_Value();
		},
		GetValue$1: function(dependencyPropertyKey) {
			return this.GetValue(dependencyPropertyKey.get_DependencyProperty());
		},
		SetValue: function(dependencyProperty, value, source) {
			this.$SetValue(dependencyProperty, null, value, false, source);
		},
		SetValue$1: function(dependencyPropertyKey, value, source) {
			this.$SetValue(dependencyPropertyKey.get_DependencyProperty(), dependencyPropertyKey, value, false, source);
		},
		SetCurrentValue: function(dependencyProperty, value) {
			this.$SetValue(dependencyProperty, null, value, true, 0);
		},
		SetCurrentValue$1: function(dependencyPropertyKey, value) {
			this.$SetValue(dependencyPropertyKey.get_DependencyProperty(), dependencyPropertyKey, value, true, 0);
		},
		$SetValue: function(dependencyProperty, dependencyPropertyKey, value, setCurrentValue, source) {
			$System_Windows_DependencyObject.$VerifyReadOnlyProperty(dependencyProperty, dependencyPropertyKey);
			var newExpressionProvider = ss.safeCast(value, $System_Windows_IExpressionProvider);
			if (ss.isNullOrUndefined(newExpressionProvider) && !dependencyProperty.IsValidValue(value)) {
				return;
				// invalid value
			}
			var entry = this.$GetInitializedValueEntry(dependencyProperty);
			var oldExpression = (setCurrentValue ? ss.safeCast(entry.GetBaseValue(false), $System_Windows_IExpression) : ss.safeCast(entry.GetBaseValue$1(source, false), $System_Windows_IExpression));
			if (ss.isValue(newExpressionProvider)) {
				value = newExpressionProvider.CreateExpression(this, dependencyProperty);
			}
			else if (ss.isValue(oldExpression) && oldExpression.SetValue(value)) {
				return;
				// value (current or not) was set in the existing expression, nothing else to do
			}
			if (setCurrentValue) {
				entry.SetCurrentValue(value);
				return;
				// base value isn't changed
			}
			if (ss.isInstanceOfType(oldExpression, ss.IDisposable)) {
				ss.cast(oldExpression, ss.IDisposable).dispose();
			}
			entry.SetBaseValue(source, value);
			entry.ClearCurrentValue();
		},
		ClearValue: function(dependencyProperty, source) {
			this.$ClearValue(dependencyProperty, null, source);
		},
		ClearValue$1: function(dependencyPropertyKey, source) {
			this.$ClearValue(dependencyPropertyKey.get_DependencyProperty(), dependencyPropertyKey, source);
		},
		$ClearValue: function(dependencyProperty, dependencyPropertyKey, source) {
			$System_Windows_DependencyObject.$VerifyReadOnlyProperty(dependencyProperty, dependencyPropertyKey);
			var entry = {};
			if (!this.$entries.tryGetValue(dependencyProperty, entry)) {
				return;
			}
			var expression = ss.safeCast(entry.$.GetBaseValue$1(source, false), $System_Windows_IExpression);
			if (ss.isInstanceOfType(expression, ss.IDisposable)) {
				ss.cast(expression, ss.IDisposable).dispose();
			}
			entry.$.ClearBaseValue(source);
			entry.$.ClearCurrentValue();
		},
		CoerceValue: function(dependencyProperty) {
			var entry = {};
			if (this.$entries.tryGetValue(dependencyProperty, entry) && ss.isInstanceOfType(entry.$, $System_Windows_CoercedDependencyPropertyValueEntry)) {
				ss.cast(entry.$, $System_Windows_CoercedDependencyPropertyValueEntry).CoerceValue();
			}
		},
		GetValueSource: function(dependencyProperty) {
			var entry = {};
			if (this.$entries.tryGetValue(dependencyProperty, entry)) {
				return new $System_Windows_ValueSource(entry.$.GetBaseValuePriority(), ss.isInstanceOfType(entry.$.GetBaseValue(false), $System_Windows_IExpression) || ss.isInstanceOfType(entry.$.GetCurrentValue(false), $System_Windows_IExpression), !ss.referenceEquals(entry.$.GetCurrentValue(true), $System_Windows_Data_ObservableValue.UnsetValue), !ss.referenceEquals(entry.$.GetAnimationValue(true), $System_Windows_Data_ObservableValue.UnsetValue), ss.isInstanceOfType(entry.$, $System_Windows_CoercedDependencyPropertyValueEntry) && ss.cast(entry.$, $System_Windows_CoercedDependencyPropertyValueEntry).get_IsCoerced());
			}
			var propertyMetadata = dependencyProperty.GetMetadata(ss.getInstanceType(this));
			var baseValueSource = ((propertyMetadata.get_Inherits() && ss.isValue(this.$inheritanceParent)) ? 2 : 1);
			return new $System_Windows_ValueSource(baseValueSource, false, false, false, false);
		},
		GetBaseValueSource: function(dependencyProperty) {
			var entry = {};
			if (this.$entries.tryGetValue(dependencyProperty, entry)) {
				return entry.$.GetBaseValuePriority();
			}
			return ((dependencyProperty.get_Inherits() && ss.isValue(this.$inheritanceParent)) ? 2 : 1);
		},
		GetValueEntry: function(dependencyProperty) {
			return (dependencyProperty.get_IsReadOnly() ? this.$GetInitializedReadOnlyValueEntry(dependencyProperty) : this.$GetInitializedValueEntry(dependencyProperty));
		},
		GetValueEntry$1: function(dependencyPropertyKey) {
			$System_Windows_DependencyObject.$VerifyReadOnlyProperty(dependencyPropertyKey.get_DependencyProperty(), dependencyPropertyKey);
			return this.$GetInitializedValueEntry(dependencyPropertyKey.get_DependencyProperty());
		},
		$GetInitializedValueEntry: function(dependencyProperty) {
			var entry = {};
			if (!this.$entries.tryGetValue(dependencyProperty, entry)) {
				entry.$ = this.$CreateDependencyPropertyValueEntry(dependencyProperty);
				this.$entries.add(dependencyProperty, entry.$);
			}
			return entry.$;
		},
		$GetInitializedReadOnlyValueEntry: function(dependencyProperty) {
			var readOnlyEntry = {};
			if (this.$readOnlyEntries.tryGetValue(dependencyProperty, readOnlyEntry)) {
				return readOnlyEntry.$;
			}
			readOnlyEntry.$ = new $System_Windows_ReadOnlyDependencyPropertyValueEntry(this.$GetInitializedValueEntry(dependencyProperty));
			this.$readOnlyEntries.add(dependencyProperty, readOnlyEntry.$);
			return readOnlyEntry.$;
		},
		$CreateDependencyPropertyValueEntry: function(dependencyProperty) {
			var entry = new $System_Windows_DependencyPropertyValueEntry(this, dependencyProperty);
			var propertyMetadata = dependencyProperty.GetMetadata(ss.getInstanceType(this));
			if (!ss.staticEquals(propertyMetadata.get_CoerceValueCallback(), null)) {
				entry = new $System_Windows_CoercedDependencyPropertyValueEntry(entry, this, propertyMetadata.get_CoerceValueCallback());
			}
			entry.SetBaseValue(1, propertyMetadata.get_DefaultValue());
			entry.add_ValueChanged(ss.mkdel(this, function(sender, e) {
				this.$RaisePropertyChanged(new $System_Windows_DependencyPropertyChangedEventArgs(dependencyProperty, e.get_OldValue(), e.get_NewValue()));
			}));
			return entry;
		},
		$RaisePropertyChanged: function(e) {
			e.get_Property().$RaiseMetadataPropertyChangedCallback(this, e);
			this.OnPropertyChanged(e);
			Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_DependencyPropertyChangedEventArgs).call(null, this.$1$PropertyChangedField, this, e);
		},
		OnPropertyChanged: function(e) {
			//
		},
		SetInheritanceParent: function(parent) {
			if (ss.referenceEquals(this.$inheritanceParent, parent)) {
				return;
			}
			var oldInheritanceParent = this.$inheritanceParent;
			if (ss.isValue(this.$inheritanceParent)) {
				this.$inheritanceParent.remove_PropertyChanged(ss.mkdel(this, this.$OnParentPropertyChanged));
			}
			this.$inheritanceParent = parent;
			if (ss.isValue(this.$inheritanceParent)) {
				this.$inheritanceParent.add_PropertyChanged(ss.mkdel(this, this.$OnParentPropertyChanged));
			}
			if (ss.isNullOrUndefined(this.$inheritanceParent)) {
				// clear inherited values
				var $t1 = this.$entries.getEnumerator();
				try {
					while ($t1.moveNext()) {
						var pair = $t1.current();
						if (pair.key.get_Inherits()) {
							pair.value.ClearBaseValue(2);
						}
					}
				}
				finally {
					$t1.dispose();
				}
			}
			else {
				// update existing inherited values
				var $t2 = this.$entries.getEnumerator();
				try {
					while ($t2.moveNext()) {
						var pair1 = $t2.current();
						if (pair1.key.get_Inherits()) {
							pair1.value.SetBaseValue(2, this.$inheritanceParent.GetValue(pair1.key));
						}
					}
				}
				finally {
					$t2.dispose();
				}
				// add missing inherited values
				var $t3 = this.$inheritanceParent.$entries.getEnumerator();
				try {
					while ($t3.moveNext()) {
						var pair2 = $t3.current();
						if (pair2.key.get_Inherits()) {
							this.$GetInitializedValueEntry(pair2.key).SetBaseValue(2, pair2.value.get_Value());
						}
					}
				}
				finally {
					$t3.dispose();
				}
			}
			this.OnInheritanceParentChanged(oldInheritanceParent, this.$inheritanceParent);
		},
		OnInheritanceParentChanged: function(oldInheritanceParent, newInheritanceParent) {
			//
		},
		$OnParentPropertyChanged: function(sender, e) {
			if (e.get_Property().get_Inherits()) {
				this.$GetInitializedValueEntry(e.get_Property()).SetBaseValue(2, e.get_NewValue());
			}
		}
	});
	ss.initClass($System_Windows_Media_Visual, $asm, {
		add_VisualAncestorChanged: function(value) {
			this.$2$VisualAncestorChangedField = ss.delegateCombine(this.$2$VisualAncestorChangedField, value);
		},
		remove_VisualAncestorChanged: function(value) {
			this.$2$VisualAncestorChangedField = ss.delegateRemove(this.$2$VisualAncestorChangedField, value);
		},
		add_VisualParentChanged: function(value) {
			this.$2$VisualParentChangedField = ss.delegateCombine(this.$2$VisualParentChangedField, value);
		},
		remove_VisualParentChanged: function(value) {
			this.$2$VisualParentChangedField = ss.delegateRemove(this.$2$VisualParentChangedField, value);
		},
		get_VisualParent: function() {
			return this.$visualParent;
		},
		set_VisualParent: function(value) {
			if (ss.referenceEquals(this.$visualParent, value)) {
				return;
			}
			if (ss.isValue(this.$visualParent)) {
				this.$visualParent.remove_VisualAncestorChanged(ss.mkdel(this, this.$OnVisualAncestorChanged));
			}
			var oldVisualParent = this.$visualParent;
			this.$visualParent = value;
			if (ss.isValue(this.$visualParent)) {
				this.$visualParent.add_VisualAncestorChanged(ss.mkdel(this, this.$OnVisualAncestorChanged));
			}
			this.OnVisualParentChanged(oldVisualParent, this.$visualParent);
			Granular.Extensions.EventHandlerExtensions.Raise(this.$2$VisualParentChangedField, this);
			this.OnVisualAncestorChanged();
			Granular.Extensions.EventHandlerExtensions.Raise(this.$2$VisualAncestorChangedField, this);
		},
		get_VisualChildren: function() {
			return this.$2$VisualChildrenField;
		},
		set_VisualChildren: function(value) {
			this.$2$VisualChildrenField = value;
		},
		get_VisualOffset: function() {
			return this.get_VisualBounds().get_Location();
		},
		get_VisualSize: function() {
			return this.get_VisualBounds().get_Size();
		},
		get_VisualBackground: function() {
			return this.$visualBackground;
		},
		set_VisualBackground: function(value) {
			if (ss.referenceEquals(this.$visualBackground, value)) {
				return;
			}
			this.$visualBackground = value;
			var $t1 = ss.getEnumerator(this.$visualRenderElements.get_values());
			try {
				while ($t1.moveNext()) {
					var visualRenderElement = $t1.current();
					visualRenderElement.set_Background(this.$visualBackground);
				}
			}
			finally {
				$t1.dispose();
			}
		},
		get_VisualBounds: function() {
			return this.$visualBounds;
		},
		set_VisualBounds: function(value) {
			if ($System_Windows_Rect.op_Equality(this.$visualBounds, value)) {
				return;
			}
			this.$visualBounds = value;
			var $t1 = ss.getEnumerator(this.$visualRenderElements.get_values());
			try {
				while ($t1.moveNext()) {
					var visualRenderElement = $t1.current();
					visualRenderElement.set_Bounds(this.$visualBounds);
				}
			}
			finally {
				$t1.dispose();
			}
		},
		get_VisualClipToBounds: function() {
			return this.$visualClipToBounds;
		},
		set_VisualClipToBounds: function(value) {
			if (this.$visualClipToBounds === value) {
				return;
			}
			this.$visualClipToBounds = value;
			var $t1 = ss.getEnumerator(this.$visualRenderElements.get_values());
			try {
				while ($t1.moveNext()) {
					var visualRenderElement = $t1.current();
					visualRenderElement.set_ClipToBounds(this.$visualClipToBounds);
				}
			}
			finally {
				$t1.dispose();
			}
		},
		get_VisualIsHitTestVisible: function() {
			return this.$visualIsHitTestVisible;
		},
		set_VisualIsHitTestVisible: function(value) {
			if (this.$visualIsHitTestVisible === value) {
				return;
			}
			this.$visualIsHitTestVisible = value;
			var $t1 = ss.getEnumerator(this.$visualRenderElements.get_values());
			try {
				while ($t1.moveNext()) {
					var visualRenderElement = $t1.current();
					visualRenderElement.set_IsHitTestVisible(this.$visualIsHitTestVisible);
				}
			}
			finally {
				$t1.dispose();
			}
		},
		get_VisualIsVisible: function() {
			return this.$visualIsVisible;
		},
		set_VisualIsVisible: function(value) {
			if (this.$visualIsVisible === value) {
				return;
			}
			this.$visualIsVisible = value;
			var $t1 = ss.getEnumerator(this.$visualRenderElements.get_values());
			try {
				while ($t1.moveNext()) {
					var visualRenderElement = $t1.current();
					visualRenderElement.set_IsVisible(this.$visualIsVisible);
				}
			}
			finally {
				$t1.dispose();
			}
		},
		get_VisualOpacity: function() {
			return this.$visualOpacity;
		},
		set_VisualOpacity: function(value) {
			if (this.$visualOpacity === value) {
				return;
			}
			this.$visualOpacity = value;
			var $t1 = ss.getEnumerator(this.$visualRenderElements.get_values());
			try {
				while ($t1.moveNext()) {
					var visualRenderElement = $t1.current();
					visualRenderElement.set_Opacity(this.$visualOpacity);
				}
			}
			finally {
				$t1.dispose();
			}
		},
		get_VisualTransform: function() {
			return this.$visualTransform;
		},
		set_VisualTransform: function(value) {
			if (ss.referenceEquals(this.$visualTransform, value)) {
				return;
			}
			this.$visualTransform = value;
			var $t1 = ss.getEnumerator(this.$visualRenderElements.get_values());
			try {
				while ($t1.moveNext()) {
					var visualRenderElement = $t1.current();
					visualRenderElement.set_Transform(this.$visualTransform);
				}
			}
			finally {
				$t1.dispose();
			}
		},
		get_VisualLevel: function() {
			if (this.$visualLevel === -1) {
				this.$visualLevel = (ss.isValue(this.get_VisualParent()) ? (this.get_VisualParent().get_VisualLevel() + 1) : 0);
			}
			return this.$visualLevel;
		},
		AddVisualChild: function(child) {
			if (ss.referenceEquals(child.get_VisualParent(), this)) {
				return;
			}
			if (ss.isValue(child.get_VisualParent())) {
				child.get_VisualParent().RemoveVisualChild(child);
			}
			child.set_VisualParent(this);
			this.$visualChildren.push(child);
			var renderChildIndex = (this.$containsContentRenderElement ? this.$visualChildren.length : (this.$visualChildren.length - 1));
			var $t1 = ss.getEnumerator(this.$visualRenderElements.get_keys());
			try {
				while ($t1.moveNext()) {
					var factory = $t1.current();
					this.$visualRenderElements.get_item(factory).InsertChild(renderChildIndex, child.GetRenderElement(factory));
				}
			}
			finally {
				$t1.dispose();
			}
		},
		RemoveVisualChild: function(child) {
			if (!ss.referenceEquals(child.get_VisualParent(), this)) {
				return;
			}
			ss.remove(this.$visualChildren, child);
			child.set_VisualParent(null);
			var $t1 = ss.getEnumerator(this.$visualRenderElements.get_keys());
			try {
				while ($t1.moveNext()) {
					var factory = $t1.current();
					this.$visualRenderElements.get_item(factory).RemoveChild(child.GetRenderElement(factory));
				}
			}
			finally {
				$t1.dispose();
			}
		},
		SetVisualChildIndex: function(child, newIndex) {
			var oldIndex = ss.indexOf(this.$visualChildren, child);
			if (oldIndex === -1 || oldIndex === newIndex) {
				return;
			}
			ss.remove(this.$visualChildren, child);
			ss.insert(this.$visualChildren, newIndex, child);
			var $t1 = ss.getEnumerator(this.$visualRenderElements.get_keys());
			try {
				while ($t1.moveNext()) {
					var factory = $t1.current();
					var childRenderElement = child.GetRenderElement(factory);
					this.$visualRenderElements.get_item(factory).RemoveChild(childRenderElement);
					this.$visualRenderElements.get_item(factory).InsertChild(newIndex, childRenderElement);
				}
			}
			finally {
				$t1.dispose();
			}
		},
		ClearVisualChildren: function() {
			var $t1 = Array.prototype.slice.call(this.$visualChildren);
			for (var $t2 = 0; $t2 < $t1.length; $t2++) {
				var child = $t1[$t2];
				this.RemoveVisualChild(child);
			}
		},
		OnVisualParentChanged: function(oldVisualParent, newVisualParent) {
			//
		},
		OnVisualAncestorChanged: function() {
			this.$visualLevel = -1;
		},
		$OnVisualAncestorChanged: function(sender, e) {
			this.OnVisualAncestorChanged();
			Granular.Extensions.EventHandlerExtensions.Raise(this.$2$VisualAncestorChangedField, this);
		},
		GetRenderElement: function(factory) {
			var visualRenderElement = {};
			if (this.$visualRenderElements.tryGetValue(factory, visualRenderElement)) {
				return visualRenderElement.$;
			}
			visualRenderElement.$ = factory.CreateVisualRenderElement(this);
			visualRenderElement.$.set_Background(this.get_VisualBackground());
			visualRenderElement.$.set_Bounds(this.get_VisualBounds());
			visualRenderElement.$.set_ClipToBounds(this.get_VisualClipToBounds());
			visualRenderElement.$.set_IsHitTestVisible(this.get_VisualIsHitTestVisible());
			visualRenderElement.$.set_IsVisible(this.get_VisualIsVisible());
			visualRenderElement.$.set_Opacity(this.get_VisualOpacity());
			visualRenderElement.$.set_Transform(this.get_VisualTransform());
			var index = 0;
			var $t1 = this.get_VisualChildren();
			for (var $t2 = 0; $t2 < $t1.length; $t2++) {
				var child = $t1[$t2];
				child.GetRenderElement(factory);
				visualRenderElement.$.InsertChild(index, child.GetRenderElement(factory));
				index++;
			}
			var contentRenderElement = this.CreateContentRenderElementOverride(factory);
			if (ss.isValue(contentRenderElement)) {
				visualRenderElement.$.InsertChild(0, contentRenderElement);
			}
			if (this.$visualRenderElements.get_count() === 0) {
				this.$containsContentRenderElement = ss.isValue(contentRenderElement);
			}
			else if (this.$containsContentRenderElement !== ss.isValue(contentRenderElement)) {
				throw new Granular.Exception('ContentRenderElement for type "{0}" must be created for all of the factories or none of them', [ss.getTypeName(ss.getInstanceType(this))]);
			}
			this.$visualRenderElements.add(factory, visualRenderElement.$);
			return visualRenderElement.$;
		},
		RemoveRenderElement: function(factory) {
			this.$visualRenderElements.remove(factory);
			var $t1 = this.get_VisualChildren();
			for (var $t2 = 0; $t2 < $t1.length; $t2++) {
				var child = $t1[$t2];
				child.RemoveRenderElement(factory);
			}
		},
		CreateContentRenderElementOverride: function(factory) {
			return null;
		},
		PointToRoot: function(point) {
			if (ss.isValue(this.get_VisualParent())) {
				return this.get_VisualParent().PointToRoot($System_Windows_Point.op_Addition(point, this.get_VisualOffset()));
			}
			return $System_Windows_Point.op_Addition(point, this.get_VisualOffset());
		},
		PointFromRoot: function(point) {
			if (ss.isValue(this.get_VisualParent())) {
				return this.get_VisualParent().PointFromRoot($System_Windows_Point.op_Subtraction(point, this.get_VisualOffset()));
			}
			return $System_Windows_Point.op_Subtraction(point, this.get_VisualOffset());
		}
	}, $System_Windows_DependencyObject);
	ss.initInterface($System_Windows_Media_Animation_IAnimatable, $asm, { get_RootClock: null, SetAnimationClocks: null, AddAnimationClocks: null, RemoveAnimationClocks: null });
	ss.initInterface($System_Windows_IInputElement, $asm, { RaiseEvent: null, GetRelativePosition: null, GetPathFromRoot: null });
	ss.initClass($System_Windows_UIElement, $asm, {
		add_LayoutUpdated: function(value) {
			this.$3$LayoutUpdatedField = ss.delegateCombine(this.$3$LayoutUpdatedField, value);
		},
		remove_LayoutUpdated: function(value) {
			this.$3$LayoutUpdatedField = ss.delegateRemove(this.$3$LayoutUpdatedField, value);
		},
		get_LogicalParent: function() {
			return this.$logicalParent;
		},
		set_LogicalParent: function(value) {
			if (ss.referenceEquals(this.$logicalParent, value)) {
				return;
			}
			var oldLogicalParent = this.$logicalParent;
			this.$logicalParent = value;
			this.$SetInheritanceParent();
			this.OnLogicalParentChanged(oldLogicalParent, this.$logicalParent);
		},
		get_IsMeasureValid: function() {
			return this.$3$IsMeasureValidField;
		},
		set_IsMeasureValid: function(value) {
			this.$3$IsMeasureValidField = value;
		},
		get_IsArrangeValid: function() {
			return this.$3$IsArrangeValidField;
		},
		set_IsArrangeValid: function(value) {
			this.$3$IsArrangeValidField = value;
		},
		get_DesiredSize: function() {
			return this.$desiredSize;
		},
		set_DesiredSize: function(value) {
			if ($System_Windows_Size.op_Equality(this.$desiredSize, value)) {
				return;
			}
			this.$desiredSize = value;
			if (ss.isValue(this.get_VisualParent())) {
				ss.cast(this.get_VisualParent(), $System_Windows_UIElement).InvalidateMeasure();
			}
		},
		get_RenderSize: function() {
			return this.get_VisualSize();
		},
		get_LogicalChildren: function() {
			return this.$3$LogicalChildrenField;
		},
		set_LogicalChildren: function(value) {
			this.$3$LogicalChildrenField = value;
		},
		get_Opacity: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_UIElement.OpacityProperty), Number));
		},
		set_Opacity: function(value) {
			this.SetValue($System_Windows_UIElement.OpacityProperty, value, 11);
		},
		get_Visibility: function() {
			return ss.cast(this.GetValue($System_Windows_UIElement.VisibilityProperty), ss.Int32);
		},
		set_Visibility: function(value) {
			this.SetValue($System_Windows_UIElement.VisibilityProperty, value, 11);
		},
		get_IsVisible: function() {
			return ss.unbox(ss.cast(this.GetValue$1($System_Windows_UIElement.$IsVisiblePropertyKey), Boolean));
		},
		set_IsVisible: function(value) {
			if (value) {
				this.ClearValue$1($System_Windows_UIElement.$IsVisiblePropertyKey, 11);
			}
			else {
				this.SetValue$1($System_Windows_UIElement.$IsVisiblePropertyKey, value, 11);
			}
		},
		get_IsEnabled: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_UIElement.IsEnabledProperty), Boolean));
		},
		set_IsEnabled: function(value) {
			this.SetValue($System_Windows_UIElement.IsEnabledProperty, value, 11);
		},
		get_IsHitTestVisible: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_UIElement.IsHitTestVisibleProperty), Boolean));
		},
		set_IsHitTestVisible: function(value) {
			this.SetValue($System_Windows_UIElement.IsHitTestVisibleProperty, value, 11);
		},
		get_ClipToBounds: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_UIElement.ClipToBoundsProperty), Boolean));
		},
		set_ClipToBounds: function(value) {
			this.SetValue($System_Windows_UIElement.ClipToBoundsProperty, value, 11);
		},
		get_Focusable: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_UIElement.FocusableProperty), Boolean));
		},
		set_Focusable: function(value) {
			this.SetValue($System_Windows_UIElement.FocusableProperty, value, 11);
		},
		get_IsMouseOver: function() {
			return ss.unbox(ss.cast(this.GetValue$1($System_Windows_UIElement.$IsMouseOverPropertyKey), Boolean));
		},
		set_IsMouseOver: function(value) {
			this.SetValue$1($System_Windows_UIElement.$IsMouseOverPropertyKey, value, 11);
		},
		get_IsFocused: function() {
			return ss.unbox(ss.cast(this.GetValue$1($System_Windows_UIElement.$IsFocusedPropertyKey), Boolean));
		},
		set_IsFocused: function(value) {
			this.SetValue$1($System_Windows_UIElement.$IsFocusedPropertyKey, value, 11);
		},
		get_IsKeyboardFocused: function() {
			return ss.unbox(ss.cast(this.GetValue$1($System_Windows_UIElement.$IsKeyboardFocusedPropertyKey), Boolean));
		},
		set_IsKeyboardFocused: function(value) {
			this.SetValue$1($System_Windows_UIElement.$IsKeyboardFocusedPropertyKey, value, 11);
		},
		get_IsKeyboardFocusWithin: function() {
			return ss.unbox(ss.cast(this.GetValue$1($System_Windows_UIElement.$IsKeyboardFocusWithinPropertyKey), Boolean));
		},
		set_IsKeyboardFocusWithin: function(value) {
			this.SetValue$1($System_Windows_UIElement.$IsKeyboardFocusWithinPropertyKey, value, 11);
		},
		get_IsRootElement: function() {
			return this.$isRootElement;
		},
		set_IsRootElement: function(value) {
			if (this.$isRootElement === value) {
				return;
			}
			this.$isRootElement = value;
			this.$SetIsVisible();
		},
		get_RootClock: function() {
			if (ss.isNullOrUndefined(this.$animatableRootClock)) {
				this.$animatableRootClock = new $System_Windows_Media_Animation_AnimatableRootClock($System_Windows_Media_Animation_RootClock.Default, this.get_IsVisible());
			}
			return this.$animatableRootClock;
		},
		get_PreviousAvailableSize: function() {
			return this.$3$PreviousAvailableSizeField;
		},
		set_PreviousAvailableSize: function(value) {
			this.$3$PreviousAvailableSizeField = value;
		},
		get_PreviousFinalRect: function() {
			return this.$3$PreviousFinalRectField;
		},
		set_PreviousFinalRect: function(value) {
			this.$3$PreviousFinalRectField = value;
		},
		AddLogicalChild: function(child) {
			var childElement = ss.safeCast(child, $System_Windows_UIElement);
			if (ss.isValue(childElement)) {
				if (ss.referenceEquals(childElement.get_LogicalParent(), this)) {
					return;
				}
				if (ss.isValue(childElement.get_LogicalParent())) {
					childElement.get_LogicalParent().RemoveLogicalChild(childElement);
				}
				childElement.set_LogicalParent(this);
			}
			this.$logicalChildren.push(child);
		},
		RemoveLogicalChild: function(child) {
			var childElement = ss.safeCast(child, $System_Windows_UIElement);
			if (ss.isValue(childElement)) {
				if (!ss.referenceEquals(childElement.get_LogicalParent(), this)) {
					return;
				}
				childElement.set_LogicalParent(null);
			}
			ss.remove(this.$logicalChildren, child);
		},
		AddHandler: function(routedEvent, handler, handledEventsToo) {
			this.$routedEventHandlers.Add(routedEvent, new $System_Windows_RoutedEventHandlerItem(handler, handledEventsToo));
			this.$routedEventHandlersCache.Remove(routedEvent);
		},
		RemoveHandler: function(routedEvent, handler) {
			this.$routedEventHandlers.Remove(routedEvent, Enumerable.from(this.$routedEventHandlers.GetValues(routedEvent)).firstOrDefault(function(item) {
				return ss.staticEquals(item.get_Handler(), handler);
			}, ss.getDefaultValue($System_Windows_RoutedEventHandlerItem)));
			this.$routedEventHandlersCache.Remove(routedEvent);
		},
		RaiseEvent: function(e) {
			var eventRoute = new $System_Windows_EventRoute(e.get_RoutedEvent(), this.$GetEventRouteItems(e.get_RoutedEvent(), this));
			e.set_Source(this);
			eventRoute.InvokeHandlers(e);
		},
		$GetEventRouteItems: function(routedEvent, originalSource) {
			var logicalSource = $System_Windows_UIElement.$GetClosestLogicalChild(this, originalSource);
			var items = Enumerable.from(this.$GetRoutedEventHandlers(routedEvent)).select(ss.mkdel(this, function(handler) {
				return new $System_Windows_EventRouteItem(handler, originalSource, logicalSource, this);
			}));
			if (routedEvent.get_RoutingStrategy() === 1 || routedEvent.get_RoutingStrategy() === 0) {
				var parent = ss.safeCast(this.get_VisualParent(), $System_Windows_UIElement);
				if (ss.isValue(parent)) {
					var parentItems = parent.$GetEventRouteItems(routedEvent, this);
					if (routedEvent.get_RoutingStrategy() === 1) {
						items = Enumerable.from(items).concat(parentItems);
					}
					else {
						items = Enumerable.from(parentItems).concat(items);
					}
				}
			}
			return Enumerable.from(items).toArray();
		},
		$GetRoutedEventHandlers: function(routedEvent) {
			return this.$routedEventHandlersCache.GetValue(routedEvent);
		},
		$ResolveRoutedEventHandlers: function(routedEvent) {
			return Enumerable.from($System_Windows_EventManager.GetFlattenedClassHandlers(ss.getInstanceType(this), routedEvent)).concat(this.GetRoutedEventHandlersOverride(routedEvent)).concat(this.$routedEventHandlers.GetValues(routedEvent)).toArray();
		},
		GetRoutedEventHandlersOverride: function(routedEvent) {
			return [];
		},
		UpdateLayout: function() {
			$System_Windows_LayoutManager.Current.UpdateLayout();
		},
		Measure: function(availableSize) {
			var $t2 = $System_Windows_Threading_Dispatcher.CurrentDispatcher.DisableProcessing();
			try {
				{
					var $t1 = this.$DisableMeasureInvalidation();
					try {
						if (this.get_Visibility() === 2) {
							$System_Windows_LayoutManager.Current.RemoveMeasure(this);
							this.set_DesiredSize($System_Windows_Size.Zero);
							return;
						}
						if (this.get_IsMeasureValid() && $System_Windows_SizeExtensions.IsClose(this.get_PreviousAvailableSize(), availableSize)) {
							$System_Windows_LayoutManager.Current.RemoveMeasure(this);
							this.set_DesiredSize(this.$previousDesiredSize);
							return;
						}
						this.InvalidateArrange();
						this.set_DesiredSize(this.MeasureCore(availableSize));
						this.set_IsMeasureValid(true);
						this.set_PreviousAvailableSize(availableSize);
						this.$previousDesiredSize = this.get_DesiredSize();
						$System_Windows_LayoutManager.Current.RemoveMeasure(this);
					}
					finally {
						if (ss.isValue($t1)) {
							$t1.dispose();
						}
					}
				}
			}
			finally {
				if (ss.isValue($t2)) {
					$t2.dispose();
				}
			}
		},
		MeasureCore: function(availableSize) {
			return $System_Windows_Size.Empty;
		},
		InvalidateMeasure: function() {
			if (this.$measureInvalidationDisabled > 0 || !this.get_IsMeasureValid() && !this.get_PreviousAvailableSize().get_IsEmpty()) {
				return;
			}
			this.set_IsMeasureValid(false);
			$System_Windows_LayoutManager.Current.AddMeasure(this);
		},
		Arrange: function(finalRect) {
			var $t2 = $System_Windows_Threading_Dispatcher.CurrentDispatcher.DisableProcessing();
			try {
				{
					var $t1 = this.$DisableMeasureInvalidation();
					try {
						if (this.get_Visibility() === 2) {
							$System_Windows_LayoutManager.Current.RemoveArrange(this);
							return;
						}
						if (this.get_IsArrangeValid() && $System_Windows_RectExtensions.IsClose(finalRect, this.get_PreviousFinalRect())) {
							$System_Windows_LayoutManager.Current.RemoveArrange(this);
							return;
						}
						if (!this.get_IsMeasureValid() || !$System_Windows_SizeExtensions.IsClose(this.get_PreviousAvailableSize(), finalRect.get_Size())) {
							this.Measure(finalRect.get_Size());
						}
						this.ArrangeCore(finalRect);
						this.set_PreviousFinalRect(finalRect);
						this.set_IsArrangeValid(true);
						$System_Windows_LayoutManager.Current.RemoveArrange(this);
						$System_Windows_LayoutManager.Current.AddUpdatedElement(this);
					}
					finally {
						if (ss.isValue($t1)) {
							$t1.dispose();
						}
					}
				}
			}
			finally {
				if (ss.isValue($t2)) {
					$t2.dispose();
				}
			}
		},
		ArrangeCore: function(finalRect) {
			//
		},
		InvalidateArrange: function() {
			if (!this.get_IsArrangeValid() && !this.get_PreviousFinalRect().get_IsEmpty()) {
				return;
			}
			this.set_IsArrangeValid(false);
			$System_Windows_LayoutManager.Current.AddArrange(this);
		},
		$DisableMeasureInvalidation: function() {
			this.$measureInvalidationDisabled++;
			return new $System_Windows_Disposable(ss.mkdel(this, function() {
				this.$measureInvalidationDisabled--;
			}));
		},
		$RaiseLayoutUpdated: function() {
			this.OnLayoutUpdated();
			Granular.Extensions.EventHandlerExtensions.Raise$3(this.$3$LayoutUpdatedField, this, ss.EventArgs.Empty);
		},
		OnLayoutUpdated: function() {
			//
		},
		OnVisualParentChanged: function(oldVisualParent, newVisualParent) {
			this.$SetInheritanceParent();
			this.$SetIsVisible();
		},
		OnLogicalParentChanged: function(oldLogicalParent, newLogicalParent) {
			//
		},
		$SetInheritanceParent: function() {
			this.SetInheritanceParent(this.get_LogicalParent() || this.get_VisualParent());
		},
		SetAnimationClocks: function(dependencyProperty, animationClocks, layerOwner) {
			var animationExpression = this.$GetInitializedAnimationExpression(dependencyProperty);
			animationExpression.SetClocks(animationClocks, layerOwner);
		},
		AddAnimationClocks: function(dependencyProperty, animationClocks, layerOwner) {
			var animationExpression = this.$GetInitializedAnimationExpression(dependencyProperty);
			animationExpression.AddClocks(animationClocks, layerOwner);
		},
		RemoveAnimationClocks: function(dependencyProperty, animationClocks, layerOwner) {
			var animationExpression = this.$GetInitializedAnimationExpression(dependencyProperty);
			animationExpression.RemoveClocks(animationClocks, layerOwner);
		},
		$GetInitializedAnimationExpression: function(dependencyProperty) {
			var entry = this.GetValueEntry(dependencyProperty);
			var animationExpression = ss.safeCast(entry.GetAnimationValue(false), $System_Windows_Media_Animation_AnimationExpression);
			if (ss.isNullOrUndefined(animationExpression)) {
				animationExpression = new $System_Windows_Media_Animation_AnimationExpression(this, dependencyProperty);
				entry.SetAnimationValue(animationExpression);
			}
			return animationExpression;
		},
		HitTest: function(position) {
			if (!this.get_IsHitTestVisible() || !this.get_IsEnabled() || !this.get_IsVisible() || this.get_VisualClipToBounds() && !$System_Windows_RectExtensions.Contains(this.get_VisualBounds(), position)) {
				return null;
			}
			var relativePosition = $System_Windows_Point.op_Subtraction(position, this.get_VisualOffset());
			for (var i = this.get_VisualChildren().length - 1; i >= 0; i--) {
				var childHit = ss.cast(this.get_VisualChildren()[i], $System_Windows_UIElement).HitTest(relativePosition);
				if (ss.isValue(childHit)) {
					return childHit;
				}
			}
			return (this.HitTestOverride(relativePosition) ? this : null);
		},
		HitTestOverride: function(position) {
			return false;
		},
		Focus: function() {
			if (!this.get_IsFocused() && this.get_Focusable()) {
				this.$focus = $System_Windows_Disposable.Combine($System_Windows_Input_Keyboard.Focus(this), $System_Windows_Input_FocusManager.Focus(this));
			}
		},
		ClearFocus: function() {
			if (ss.isValue(this.$focus)) {
				this.$focus.dispose();
				this.$focus = null;
			}
		},
		SetAnimatableRootClock: function(animatableRootClock) {
			if (ss.isValue(this.$animatableRootClock)) {
				throw new Granular.Exception('AnimatableRootClock was already initialized', []);
			}
			this.$animatableRootClock = animatableRootClock;
		},
		$ForceDefaultValueInheritance: function(e) {
			// clear modified value if it's equal to a default value that should be inherited
			if (ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Object]).Default.areEqual(e.get_NewValue(), e.get_Property().GetMetadata(ss.getInstanceType(this)).get_DefaultValue()) && !this.GetValueSource(e.get_Property()).get_IsExpression()) {
				this.ClearValue(e.get_Property(), 11);
			}
		},
		$OnVisibilityChanged: function(e) {
			if (this.get_Visibility() !== 2) {
				if (!this.get_IsMeasureValid()) {
					$System_Windows_LayoutManager.Current.AddMeasure(this);
				}
				if (!this.get_IsArrangeValid()) {
					$System_Windows_LayoutManager.Current.AddArrange(this);
				}
			}
			this.set_VisualIsVisible(this.get_Visibility() === 0);
			this.$SetIsVisible();
		},
		$OnIsVisibleChanged: function(e) {
			this.ClearFocus();
			if (ss.isValue(this.$animatableRootClock)) {
				// add or remove animation clocks from the global root clock
				this.$animatableRootClock.set_IsConnected(this.get_IsVisible());
			}
			this.set_VisualIsVisible(this.get_IsVisible());
		},
		$OnIsEnabledChanged: function(e) {
			this.$ForceDefaultValueInheritance(e);
			this.ClearFocus();
		},
		$OnIsHitTestVisibleChanged: function(e) {
			this.$ForceDefaultValueInheritance(e);
			this.set_VisualIsHitTestVisible(this.get_IsHitTestVisible());
		},
		$OnFocusableChanged: function(e) {
			this.ClearFocus();
		},
		$SetIsVisible: function() {
			this.set_IsVisible(this.get_Visibility() === 0 && ss.isValue(this.get_VisualParent()) || this.get_IsRootElement());
		},
		GetPathFromRoot: function() {
			var path = [];
			var element = this;
			while (ss.isValue(element)) {
				path.push(ss.cast(element, $System_Windows_IInputElement));
				element = element.get_VisualParent();
			}
			path.reverse();
			return path;
		},
		GetRelativePosition: function(absolutePosition) {
			var element = this;
			while (ss.isValue(element)) {
				absolutePosition = $System_Windows_Point.op_Subtraction(absolutePosition, element.get_VisualOffset());
				element = element.get_VisualParent();
			}
			return absolutePosition;
		},
		add_PreviewMouseMove: function(value) {
			this.AddHandler($System_Windows_Input_Mouse.PreviewMouseMoveEvent, value, false);
		},
		remove_PreviewMouseMove: function(value) {
			this.RemoveHandler($System_Windows_Input_Mouse.PreviewMouseMoveEvent, value);
		},
		add_PreviewMouseDown: function(value) {
			this.AddHandler($System_Windows_Input_Mouse.PreviewMouseDownEvent, value, false);
		},
		remove_PreviewMouseDown: function(value) {
			this.RemoveHandler($System_Windows_Input_Mouse.PreviewMouseDownEvent, value);
		},
		add_PreviewMouseUp: function(value) {
			this.AddHandler($System_Windows_Input_Mouse.PreviewMouseUpEvent, value, false);
		},
		remove_PreviewMouseUp: function(value) {
			this.RemoveHandler($System_Windows_Input_Mouse.PreviewMouseUpEvent, value);
		},
		add_PreviewMouseWheel: function(value) {
			this.AddHandler($System_Windows_Input_Mouse.PreviewMouseWheelEvent, value, false);
		},
		remove_PreviewMouseWheel: function(value) {
			this.RemoveHandler($System_Windows_Input_Mouse.PreviewMouseWheelEvent, value);
		},
		add_MouseMove: function(value) {
			this.AddHandler($System_Windows_Input_Mouse.MouseMoveEvent, value, false);
		},
		remove_MouseMove: function(value) {
			this.RemoveHandler($System_Windows_Input_Mouse.MouseMoveEvent, value);
		},
		add_MouseDown: function(value) {
			this.AddHandler($System_Windows_Input_Mouse.MouseDownEvent, value, false);
		},
		remove_MouseDown: function(value) {
			this.RemoveHandler($System_Windows_Input_Mouse.MouseDownEvent, value);
		},
		add_MouseUp: function(value) {
			this.AddHandler($System_Windows_Input_Mouse.MouseUpEvent, value, false);
		},
		remove_MouseUp: function(value) {
			this.RemoveHandler($System_Windows_Input_Mouse.MouseUpEvent, value);
		},
		add_MouseWheel: function(value) {
			this.AddHandler($System_Windows_Input_Mouse.MouseWheelEvent, value, false);
		},
		remove_MouseWheel: function(value) {
			this.RemoveHandler($System_Windows_Input_Mouse.MouseWheelEvent, value);
		},
		add_MouseEnter: function(value) {
			this.AddHandler($System_Windows_Input_Mouse.MouseEnterEvent, value, false);
		},
		remove_MouseEnter: function(value) {
			this.RemoveHandler($System_Windows_Input_Mouse.MouseEnterEvent, value);
		},
		add_MouseLeave: function(value) {
			this.AddHandler($System_Windows_Input_Mouse.MouseLeaveEvent, value, false);
		},
		remove_MouseLeave: function(value) {
			this.RemoveHandler($System_Windows_Input_Mouse.MouseLeaveEvent, value);
		},
		add_QueryCursor: function(value) {
			this.AddHandler($System_Windows_Input_Mouse.QueryCursorEvent, value, false);
		},
		remove_QueryCursor: function(value) {
			this.RemoveHandler($System_Windows_Input_Mouse.QueryCursorEvent, value);
		},
		OnMouseEnter: function(e) {
			//
		},
		OnMouseLeave: function(e) {
			//
		},
		OnQueryCursor: function(e) {
			//
		},
		OnPreviewMouseMove: function(e) {
			//
		},
		OnPreviewMouseDown: function(e) {
			//
		},
		OnPreviewMouseUp: function(e) {
			//
		},
		OnPreviewMouseWheel: function(e) {
			//
		},
		OnMouseMove: function(e) {
			//
		},
		OnMouseDown: function(e) {
			//
		},
		OnMouseUp: function(e) {
			//
		},
		OnMouseWheel: function(e) {
			//
		},
		add_PreviewKeyDown: function(value) {
			this.AddHandler($System_Windows_Input_Keyboard.PreviewKeyDownEvent, value, false);
		},
		remove_PreviewKeyDown: function(value) {
			this.RemoveHandler($System_Windows_Input_Keyboard.PreviewKeyDownEvent, value);
		},
		add_PreviewKeyUp: function(value) {
			this.AddHandler($System_Windows_Input_Keyboard.PreviewKeyUpEvent, value, false);
		},
		remove_PreviewKeyUp: function(value) {
			this.RemoveHandler($System_Windows_Input_Keyboard.PreviewKeyUpEvent, value);
		},
		add_PreviewGotKeyboardFocus: function(value) {
			this.AddHandler($System_Windows_Input_Keyboard.PreviewGotKeyboardFocusEvent, value, false);
		},
		remove_PreviewGotKeyboardFocus: function(value) {
			this.RemoveHandler($System_Windows_Input_Keyboard.PreviewGotKeyboardFocusEvent, value);
		},
		add_PreviewLostKeyboardFocus: function(value) {
			this.AddHandler($System_Windows_Input_Keyboard.PreviewLostKeyboardFocusEvent, value, false);
		},
		remove_PreviewLostKeyboardFocus: function(value) {
			this.RemoveHandler($System_Windows_Input_Keyboard.PreviewLostKeyboardFocusEvent, value);
		},
		add_KeyDown: function(value) {
			this.AddHandler($System_Windows_Input_Keyboard.KeyDownEvent, value, false);
		},
		remove_KeyDown: function(value) {
			this.RemoveHandler($System_Windows_Input_Keyboard.KeyDownEvent, value);
		},
		add_KeyUp: function(value) {
			this.AddHandler($System_Windows_Input_Keyboard.KeyUpEvent, value, false);
		},
		remove_KeyUp: function(value) {
			this.RemoveHandler($System_Windows_Input_Keyboard.KeyUpEvent, value);
		},
		add_GotKeyboardFocus: function(value) {
			this.AddHandler($System_Windows_Input_Keyboard.GotKeyboardFocusEvent, value, false);
		},
		remove_GotKeyboardFocus: function(value) {
			this.RemoveHandler($System_Windows_Input_Keyboard.GotKeyboardFocusEvent, value);
		},
		add_LostKeyboardFocus: function(value) {
			this.AddHandler($System_Windows_Input_Keyboard.LostKeyboardFocusEvent, value, false);
		},
		remove_LostKeyboardFocus: function(value) {
			this.RemoveHandler($System_Windows_Input_Keyboard.LostKeyboardFocusEvent, value);
		},
		OnGotKeyboardFocus: function(e) {
			//
		},
		OnLostKeyboardFocus: function(e) {
			//
		},
		OnPreviewKeyDown: function(e) {
			//
		},
		OnPreviewKeyUp: function(e) {
			//
		},
		OnKeyDown: function(e) {
			//
		},
		OnKeyUp: function(e) {
			//
		},
		add_GotFocus: function(value) {
			this.AddHandler($System_Windows_UIElement.GotFocusEvent, value, false);
		},
		remove_GotFocus: function(value) {
			this.RemoveHandler($System_Windows_UIElement.GotFocusEvent, value);
		},
		add_LostFocus: function(value) {
			this.AddHandler($System_Windows_UIElement.LostFocusEvent, value, false);
		},
		remove_LostFocus: function(value) {
			this.RemoveHandler($System_Windows_UIElement.LostFocusEvent, value);
		},
		OnGotFocus: function(e) {
			//
		},
		OnLostFocus: function(e) {
			//
		}
	}, $System_Windows_Media_Visual, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement]);
	ss.initInterface($System_Windows_IResourceContainer, $asm, { add_ResourcesChanged: null, remove_ResourcesChanged: null, TryGetResource: null });
	ss.initClass($System_Windows_FrameworkElement, $asm, {
		add_ResourcesChanged: function(value) {
			this.$4$ResourcesChangedField = ss.delegateCombine(this.$4$ResourcesChangedField, value);
		},
		remove_ResourcesChanged: function(value) {
			this.$4$ResourcesChangedField = ss.delegateRemove(this.$4$ResourcesChangedField, value);
		},
		add_DataContextChanged: function(value) {
			this.$4$DataContextChangedField = ss.delegateCombine(this.$4$DataContextChangedField, value);
		},
		remove_DataContextChanged: function(value) {
			this.$4$DataContextChangedField = ss.delegateRemove(this.$4$DataContextChangedField, value);
		},
		add_Initialized: function(value) {
			this.AddHandler($System_Windows_FrameworkElement.InitializedEvent, value, false);
		},
		remove_Initialized: function(value) {
			this.RemoveHandler($System_Windows_FrameworkElement.InitializedEvent, value);
		},
		get_HorizontalAlignment: function() {
			return ss.cast(this.GetValue($System_Windows_FrameworkElement.HorizontalAlignmentProperty), ss.Int32);
		},
		set_HorizontalAlignment: function(value) {
			this.SetValue($System_Windows_FrameworkElement.HorizontalAlignmentProperty, value, 11);
		},
		get_VerticalAlignment: function() {
			return ss.cast(this.GetValue($System_Windows_FrameworkElement.VerticalAlignmentProperty), ss.Int32);
		},
		set_VerticalAlignment: function(value) {
			this.SetValue($System_Windows_FrameworkElement.VerticalAlignmentProperty, value, 11);
		},
		get_Margin: function() {
			return ss.cast(this.GetValue($System_Windows_FrameworkElement.MarginProperty), $System_Windows_Thickness);
		},
		set_Margin: function(value) {
			this.SetValue($System_Windows_FrameworkElement.MarginProperty, value, 11);
		},
		get_Width: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_FrameworkElement.WidthProperty), Number));
		},
		set_Width: function(value) {
			this.SetValue($System_Windows_FrameworkElement.WidthProperty, value, 11);
		},
		get_Height: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_FrameworkElement.HeightProperty), Number));
		},
		set_Height: function(value) {
			this.SetValue($System_Windows_FrameworkElement.HeightProperty, value, 11);
		},
		get_MinWidth: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_FrameworkElement.MinWidthProperty), Number));
		},
		set_MinWidth: function(value) {
			this.SetValue($System_Windows_FrameworkElement.MinWidthProperty, value, 11);
		},
		get_MinHeight: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_FrameworkElement.MinHeightProperty), Number));
		},
		set_MinHeight: function(value) {
			this.SetValue($System_Windows_FrameworkElement.MinHeightProperty, value, 11);
		},
		get_MaxWidth: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_FrameworkElement.MaxWidthProperty), Number));
		},
		set_MaxWidth: function(value) {
			this.SetValue($System_Windows_FrameworkElement.MaxWidthProperty, value, 11);
		},
		get_MaxHeight: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_FrameworkElement.MaxHeightProperty), Number));
		},
		set_MaxHeight: function(value) {
			this.SetValue($System_Windows_FrameworkElement.MaxHeightProperty, value, 11);
		},
		get_ActualWidth: function() {
			return ss.unbox(ss.cast(this.GetValue$1($System_Windows_FrameworkElement.$ActualWidthPropertyKey), Number));
		},
		set_ActualWidth: function(value) {
			this.$actualWidthValueEntry.SetBaseValue(11, value);
		},
		get_ActualHeight: function() {
			return ss.unbox(ss.cast(this.GetValue$1($System_Windows_FrameworkElement.$ActualHeightPropertyKey), Number));
		},
		set_ActualHeight: function(value) {
			this.$actualHeightValueEntry.SetBaseValue(11, value);
		},
		get_ActualSize: function() {
			return this.$4$ActualSizeField;
		},
		set_ActualSize: function(value) {
			this.$4$ActualSizeField = value;
		},
		get_Size: function() {
			return this.$4$SizeField;
		},
		set_Size: function(value) {
			this.$4$SizeField = value;
		},
		get_MinSize: function() {
			return this.$4$MinSizeField;
		},
		set_MinSize: function(value) {
			this.$4$MinSizeField = value;
		},
		get_MaxSize: function() {
			return this.$4$MaxSizeField;
		},
		set_MaxSize: function(value) {
			this.$4$MaxSizeField = value;
		},
		get_IsInitialized: function() {
			return this.$4$IsInitializedField;
		},
		set_IsInitialized: function(value) {
			this.$4$IsInitializedField = value;
		},
		get_TemplatedParent: function() {
			return this.$4$TemplatedParentField;
		},
		set_TemplatedParent: function(value) {
			this.$4$TemplatedParentField = value;
		},
		get_TemplateChild: function() {
			return this.$templateChild;
		},
		set_TemplateChild: function(value) {
			if (ss.referenceEquals(this.$templateChild, value)) {
				return;
			}
			if (ss.isValue(this.$templateChild)) {
				this.RemoveVisualChild(this.$templateChild);
			}
			this.$templateChild = value;
			if (ss.isValue(this.$templateChild)) {
				this.AddVisualChild(this.$templateChild);
			}
			this.InvalidateMeasure();
			this.OnTemplateChildChanged();
		},
		get_Style: function() {
			return ss.cast(this.GetValue($System_Windows_FrameworkElement.StyleProperty), $System_Windows_Style);
		},
		set_Style: function(value) {
			this.SetValue($System_Windows_FrameworkElement.StyleProperty, value, 11);
		},
		get_FocusVisualStyle: function() {
			return ss.cast(this.GetValue($System_Windows_FrameworkElement.FocusVisualStyleProperty), $System_Windows_Style);
		},
		set_FocusVisualStyle: function(value) {
			this.SetValue($System_Windows_FrameworkElement.FocusVisualStyleProperty, value, 11);
		},
		get_Resources: function() {
			return this.$resources;
		},
		set_Resources: function(value) {
			if (ss.referenceEquals(this.$resources, value)) {
				return;
			}
			if (ss.isValue(this.$resources)) {
				this.$resources.remove_ResourcesChanged(ss.mkdel(this, this.$OnResourceDictionaryChanged));
			}
			this.$resources = value;
			if (ss.isValue(this.$resources)) {
				this.$resources.add_ResourcesChanged(ss.mkdel(this, this.$OnResourceDictionaryChanged));
			}
			this.$RaiseResourcesChanged($System_Windows_ResourcesChangedEventArgs.Reset);
		},
		get_$ResourceInheritanceParent: function() {
			return this.$resourceInheritanceParent;
		},
		set_$ResourceInheritanceParent: function(value) {
			if (ss.referenceEquals(this.$resourceInheritanceParent, value)) {
				return;
			}
			if (ss.isValue(this.$resourceInheritanceParent)) {
				this.$resourceInheritanceParent.remove_ResourcesChanged(ss.mkdel(this, this.$OnParentResourcesChanged));
			}
			this.$resourceInheritanceParent = value;
			if (ss.isValue(this.$resourceInheritanceParent)) {
				this.$resourceInheritanceParent.add_ResourcesChanged(ss.mkdel(this, this.$OnParentResourcesChanged));
			}
			this.$RaiseResourcesChanged($System_Windows_ResourcesChangedEventArgs.Reset);
		},
		get_DataContext: function() {
			return this.GetValue($System_Windows_FrameworkElement.DataContextProperty);
		},
		set_DataContext: function(value) {
			this.SetValue($System_Windows_FrameworkElement.DataContextProperty, value, 11);
		},
		get_Cursor: function() {
			return ss.cast(this.GetValue($System_Windows_FrameworkElement.CursorProperty), $System_Windows_Input_Cursor);
		},
		set_Cursor: function(value) {
			this.SetValue($System_Windows_FrameworkElement.CursorProperty, value, 11);
		},
		get_ForceCursor: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_FrameworkElement.ForceCursorProperty), Boolean));
		},
		set_ForceCursor: function(value) {
			this.SetValue($System_Windows_FrameworkElement.ForceCursorProperty, value, 11);
		},
		get_Triggers: function() {
			return this.$4$TriggersField;
		},
		set_Triggers: function(value) {
			this.$4$TriggersField = value;
		},
		get_Name: function() {
			return this.$4$NameField;
		},
		set_Name: function(value) {
			this.$4$NameField = value;
		},
		toString: function() {
			return (Granular.Extensions.StringExtensions.IsNullOrEmpty(this.get_Name()) ? ss.formatString('{0}', ss.getTypeName(ss.getInstanceType(this))) : ss.formatString('{0} ({1})', ss.getTypeName(ss.getInstanceType(this)), this.get_Name()));
		},
		OnPropertyChanged: function(e) {
			$System_Windows_DependencyObject.prototype.OnPropertyChanged.call(this, e);
			var metadata = ss.safeCast(e.get_Property().GetMetadata(ss.getInstanceType(this)), $System_Windows_FrameworkPropertyMetadata);
			if (ss.isValue(metadata)) {
				if (metadata.get_AffectsMeasure()) {
					this.InvalidateMeasure();
				}
				if (metadata.get_AffectsArrange()) {
					this.InvalidateArrange();
				}
			}
			var baseValueSource = this.GetBaseValueSource(e.get_Property());
			if (baseValueSource !== 1 && baseValueSource !== 2) {
				if (ss.isInstanceOfType(e.get_OldValue(), $System_Windows_IInheritableObject)) {
					ss.cast(e.get_OldValue(), $System_Windows_IInheritableObject).SetInheritanceContext(null);
				}
				if (ss.isInstanceOfType(e.get_NewValue(), $System_Windows_IInheritableObject)) {
					ss.cast(e.get_NewValue(), $System_Windows_IInheritableObject).SetInheritanceContext(this);
				}
			}
		},
		MeasureCore: function(availableSize) {
			availableSize = $System_Windows_Size.op_Subtraction(availableSize, this.get_Margin().get_Size());
			availableSize = $System_Windows_SizeExtensions.Bounds($System_Windows_SizeExtensions.Combine(this.get_Size(), availableSize), this.get_MinSize(), this.get_MaxSize());
			var measuredSize = this.MeasureOverride(availableSize);
			measuredSize = $System_Windows_SizeExtensions.Bounds($System_Windows_SizeExtensions.Combine(this.get_Size(), measuredSize), this.get_MinSize(), this.get_MaxSize());
			measuredSize = $System_Windows_Size.op_Addition(measuredSize, this.get_Margin().get_Size());
			return measuredSize;
		},
		MeasureOverride: function(availableSize) {
			return $System_Windows_Size.Zero;
		},
		ArrangeCore: function(finalRect) {
			var finalSize = new $System_Windows_Size(((this.get_HorizontalAlignment() !== 3) ? this.get_DesiredSize().get_Width() : finalRect.get_Width()), ((this.get_VerticalAlignment() !== 3) ? this.get_DesiredSize().get_Height() : finalRect.get_Height()));
			finalSize = $System_Windows_Size.op_Subtraction(finalSize, this.get_Margin().get_Size());
			finalSize = $System_Windows_SizeExtensions.Bounds($System_Windows_SizeExtensions.Combine(this.get_Size(), finalSize), this.get_MinSize(), this.get_MaxSize());
			var arrangedSize = this.ArrangeOverride(finalSize);
			var alignedOffset = $System_Windows_FrameworkElement.$GetAlignmentOffset(finalRect, $System_Windows_Size.op_Addition(arrangedSize, this.get_Margin().get_Size()), this.get_HorizontalAlignment(), this.get_VerticalAlignment());
			var visualOffset = $System_Windows_Point.op_Addition(alignedOffset, this.get_Margin().get_Location());
			this.set_VisualBounds(new $System_Windows_Rect.$ctor2(visualOffset, arrangedSize));
			this.set_ActualWidth(arrangedSize.get_Width());
			this.set_ActualHeight(arrangedSize.get_Height());
			this.set_ActualSize(arrangedSize);
		},
		ArrangeOverride: function(finalSize) {
			return finalSize;
		},
		GetTemplate: function() {
			return null;
		},
		ApplyTemplate: function() {
			var template = this.GetTemplate();
			if (ss.referenceEquals(this.$appliedTemplate, template)) {
				return false;
			}
			if (ss.isValue(this.$appliedTemplate)) {
				this.$appliedTemplate.Detach(this);
			}
			this.$appliedTemplate = template;
			if (ss.isValue(this.$appliedTemplate)) {
				this.$appliedTemplate.Attach(this);
			}
			this.OnApplyTemplate();
			return true;
		},
		OnApplyTemplate: function() {
			//
		},
		OnVisualParentChanged: function(oldVisualParent, newVisualParent) {
			$System_Windows_UIElement.prototype.OnVisualParentChanged.call(this, oldVisualParent, newVisualParent);
			this.$Initialize();
			this.set_$ResourceInheritanceParent(ss.safeCast(this.get_LogicalParent() || this.get_VisualParent(), $System_Windows_FrameworkElement));
		},
		OnLogicalParentChanged: function(oldLogicalParent, newLogicalParent) {
			this.set_$ResourceInheritanceParent(ss.safeCast(this.get_LogicalParent() || this.get_VisualParent(), $System_Windows_FrameworkElement));
		},
		$Initialize: function() {
			if (this.get_IsInitialized()) {
				return;
			}
			this.set_IsInitialized(true);
			this.OnInitialized();
			this.RaiseEvent(new $System_Windows_RoutedEventArgs($System_Windows_FrameworkElement.InitializedEvent, this));
		},
		OnInitialized: function() {
			//
		},
		$OnStyleChanged: function(e) {
			if (ss.isValue(e.get_OldValue())) {
				ss.safeCast(e.get_OldValue(), $System_Windows_Style).Detach(this);
			}
			if (ss.isValue(e.get_NewValue())) {
				ss.safeCast(e.get_NewValue(), $System_Windows_Style).Attach(this);
			}
		},
		TryGetResource: function(resourceKey, value) {
			return this.$resourcesCache.TryGetValue(resourceKey, value);
		},
		$TryResolveResource: function(resourceKey, value) {
			if (ss.isValue(this.get_Resources()) && this.get_Resources().tryGetValue(resourceKey, value)) {
				return true;
			}
			if (ss.isValue(this.get_$ResourceInheritanceParent()) && this.get_$ResourceInheritanceParent().TryGetResource(resourceKey, value)) {
				return true;
			}
			value.$ = null;
			return false;
		},
		$OnParentResourcesChanged: function(sender, e) {
			this.$RaiseResourcesChanged(e);
		},
		$OnResourceDictionaryChanged: function(sender, e) {
			this.$RaiseResourcesChanged(e);
		},
		$RaiseResourcesChanged: function(e) {
			this.OnResourcesChanged(e);
			Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_ResourcesChangedEventArgs).call(null, this.$4$ResourcesChangedField, this, e);
		},
		OnResourcesChanged: function(e) {
			this.$resourcesCache.Clear();
			this.SetValue($System_Windows_FrameworkElement.StyleProperty, this.$GetDefaultStyle(), 1);
		},
		SetResourceInheritanceParent: function(parent) {
			this.set_$ResourceInheritanceParent(parent);
		},
		OnTemplateChildChanged: function() {
			//
		},
		$GetDefaultStyle: function() {
			var type = ss.getInstanceType(this);
			while (!ss.referenceEquals(type, $System_Windows_FrameworkElement)) {
				var value = {};
				if (this.TryGetResource(new $System_Windows_StyleKey(type), value)) {
					return ss.safeCast(value.$, $System_Windows_Style);
				}
				type = ss.getBaseType(type);
			}
			return null;
		},
		$OnTriggersCollectionChanged: function(sender, e) {
			var $t1 = ss.getEnumerator(e.get_OldItems());
			try {
				while ($t1.moveNext()) {
					var trigger = $t1.current();
					trigger.Detach(this, 11);
					if (ss.isInstanceOfType(trigger, $System_Windows_DependencyObject)) {
						ss.cast(trigger, $System_Windows_DependencyObject).SetInheritanceParent(null);
					}
				}
			}
			finally {
				$t1.dispose();
			}
			var $t2 = ss.getEnumerator(e.get_NewItems());
			try {
				while ($t2.moveNext()) {
					var trigger1 = $t2.current();
					if (ss.isInstanceOfType(trigger1, $System_Windows_DependencyObject)) {
						ss.cast(trigger1, $System_Windows_DependencyObject).SetInheritanceParent(this);
					}
					trigger1.Attach(this, 11);
				}
			}
			finally {
				$t2.dispose();
			}
		},
		$OnDataContextChanged: function(e) {
			$System_Windows_DependencyPropertyChangedEventHandlerExtensions.Raise(this.$4$DataContextChangedField, this, e);
		},
		$UpdateCursor: function() {
			if (this.get_IsMouseOver()) {
				$System_Windows_ApplicationHostExtensions.GetMouseDeviceFromElement($System_Windows_ApplicationHost.get_Current(), this).UpdateCursor();
			}
		},
		OnQueryCursor: function(e) {
			if (ss.isValue(this.get_Cursor()) && (this.get_ForceCursor() || !e.get_Handled())) {
				e.set_Cursor(this.get_Cursor());
				e.set_Handled(true);
			}
		},
		$SetSize: function() {
			this.set_Size(new $System_Windows_Size(this.get_Width(), this.get_Height()));
		},
		$SetMinSize: function() {
			this.set_MinSize(new $System_Windows_Size(this.get_MinWidth(), this.get_MinHeight()));
		},
		$SetMaxSize: function() {
			this.set_MaxSize(new $System_Windows_Size(this.get_MaxWidth(), this.get_MaxHeight()));
		}
	}, $System_Windows_UIElement, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initInterface($System_Windows_Controls_IAdornerLayerHost, $asm, { get_AdornerLayer: null });
	ss.initClass($System_$Windows_Controls_Primitives_Popup$PopupContainer, $asm, {
		get_AdornerLayer: function() {
			return this.$5$AdornerLayerField;
		},
		set_$AdornerLayer: function(value) {
			this.$5$AdornerLayerField = value;
		},
		get_$Child: function() {
			return this.$child;
		},
		set_$Child: function(value) {
			if (ss.referenceEquals(this.$child, value)) {
				return;
			}
			if (ss.isValue(this.$child)) {
				this.RemoveVisualChild(this.$child);
			}
			this.$child = value;
			if (ss.isValue(this.$child)) {
				this.AddVisualChild(this.$child);
				this.SetVisualChildIndex(this.$child, 0);
			}
			this.InvalidateMeasure();
		},
		get_$Position: function() {
			return this.$position;
		},
		set_$Position: function(value) {
			this.$position = value;
			$System_Windows_Controls_PopupLayer.SetPosition(this, this.$position);
		},
		get_$IsOpen: function() {
			return this.$isOpen;
		},
		set_$IsOpen: function(value) {
			this.$isOpen = value;
			this.set_Visibility((this.$isOpen ? 0 : 2));
			$System_Windows_Controls_PopupLayer.SetIsOpen(this, this.$isOpen);
		},
		MeasureOverride: function(availableSize) {
			this.get_AdornerLayer().Measure(availableSize);
			if (ss.isNullOrUndefined(this.get_$Child())) {
				return $System_Windows_Size.Zero;
			}
			this.get_$Child().Measure(availableSize);
			return this.get_$Child().get_DesiredSize();
		},
		ArrangeOverride: function(finalSize) {
			this.get_AdornerLayer().Arrange(new $System_Windows_Rect(finalSize));
			if (ss.isValue(this.get_$Child())) {
				this.get_$Child().Arrange(new $System_Windows_Rect(finalSize));
			}
			return finalSize;
		}
	}, $System_Windows_FrameworkElement, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer, $System_Windows_Controls_IAdornerLayerHost]);
	ss.initClass($System_$Windows_Data_Binding$StringFormatConverter, $asm, {
		Convert: function(value, targetType, parameter) {
			return ss.formatString(this.$format, value, parameter);
		},
		ConvertBack: function(value, targetType, parameter) {
			return null;
		}
	}, null, [$System_Windows_Data_IValueConverter]);
	ss.initInterface($System_Windows_Data_ICollectionView, $asm, { add_CurrentChanged: null, remove_CurrentChanged: null, get_SourceCollection: null, get_CurrentItem: null, set_CurrentItem: null, get_CurrentItemIndex: null, set_CurrentItemIndex: null, get_CanFilter: null, get_FilterPredicate: null, set_FilterPredicate: null, get_CanSort: null, get_SortKeySelector: null, set_SortKeySelector: null, get_SortDirection: null, set_SortDirection: null }, [ss.IEnumerable, ss.IEnumerable, Granular.Collections.INotifyCollectionChanged, ss.makeGenericType(Granular.Collections.IObservableCollection$1, [Object])]);
	ss.initClass($System_$Windows_Data_CollectionView$EmptyCollectionView, $asm, {
		add_CollectionChanged: function(value) {
		},
		remove_CollectionChanged: function(value) {
		},
		add_CurrentChanged: function(value) {
		},
		remove_CurrentChanged: function(value) {
		},
		get_SourceCollection: function() {
			return this;
		},
		get_CurrentItem: function() {
			return null;
		},
		set_CurrentItem: function(value) {
		},
		get_CurrentItemIndex: function() {
			return -1;
		},
		set_CurrentItemIndex: function(value) {
		},
		get_CanFilter: function() {
			return false;
		},
		get_FilterPredicate: function() {
			return null;
		},
		set_FilterPredicate: function(value) {
		},
		get_CanSort: function() {
			return false;
		},
		get_SortKeySelector: function() {
			return null;
		},
		set_SortKeySelector: function(value) {
		},
		get_SortDirection: function() {
			return 0;
		},
		set_SortDirection: function(value) {
		},
		getEnumerator: function() {
			return Enumerable.from([]).select(function(x) {
				return ss.cast(x, Object);
			}).getEnumerator();
		}
	}, null, [ss.IEnumerable, ss.IEnumerable, Granular.Collections.INotifyCollectionChanged, ss.makeGenericType(Granular.Collections.IObservableCollection$1, [Object]), $System_Windows_Data_ICollectionView]);
	ss.initClass($System_$Windows_Input_KeyboardNavigation$FocusVisualAdorner, $asm, {
		dispose: function() {
			this.$adornerLayer.Remove(this.$adorner);
		}
	}, null, [ss.IDisposable]);
	ss.initInterface($System_$Windows_Input_KeyboardNavigationTarget$INavigation, $asm, { $FindNextTarget: null, $FindPreviousTarget: null, $FindFirstTarget: null, $FindLastTarget: null, $GetGlobalStops: null });
	ss.initClass($System_$Windows_Input_KeyboardNavigationTarget$BaseNavigation, $asm, {
		$FindNextTarget: function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
			return (ss.isValue(scope.get_VisualParent()) ? $System_Windows_Input_KeyboardNavigationTarget.$FindNextTarget(scope.get_VisualParent(), currentStop, navigationModeProperty, stopComparerProvider) : $System_Windows_Input_KeyboardNavigationTarget.$FindNextContainedTarget(scope, currentStop, navigationModeProperty, stopComparerProvider));
		},
		$FindPreviousTarget: function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
			return (ss.isValue(scope.get_VisualParent()) ? $System_Windows_Input_KeyboardNavigationTarget.$FindPreviousTarget(scope.get_VisualParent(), currentStop, navigationModeProperty, stopComparerProvider) : $System_Windows_Input_KeyboardNavigationTarget.$FindPreviousContainedTarget(scope, currentStop, navigationModeProperty, stopComparerProvider));
		},
		$FindFirstTarget: function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
			return (ss.isValue(scope.get_VisualParent()) ? $System_Windows_Input_KeyboardNavigationTarget.$FindFirstTarget(scope.get_VisualParent(), currentStop, navigationModeProperty, stopComparerProvider) : $System_Windows_Input_KeyboardNavigationTarget.$FindFirstContainedTarget(scope, currentStop, navigationModeProperty, stopComparerProvider));
		},
		$FindLastTarget: function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
			return (ss.isValue(scope.get_VisualParent()) ? $System_Windows_Input_KeyboardNavigationTarget.$FindLastTarget(scope.get_VisualParent(), currentStop, navigationModeProperty, stopComparerProvider) : $System_Windows_Input_KeyboardNavigationTarget.$FindLastContainedTarget(scope, currentStop, navigationModeProperty, stopComparerProvider));
		},
		$GetGlobalStops: function(scope, currentElement, navigationModeProperty) {
			return $System_Windows_Input_KeyboardNavigationTarget.$GetContainedStops(scope, currentElement, navigationModeProperty);
		}
	}, null, [$System_$Windows_Input_KeyboardNavigationTarget$INavigation]);
	ss.initClass($System_$Windows_Input_KeyboardNavigationTarget$BottomBoundStopComparer, $asm, {
		compare: function(x, y) {
			var relativePosition1 = $System_Windows_Point.op_Subtraction($System_Windows_Input_KeyboardNavigationTarget.$GetTopBoundPosition($System_Windows_Input_KeyboardNavigationTarget.$GetAbsoluteBounds(x.get_$Element())), this.$currentPosition);
			var relativePosition2 = $System_Windows_Point.op_Subtraction($System_Windows_Input_KeyboardNavigationTarget.$GetTopBoundPosition($System_Windows_Input_KeyboardNavigationTarget.$GetAbsoluteBounds(y.get_$Element())), this.$currentPosition);
			var distance1 = ((relativePosition1.get_Y() < 0) ? -$System_Windows_PointExtensions.GetLengthSqr(relativePosition1) : $System_Windows_PointExtensions.GetLengthSqr(relativePosition1));
			var distance2 = ((relativePosition2.get_Y() < 0) ? -$System_Windows_PointExtensions.GetLengthSqr(relativePosition2) : $System_Windows_PointExtensions.GetLengthSqr(relativePosition2));
			return ss.compare(distance1, distance2);
		}
	}, null, [ss.IComparer]);
	ss.initClass($System_$Windows_Input_KeyboardNavigationTarget$ContainedNavigation, $asm, {
		$FindNextTarget: function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
			return $System_Windows_Input_KeyboardNavigationTarget.$FindNextContainedTarget(scope, currentStop, navigationModeProperty, stopComparerProvider) || currentStop.get_$Element();
			// stay at the edge
		},
		$FindPreviousTarget: function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
			return $System_Windows_Input_KeyboardNavigationTarget.$FindPreviousContainedTarget(scope, currentStop, navigationModeProperty, stopComparerProvider) || currentStop.get_$Element();
			// stay at the edge
		},
		$FindFirstTarget: function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
			return $System_Windows_Input_KeyboardNavigationTarget.$FindFirstContainedTarget(scope, currentStop, navigationModeProperty, stopComparerProvider);
		},
		$FindLastTarget: function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
			return $System_Windows_Input_KeyboardNavigationTarget.$FindLastContainedTarget(scope, currentStop, navigationModeProperty, stopComparerProvider);
		}
	}, $System_$Windows_Input_KeyboardNavigationTarget$BaseNavigation, [$System_$Windows_Input_KeyboardNavigationTarget$INavigation]);
	ss.initClass($System_$Windows_Input_KeyboardNavigationTarget$ContinueNavigation, $asm, {}, $System_$Windows_Input_KeyboardNavigationTarget$BaseNavigation, [$System_$Windows_Input_KeyboardNavigationTarget$INavigation]);
	ss.initClass($System_$Windows_Input_KeyboardNavigationTarget$CycleNavigation, $asm, {
		$FindNextTarget: function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
			return $System_Windows_Input_KeyboardNavigationTarget.$FindNextContainedTarget(scope, currentStop, navigationModeProperty, stopComparerProvider) || $System_Windows_Input_KeyboardNavigationTarget.$FindFirstContainedTarget(scope, currentStop, navigationModeProperty, stopComparerProvider);
		},
		$FindPreviousTarget: function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
			return $System_Windows_Input_KeyboardNavigationTarget.$FindPreviousContainedTarget(scope, currentStop, navigationModeProperty, stopComparerProvider) || $System_Windows_Input_KeyboardNavigationTarget.$FindLastContainedTarget(scope, currentStop, navigationModeProperty, stopComparerProvider);
		},
		$FindFirstTarget: function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
			return $System_Windows_Input_KeyboardNavigationTarget.$FindFirstContainedTarget(scope, currentStop, navigationModeProperty, stopComparerProvider);
		},
		$FindLastTarget: function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
			return $System_Windows_Input_KeyboardNavigationTarget.$FindLastContainedTarget(scope, currentStop, navigationModeProperty, stopComparerProvider);
		}
	}, $System_$Windows_Input_KeyboardNavigationTarget$BaseNavigation, [$System_$Windows_Input_KeyboardNavigationTarget$INavigation]);
	ss.initInterface($System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider, $asm, { $CreateComparer: null });
	ss.initClass($System_$Windows_Input_KeyboardNavigationTarget$LeftBoundStopComparer, $asm, {
		compare: function(x, y) {
			var relativePosition1 = $System_Windows_Point.op_Subtraction($System_Windows_Input_KeyboardNavigationTarget.$GetRightBoundPosition($System_Windows_Input_KeyboardNavigationTarget.$GetAbsoluteBounds(x.get_$Element())), this.$currentPosition);
			var relativePosition2 = $System_Windows_Point.op_Subtraction($System_Windows_Input_KeyboardNavigationTarget.$GetRightBoundPosition($System_Windows_Input_KeyboardNavigationTarget.$GetAbsoluteBounds(y.get_$Element())), this.$currentPosition);
			var distance1 = ((relativePosition1.get_X() <= 0) ? -$System_Windows_PointExtensions.GetLengthSqr(relativePosition1) : $System_Windows_PointExtensions.GetLengthSqr(relativePosition1));
			var distance2 = ((relativePosition2.get_X() <= 0) ? -$System_Windows_PointExtensions.GetLengthSqr(relativePosition2) : $System_Windows_PointExtensions.GetLengthSqr(relativePosition2));
			return ss.compare(distance1, distance2);
		}
	}, null, [ss.IComparer]);
	ss.initClass($System_$Windows_Input_KeyboardNavigationTarget$LocalNavigation, $asm, {
		$FindNextTarget: function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
			return $System_Windows_Input_KeyboardNavigationTarget.$FindNextContainedTarget(scope, currentStop, navigationModeProperty, stopComparerProvider) || (ss.isValue(scope.get_VisualParent()) ? $System_Windows_Input_KeyboardNavigationTarget.$FindNextTarget(scope.get_VisualParent(), new $System_$Windows_Input_KeyboardNavigationTarget$Stop.$ctor1(currentStop.get_$Element(), $System_Windows_Input_KeyboardNavigation.GetTabIndex(scope)), navigationModeProperty, stopComparerProvider) : null);
			// translate currentStop and forward request to parent
		},
		$FindPreviousTarget: function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
			return $System_Windows_Input_KeyboardNavigationTarget.$FindPreviousContainedTarget(scope, currentStop, navigationModeProperty, stopComparerProvider) || (ss.isValue(scope.get_VisualParent()) ? $System_Windows_Input_KeyboardNavigationTarget.$FindPreviousTarget(scope.get_VisualParent(), new $System_$Windows_Input_KeyboardNavigationTarget$Stop.$ctor1(currentStop.get_$Element(), $System_Windows_Input_KeyboardNavigation.GetTabIndex(scope)), navigationModeProperty, stopComparerProvider) : null);
			// translate currentStop and forward request to parent
		},
		$GetGlobalStops: function(scope, currentElement, navigationModeProperty) {
			return new ss.IteratorBlockEnumerable(function() {
				return (function(scope, currentElement, navigationModeProperty) {
					var $result, $state = 0, scopeTabIndex, $t1, stop;
					var $finally = function() {
						$t1.dispose();
					};
					return new ss.IteratorBlockEnumerator(function() {
						$sm1:
						for (;;) {
							switch ($state) {
								case 0: {
									$state = -1;
									scopeTabIndex = $System_Windows_Input_KeyboardNavigation.GetTabIndex(scope);
									if ($System_Windows_Input_KeyboardNavigationTarget.$IsStop(ss.cast(scope, $System_Windows_UIElement)) || ss.referenceEquals(scope, currentElement)) {
										$result = new $System_$Windows_Input_KeyboardNavigationTarget$Stop.$ctor1(scope, scopeTabIndex);
										$state = 1;
										return true;
									}
									$state = 1;
									continue $sm1;
								}
								case 1: {
									$state = -1;
									// translate stops to have scope tab index instead of local tab index, local order is kept
									$t1 = Enumerable.from(scope.get_VisualChildren()).selectMany(function(child) {
										return $System_Windows_Input_KeyboardNavigationTarget.$GetGlobalStops(child, currentElement, navigationModeProperty);
									}).orderBy(function(childStop) {
										return childStop.get_$TabIndex();
									}).getEnumerator();
									$state = 4;
									continue $sm1;
								}
								case 4: {
									$state = 2;
									if (!$t1.moveNext()) {
										$state = 3;
										continue $sm1;
									}
									stop = $t1.current();
									$result = new $System_$Windows_Input_KeyboardNavigationTarget$Stop.$ctor1(stop.get_$Element(), scopeTabIndex);
									$state = 4;
									return true;
								}
								case 3: {
									$state = -1;
									$finally.call(this);
									$state = -1;
									break $sm1;
								}
								default: {
									break $sm1;
								}
							}
						}
						return false;
					}, function() {
						return $result;
					}, function() {
						try {
							switch ($state) {
								case 2:
								case 3:
								case 4: {
									try {
										break;
									}
									finally {
										$finally.call(this);
									}
								}
							}
						}
						finally {
							$state = -1;
						}
					}, this);
				}).call(this, scope, currentElement, navigationModeProperty);
			}, this);
		}
	}, $System_$Windows_Input_KeyboardNavigationTarget$BaseNavigation, [$System_$Windows_Input_KeyboardNavigationTarget$INavigation]);
	ss.initClass($System_$Windows_Input_KeyboardNavigationTarget$NoneNavigation, $asm, {
		$FindNextTarget: function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
			// forward the request to the parent
			return (ss.isValue(scope.get_VisualParent()) ? $System_Windows_Input_KeyboardNavigationTarget.$FindNextTarget(scope.get_VisualParent(), currentStop, navigationModeProperty, stopComparerProvider) : null);
		},
		$FindPreviousTarget: function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
			// forward the request to the parent
			return (ss.isValue(scope.get_VisualParent()) ? $System_Windows_Input_KeyboardNavigationTarget.$FindPreviousTarget(scope.get_VisualParent(), currentStop, navigationModeProperty, stopComparerProvider) : null);
		},
		$GetGlobalStops: function(scope, currentElement, navigationModeProperty) {
			return new ss.IteratorBlockEnumerable(function() {
				return (function(scope, currentElement, navigationModeProperty) {
					var $result, $state = 0, childrenStop;
					return new ss.IteratorBlockEnumerator(function() {
						$sm1:
						for (;;) {
							switch ($state) {
								case 0: {
									$state = -1;
									if ($System_Windows_Input_KeyboardNavigationTarget.$IsStop(ss.cast(scope, $System_Windows_UIElement)) || ss.referenceEquals(scope, currentElement)) {
										$result = new $System_$Windows_Input_KeyboardNavigationTarget$Stop(scope);
										$state = 1;
										return true;
									}
									$state = 1;
									continue $sm1;
								}
								case 1: {
									$state = -1;
									// add currentElement stop if it's a descendant of scope
									if ($System_Windows_Media_VisualExtensions.IsAncestorOf(scope, currentElement)) {
										childrenStop = Enumerable.from(scope.get_VisualChildren()).selectMany(function(child) {
											return $System_Windows_Input_KeyboardNavigationTarget.$GetGlobalStops(child, currentElement, navigationModeProperty);
										});
										$result = Enumerable.from(childrenStop).first(function(childStop) {
											return ss.referenceEquals(childStop.get_$Element(), currentElement);
										});
										$state = -1;
										return true;
									}
									$state = -1;
									break $sm1;
								}
								default: {
									break $sm1;
								}
							}
						}
						return false;
					}, function() {
						return $result;
					}, null, this);
				}).call(this, scope, currentElement, navigationModeProperty);
			}, this);
		}
	}, $System_$Windows_Input_KeyboardNavigationTarget$BaseNavigation, [$System_$Windows_Input_KeyboardNavigationTarget$INavigation]);
	ss.initClass($System_$Windows_Input_KeyboardNavigationTarget$OnceNavigation, $asm, {
		$FindNextTarget: function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
			// forward the request to the parent
			return (ss.isValue(scope.get_VisualParent()) ? $System_Windows_Input_KeyboardNavigationTarget.$FindNextTarget(scope.get_VisualParent(), currentStop, navigationModeProperty, stopComparerProvider) : null);
		},
		$FindPreviousTarget: function(scope, currentStop, navigationModeProperty, stopComparerProvider) {
			// forward the request to the parent
			return (ss.isValue(scope.get_VisualParent()) ? $System_Windows_Input_KeyboardNavigationTarget.$FindPreviousTarget(scope.get_VisualParent(), currentStop, navigationModeProperty, stopComparerProvider) : null);
		},
		$GetGlobalStops: function(scope, currentElement, navigationModeProperty) {
			return new ss.IteratorBlockEnumerable(function() {
				return (function(scope, currentElement, navigationModeProperty) {
					var $result, $state = 0, navigationFocusElementReference, navigationFocusElement, stops, $t1, stop1;
					return new ss.IteratorBlockEnumerator(function() {
						$sm1:
						for (;;) {
							switch ($state) {
								case 0: {
									$state = -1;
									if ($System_Windows_Input_KeyboardNavigationTarget.$IsStop(ss.cast(scope, $System_Windows_UIElement)) || ss.referenceEquals(scope, currentElement)) {
										$result = new $System_$Windows_Input_KeyboardNavigationTarget$Stop(scope);
										$state = 1;
										return true;
									}
									$state = 1;
									continue $sm1;
								}
								case 1: {
									$state = -1;
									navigationFocusElementReference = $System_Windows_Input_KeyboardNavigation.GetNavigationFocusElement(scope);
									navigationFocusElement = (ss.isValue(navigationFocusElementReference) ? navigationFocusElementReference.get_Visual() : null);
									stops = Enumerable.from(scope.get_VisualChildren()).selectMany(function(child) {
										return $System_Windows_Input_KeyboardNavigationTarget.$GetGlobalStops(child, currentElement, navigationModeProperty);
									}).toArray();
									if (Enumerable.from(stops).any()) {
										stops = Enumerable.from(stops).where(function(stop) {
											return ss.referenceEquals(stop.get_$Element(), currentElement) || ss.referenceEquals(stop.get_$Element(), navigationFocusElement);
										}).defaultIfEmpty(Enumerable.from(stops).first()).toArray();
										$t1 = 0;
										$state = 2;
										continue $sm1;
									}
									$state = -1;
									break $sm1;
								}
								case 2: {
									$state = -1;
									if (!($t1 < stops.length)) {
										$state = -1;
										break $sm1;
									}
									stop1 = stops[$t1];
									$result = stop1;
									$state = 3;
									return true;
								}
								case 3: {
									$state = -1;
									$t1++;
									$state = 2;
									continue $sm1;
								}
								default: {
									break $sm1;
								}
							}
						}
						return false;
					}, function() {
						return $result;
					}, null, this);
				}).call(this, scope, currentElement, navigationModeProperty);
			}, this);
		}
	}, $System_$Windows_Input_KeyboardNavigationTarget$BaseNavigation, [$System_$Windows_Input_KeyboardNavigationTarget$INavigation]);
	ss.initClass($System_$Windows_Input_KeyboardNavigationTarget$RightBoundStopComparer, $asm, {
		compare: function(x, y) {
			var relativePosition1 = $System_Windows_Point.op_Subtraction($System_Windows_Input_KeyboardNavigationTarget.$GetLeftBoundPosition($System_Windows_Input_KeyboardNavigationTarget.$GetAbsoluteBounds(x.get_$Element())), this.$currentPosition);
			var relativePosition2 = $System_Windows_Point.op_Subtraction($System_Windows_Input_KeyboardNavigationTarget.$GetLeftBoundPosition($System_Windows_Input_KeyboardNavigationTarget.$GetAbsoluteBounds(y.get_$Element())), this.$currentPosition);
			var distance1 = ((relativePosition1.get_X() < 0) ? -$System_Windows_PointExtensions.GetLengthSqr(relativePosition1) : $System_Windows_PointExtensions.GetLengthSqr(relativePosition1));
			var distance2 = ((relativePosition2.get_X() < 0) ? -$System_Windows_PointExtensions.GetLengthSqr(relativePosition2) : $System_Windows_PointExtensions.GetLengthSqr(relativePosition2));
			return ss.compare(distance1, distance2);
		}
	}, null, [ss.IComparer]);
	ss.initClass($System_$Windows_Input_KeyboardNavigationTarget$Stop, $asm, {
		get_$Element: function() {
			return this.$1$ElementField;
		},
		set_$Element: function(value) {
			this.$1$ElementField = value;
		},
		get_$TabIndex: function() {
			return this.$1$TabIndexField;
		},
		set_$TabIndex: function(value) {
			this.$1$TabIndexField = value;
		},
		toString: function() {
			return ss.formatString('Stop({0}, {1})', this.get_$Element(), this.get_$TabIndex());
		}
	});
	$System_$Windows_Input_KeyboardNavigationTarget$Stop.$ctor1.prototype = $System_$Windows_Input_KeyboardNavigationTarget$Stop.prototype;
	ss.initClass($System_$Windows_Input_KeyboardNavigationTarget$StopComparerProvider, $asm, {
		$CreateComparer: function(currentStop) {
			return this.$createComparer(currentStop);
		}
	}, null, [$System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider]);
	ss.initClass($System_$Windows_Input_KeyboardNavigationTarget$TabStopComparer, $asm, {
		compare: function(x, y) {
			return ss.compare(x.get_$TabIndex(), y.get_$TabIndex());
		}
	}, null, [ss.IComparer]);
	ss.initClass($System_$Windows_Input_KeyboardNavigationTarget$TopBoundStopComparer, $asm, {
		compare: function(x, y) {
			var relativePosition1 = $System_Windows_Point.op_Subtraction($System_Windows_Input_KeyboardNavigationTarget.$GetBottomBoundPosition($System_Windows_Input_KeyboardNavigationTarget.$GetAbsoluteBounds(x.get_$Element())), this.$currentPosition);
			var relativePosition2 = $System_Windows_Point.op_Subtraction($System_Windows_Input_KeyboardNavigationTarget.$GetBottomBoundPosition($System_Windows_Input_KeyboardNavigationTarget.$GetAbsoluteBounds(y.get_$Element())), this.$currentPosition);
			var distance1 = ((relativePosition1.get_Y() <= 0) ? -$System_Windows_PointExtensions.GetLengthSqr(relativePosition1) : $System_Windows_PointExtensions.GetLengthSqr(relativePosition1));
			var distance2 = ((relativePosition2.get_Y() <= 0) ? -$System_Windows_PointExtensions.GetLengthSqr(relativePosition2) : $System_Windows_PointExtensions.GetLengthSqr(relativePosition2));
			return ss.compare(distance1, distance2);
		}
	}, null, [ss.IComparer]);
	ss.initClass($System_$Windows_Markup_ElementDictionaryContentInitializer$KeyValueElementFactory, $asm, {
		$CreateElement: function(context) {
			var element = this.$valueFactory.CreateElement(context);
			var key = (ss.isValue(this.$keyDirectiveFactory) ? this.$keyDirectiveFactory.CreateElement(context) : this.$keyProperty.GetValue(element));
			if (ss.isValue(this.$keyDirectiveFactory) && ss.isValue(this.$keyProperty)) {
				// key property exists, but the key directive was used, so update the property
				this.$keyProperty.SetValue(element, key, context.get_ValueSource());
			}
			return { key: key, value: element };
		}
	});
	ss.initInterface($System_Windows_Markup_IElementFactory, $asm, { get_ElementType: null, CreateElement: null });
	ss.initClass($System_$Windows_Markup_ElementDictionaryContentInitializer$ValueProviderFactory, $asm, {
		get_ElementType: function() {
			return $System_Windows_Markup_ValueProvider;
		},
		CreateElement: function(context) {
			return new $System_Windows_Markup_ValueProvider(ss.mkdel(this, function() {
				var localContext = new $System_Windows_Markup_InitializeContext.$ctor1(null, null, new $System_Windows_Markup_NameScope(context.get_NameScope()), context.get_TemplatedParent(), context.get_ValueSource());
				return this.$elementFactory.CreateElement(localContext);
			}));
		}
	}, null, [$System_Windows_Markup_IElementFactory]);
	ss.initInterface($System_Windows_Markup_IElementInitializer, $asm, { InitializeElement: null });
	ss.initClass($System_$Windows_Markup_ElementInitializer$EmptyElementInitializer, $asm, {
		InitializeElement: function(element, context) {
			//
		}
	}, null, [$System_Windows_Markup_IElementInitializer]);
	ss.initClass($System_$Windows_Markup_ElementPropertyMemberInitializer$ElementPropertyMemberFactoryInitializer, $asm, {
		InitializeElement: function(element, context) {
			var contentTarget = this.$propertyAdapter.GetValue(element);
			if (ss.isNullOrUndefined(contentTarget) && ss.isValue(System.TypeExtensions.GetDefaultConstructor(this.$propertyAdapter.get_PropertyType()))) {
				contentTarget = ss.createInstance(this.$propertyAdapter.get_PropertyType());
				this.$propertyAdapter.SetValue(element, contentTarget, context.get_ValueSource());
			}
			this.$propertyValueInitializer.InitializeElement(contentTarget, context);
		}
	}, null, [$System_Windows_Markup_IElementInitializer]);
	ss.initEnum($System_$Windows_Markup_PropertyPathParser$TokenType, $asm, { $Terminal: 0, $Value: 1 });
	ss.initInterface($System_Windows_Markup_IMarkupExtension, $asm, { ProvideValue: null });
	ss.initClass($System_$Windows_Markup_XamlTypes$NullProvider, $asm, {
		ProvideValue: function(context) {
			return null;
		}
	}, null, [$System_Windows_Markup_IMarkupExtension]);
	ss.initClass($System_$Windows_Markup_XamlTypes$TypeProvider, $asm, {
		get_$Type: function() {
			return this.$1$TypeField;
		},
		set_$Type: function(value) {
			this.$1$TypeField = value;
		},
		ProvideValue: function(context) {
			return this.get_$Type();
		}
	}, null, [$System_Windows_Markup_IMarkupExtension]);
	ss.initClass($System_Windows_Media_Transform, $asm, { get_Value: null }, $System_Windows_DependencyObject);
	ss.initClass($System_$Windows_Media_Transform$IdentityTransfrom, $asm, {
		get_Value: function() {
			return $System_Windows_Media_Matrix.Identity;
		}
	}, $System_Windows_Media_Transform);
	ss.initClass($System_$Windows_Media_Animation_RootClock$ClockSchedule, $asm, {
		get_$Clock: function() {
			return this.$1$ClockField;
		},
		set_$Clock: function(value) {
			this.$1$ClockField = value;
		},
		get_$NextTick: function() {
			return this.$1$NextTickField;
		},
		set_$NextTick: function(value) {
			this.$1$NextTickField = value;
		},
		$Tick: function(time) {
			var state = this.get_$Clock().Tick(time);
			this.set_$NextTick(state.get_NextTick());
		}
	});
	ss.initClass($System_$Windows_Media_Animation_Storyboard$TargetKey, $asm, {
		get_$Target: function() {
			return this.$1$TargetField;
		},
		set_$Target: function(value) {
			this.$1$TargetField = value;
		},
		get_$TargetProperty: function() {
			return this.$1$TargetPropertyField;
		},
		set_$TargetProperty: function(value) {
			this.$1$TargetPropertyField = value;
		},
		equals: function(obj) {
			var other = ss.safeCast(obj, $System_$Windows_Media_Animation_Storyboard$TargetKey);
			return ss.referenceEquals(this, other) || !ss.referenceEquals(other, null) && ss.staticEquals(this.get_$Target(), other.get_$Target()) && ss.staticEquals(this.get_$TargetProperty(), other.get_$TargetProperty());
		},
		getHashCode: function() {
			return ss.getHashCode(this.get_$Target()) ^ this.get_$TargetProperty().getHashCode();
		}
	});
	ss.initInterface($System_Windows_IDataTriggerCondition, $asm, { add_IsMatchedChanged: null, remove_IsMatchedChanged: null, get_IsMatched: null });
	ss.initClass($System_Windows_$DataTriggerCondition, $asm, {
		add_IsMatchedChanged: function(value) {
			this.$2$IsMatchedChangedField = ss.delegateCombine(this.$2$IsMatchedChangedField, value);
		},
		remove_IsMatchedChanged: function(value) {
			this.$2$IsMatchedChangedField = ss.delegateRemove(this.$2$IsMatchedChangedField, value);
		},
		get_IsMatched: function() {
			return this.$isMatched;
		},
		set_$IsMatched: function(value) {
			if (this.$isMatched === value) {
				return;
			}
			this.$isMatched = value;
			Granular.Extensions.EventHandlerExtensions.Raise(this.$2$IsMatchedChangedField, this);
		},
		$Register: function() {
			this.SetInheritanceParent(this.$element);
			this.SetValue($System_Windows_$DataTriggerCondition.$ValueProperty, this.$expressionProvider, 11);
		},
		dispose: function() {
			this.$isDisposed = true;
			this.SetInheritanceParent(null);
			this.ClearValue($System_Windows_$DataTriggerCondition.$ValueProperty, 11);
		},
		$OnValueChanged: function(e) {
			if (this.$isDisposed) {
				return;
			}
			if (ss.isValue(e.get_NewValue()) && ss.isValue(this.$value)) {
				this.$resolvedValue = $System_Windows_$DataTriggerCondition.$GetResolvedValue(this.$value, ss.getInstanceType(e.get_NewValue()));
				this.$value = null;
			}
			this.set_$IsMatched(ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Object]).Default.areEqual(e.get_NewValue(), this.$resolvedValue));
		}
	}, $System_Windows_DependencyObject, [$System_Windows_IDataTriggerCondition, ss.IDisposable]);
	ss.initClass($System_Windows_$MultiDataTriggerCondition, $asm, {
		add_IsMatchedChanged: function(value) {
			this.$1$IsMatchedChangedField = ss.delegateCombine(this.$1$IsMatchedChangedField, value);
		},
		remove_IsMatchedChanged: function(value) {
			this.$1$IsMatchedChangedField = ss.delegateRemove(this.$1$IsMatchedChangedField, value);
		},
		get_IsMatched: function() {
			return this.$isMatched;
		},
		set_$IsMatched: function(value) {
			if (this.$isMatched === value) {
				return;
			}
			this.$isMatched = value;
			Granular.Extensions.EventHandlerExtensions.Raise(this.$1$IsMatchedChangedField, this);
		},
		$Register: function() {
			this.$conditions = Enumerable.from(this.$conditionProviders).select(ss.mkdel(this, function(conditionProvider) {
				return conditionProvider.CreateDataTriggerCondition(this.$element);
			})).toArray();
			var $t1 = ss.getEnumerator(this.$conditions);
			try {
				while ($t1.moveNext()) {
					var condition = $t1.current();
					condition.add_IsMatchedChanged(ss.mkdel(this, this.$OnConditionIsMatchedChanged));
				}
			}
			finally {
				$t1.dispose();
			}
			this.set_$IsMatched(Enumerable.from(this.$conditions).all(function(condition1) {
				return condition1.get_IsMatched();
			}));
		},
		dispose: function() {
			var $t1 = ss.getEnumerator(this.$conditions);
			try {
				while ($t1.moveNext()) {
					var condition = $t1.current();
					condition.remove_IsMatchedChanged(ss.mkdel(this, this.$OnConditionIsMatchedChanged));
					if (ss.isInstanceOfType(condition, ss.IDisposable)) {
						ss.cast(condition, ss.IDisposable).dispose();
					}
				}
			}
			finally {
				$t1.dispose();
			}
		},
		$OnConditionIsMatchedChanged: function(sender, e) {
			this.set_$IsMatched(Enumerable.from(this.$conditions).all(function(condition) {
				return condition.get_IsMatched();
			}));
		}
	}, null, [$System_Windows_IDataTriggerCondition, ss.IDisposable]);
	ss.initClass($System_Windows_$TriggerCondition, $asm, {
		add_IsMatchedChanged: function(value) {
			this.$1$IsMatchedChangedField = ss.delegateCombine(this.$1$IsMatchedChangedField, value);
		},
		remove_IsMatchedChanged: function(value) {
			this.$1$IsMatchedChangedField = ss.delegateRemove(this.$1$IsMatchedChangedField, value);
		},
		get_IsMatched: function() {
			return this.$isMatched;
		},
		set_$IsMatched: function(value) {
			if (this.$isMatched === value) {
				return;
			}
			this.$isMatched = value;
			Granular.Extensions.EventHandlerExtensions.Raise(this.$1$IsMatchedChangedField, this);
		},
		$Register: function() {
			this.set_$IsMatched(ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Object]).Default.areEqual(this.$element.GetValue(this.$property), this.$value));
			this.$element.add_PropertyChanged(ss.mkdel(this, this.$OnPropertyChanged));
		},
		dispose: function() {
			this.$element.remove_PropertyChanged(ss.mkdel(this, this.$OnPropertyChanged));
		},
		$OnPropertyChanged: function(sender, e) {
			if (!ss.referenceEquals(e.get_Property(), this.$property)) {
				return;
			}
			this.set_$IsMatched(ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Object]).Default.areEqual(e.get_NewValue(), this.$value));
		}
	}, null, [$System_Windows_IDataTriggerCondition, ss.IDisposable]);
	ss.initClass($System_Windows_Application, $asm, {
		add_ResourcesChanged: function(value) {
			this.$1$ResourcesChangedField = ss.delegateCombine(this.$1$ResourcesChangedField, value);
		},
		remove_ResourcesChanged: function(value) {
			this.$1$ResourcesChangedField = ss.delegateRemove(this.$1$ResourcesChangedField, value);
		},
		add_Startup: function(value) {
			this.$1$StartupField = ss.delegateCombine(this.$1$StartupField, value);
		},
		remove_Startup: function(value) {
			this.$1$StartupField = ss.delegateRemove(this.$1$StartupField, value);
		},
		add_LoadCompleted: function(value) {
			this.$1$LoadCompletedField = ss.delegateCombine(this.$1$LoadCompletedField, value);
		},
		remove_LoadCompleted: function(value) {
			this.$1$LoadCompletedField = ss.delegateRemove(this.$1$LoadCompletedField, value);
		},
		get_StartupUri: function() {
			return this.$1$StartupUriField;
		},
		set_StartupUri: function(value) {
			this.$1$StartupUriField = value;
		},
		get_MainWindow: function() {
			return this.$1$MainWindowField;
		},
		set_MainWindow: function(value) {
			this.$1$MainWindowField = value;
		},
		get_Resources: function() {
			return this.$resources;
		},
		set_Resources: function(value) {
			if (ss.referenceEquals(this.$resources, value)) {
				return;
			}
			if (ss.isValue(this.$resources)) {
				this.$resources.remove_ResourcesChanged(ss.mkdel(this, this.$OnResourcesChanged));
			}
			this.$resources = value;
			if (ss.isValue(this.$resources)) {
				this.$resources.add_ResourcesChanged(ss.mkdel(this, this.$OnResourcesChanged));
			}
			Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_ResourcesChangedEventArgs).call(null, this.$1$ResourcesChangedField, this, $System_Windows_ResourcesChangedEventArgs.Reset);
		},
		Run: function() {
			this.OnStartup();
			Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_StartupEventArgs).call(null, this.$1$StartupField, this, $System_Windows_StartupEventArgs.Empty);
			this.$LoadStartupUri();
			this.OnLoadCompleted();
			Granular.Extensions.EventHandlerExtensions.Raise(this.$1$LoadCompletedField, this);
		},
		$LoadStartupUri: function() {
			if (Granular.Extensions.StringExtensions.IsNullOrEmpty(this.get_StartupUri())) {
				return;
			}
			var rootElement = System.Xaml.XamlParser.Parse(Granular.Compatibility.String.FromByteArray($System_Windows_EmbeddedResourceLoader.LoadResourceData(this.get_StartupUri())));
			var classDirective = Enumerable.from(rootElement.get_Directives()).firstOrDefault(function(directive) {
				return System.Xaml.XamlName.op_Equality(directive.get_Name(), System.Xaml.XamlLanguage.ClassDirective);
			}, ss.getDefaultValue(System.Xaml.XamlMember));
			var window = ss.safeCast(ss.createInstance(ss.getType(ss.formatString('{0}, {1}', System.Xaml.XamlMemberExtensions.GetSingleValue(classDirective), System.AssemblyExtensions.GetName(ss.getTypeAssembly(ss.getInstanceType(this))).get_Name()))), $System_Windows_Window);
			if (ss.isValue(window)) {
				window.Show();
			}
		},
		$OnResourcesChanged: function(sender, e) {
			Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_ResourcesChangedEventArgs).call(null, this.$1$ResourcesChangedField, this, e);
		},
		TryGetResource: function(resourceKey, value) {
			if (ss.isValue(this.get_Resources()) && this.get_Resources().tryGetValue(resourceKey, value)) {
				return true;
			}
			if ($System_Windows_Application.SystemResources.TryGetResource(resourceKey, value)) {
				return true;
			}
			value.$ = null;
			return false;
		},
		OnStartup: function() {
			//
		},
		OnLoadCompleted: function() {
			//
		}
	}, null, [$System_Windows_IResourceContainer]);
	ss.initClass($System_Windows_ApplicationHost, $asm, {});
	ss.initClass($System_Windows_ApplicationHostAttribute, $asm, {
		get_Type: function() {
			return this.$2$TypeField;
		},
		set_Type: function(value) {
			this.$2$TypeField = value;
		}
	});
	ss.initClass($System_Windows_ApplicationHostExtensions, $asm, {});
	ss.initEnum($System_Windows_BaseValueSource, $asm, { Unknown: 0, Default: 1, Inherited: 2, ThemeStyle: 3, ThemeStyleTrigger: 4, Style: 5, TemplateTrigger: 6, StyleTrigger: 7, ImplicitReference: 8, ParentTemplate: 9, ParentTemplateTrigger: 10, Local: 11 });
	ss.initInterface($System_Windows_IDependencyPropertyValueEntry, $asm, { GetBaseValue: null, GetBaseValue$1: null, SetBaseValue: null, ClearBaseValue: null, GetBaseValuePriority: null, GetCurrentValue: null, SetCurrentValue: null, ClearCurrentValue: null, GetAnimationValue: null, SetAnimationValue: null, ClearAnimationValue: null }, [$System_Windows_Data_IObservableValue]);
	ss.initClass($System_Windows_CoercedDependencyPropertyValueEntry, $asm, {
		add_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateCombine(this.$1$ValueChangedField, value);
		},
		remove_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateRemove(this.$1$ValueChangedField, value);
		},
		get_Value: function() {
			return this.$observableValue.get_Value();
		},
		get_IsCoerced: function() {
			return !ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Object]).Default.areEqual(this.get_Value(), this.$source.get_Value());
		},
		CoerceValue: function() {
			this.$observableValue.set_Value((!ss.referenceEquals(this.$source.get_Value(), $System_Windows_Data_ObservableValue.UnsetValue) ? this.$coerceValueCallback(this.$dependencyObject, this.$source.get_Value()) : $System_Windows_Data_ObservableValue.UnsetValue));
		},
		GetBaseValue: function(flattened) {
			return this.$source.GetBaseValue(flattened);
		},
		GetBaseValue$1: function(priority, flattened) {
			return this.$source.GetBaseValue$1(priority, flattened);
		},
		SetBaseValue: function(priority, value) {
			this.$source.SetBaseValue(priority, value);
		},
		ClearBaseValue: function(priority) {
			this.$source.ClearBaseValue(priority);
		},
		GetBaseValuePriority: function() {
			return this.$source.GetBaseValuePriority();
		},
		GetCurrentValue: function(flattened) {
			return this.$source.GetCurrentValue(flattened);
		},
		SetCurrentValue: function(value) {
			this.$source.SetCurrentValue(value);
		},
		ClearCurrentValue: function() {
			this.$source.ClearCurrentValue();
		},
		GetAnimationValue: function(flattened) {
			return this.$source.GetAnimationValue(flattened);
		},
		SetAnimationValue: function(value) {
			this.$source.SetAnimationValue(value);
		},
		ClearAnimationValue: function() {
			this.$source.ClearAnimationValue();
		}
	}, null, [$System_Windows_Data_IObservableValue, $System_Windows_IDependencyPropertyValueEntry]);
	ss.initInterface($System_Windows_IResourceKey, $asm, { get_Assembly: null });
	ss.initClass($System_Windows_ComponentResourceKey, $asm, {
		get_Assembly: function() {
			return (ss.isValue(this.get_TypeInTargetAssembly()) ? ss.getTypeAssembly(this.get_TypeInTargetAssembly()) : null);
		},
		get_TypeInTargetAssembly: function() {
			return this.$1$TypeInTargetAssemblyField;
		},
		set_TypeInTargetAssembly: function(value) {
			this.$1$TypeInTargetAssemblyField = value;
		},
		get_ResourceId: function() {
			return this.$1$ResourceIdField;
		},
		set_ResourceId: function(value) {
			this.$1$ResourceIdField = value;
		},
		ProvideValue: function(context) {
			return this;
		},
		equals: function(obj) {
			var other = ss.safeCast(obj, $System_Windows_ComponentResourceKey);
			return ss.referenceEquals(this, other) || !ss.referenceEquals(other, null) && ss.staticEquals(this.get_TypeInTargetAssembly(), other.get_TypeInTargetAssembly()) && ss.staticEquals(this.get_ResourceId(), other.get_ResourceId());
		},
		getHashCode: function() {
			return ss.getHashCode(this.get_TypeInTargetAssembly()) ^ ss.getHashCode(this.get_ResourceId());
		},
		toString: function() {
			return ss.formatString('ComponentResourceKey({0}, {1})', ss.getTypeName(this.get_TypeInTargetAssembly()), this.get_ResourceId());
		}
	}, null, [$System_Windows_IResourceKey, $System_Windows_Markup_IMarkupExtension]);
	ss.initClass($System_Windows_Condition, $asm, {
		get_Binding: function() {
			return this.$1$BindingField;
		},
		set_Binding: function(value) {
			this.$1$BindingField = value;
		},
		get_Property: function() {
			return this.$1$PropertyField;
		},
		set_Property: function(value) {
			this.$1$PropertyField = value;
		},
		get_SourceName: function() {
			return this.$1$SourceNameField;
		},
		set_SourceName: function(value) {
			this.$1$SourceNameField = value;
		},
		get_Value: function() {
			return this.$1$ValueField;
		},
		set_Value: function(value) {
			this.$1$ValueField = value;
		},
		CreateTriggerCondition: function(element) {
			if (ss.isNullOrUndefined(this.get_Property())) {
				throw new Granular.Exception('Condition.Property cannot be null', []);
			}
			var dependencyProperty = $System_Windows_PropertyPathElementExtensions.GetDependencyProperty(this.get_Property(), ss.getInstanceType(element));
			var $t2 = ss.isNullOrUndefined(this.get_Value());
			if (!$t2) {
				var $t1 = dependencyProperty.get_PropertyType();
				$t2 = ss.isInstanceOfType(this.get_Value(), $t1);
			}
			var resolvedValue = ($t2 ? this.get_Value() : $System_Windows_Markup_TypeConverter.ConvertValue(this.get_Value().toString(), dependencyProperty.get_PropertyType(), System.Xaml.XamlNamespaces.Empty));
			var source = (Granular.Extensions.StringExtensions.IsNullOrEmpty(this.get_SourceName()) ? element : ss.safeCast($System_Windows_Markup_NameScope.GetTemplateNameScope(element).FindName(this.get_SourceName()), $System_Windows_FrameworkElement));
			return $System_Windows_$TriggerCondition.$Register(source, dependencyProperty, resolvedValue);
		},
		CreateDataTriggerCondition: function(element) {
			if (ss.isNullOrUndefined(this.get_Binding())) {
				throw new Granular.Exception('Condition.Binding cannot be null', []);
			}
			return $System_Windows_$DataTriggerCondition.$Register(element, this.get_Binding(), this.get_Value());
		}
	});
	ss.initClass($System_Windows_CornerRadius, $asm, {
		get_TopLeft: function() {
			return this.$1$TopLeftField;
		},
		set_TopLeft: function(value) {
			this.$1$TopLeftField = value;
		},
		get_TopRight: function() {
			return this.$1$TopRightField;
		},
		set_TopRight: function(value) {
			this.$1$TopRightField = value;
		},
		get_BottomRight: function() {
			return this.$1$BottomRightField;
		},
		set_BottomRight: function(value) {
			this.$1$BottomRightField = value;
		},
		get_BottomLeft: function() {
			return this.$1$BottomLeftField;
		},
		set_BottomLeft: function(value) {
			this.$1$BottomLeftField = value;
		},
		get_IsUniform: function() {
			return this.$1$IsUniformField;
		},
		set_IsUniform: function(value) {
			this.$1$IsUniformField = value;
		},
		toString: function() {
			return (this.get_IsUniform() ? ss.formatString('CornerRadius({0})', this.get_TopLeft()) : ss.formatString('CornerRadius({0}, {1}, {2}, {3})', this.get_TopLeft(), this.get_TopRight(), this.get_BottomRight(), this.get_BottomLeft()));
		},
		equals: function(obj) {
			var other = ss.safeCast(obj, $System_Windows_CornerRadius);
			return ss.referenceEquals(this, other) || !ss.referenceEquals(other, null) && ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Number]).Default.areEqual(this.get_TopLeft(), other.get_TopLeft()) && ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Number]).Default.areEqual(this.get_TopRight(), other.get_TopRight()) && ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Number]).Default.areEqual(this.get_BottomRight(), other.get_BottomRight()) && ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Number]).Default.areEqual(this.get_BottomLeft(), other.get_BottomLeft());
		},
		getHashCode: function() {
			return ss.getHashCode(this.get_TopLeft()) ^ ss.getHashCode(this.get_TopRight()) ^ ss.getHashCode(this.get_BottomRight()) ^ ss.getHashCode(this.get_BottomLeft());
		}
	});
	$System_Windows_CornerRadius.$ctor1.prototype = $System_Windows_CornerRadius.prototype;
	ss.initClass($System_Windows_CornerRadiusExtensions, $asm, {});
	ss.initClass($System_Windows_FrameworkTemplate, $asm, {
		get_FrameworkElementFactory: function() {
			return this.$2$FrameworkElementFactoryField;
		},
		set_FrameworkElementFactory: function(value) {
			this.$2$FrameworkElementFactoryField = value;
		},
		get_Triggers: function() {
			return this.$2$TriggersField;
		},
		set_Triggers: function(value) {
			this.$2$TriggersField = value;
		},
		Attach: function(element) {
			element.set_TemplateChild(this.$CreateVisualTree(element));
			var $t1 = this.get_Triggers().getEnumerator();
			try {
				while ($t1.moveNext()) {
					var trigger = $t1.current();
					trigger.Attach(element, 6);
				}
			}
			finally {
				$t1.dispose();
			}
		},
		Detach: function(element) {
			var $t1 = this.get_Triggers().getEnumerator();
			try {
				while ($t1.moveNext()) {
					var trigger = $t1.current();
					trigger.Detach(element, 6);
				}
			}
			finally {
				$t1.dispose();
			}
			element.set_TemplateChild(null);
		},
		$CreateVisualTree: function(templatedParent) {
			if (ss.isNullOrUndefined(this.get_FrameworkElementFactory())) {
				throw new Granular.Exception('FrameworkTemplate is not initialized', []);
			}
			return this.get_FrameworkElementFactory().CreateElement(templatedParent);
		}
	}, $System_Windows_DependencyObject, [$System_Windows_IFrameworkTemplate]);
	ss.initClass($System_Windows_DataTemplate, $asm, {
		get_DataType: function() {
			return this.$dataType;
		},
		set_DataType: function(value) {
			if (ss.referenceEquals(this.$dataType, value)) {
				return;
			}
			this.$dataType = value;
		},
		get_Key: function() {
			var $t1 = this.$key;
			if (ss.isNullOrUndefined($t1)) {
				$t1 = new $System_Windows_TemplateKey(this.get_DataType());
			}
			return $t1;
		},
		set_Key: function(value) {
			this.$key = value;
		}
	}, $System_Windows_FrameworkTemplate, [$System_Windows_IFrameworkTemplate]);
	ss.initInterface($System_Windows_IInheritableObject, $asm, { SetInheritanceContext: null });
	ss.initClass($System_Windows_Freezable, $asm, {
		add_Changed: function(value) {
			this.$2$ChangedField = ss.delegateCombine(this.$2$ChangedField, value);
		},
		remove_Changed: function(value) {
			this.$2$ChangedField = ss.delegateRemove(this.$2$ChangedField, value);
		},
		add_ResourcesChanged: function(value) {
			this.$2$ResourcesChangedField = ss.delegateCombine(this.$2$ResourcesChangedField, value);
		},
		remove_ResourcesChanged: function(value) {
			this.$2$ResourcesChangedField = ss.delegateRemove(this.$2$ResourcesChangedField, value);
		},
		get_IsFrozen: function() {
			return this.$2$IsFrozenField;
		},
		set_IsFrozen: function(value) {
			this.$2$IsFrozenField = value;
		},
		get_DataContext: function() {
			return this.GetValue($System_Windows_Freezable.DataContextProperty);
		},
		set_DataContext: function(value) {
			this.SetValue($System_Windows_Freezable.DataContextProperty, value, 11);
		},
		get_$ParentResourceContainer: function() {
			return this.$parentResourceContainer;
		},
		set_$ParentResourceContainer: function(value) {
			if (ss.referenceEquals(this.$parentResourceContainer, value)) {
				return;
			}
			if (ss.isValue(this.$parentResourceContainer)) {
				this.$parentResourceContainer.remove_ResourcesChanged(ss.mkdel(this, this.$OnParentResourcesChanged));
			}
			this.$parentResourceContainer = value;
			if (ss.isValue(this.$parentResourceContainer)) {
				this.$parentResourceContainer.add_ResourcesChanged(ss.mkdel(this, this.$OnParentResourcesChanged));
			}
			Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_ResourcesChangedEventArgs).call(null, this.$2$ResourcesChangedField, this, $System_Windows_ResourcesChangedEventArgs.Reset);
		},
		$OnParentResourcesChanged: function(sender, e) {
			Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_ResourcesChangedEventArgs).call(null, this.$2$ResourcesChangedField, this, e);
		},
		TryGetResource: function(resourceKey, value) {
			if (ss.isValue(this.get_$ParentResourceContainer())) {
				return this.get_$ParentResourceContainer().TryGetResource(resourceKey, value);
			}
			value.$ = null;
			return false;
		},
		Freeze: function() {
			this.set_IsFrozen(true);
		},
		OnInheritanceParentChanged: function(oldInheritanceParent, newInheritanceParent) {
			this.set_$ParentResourceContainer(ss.safeCast(newInheritanceParent, $System_Windows_IResourceContainer));
		},
		OnPropertyChanged: function(e) {
			if (!ss.isInstanceOfType(this, e.get_Property().get_OwnerType())) {
				return;
			}
			this.$VerifyNotFrozen$1(e.get_Property());
			if (ss.isInstanceOfType(e.get_OldValue(), $System_Windows_IInheritableObject)) {
				ss.cast(e.get_OldValue(), $System_Windows_IInheritableObject).SetInheritanceContext(null);
			}
			if (ss.isInstanceOfType(e.get_NewValue(), $System_Windows_IInheritableObject)) {
				ss.cast(e.get_NewValue(), $System_Windows_IInheritableObject).SetInheritanceContext(this);
			}
			if (ss.isInstanceOfType(e.get_OldValue(), $System_Windows_Freezable)) {
				ss.cast(e.get_OldValue(), $System_Windows_Freezable).remove_Changed(ss.mkdel(this, this.$OnSubPropertyChanged));
			}
			if (ss.isInstanceOfType(e.get_NewValue(), $System_Windows_Freezable)) {
				ss.cast(e.get_NewValue(), $System_Windows_Freezable).add_Changed(ss.mkdel(this, this.$OnSubPropertyChanged));
			}
			this.RaiseChanged();
		},
		$OnSubPropertyChanged: function(sender, e) {
			this.$VerifyNotFrozen();
			this.RaiseChanged();
		},
		RaiseChanged: function() {
			Granular.Extensions.EventHandlerExtensions.Raise(this.$2$ChangedField, this);
		},
		SetInheritanceContext: function(inheritanceContext) {
			this.SetInheritanceParent(inheritanceContext);
		},
		$VerifyNotFrozen: function() {
			if (this.get_IsFrozen()) {
				throw new Granular.Exception('"{0}" is frozen and cannot be changed', [this]);
			}
		},
		$VerifyNotFrozen$1: function(changedProperty) {
			if (this.get_IsFrozen()) {
				throw new Granular.Exception('"{0}" is frozen, property "{1}" cannot be changed', [this, changedProperty]);
			}
		}
	}, $System_Windows_DependencyObject, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initInterface($System_Windows_ITrigger, $asm, { Attach: null, Detach: null });
	ss.initClass($System_Windows_TriggerBase, $asm, { get_TriggerActions: null, Attach: null, Detach: null }, $System_Windows_Freezable, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_ITrigger]);
	ss.initClass($System_Windows_DataTriggerBase, $asm, {
		CreateDataTriggerCondition: null,
		Attach: function(element, valueSource) {
			var condition = this.CreateDataTriggerCondition(element);
			condition.add_IsMatchedChanged(ss.mkdel(this, function(sender, e) {
				this.$OnConditionIsMatchedChanged(element, valueSource, condition.get_IsMatched());
			}));
			if (condition.get_IsMatched()) {
				this.$Apply(element, valueSource);
			}
			this.$attachedConditions.add(element, condition);
		},
		Detach: function(element, valueSource) {
			var condition = this.$attachedConditions.get_item(element);
			if (condition.get_IsMatched()) {
				this.$Clean(element, valueSource);
			}
			if (ss.isInstanceOfType(condition, ss.IDisposable)) {
				ss.cast(condition, ss.IDisposable).dispose();
			}
			this.$attachedConditions.remove(element);
		},
		$OnConditionIsMatchedChanged: function(element, valueSource, isMatched) {
			if (isMatched) {
				this.$Apply(element, valueSource);
			}
			else {
				this.$Clean(element, valueSource);
			}
		},
		$Apply: function(element, valueSource) {
			var $t1 = ss.getEnumerator(this.get_TriggerActions());
			try {
				while ($t1.moveNext()) {
					var action = $t1.current();
					action.Apply(element, valueSource);
				}
			}
			finally {
				$t1.dispose();
			}
		},
		$Clean: function(element, valueSource) {
			var $t1 = ss.getEnumerator(this.get_TriggerActions());
			try {
				while ($t1.moveNext()) {
					var action = $t1.current();
					action.Clean(element, valueSource);
				}
			}
			finally {
				$t1.dispose();
			}
		}
	}, $System_Windows_TriggerBase, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_ITrigger, $System_Windows_IDataTriggerConditionProvider]);
	ss.initClass($System_Windows_DataTrigger, $asm, {
		get_Binding: function() {
			return this.$5$BindingField;
		},
		set_Binding: function(value) {
			this.$5$BindingField = value;
		},
		get_Value: function() {
			return this.$5$ValueField;
		},
		set_Value: function(value) {
			this.$5$ValueField = value;
		},
		get_Setters: function() {
			return this.$5$SettersField;
		},
		set_Setters: function(value) {
			this.$5$SettersField = value;
		},
		get_TriggerActions: function() {
			return this.get_Setters();
		},
		CreateDataTriggerCondition: function(element) {
			if (ss.isNullOrUndefined(this.get_Binding())) {
				throw new Granular.Exception('DataTrigger.Binding cannot be null', []);
			}
			return $System_Windows_$DataTriggerCondition.$Register(element, this.get_Binding(), this.get_Value());
		}
	}, $System_Windows_DataTriggerBase, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_ITrigger, $System_Windows_IDataTriggerConditionProvider]);
	ss.initClass($System_Windows_DependencyProperty, $asm, {
		get_Name: function() {
			return this.$1$NameField;
		},
		set_Name: function(value) {
			this.$1$NameField = value;
		},
		get_OwnerType: function() {
			return this.$1$OwnerTypeField;
		},
		set_OwnerType: function(value) {
			this.$1$OwnerTypeField = value;
		},
		get_PropertyType: function() {
			return this.$1$PropertyTypeField;
		},
		set_PropertyType: function(value) {
			this.$1$PropertyTypeField = value;
		},
		get_ValidateValueCallback: function() {
			return this.$1$ValidateValueCallbackField;
		},
		set_ValidateValueCallback: function(value) {
			this.$1$ValidateValueCallbackField = value;
		},
		get_IsReadOnly: function() {
			return this.$1$IsReadOnlyField;
		},
		set_IsReadOnly: function(value) {
			this.$1$IsReadOnlyField = value;
		},
		get_Inherits: function() {
			return this.$1$InheritsField;
		},
		set_Inherits: function(value) {
			this.$1$InheritsField = value;
		},
		getHashCode: function() {
			return this.$hashKey.getHashCode();
		},
		toString: function() {
			return ss.formatString('{0}.{1}', ss.getTypeFullName(this.get_OwnerType()), this.get_Name());
		},
		IsValidValue: function(value) {
			return $System_Windows_DependencyProperty.$IsValidType(value, this.get_PropertyType()) && (ss.staticEquals(this.get_ValidateValueCallback(), null) || this.get_ValidateValueCallback()(value));
		},
		OverrideMetadata: function(forType, metadata) {
			if (this.$typeMetadata.containsKey(forType)) {
				throw new Granular.Exception('DependencyProperty "{0}" already contains metadata for type "{1}"', [this, ss.getTypeName(forType)]);
			}
			if (ss.isNullOrUndefined(metadata.get_DefaultValue())) {
				metadata.set_DefaultValue(this.$ownerMetadata.get_DefaultValue());
			}
			if (ss.staticEquals(metadata.get_CoerceValueCallback(), null)) {
				metadata.set_CoerceValueCallback(this.$ownerMetadata.get_CoerceValueCallback());
			}
			if (this.get_Inherits() !== metadata.get_Inherits()) {
				throw new Granular.Exception('Overriding inheritance behavior is not supported, Overrides of "{0}" must declare "inherits: {1}"', [this, this.get_Inherits()]);
			}
			if (this.get_Inherits()) {
				if (ss.isValue(metadata.get_DefaultValue()) && !ss.referenceEquals(metadata.get_DefaultValue(), this.$ownerMetadata.get_DefaultValue())) {
					throw new Granular.Exception('Overriding inherited properties metadata with different default value is not supported, Overrides of "{0}" cannot set a different default value other than "{1}"', [this, this.$ownerMetadata.get_DefaultValue()]);
				}
				metadata.set_DefaultValue(this.$ownerMetadata.get_DefaultValue());
			}
			this.$typeMetadata.add(forType, metadata);
			this.$typeMetadataCache.Clear();
			this.$orderedTypeMetadataCache = null;
			this.$isMetadataOverridden = true;
		},
		AddOwner: function(ownerType, metadata) {
			$System_Windows_DependencyProperty.$AddRegisteredProperty(new $System_$Windows_DependencyProperty$DependencyPropertyHashKey(ownerType, this.get_Name()), this);
			if (ss.isValue(metadata)) {
				this.OverrideMetadata(ownerType, metadata);
			}
			return this;
		},
		GetMetadata: function(type) {
			return this.$typeMetadataCache.GetValue(type);
		},
		$ResolveTypeMetadata: function(type) {
			if (!this.$isMetadataOverridden) {
				return this.$ownerMetadata;
			}
			var closestBaseType = Enumerable.from(this.$GetOrderedTypeMetadata()).where(function(baseType) {
				return ss.referenceEquals(type, baseType) || type.prototype instanceof baseType;
			}).lastOrDefault(null, ss.getDefaultValue(Function));
			return (ss.isValue(closestBaseType) ? this.$typeMetadata.get_item(closestBaseType) : this.$ownerMetadata);
		},
		$RaiseMetadataPropertyChangedCallback: function(dependencyObject, e) {
			// metadata's changed callback will be raised for
			// - the original owner metadata
			// - every attached property metadata
			// - every metadata that the currently changed object derives from it's owner type
			var $t1 = ss.getEnumerator(this.$GetOrderedTypeMetadata());
			try {
				while ($t1.moveNext()) {
					var type = $t1.current();
					if (!ss.isInstanceOfType(dependencyObject, type) && (!this.$isAttached || !ss.referenceEquals(type, this.get_OwnerType()))) {
						continue;
					}
					var propertyMetadata = this.$typeMetadata.get_item(type);
					if (!ss.staticEquals(propertyMetadata.get_PropertyChangedCallback(), null)) {
						propertyMetadata.get_PropertyChangedCallback()(dependencyObject, e);
					}
				}
			}
			finally {
				$t1.dispose();
			}
		},
		$GetOrderedTypeMetadata: function() {
			if (ss.isNullOrUndefined(this.$orderedTypeMetadataCache)) {
				// topological sorting, with the original owner type first, and each base class before all of its subclasses
				var $t1 = [];
				$t1.push(this.get_OwnerType());
				var orderedTypes = $t1;
				var remainingTypes = Enumerable.from(this.$typeMetadata.get_keys()).where(ss.mkdel(this, function(type) {
					return !ss.referenceEquals(type, this.get_OwnerType());
				})).toArray();
				while (Enumerable.from(remainingTypes).any()) {
					var nextType = Enumerable.from(remainingTypes).firstOrDefault(function(type1) {
						return Enumerable.from(remainingTypes).all(function(type2) {
							return !(type1.prototype instanceof type2);
						});
					}, ss.getDefaultValue(Function));
					ss.remove(remainingTypes, nextType);
					orderedTypes.push(nextType);
				}
				this.$orderedTypeMetadataCache = orderedTypes;
			}
			return this.$orderedTypeMetadataCache;
		}
	});
	ss.initClass($System_Windows_DependencyPropertyChangedEventArgs, $asm, {
		get_Property: function() {
			return this.$2$PropertyField;
		},
		set_Property: function(value) {
			this.$2$PropertyField = value;
		},
		get_NewValue: function() {
			return this.$2$NewValueField;
		},
		set_NewValue: function(value) {
			this.$2$NewValueField = value;
		},
		get_OldValue: function() {
			return this.$2$OldValueField;
		},
		set_OldValue: function(value) {
			this.$2$OldValueField = value;
		}
	}, ss.EventArgs);
	ss.initClass($System_Windows_DependencyPropertyChangedEventHandlerExtensions, $asm, {});
	ss.initClass($System_Windows_DependencyPropertyKey, $asm, {
		get_DependencyProperty: function() {
			return this.$1$DependencyPropertyField;
		},
		set_DependencyProperty: function(value) {
			this.$1$DependencyPropertyField = value;
		}
	});
	ss.initInterface($System_Windows_IPropertyPathElement, $asm, { TryGetValue: null, TryGetDependencyProperty: null, CreatePropertyObserver: null });
	ss.initClass($System_Windows_DependencyPropertyPathElement, $asm, {
		get_DependencyProperty: function() {
			return this.$1$DependencyPropertyField;
		},
		set_DependencyProperty: function(value) {
			this.$1$DependencyPropertyField = value;
		},
		equals: function(obj) {
			var other = ss.safeCast(obj, $System_Windows_DependencyPropertyPathElement);
			return ss.referenceEquals(this, other) || !ss.referenceEquals(other, null) && ss.referenceEquals(this.get_DependencyProperty(), other.get_DependencyProperty());
		},
		getHashCode: function() {
			return this.get_DependencyProperty().getHashCode();
		},
		toString: function() {
			return ss.formatString('({0})', this.get_DependencyProperty());
		},
		TryGetDependencyProperty: function(containingType, dependencyProperty) {
			dependencyProperty.$ = this.get_DependencyProperty();
			return true;
		},
		CreatePropertyObserver: function(baseValueType) {
			return new $System_Windows_Data_DependencyPropertyObserver(this.get_DependencyProperty());
		},
		TryGetValue: function(target, value) {
			if (ss.isInstanceOfType(target, $System_Windows_DependencyObject)) {
				value.$ = ss.cast(target, $System_Windows_DependencyObject).GetValue(this.get_DependencyProperty());
				return true;
			}
			value.$ = null;
			return false;
		}
	}, null, [$System_Windows_IPropertyPathElement]);
	ss.initInterface($System_Windows_Markup_ITypeConverter, $asm, { ConvertFrom: null });
	ss.initClass($System_Windows_DependencyPropertyTypeConverter, $asm, {
		ConvertFrom: function(namespaces, value) {
			var text = value.toString().trim();
			var typeSeparatorIndex = text.indexOf('.');
			if (typeSeparatorIndex === -1) {
				throw new Granular.Exception('Dependency property "{0}" does not contain owner type name', [text]);
			}
			var ownerType = $System_Windows_Markup_TypeParser.ParseType$1(text.substr(0, typeSeparatorIndex), namespaces);
			var dependencyProperty = $System_Windows_DependencyProperty.GetOwnedProperty(ownerType, text.substring(typeSeparatorIndex + 1));
			if (ss.isNullOrUndefined(dependencyProperty)) {
				throw new Granular.Exception('Can\'t find dependency property named "{0}"', [text]);
			}
			return dependencyProperty;
		}
	}, null, [$System_Windows_Markup_ITypeConverter]);
	ss.initClass($System_Windows_DependencyPropertyValueEntry, $asm, {
		add_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateCombine(this.$1$ValueChangedField, value);
		},
		remove_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateRemove(this.$1$ValueChangedField, value);
		},
		get_Value: function() {
			return this.$observableValue.get_Value();
		},
		GetBaseValue: function(flattened) {
			for (var i = this.$baseValues.length - 1; i >= 0; i--) {
				var flattenedValue = $System_Windows_DependencyPropertyValueEntry.$GetFlattenedValue(this.$baseValues[i]);
				if (!ss.referenceEquals(flattenedValue, $System_Windows_Data_ObservableValue.UnsetValue)) {
					return (flattened ? flattenedValue : this.$baseValues[i]);
				}
			}
			return $System_Windows_Data_ObservableValue.UnsetValue;
		},
		GetBaseValue$1: function(priority, flattened) {
			return (flattened ? $System_Windows_DependencyPropertyValueEntry.$GetFlattenedValue(this.$baseValues[priority]) : this.$baseValues[priority]);
		},
		SetBaseValue: function(priority, value) {
			var oldObservableValue = ss.safeCast(this.$baseValues[priority], $System_Windows_Data_IObservableValue);
			if (ss.isValue(oldObservableValue)) {
				oldObservableValue.remove_ValueChanged(ss.mkdel(this, this.$OnObservableValueChanged));
			}
			this.$baseValues[priority] = value;
			var newObservableValue = ss.safeCast(this.$baseValues[priority], $System_Windows_Data_IObservableValue);
			if (ss.isValue(newObservableValue)) {
				newObservableValue.add_ValueChanged(ss.mkdel(this, this.$OnObservableValueChanged));
			}
			this.$SetValue();
		},
		ClearBaseValue: function(priority) {
			this.SetBaseValue(priority, $System_Windows_Data_ObservableValue.UnsetValue);
		},
		GetBaseValuePriority: function() {
			return Granular.Compatibility.Array.FindLastIndex(Object).call(null, this.$baseValues, function(value) {
				return !ss.referenceEquals($System_Windows_DependencyPropertyValueEntry.$GetFlattenedValue(value), $System_Windows_Data_ObservableValue.UnsetValue);
			});
		},
		GetCurrentValue: function(flattened) {
			return (flattened ? $System_Windows_DependencyPropertyValueEntry.$GetFlattenedValue(this.$currentValue) : this.$currentValue);
		},
		SetCurrentValue: function(value) {
			var oldObservableValue = ss.safeCast(this.$currentValue, $System_Windows_Data_IObservableValue);
			if (ss.isValue(oldObservableValue)) {
				oldObservableValue.remove_ValueChanged(ss.mkdel(this, this.$OnObservableValueChanged));
			}
			this.$currentValue = value;
			var newObservableValue = ss.safeCast(this.$currentValue, $System_Windows_Data_IObservableValue);
			if (ss.isValue(newObservableValue)) {
				newObservableValue.add_ValueChanged(ss.mkdel(this, this.$OnObservableValueChanged));
			}
			this.$SetValue();
		},
		ClearCurrentValue: function() {
			this.SetCurrentValue($System_Windows_Data_ObservableValue.UnsetValue);
		},
		GetAnimationValue: function(flattened) {
			return (flattened ? $System_Windows_DependencyPropertyValueEntry.$GetFlattenedValue(this.$animationValue) : this.$animationValue);
		},
		SetAnimationValue: function(value) {
			var oldObservableValue = ss.safeCast(this.$animationValue, $System_Windows_Data_IObservableValue);
			if (ss.isValue(oldObservableValue)) {
				oldObservableValue.remove_ValueChanged(ss.mkdel(this, this.$OnObservableValueChanged));
			}
			this.$animationValue = value;
			var newObservableValue = ss.safeCast(this.$animationValue, $System_Windows_Data_IObservableValue);
			if (ss.isValue(newObservableValue)) {
				newObservableValue.add_ValueChanged(ss.mkdel(this, this.$OnObservableValueChanged));
			}
			this.$SetValue();
		},
		ClearAnimationValue: function() {
			this.$animationValue = $System_Windows_Data_ObservableValue.UnsetValue;
			this.$SetValue();
		},
		$OnObservableValueChanged: function(sender, e) {
			this.$SetValue();
		},
		$SetValue: function() {
			var value = this.GetAnimationValue(true);
			if (ss.referenceEquals(value, $System_Windows_Data_ObservableValue.UnsetValue)) {
				value = this.GetCurrentValue(true);
			}
			if (ss.referenceEquals(value, $System_Windows_Data_ObservableValue.UnsetValue)) {
				value = this.GetBaseValue(true);
			}
			if (ss.referenceEquals(value, $System_Windows_Data_ObservableValue.UnsetValue) || !this.$dependencyProperty.IsValidValue(value)) {
				value = this.$defaultValue;
			}
			this.$observableValue.set_Value(value);
		}
	}, null, [$System_Windows_Data_IObservableValue, $System_Windows_IDependencyPropertyValueEntry]);
	ss.initClass($System_Windows_Disposable, $asm, {
		dispose: function() {
			this.$dispose();
		}
	}, null, [ss.IDisposable]);
	ss.initClass($System_Windows_Duration, $asm, {
		get_TimeSpan: function() {
			return this.$1$TimeSpanField;
		},
		set_TimeSpan: function(value) {
			this.$1$TimeSpanField = value;
		},
		get_IsAutomatic: function() {
			return this.$durationType === 0;
		},
		get_IsForever: function() {
			return this.$durationType === 2;
		},
		get_HasTimeSpan: function() {
			return this.$durationType === 1;
		},
		equals: function(obj) {
			var other = ss.safeCast(obj, $System_Windows_Duration);
			return ss.referenceEquals(this, other) || !ss.referenceEquals(other, null) && this.$durationType === other.$durationType && this.get_TimeSpan().ticks === other.get_TimeSpan().ticks;
		},
		getHashCode: function() {
			return ss.getHashCode(this.$durationType) ^ ss.getHashCode(this.get_TimeSpan());
		},
		toString: function() {
			if (this.get_IsAutomatic()) {
				return 'Automatic';
			}
			if (this.get_IsForever()) {
				return 'Forever';
			}
			return this.get_TimeSpan().toString();
		}
	});
	$System_Windows_Duration.$ctor1.prototype = $System_Windows_Duration.prototype;
	ss.initClass($System_Windows_DynamicResourceExtension, $asm, {
		get_ResourceKey: function() {
			return this.$1$ResourceKeyField;
		},
		set_ResourceKey: function(value) {
			this.$1$ResourceKeyField = value;
		},
		ProvideValue: function(context) {
			return new $System_Windows_ResourceReferenceExpressionProvider(this.get_ResourceKey());
		}
	}, null, [$System_Windows_Markup_IMarkupExtension]);
	ss.initClass($System_Windows_EmbeddedResourceLoader, $asm, {});
	ss.initClass($System_Windows_EventManager, $asm, {});
	ss.initClass($System_Windows_EventRoute, $asm, {
		InvokeHandlers: function(e) {
			var $t1 = ss.getEnumerator(this.$items);
			try {
				while ($t1.moveNext()) {
					var item = $t1.current();
					item.InvokeHandler(e);
				}
			}
			finally {
				$t1.dispose();
			}
		}
	});
	ss.initClass($System_Windows_EventRouteItem, $asm, {
		InvokeHandler: function(e) {
			if (!e.get_Handled() || this.handler.get_HandledEventsToo()) {
				e.set_Source(this.source);
				e.InvokeEventHandler(this.handler.get_Handler(), this.target);
			}
		}
	});
	ss.initInterface($System_Windows_ITriggerAction, $asm, { IsActionOverlaps: null, Apply: null, Clean: null });
	ss.initClass($System_Windows_EventSetter, $asm, {
		get_Event: function() {
			return this.$1$EventField;
		},
		set_Event: function(value) {
			this.$1$EventField = value;
		},
		get_Handler: function() {
			return this.$1$HandlerField;
		},
		set_Handler: function(value) {
			this.$1$HandlerField = value;
		},
		get_HandledEventsToo: function() {
			return this.$1$HandledEventsTooField;
		},
		set_HandledEventsToo: function(value) {
			this.$1$HandledEventsTooField = value;
		},
		Apply: function(target, valueSource) {
			target.AddHandler(this.get_Event(), this.get_Handler(), this.get_HandledEventsToo());
		},
		Clean: function(target, valueSource) {
			target.RemoveHandler(this.get_Event(), this.get_Handler());
		},
		IsActionOverlaps: function(action) {
			return ss.isInstanceOfType(action, $System_Windows_EventSetter) && ss.referenceEquals(this.get_Event(), ss.cast(action, $System_Windows_EventSetter).get_Event());
		}
	}, null, [$System_Windows_ITriggerAction]);
	ss.initClass($System_Windows_EventTriggerBase, $asm, {
		CreateEventTriggerCondition: null,
		Attach: function(element, valueSource) {
			var condition = this.CreateEventTriggerCondition(element);
			condition.add_EventRaised(ss.mkdel(this, function(sender, e) {
				this.$Apply(element, valueSource);
			}));
			this.$attachedConditions.add(element, condition);
		},
		Detach: function(element, valueSource) {
			var condition = this.$attachedConditions.get_item(element);
			this.$Clean(element, valueSource);
			if (ss.isInstanceOfType(condition, ss.IDisposable)) {
				ss.cast(condition, ss.IDisposable).dispose();
			}
			this.$attachedConditions.remove(element);
		},
		$Apply: function(element, valueSource) {
			var $t1 = ss.getEnumerator(this.get_TriggerActions());
			try {
				while ($t1.moveNext()) {
					var action = $t1.current();
					action.Apply(element, valueSource);
				}
			}
			finally {
				$t1.dispose();
			}
		},
		$Clean: function(element, valueSource) {
			var $t1 = ss.getEnumerator(this.get_TriggerActions());
			try {
				while ($t1.moveNext()) {
					var action = $t1.current();
					action.Clean(element, valueSource);
				}
			}
			finally {
				$t1.dispose();
			}
		}
	}, $System_Windows_TriggerBase, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_ITrigger]);
	ss.initClass($System_Windows_EventTrigger, $asm, {
		get_RoutedEvent: function() {
			return this.$5$RoutedEventField;
		},
		set_RoutedEvent: function(value) {
			this.$5$RoutedEventField = value;
		},
		get_SourceName: function() {
			return this.$5$SourceNameField;
		},
		set_SourceName: function(value) {
			this.$5$SourceNameField = value;
		},
		get_Actions: function() {
			return this.$5$ActionsField;
		},
		set_Actions: function(value) {
			this.$5$ActionsField = value;
		},
		get_TriggerActions: function() {
			return this.get_Actions();
		},
		CreateEventTriggerCondition: function(element) {
			if (ss.isNullOrUndefined(this.get_RoutedEvent())) {
				throw new Granular.Exception('EventTrigger.RoutedEvent cannot be null', []);
			}
			return $System_$Windows_EventTrigger$EventTriggerCondition.$Register(element, this.get_RoutedEvent());
		}
	}, $System_Windows_EventTriggerBase, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_ITrigger]);
	ss.initClass($System_Windows_FontFamily, $asm, {
		get_FamilyName: function() {
			return Enumerable.from(this.get_FamilyNames()).firstOrDefault(null, ss.getDefaultValue(String));
		},
		get_FamilyNames: function() {
			return this.$1$FamilyNamesField;
		},
		set_FamilyNames: function(value) {
			this.$1$FamilyNamesField = value;
		}
	});
	$System_Windows_FontFamily.$ctor1.prototype = $System_Windows_FontFamily.prototype;
	ss.initEnum($System_Windows_FontStretch, $asm, { Normal: 0, Condensed: 1, Expanded: 2, ExtraCondensed: 3, ExtraExpanded: 4, Medium: 5, SemiCondensed: 6, SemiExpanded: 7, UltraCondensed: 8, UltraExpanded: 9 });
	ss.initEnum($System_Windows_FontStyle, $asm, { Normal: 0, Italic: 1, Oblique: 2 });
	ss.initEnum($System_Windows_FontWeight, $asm, { Normal: 0, Black: 1, Bold: 2, DemiBold: 3, ExtraBlack: 4, ExtraBold: 5, ExtraLight: 6, Heavy: 7, Light: 8, Medium: 9, Regular: 10, SemiBold: 11, Thin: 12, UltraBlack: 13, UltraBold: 14, UltraLight: 15 });
	ss.initInterface($System_Windows_IFrameworkElementFactory, $asm, { CreateElement: null });
	ss.initClass($System_Windows_FrameworkElementFactory, $asm, {
		CreateElement: function(templatedParent) {
			var elementContext = new $System_Windows_Markup_InitializeContext.$ctor1(null, this.$context, new $System_Windows_Markup_NameScope(this.$context.get_NameScope()), templatedParent, 9);
			var element = ss.safeCast(this.$elementFactory.CreateElement(elementContext), $System_Windows_FrameworkElement);
			$System_Windows_Markup_NameScope.SetNameScope(element, elementContext.get_NameScope());
			return element;
		}
	}, null, [$System_Windows_IFrameworkElementFactory]);
	ss.initClass($System_Windows_PropertyMetadata, $asm, {
		get_DefaultValue: function() {
			return this.$1$DefaultValueField;
		},
		set_DefaultValue: function(value) {
			this.$1$DefaultValueField = value;
		},
		get_PropertyChangedCallback: function() {
			return this.$1$PropertyChangedCallbackField;
		},
		set_PropertyChangedCallback: function(value) {
			this.$1$PropertyChangedCallbackField = value;
		},
		get_CoerceValueCallback: function() {
			return this.$1$CoerceValueCallbackField;
		},
		set_CoerceValueCallback: function(value) {
			this.$1$CoerceValueCallbackField = value;
		},
		get_Inherits: function() {
			return this.$1$InheritsField;
		},
		set_Inherits: function(value) {
			this.$1$InheritsField = value;
		}
	});
	ss.initClass($System_Windows_FrameworkPropertyMetadata, $asm, {
		get_AffectsMeasure: function() {
			return this.$2$AffectsMeasureField;
		},
		set_AffectsMeasure: function(value) {
			this.$2$AffectsMeasureField = value;
		},
		get_AffectsArrange: function() {
			return this.$2$AffectsArrangeField;
		},
		set_AffectsArrange: function(value) {
			this.$2$AffectsArrangeField = value;
		},
		get_BindsTwoWayByDefault: function() {
			return this.$2$BindsTwoWayByDefaultField;
		},
		set_BindsTwoWayByDefault: function(value) {
			this.$2$BindsTwoWayByDefaultField = value;
		},
		get_DefaultUpdateSourceTrigger: function() {
			return this.$2$DefaultUpdateSourceTriggerField;
		},
		set_DefaultUpdateSourceTrigger: function(value) {
			this.$2$DefaultUpdateSourceTriggerField = value;
		}
	}, $System_Windows_PropertyMetadata);
	ss.initClass($System_Windows_FrameworkTemplateExtensions, $asm, {});
	ss.initEnum($System_Windows_HorizontalAlignment, $asm, { Left: 0, Center: 1, Right: 2, Stretch: 3 });
	ss.initInterface($System_Windows_IApplicationHost, $asm, { get_PresentationSourceFactory: null, get_TaskScheduler: null, get_TextMeasurementService: null, get_RenderImageSourceFactory: null, Run: null });
	ss.initClass($System_Windows_IInputElementExtensions, $asm, {});
	ss.initClass($System_Windows_IndexPropertyPathElement, $asm, {
		get_PropertyName: function() {
			return this.$1$PropertyNameField;
		},
		set_PropertyName: function(value) {
			this.$1$PropertyNameField = value;
		},
		get_IndexRawValues: function() {
			return this.$1$IndexRawValuesField;
		},
		set_IndexRawValues: function(value) {
			this.$1$IndexRawValuesField = value;
		},
		equals: function(obj) {
			var other = ss.safeCast(obj, $System_Windows_IndexPropertyPathElement);
			return ss.referenceEquals(this, other) || !ss.referenceEquals(other, null) && System.Xaml.XamlName.op_Equality(this.get_PropertyName(), other.get_PropertyName()) && Enumerable.from(this.get_IndexRawValues()).sequenceEqual(other.get_IndexRawValues());
		},
		getHashCode: function() {
			return this.get_PropertyName().getHashCode();
		},
		toString: function() {
			var propertyName = (this.get_PropertyName().get_IsMemberName() ? ss.formatString('({0})', this.get_PropertyName().get_LocalName()) : this.get_PropertyName().get_LocalName());
			var indexRawValues = Enumerable.from(this.get_IndexRawValues()).defaultIfEmpty('').aggregate(function(s1, s2) {
				return ss.formatString('{0}, {1}', s1, s2);
			});
			return ss.formatString('{0}[{1}]', propertyName, indexRawValues);
		},
		TryGetValue: function(target, value) {
			var propertyContainingType = (this.get_PropertyName().get_IsMemberName() ? $System_Windows_Markup_TypeParser.ParseType(this.get_PropertyName().get_ContainingTypeName()) : ss.getInstanceType(target));
			var propertyName = this.get_PropertyName().get_MemberName();
			var isDefaultIndexProperty = Granular.Extensions.StringExtensions.IsNullOrEmpty(propertyName);
			var indexPropertyValue = {};
			// an index property that has a name (such as "Values[0]"), might be a regular property with the same name ("Values"), and a default index property ("[0]" or "Item[0]")
			if (!isDefaultIndexProperty && $System_Windows_PropertyPathElement.TryGetValue(target, this.get_PropertyName(), indexPropertyValue)) {
				if (ss.isNullOrUndefined(indexPropertyValue.$)) {
					value.$ = null;
					return false;
				}
				target = indexPropertyValue.$;
				propertyContainingType = ss.getInstanceType(indexPropertyValue.$);
				isDefaultIndexProperty = true;
			}
			var indexPropertyInfo = (isDefaultIndexProperty ? Granular.Extensions.TypeExtensions.GetDefaultIndexProperty(propertyContainingType) : Granular.Extensions.TypeExtensions.GetInstanceProperty(propertyContainingType, propertyName));
			if (ss.isNullOrUndefined(indexPropertyInfo)) {
				value.$ = null;
				return false;
			}
			value.$ = ss.midel(indexPropertyInfo.getter, target).apply(null, Enumerable.from(this.ParseIndexValues(indexPropertyInfo)).toArray());
			return true;
		},
		TryGetDependencyProperty: function(containingType, dependencyProperty) {
			dependencyProperty.$ = null;
			return false;
		},
		CreatePropertyObserver: function(baseValueType) {
			return new $System_Windows_Data_IndexPropertyObserver(baseValueType, this, this.$namespaces);
		},
		ParseIndexValues: function(indexPropertyInfo) {
			if (Enumerable.from(System.Reflection.ParameterInfoExtensions.GetIndexParameters(indexPropertyInfo)).count() !== Enumerable.from(this.get_IndexRawValues()).count()) {
				throw new Granular.Exception('Invalid number of index parameters for "{0}.{1}"', [ss.getTypeName(indexPropertyInfo.typeDef), indexPropertyInfo.name]);
			}
			return Enumerable.from(System.Reflection.ParameterInfoExtensions.GetIndexParameters(indexPropertyInfo)).zip(this.get_IndexRawValues(), ss.mkdel(this, function(parameter, rawValue) {
				return $System_Windows_Markup_TypeConverter.ConvertValue(rawValue, parameter.get_ParameterType(), this.$namespaces);
			})).toArray();
		}
	}, null, [$System_Windows_IPropertyPathElement]);
	ss.initInterface($System_Windows_IPresentationSource, $asm, { add_HitTestInvalidated: null, remove_HitTestInvalidated: null, get_RootElement: null, get_MouseDevice: null, get_KeyboardDevice: null, get_Title: null, set_Title: null, HitTest: null, GetTimestamp: null });
	ss.initInterface($System_Windows_IPresentationSourceFactory, $asm, { CreatePresentationSource: null, GetPresentationSourceFromElement: null });
	ss.initInterface($System_Windows_IRenderImageSourceFactory, $asm, { CreateRenderImageSource$1: null, CreateRenderImageSource: null });
	ss.initInterface($System_Windows_ITextMeasurementService, $asm, { Measure: null });
	ss.initClass($System_Windows_LayoutManager, $asm, {
		AddMeasure: function(element) {
			this.$measureQueue.add(element);
			this.BeginUpdateLayout();
		},
		RemoveMeasure: function(element) {
			this.$measureQueue.remove(element);
		},
		AddArrange: function(element) {
			this.$arrangeQueue.add(element);
			this.BeginUpdateLayout();
		},
		RemoveArrange: function(element) {
			this.$arrangeQueue.remove(element);
		},
		AddUpdatedElement: function(element) {
			if (ss.isNullOrUndefined(this.$updateLayoutOperation) || this.$updateLayoutOperation.get_Status() !== 3) {
				// element was updated manually (not through the UpdateLayout loop)
				var $t1 = ss.getEnumerator($System_Windows_LayoutManager.$GetElementPath(element));
				try {
					while ($t1.moveNext()) {
						var pathElement = $t1.current();
						pathElement.$RaiseLayoutUpdated();
					}
				}
				finally {
					$t1.dispose();
				}
				return;
			}
			Granular.Extensions.CollectionExtensions.AddRange($System_Windows_UIElement).call(null, this.$updatedElements, $System_Windows_LayoutManager.$GetElementPath(element));
		},
		BeginUpdateLayout: function() {
			if (ss.isNullOrUndefined(this.$updateLayoutOperation) || this.$updateLayoutOperation.get_Status() === 2) {
				this.$updateLayoutOperation = $System_Windows_Threading_Dispatcher.CurrentDispatcher.BeginInvoke$3(4, ss.mkdel(this, this.UpdateLayout));
			}
		},
		UpdateLayout: function() {
			while (this.$measureQueue.get_count() > 0 || this.$arrangeQueue.get_count() > 0) {
				while (this.$measureQueue.get_count() > 0) {
					var element = this.$GetTopElement(this.$measureQueue);
					element.Measure(((ss.isNullOrUndefined(element.get_VisualParent()) || element.get_PreviousAvailableSize().get_IsEmpty()) ? $System_Windows_Size.Infinity : element.get_PreviousAvailableSize()));
				}
				while (this.$arrangeQueue.get_count() > 0) {
					var element1 = this.$GetTopElement(this.$arrangeQueue);
					element1.Arrange(((ss.isNullOrUndefined(element1.get_VisualParent()) || element1.get_PreviousFinalRect().get_IsEmpty()) ? new $System_Windows_Rect(element1.get_DesiredSize()) : element1.get_PreviousFinalRect()));
				}
				while (this.$updatedElements.get_count() > 0 && this.$measureQueue.get_count() === 0 && this.$arrangeQueue.get_count() === 0) {
					var element2 = Enumerable.from(this.$updatedElements).first();
					this.$updatedElements.remove(element2);
					element2.$RaiseLayoutUpdated();
				}
			}
		},
		$GetTopElement: function(measureQueue) {
			var topElement = null;
			var $t1 = measureQueue.getEnumerator();
			try {
				while ($t1.moveNext()) {
					var element = $t1.current();
					if (ss.isNullOrUndefined(topElement) || topElement.get_VisualLevel() > element.get_VisualLevel()) {
						topElement = element;
					}
				}
			}
			finally {
				$t1.dispose();
			}
			return topElement;
		}
	});
	ss.initClass($System_Windows_MultiDataTriggerBase, $asm, {
		get_Conditions: function() {
			return this.$5$ConditionsField;
		},
		set_Conditions: function(value) {
			this.$5$ConditionsField = value;
		},
		get_Setters: function() {
			return this.$5$SettersField;
		},
		set_Setters: function(value) {
			this.$5$SettersField = value;
		},
		get_TriggerActions: function() {
			return this.get_Setters();
		}
	}, $System_Windows_DataTriggerBase, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_ITrigger, $System_Windows_IDataTriggerConditionProvider]);
	ss.initClass($System_Windows_MultiDataTrigger, $asm, {
		CreateDataTriggerCondition: function(element) {
			return $System_Windows_$MultiDataTriggerCondition.$Register(element, Enumerable.from(this.get_Conditions()).select(function(condition) {
				return new $System_$Windows_MultiDataTrigger$MultiDataTriggerConditionProvider(condition);
			}).toArray());
		}
	}, $System_Windows_MultiDataTriggerBase, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_ITrigger, $System_Windows_IDataTriggerConditionProvider]);
	ss.initClass($System_Windows_MultiTrigger, $asm, {
		CreateDataTriggerCondition: function(element) {
			return $System_Windows_$MultiDataTriggerCondition.$Register(element, Enumerable.from(this.get_Conditions()).select(function(condition) {
				return new $System_$Windows_MultiTrigger$TriggerConditionProvider(condition);
			}).toArray());
		}
	}, $System_Windows_MultiDataTriggerBase, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_ITrigger, $System_Windows_IDataTriggerConditionProvider]);
	ss.initClass($System_Windows_Point, $asm, {
		get_X: function() {
			return this.$1$XField;
		},
		set_X: function(value) {
			this.$1$XField = value;
		},
		get_Y: function() {
			return this.$1$YField;
		},
		set_Y: function(value) {
			this.$1$YField = value;
		},
		get_IsEmpty: function() {
			return this.$1$IsEmptyField;
		},
		set_IsEmpty: function(value) {
			this.$1$IsEmptyField = value;
		},
		toString: function() {
			return ss.formatString('Point({0}, {1})', this.get_X(), this.get_Y());
		},
		equals: function(obj) {
			var other = ss.safeCast(obj, $System_Windows_Point);
			return ss.referenceEquals(this, other) || !ss.referenceEquals(other, null) && ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Number]).Default.areEqual(this.get_X(), other.get_X()) && ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Number]).Default.areEqual(this.get_Y(), other.get_Y());
		},
		getHashCode: function() {
			return ss.getHashCode(this.get_X()) ^ ss.getHashCode(this.get_Y());
		}
	});
	$System_Windows_Point.$ctor1.prototype = $System_Windows_Point.prototype;
	ss.initClass($System_Windows_PointExtensions, $asm, {});
	ss.initClass($System_Windows_PropertyPath, $asm, {
		get_Elements: function() {
			return this.$1$ElementsField;
		},
		set_Elements: function(value) {
			this.$1$ElementsField = value;
		},
		get_IsEmpty: function() {
			return !Enumerable.from(this.get_Elements()).any();
		},
		toString: function() {
			return Enumerable.from(this.get_Elements()).select(function(element) {
				return element.toString();
			}).defaultIfEmpty('').aggregate(function(s1, s2) {
				return ss.formatString('{0}.{1}', s1, s2);
			});
		}
	});
	ss.initClass($System_Windows_PropertyPathElement, $asm, {
		get_PropertyName: function() {
			return this.$1$PropertyNameField;
		},
		set_PropertyName: function(value) {
			this.$1$PropertyNameField = value;
		},
		equals: function(obj) {
			var other = ss.safeCast(obj, $System_Windows_PropertyPathElement);
			return ss.referenceEquals(this, other) || !ss.referenceEquals(other, null) && System.Xaml.XamlName.op_Equality(this.get_PropertyName(), other.get_PropertyName());
		},
		getHashCode: function() {
			return this.get_PropertyName().getHashCode();
		},
		toString: function() {
			return (this.get_PropertyName().get_IsMemberName() ? ss.formatString('({0})', this.get_PropertyName().get_LocalName()) : this.get_PropertyName().get_LocalName());
		},
		TryGetValue: function(target, value) {
			return $System_Windows_PropertyPathElement.TryGetValue(target, this.get_PropertyName(), value);
		},
		TryGetDependencyProperty: function(containingType, dependencyProperty) {
			dependencyProperty.$ = $System_Windows_DependencyProperty.GetProperty(containingType, this.get_PropertyName());
			return ss.isValue(dependencyProperty.$);
		},
		CreatePropertyObserver: function(baseValueType) {
			var dependencyProperty = $System_Windows_DependencyProperty.GetProperty(baseValueType, this.get_PropertyName());
			if (ss.isValue(dependencyProperty)) {
				return new $System_Windows_Data_DependencyPropertyObserver(dependencyProperty);
			}
			var propertyContainingType = (this.get_PropertyName().get_IsMemberName() ? $System_Windows_Markup_TypeParser.ParseType(this.get_PropertyName().get_ContainingTypeName()) : baseValueType);
			var propertyInfo = Granular.Extensions.TypeExtensions.GetInstanceProperty(propertyContainingType, this.get_PropertyName().get_MemberName());
			if (ss.isValue(propertyInfo)) {
				return new $System_Windows_Data_ClrPropertyObserver(propertyInfo, []);
			}
			return null;
		}
	}, null, [$System_Windows_IPropertyPathElement]);
	ss.initClass($System_Windows_PropertyPathElementExtensions, $asm, {});
	ss.initClass($System_Windows_PropertyPathElementTypeConverter, $asm, {
		ConvertFrom: function(namespaces, value) {
			return new $System_Windows_PropertyPathElement(System.Xaml.XamlName.FromPrefixedName(ss.cast(value, String), namespaces));
		}
	}, null, [$System_Windows_Markup_ITypeConverter]);
	ss.initClass($System_Windows_PropertyPathExtensions, $asm, {});
	ss.initClass($System_Windows_PropertyPathTypeConverter, $asm, {
		ConvertFrom: function(namespaces, value) {
			return $System_Windows_PropertyPath.Parse(ss.cast(value, String), namespaces);
		}
	}, null, [$System_Windows_Markup_ITypeConverter]);
	ss.initClass($System_Windows_ReadOnlyDependencyPropertyValueEntry, $asm, {
		add_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateCombine(this.$1$ValueChangedField, value);
		},
		remove_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateRemove(this.$1$ValueChangedField, value);
		},
		get_Value: function() {
			return this.$source.get_Value();
		},
		GetBaseValue: function(flattened) {
			return this.$source.GetBaseValue(flattened);
		},
		GetBaseValue$1: function(priority, flattened) {
			return this.$source.GetBaseValue$1(priority, flattened);
		},
		SetBaseValue: function(priority, value) {
			$System_Windows_ReadOnlyDependencyPropertyValueEntry.$ThrowReadOnlyException();
		},
		ClearBaseValue: function(priority) {
			$System_Windows_ReadOnlyDependencyPropertyValueEntry.$ThrowReadOnlyException();
		},
		GetBaseValuePriority: function() {
			return this.$source.GetBaseValuePriority();
		},
		GetCurrentValue: function(flattened) {
			return this.$source.GetCurrentValue(flattened);
		},
		SetCurrentValue: function(value) {
			$System_Windows_ReadOnlyDependencyPropertyValueEntry.$ThrowReadOnlyException();
		},
		ClearCurrentValue: function() {
			$System_Windows_ReadOnlyDependencyPropertyValueEntry.$ThrowReadOnlyException();
		},
		GetAnimationValue: function(flattened) {
			return this.$source.GetAnimationValue(flattened);
		},
		SetAnimationValue: function(value) {
			$System_Windows_ReadOnlyDependencyPropertyValueEntry.$ThrowReadOnlyException();
		},
		ClearAnimationValue: function() {
			$System_Windows_ReadOnlyDependencyPropertyValueEntry.$ThrowReadOnlyException();
		}
	}, null, [$System_Windows_Data_IObservableValue, $System_Windows_IDependencyPropertyValueEntry]);
	ss.initClass($System_Windows_Rect, $asm, {
		get_Location: function() {
			return this.$1$LocationField;
		},
		set_Location: function(value) {
			this.$1$LocationField = value;
		},
		get_Size: function() {
			return this.$1$SizeField;
		},
		set_Size: function(value) {
			this.$1$SizeField = value;
		},
		get_Left: function() {
			return this.$1$LeftField;
		},
		set_Left: function(value) {
			this.$1$LeftField = value;
		},
		get_Top: function() {
			return this.$1$TopField;
		},
		set_Top: function(value) {
			this.$1$TopField = value;
		},
		get_Right: function() {
			return this.$1$RightField;
		},
		set_Right: function(value) {
			this.$1$RightField = value;
		},
		get_Bottom: function() {
			return this.$1$BottomField;
		},
		set_Bottom: function(value) {
			this.$1$BottomField = value;
		},
		get_Width: function() {
			return this.$1$WidthField;
		},
		set_Width: function(value) {
			this.$1$WidthField = value;
		},
		get_Height: function() {
			return this.$1$HeightField;
		},
		set_Height: function(value) {
			this.$1$HeightField = value;
		},
		get_IsEmpty: function() {
			return this.$1$IsEmptyField;
		},
		set_IsEmpty: function(value) {
			this.$1$IsEmptyField = value;
		},
		toString: function() {
			return ss.formatString('Rect({0}, {1}, {2}, {3})', this.get_Left(), this.get_Top(), this.get_Width(), this.get_Height());
		},
		equals: function(obj) {
			var other = ss.safeCast(obj, $System_Windows_Rect);
			return ss.referenceEquals(this, other) || !ss.referenceEquals(other, null) && ss.staticEquals(this.get_Location(), other.get_Location()) && ss.staticEquals(this.get_Size(), other.get_Size());
		},
		getHashCode: function() {
			return this.get_Location().getHashCode() ^ this.get_Size().getHashCode();
		}
	});
	$System_Windows_Rect.$ctor1.prototype = $System_Windows_Rect.$ctor3.prototype = $System_Windows_Rect.$ctor2.prototype = $System_Windows_Rect.prototype;
	ss.initClass($System_Windows_RectExtensions, $asm, {});
	ss.initClass($System_Windows_ReentrancyLock, $asm, {
		get_IsEntered: function() {
			return this.$1$IsEnteredField;
		},
		set_IsEntered: function(value) {
			this.$1$IsEnteredField = value;
		},
		Enter: function() {
			if (this.get_IsEntered()) {
				throw new Granular.Exception("Can't enter the scope more than once", []);
			}
			this.set_IsEntered(true);
			return new $System_Windows_Disposable(ss.mkdel(this, function() {
				this.set_IsEntered(false);
			}));
		}
	});
	ss.initClass($System_Windows_ResourceContainerExtensions, $asm, {});
	ss.initClass($System_Windows_ResourceDictionary, $asm, {
		add_ResourcesChanged: function(value) {
			this.$1$ResourcesChangedField = ss.delegateCombine(this.$1$ResourcesChangedField, value);
		},
		remove_ResourcesChanged: function(value) {
			this.$1$ResourcesChangedField = ss.delegateRemove(this.$1$ResourcesChangedField, value);
		},
		get_MergedDictionaries: function() {
			return this.$1$MergedDictionariesField;
		},
		set_MergedDictionaries: function(value) {
			this.$1$MergedDictionariesField = value;
		},
		get_Source: function() {
			return this.$source;
		},
		set_Source: function(value) {
			if (ss.referenceEquals(this.$source, value)) {
				return;
			}
			if (ss.isValue(this.$sourceDictionary)) {
				this.get_MergedDictionaries().remove(this.$sourceDictionary);
			}
			this.$source = value;
			this.$sourceDictionary = $System_Windows_ResourceDictionary.$LoadResourceDictionary(this.$source);
			if (ss.isValue(this.$sourceDictionary)) {
				this.get_MergedDictionaries().add(this.$sourceDictionary);
			}
		},
		get_count: function() {
			return this.$dictionary.get_count() + Enumerable.from(this.get_MergedDictionaries()).select(function(mergedDictionary) {
				return mergedDictionary.get_count();
			}).defaultIfEmpty(0).sum();
		},
		get_keys: function() {
			return this.$dictionary.get_keys();
		},
		get_values: function() {
			return this.$dictionary.get_values();
		},
		get_item: function(key) {
			return this.GetValue(key);
		},
		set_item: function(key, value) {
			this.add(key, value);
		},
		get_IsReadOnly: function() {
			return false;
		},
		GetValue: function(key) {
			var value = {};
			if (!this.tryGetValue(key, value)) {
				throw new Granular.Exception('Cannot find resource named "{0}"', [key]);
			}
			return value.$;
		},
		tryGetValue: function(key, value) {
			if (this.$dictionary.tryGetValue(key, value)) {
				return true;
			}
			var $t1 = this.get_MergedDictionaries().getEnumerator();
			try {
				while ($t1.moveNext()) {
					var mergedDictionary = $t1.current();
					if (mergedDictionary.tryGetValue(key, value)) {
						return true;
					}
				}
			}
			finally {
				$t1.dispose();
			}
			value.$ = null;
			return false;
		},
		add: function(key, value) {
			this.$dictionary.set_item(key, value);
			Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_ResourcesChangedEventArgs).call(null, this.$1$ResourcesChangedField, this, $System_Windows_ResourcesChangedEventArgs.FromKey(key));
		},
		Clear: function() {
			var e = $System_Windows_ResourcesChangedEventArgs.FromKeyCollection(Enumerable.from(this.$dictionary.get_keys()).toArray());
			this.$dictionary.clear();
			Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_ResourcesChangedEventArgs).call(null, this.$1$ResourcesChangedField, this, e);
		},
		Contains$1: function(key) {
			return ss.contains(this.$dictionary.get_keys(), key) || Enumerable.from(this.get_MergedDictionaries()).selectMany(function(d) {
				return Enumerable.from(System.Collections.Generic.DictionaryExtensions.GetKeys(Object, Object).call(null, d)).select(function(x) {
					return ss.cast(x, Object);
				});
			}).contains(key);
		},
		Remove$1: function(key) {
			if (this.$dictionary.remove(key)) {
				Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_ResourcesChangedEventArgs).call(null, this.$1$ResourcesChangedField, this, $System_Windows_ResourcesChangedEventArgs.FromKey(key));
				return true;
			}
			return false;
		},
		$OnMergedDictionariesCollectionChanged: function(sender, e) {
			var $t1 = ss.getEnumerator(e.get_OldItems());
			try {
				while ($t1.moveNext()) {
					var dictionary = $t1.current();
					dictionary.remove_ResourcesChanged(ss.mkdel(this, this.$OnMergeDictionaryResourcesChanged));
				}
			}
			finally {
				$t1.dispose();
			}
			var $t2 = ss.getEnumerator(e.get_NewItems());
			try {
				while ($t2.moveNext()) {
					var dictionary1 = $t2.current();
					dictionary1.add_ResourcesChanged(ss.mkdel(this, this.$OnMergeDictionaryResourcesChanged));
				}
			}
			finally {
				$t2.dispose();
			}
			if (e.get_Action() !== 3) {
				var keys = Enumerable.from(e.get_OldItems()).concat(e.get_NewItems()).select(function(x) {
					return ss.cast(x, $System_Windows_ResourceDictionary);
				}).selectMany($System_Windows_ResourceDictionary.$GetMergedDictionariesKeys);
				Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_ResourcesChangedEventArgs).call(null, this.$1$ResourcesChangedField, this, $System_Windows_ResourcesChangedEventArgs.FromKeyCollection(keys));
			}
		},
		$OnMergeDictionaryResourcesChanged: function(sender, e) {
			Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_ResourcesChangedEventArgs).call(null, this.$1$ResourcesChangedField, this, e);
		},
		TryGetResource: function(resourceKey, value) {
			return this.tryGetValue(resourceKey, value);
		},
		containsKey: function(key) {
			return this.Contains$1(key);
		},
		remove: function(key) {
			return this.Remove$1(key);
		},
		getEnumerator: function() {
			return this.$dictionary.getEnumerator();
		},
		Add: function(item) {
			this.add(item.key, item.value);
		},
		Contains: function(item) {
			var value = {};
			return this.tryGetValue(item.key, value) && ss.referenceEquals(item.value, value.$);
		},
		Remove: function(item) {
			return ss.contains(ss.cast(this, ss.ICollection), item) && this.Remove$1(item.key);
		},
		CopyTo: function(array, arrayIndex) {
			System.Linq.EnumerableExtensions.CopyTo(Object).call(null, Enumerable.from(this.$dictionary).toArray(), array, arrayIndex);
		}
	}, null, [ss.IEnumerable, ss.IEnumerable, ss.IDictionary, $System_Windows_IResourceContainer]);
	ss.initEnum($System_Windows_ResourceDictionaryLocation, $asm, { None: 0, SourceAssembly: 1, ExternalAssembly: 2 });
	ss.initClass($System_Windows_ResourceReferenceExpression, $asm, {
		add_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateCombine(this.$1$ValueChangedField, value);
		},
		remove_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateRemove(this.$1$ValueChangedField, value);
		},
		get_Value: function() {
			return this.$observableValue.get_Value();
		},
		dispose: function() {
			this.$observableValue.set_Value($System_Windows_Data_ObservableValue.UnsetValue);
			this.$resourceContainer.remove_ResourcesChanged(ss.mkdel(this, this.$OnResourcesChanged));
		},
		$OnResourcesChanged: function(sender, e) {
			if (e.Contains(this.$resourceKey)) {
				this.$observableValue.set_Value(this.$GetResourceValue());
			}
		},
		SetValue: function(value) {
			return false;
		},
		$GetResourceValue: function() {
			var value = {};
			if (!this.$resourceContainer.TryGetResource(this.$resourceKey, value)) {
				return $System_Windows_Data_ObservableValue.UnsetValue;
			}
			if (!ss.isInstanceOfType(value.$, $System_Windows_Markup_IValueProvider)) {
				return value.$;
			}
			if (!ss.referenceEquals(this.$currentValueProvider, value.$)) {
				this.$currentValueProvider = ss.cast(value.$, $System_Windows_Markup_IValueProvider);
				this.$currentValue = this.$currentValueProvider.ProvideValue();
			}
			return this.$currentValue;
		}
	}, null, [$System_Windows_Data_IObservableValue, $System_Windows_IExpression, ss.IDisposable]);
	ss.initClass($System_Windows_ResourceReferenceExpressionProvider, $asm, {
		CreateExpression: function(dependencyObject, dependencyProperty) {
			var resourceContainer = ss.safeCast(dependencyObject, $System_Windows_IResourceContainer);
			if (ss.isNullOrUndefined(resourceContainer)) {
				throw new Granular.Exception('ResourceReferenceExpression cannot be attached to "{0}" as it does not implement "{1}"', [ss.getTypeName(ss.getInstanceType(dependencyObject)), ss.getTypeName($System_Windows_IResourceContainer)]);
			}
			return new $System_Windows_ResourceReferenceExpression(resourceContainer, this.$resourceKey);
		}
	}, null, [$System_Windows_IExpressionProvider]);
	ss.initClass($System_Windows_ResourcesChangedEventArgs, $asm, {
		Contains: function(resourceKey) {
			return (ss.isNullOrUndefined(this.$changedKeys) ? true : Enumerable.from(this.$changedKeys).contains(resourceKey));
		}
	}, ss.EventArgs);
	ss.initClass($System_Windows_RoutedEvent, $asm, {
		get_Name: function() {
			return this.$1$NameField;
		},
		set_Name: function(value) {
			this.$1$NameField = value;
		},
		get_RoutingStrategy: function() {
			return this.$1$RoutingStrategyField;
		},
		set_RoutingStrategy: function(value) {
			this.$1$RoutingStrategyField = value;
		},
		get_HandlerType: function() {
			return this.$1$HandlerTypeField;
		},
		set_HandlerType: function(value) {
			this.$1$HandlerTypeField = value;
		},
		get_OwnerType: function() {
			return this.$1$OwnerTypeField;
		},
		set_OwnerType: function(value) {
			this.$1$OwnerTypeField = value;
		},
		AddOwner: function(ownerType) {
			$System_Windows_EventManager.AddOwner(this, ownerType);
			return this;
		},
		getHashCode: function() {
			return ss.getHashCode(this.get_OwnerType()) ^ ss.getHashCode(this.get_Name());
		},
		toString: function() {
			return ss.formatString('{0}.{1}', ss.getTypeFullName(this.get_OwnerType()), this.get_Name());
		}
	});
	ss.initClass($System_Windows_RoutedEventArgs, $asm, {
		get_RoutedEvent: function() {
			return this.$2$RoutedEventField;
		},
		set_RoutedEvent: function(value) {
			this.$2$RoutedEventField = value;
		},
		get_OriginalSource: function() {
			return this.$2$OriginalSourceField;
		},
		set_OriginalSource: function(value) {
			this.$2$OriginalSourceField = value;
		},
		get_Source: function() {
			return this.$2$SourceField;
		},
		set_Source: function(value) {
			this.$2$SourceField = value;
		},
		get_Handled: function() {
			return this.$2$HandledField;
		},
		set_Handled: function(value) {
			this.$2$HandledField = value;
		},
		InvokeEventHandler: function(handler, target) {
			if (!ss.isValue(handler)) {
				throw new Granular.Exception('Can\'t dynamically invoke a non RoutedEventHandler, "{0}" must override InvokeEventHandler', [ss.getTypeName(ss.getInstanceType(this))]);
			}
			handler(target, this);
		}
	}, ss.EventArgs);
	ss.initClass($System_Windows_RoutedEventHandlerItem, $asm, {
		get_Handler: function() {
			return this.$1$HandlerField;
		},
		set_Handler: function(value) {
			this.$1$HandlerField = value;
		},
		get_HandledEventsToo: function() {
			return this.$1$HandledEventsTooField;
		},
		set_HandledEventsToo: function(value) {
			this.$1$HandledEventsTooField = value;
		}
	});
	ss.initClass($System_Windows_RoutedEventTypeConverter, $asm, {
		ConvertFrom: function(namespaces, value) {
			var text = value.toString().trim();
			var eventName = System.Xaml.XamlName.FromPrefixedName(text, namespaces);
			if (!eventName.get_IsMemberName()) {
				throw new Granular.Exception('Invalid routed event name "{0}"', [eventName.get_LocalName()]);
			}
			var containingType = $System_Windows_Markup_TypeParser.ParseType(eventName.get_ContainingTypeName());
			var routedEvent = $System_Windows_EventManager.FindRoutedEvent(containingType, eventName.get_MemberName());
			if (ss.isNullOrUndefined(routedEvent)) {
				throw new Granular.Exception('Can\'t find a routed event named "{0}"', [eventName]);
			}
			return routedEvent;
		}
	}, null, [$System_Windows_Markup_ITypeConverter]);
	ss.initEnum($System_Windows_RoutingStrategy, $asm, { Tunnel: 0, Bubble: 1, Direct: 2 });
	ss.initClass($System_Windows_Setter, $asm, {
		get_Property: function() {
			return this.$1$PropertyField;
		},
		set_Property: function(value) {
			this.$1$PropertyField = value;
		},
		get_Value: function() {
			return this.$1$ValueField;
		},
		set_Value: function(value) {
			this.$1$ValueField = value;
		},
		get_TargetName: function() {
			return this.$1$TargetNameField;
		},
		set_TargetName: function(value) {
			this.$1$TargetNameField = value;
		},
		Apply: function(target, valueSource) {
			if (ss.isNullOrUndefined(this.get_Property())) {
				throw new Granular.Exception('Setter.Property cannot be null', []);
			}
			var resolvedTarget = $System_Windows_Setter.$GetResolvedTarget(target, this.get_TargetName(), valueSource);
			var resolvedProperty = $System_Windows_PropertyPathElementExtensions.GetDependencyProperty(this.get_Property(), ss.getInstanceType(resolvedTarget));
			var $t2 = ss.isNullOrUndefined(this.get_Value()) || ss.isInstanceOfType(this.get_Value(), $System_Windows_IExpressionProvider);
			if (!$t2) {
				var $t1 = resolvedProperty.get_PropertyType();
				$t2 = ss.isInstanceOfType(this.get_Value(), $t1);
			}
			var resolvedValue = ($t2 ? this.get_Value() : $System_Windows_Markup_TypeConverter.ConvertValue(this.get_Value().toString(), resolvedProperty.get_PropertyType(), System.Xaml.XamlNamespaces.Empty));
			var resolvedValueSource = $System_Windows_Setter.$GetResolvedValueSource(valueSource, resolvedTarget);
			if ($System_Windows_Setter.$IsStyleValueSource(valueSource)) {
				resolvedTarget.SetValue(resolvedProperty, resolvedValue, resolvedValueSource);
			}
			else {
				$System_Windows_Setter.$GetInitializedValueOverlapExpression(resolvedTarget, resolvedProperty, resolvedValueSource).$SetValue(this, resolvedValue);
			}
		},
		Clean: function(target, valueSource) {
			if (ss.isNullOrUndefined(this.get_Property())) {
				throw new Granular.Exception('Setter.Property cannot be null', []);
			}
			var resolvedTarget = $System_Windows_Setter.$GetResolvedTarget(target, this.get_TargetName(), valueSource);
			var resolvedProperty = $System_Windows_PropertyPathElementExtensions.GetDependencyProperty(this.get_Property(), ss.getInstanceType(resolvedTarget));
			var resolvedValueSource = $System_Windows_Setter.$GetResolvedValueSource(valueSource, resolvedTarget);
			if ($System_Windows_Setter.$IsStyleValueSource(valueSource)) {
				resolvedTarget.ClearValue(resolvedProperty, resolvedValueSource);
			}
			else {
				$System_Windows_Setter.$GetInitializedValueOverlapExpression(resolvedTarget, resolvedProperty, resolvedValueSource).$ClearValue(this);
			}
		},
		IsActionOverlaps: function(action) {
			if (ss.isNullOrUndefined(this.get_Property())) {
				throw new Granular.Exception('Setter.Property cannot be null', []);
			}
			return ss.isInstanceOfType(action, $System_Windows_Setter) && ss.referenceEquals(this.get_TargetName(), ss.cast(action, $System_Windows_Setter).get_TargetName()) && ss.equals(this.get_Property(), ss.cast(action, $System_Windows_Setter).get_Property());
		}
	}, null, [$System_Windows_ITriggerAction]);
	ss.initClass($System_Windows_Size, $asm, {
		get_Width: function() {
			return this.$1$WidthField;
		},
		set_Width: function(value) {
			this.$1$WidthField = value;
		},
		get_Height: function() {
			return this.$1$HeightField;
		},
		set_Height: function(value) {
			this.$1$HeightField = value;
		},
		get_IsWidthEmpty: function() {
			return this.$1$IsWidthEmptyField;
		},
		set_IsWidthEmpty: function(value) {
			this.$1$IsWidthEmptyField = value;
		},
		get_IsHeightEmpty: function() {
			return this.$1$IsHeightEmptyField;
		},
		set_IsHeightEmpty: function(value) {
			this.$1$IsHeightEmptyField = value;
		},
		get_IsEmpty: function() {
			return this.$1$IsEmptyField;
		},
		set_IsEmpty: function(value) {
			this.$1$IsEmptyField = value;
		},
		get_IsPartiallyEmpty: function() {
			return this.$1$IsPartiallyEmptyField;
		},
		set_IsPartiallyEmpty: function(value) {
			this.$1$IsPartiallyEmptyField = value;
		},
		toString: function() {
			return ss.formatString('Size({0}, {1})', this.get_Width(), this.get_Height());
		},
		equals: function(obj) {
			var other = ss.safeCast(obj, $System_Windows_Size);
			return ss.referenceEquals(this, other) || !ss.referenceEquals(other, null) && ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Number]).Default.areEqual(this.get_Width(), other.get_Width()) && ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Number]).Default.areEqual(this.get_Height(), other.get_Height());
		},
		getHashCode: function() {
			return ss.getHashCode(this.get_Width()) ^ ss.getHashCode(this.get_Height());
		}
	});
	ss.initClass($System_Windows_SizeExtensions, $asm, {});
	ss.initClass($System_Windows_StartupEventArgs, $asm, {}, ss.EventArgs);
	ss.initClass($System_Windows_StaticResourceExtension, $asm, {
		get_ResourceKey: function() {
			return this.$1$ResourceKeyField;
		},
		set_ResourceKey: function(value) {
			this.$1$ResourceKeyField = value;
		},
		ProvideValue: function(context) {
			return $System_Windows_StaticResourceExtension.$GetStaticResource(context, this.get_ResourceKey());
		}
	}, null, [$System_Windows_Markup_IMarkupExtension]);
	ss.initClass($System_Windows_Style, $asm, {
		get_TargetType: function() {
			return this.$targetType;
		},
		set_TargetType: function(value) {
			if (ss.referenceEquals(this.$targetType, value)) {
				return;
			}
			this.$targetType = value;
		},
		get_Key: function() {
			var $t1 = this.$key;
			if (ss.isNullOrUndefined($t1)) {
				$t1 = new $System_Windows_StyleKey(this.get_TargetType());
			}
			return $t1;
		},
		set_Key: function(value) {
			this.$key = value;
		},
		get_BasedOn: function() {
			return this.$1$BasedOnField;
		},
		set_BasedOn: function(value) {
			this.$1$BasedOnField = value;
		},
		get_Triggers: function() {
			return this.$1$TriggersField;
		},
		set_Triggers: function(value) {
			this.$1$TriggersField = value;
		},
		get_Setters: function() {
			return this.$1$SettersField;
		},
		set_Setters: function(value) {
			this.$1$SettersField = value;
		},
		Attach: function(element) {
			this.Attach$1(element, function(setter) {
				return true;
			});
		},
		Attach$1: function(element, settersFilter) {
			if (ss.isValue(this.get_BasedOn())) {
				this.get_BasedOn().Attach$1(element, ss.mkdel(this, function(setter) {
					return !Enumerable.from(this.get_Setters()).any(function(action) {
						return action.IsActionOverlaps(setter);
					}) && settersFilter(setter);
				}));
			}
			var $t1 = Enumerable.from(this.get_Setters()).where(settersFilter).getEnumerator();
			try {
				while ($t1.moveNext()) {
					var action1 = $t1.current();
					action1.Apply(element, 5);
				}
			}
			finally {
				$t1.dispose();
			}
			var $t2 = this.get_Triggers().getEnumerator();
			try {
				while ($t2.moveNext()) {
					var trigger = $t2.current();
					trigger.Attach(element, 7);
				}
			}
			finally {
				$t2.dispose();
			}
		},
		Detach: function(element) {
			this.Detach$1(element, function(setter) {
				return true;
			});
		},
		Detach$1: function(element, settersFilter) {
			if (ss.isValue(this.get_BasedOn())) {
				this.get_BasedOn().Detach$1(element, ss.mkdel(this, function(setter) {
					return !Enumerable.from(this.get_Setters()).any(function(action) {
						return action.IsActionOverlaps(setter);
					}) && settersFilter(setter);
				}));
			}
			var $t1 = Enumerable.from(this.get_Setters()).where(settersFilter).getEnumerator();
			try {
				while ($t1.moveNext()) {
					var action1 = $t1.current();
					action1.Clean(element, 5);
				}
			}
			finally {
				$t1.dispose();
			}
			var $t2 = this.get_Triggers().getEnumerator();
			try {
				while ($t2.moveNext()) {
					var trigger = $t2.current();
					trigger.Detach(element, 7);
				}
			}
			finally {
				$t2.dispose();
			}
		}
	});
	ss.initClass($System_Windows_StyleKey, $asm, {
		get_Assembly: function() {
			return (ss.isValue(this.get_TargetType()) ? ss.getTypeAssembly(this.get_TargetType()) : null);
		},
		get_TargetType: function() {
			return this.$1$TargetTypeField;
		},
		set_TargetType: function(value) {
			this.$1$TargetTypeField = value;
		},
		equals: function(obj) {
			var other = ss.safeCast(obj, $System_Windows_StyleKey);
			return ss.referenceEquals(this, other) || !ss.referenceEquals(other, null) && ss.staticEquals(this.get_TargetType(), other.get_TargetType());
		},
		getHashCode: function() {
			return ss.getHashCode(this.get_TargetType());
		},
		toString: function() {
			return ss.formatString('StyleKey({0})', ss.getTypeName(this.get_TargetType()));
		}
	}, null, [$System_Windows_IResourceKey]);
	ss.initClass($System_Windows_SystemResources, $asm, {
		add_ResourcesChanged: function(value) {
		},
		remove_ResourcesChanged: function(value) {
		},
		TryGetResource: function(resourceKey, value) {
			return this.$resourcesCache.TryGetValue(resourceKey, value);
		},
		$TryResolveResource: function(resourceKey, value) {
			value.$ = null;
			if (!ss.isInstanceOfType(resourceKey, $System_Windows_IResourceKey) || ss.isNullOrUndefined(ss.cast(resourceKey, $System_Windows_IResourceKey).get_Assembly())) {
				return false;
			}
			var assembly = ss.cast(resourceKey, $System_Windows_IResourceKey).get_Assembly();
			var themeInfoAttribute = Granular.Extensions.AssemblyExtensions.FirstOrDefaultCustomAttributeCached($System_Windows_ThemeInfoAttribute).call(null, assembly);
			if (ss.isNullOrUndefined(themeInfoAttribute) || themeInfoAttribute.get_GenericDictionaryLocation() === 0) {
				return false;
			}
			var assemblyName = ((themeInfoAttribute.get_GenericDictionaryLocation() === 1) ? System.AssemblyExtensions.GetName(assembly).get_Name() : ss.formatString('{0}.{1}', System.AssemblyExtensions.GetName(assembly).get_Name(), $System_Windows_SystemResources.$ThemeName));
			var resourceDictionary = ss.cast($System_Windows_EmbeddedResourceLoader.LoadResourceElement$1(assemblyName, ss.formatString('Themes/{0}.xaml', $System_Windows_SystemResources.$ThemeNameAndColor)), $System_Windows_ResourceDictionary);
			return resourceDictionary.tryGetValue(resourceKey, value);
		}
	}, null, [$System_Windows_IResourceContainer]);
	ss.initClass($System_Windows_TemplateKey, $asm, {
		get_Assembly: function() {
			return (ss.isValue(this.get_TargetType()) ? ss.getTypeAssembly(this.get_TargetType()) : null);
		},
		get_TargetType: function() {
			return this.$1$TargetTypeField;
		},
		set_TargetType: function(value) {
			this.$1$TargetTypeField = value;
		},
		equals: function(obj) {
			var other = ss.safeCast(obj, $System_Windows_TemplateKey);
			return ss.referenceEquals(this, other) || !ss.referenceEquals(other, null) && ss.staticEquals(this.get_TargetType(), other.get_TargetType());
		},
		getHashCode: function() {
			return ss.getHashCode(this.get_TargetType());
		},
		toString: function() {
			return ss.formatString('TemplateKey({0})', ss.getTypeName(this.get_TargetType()));
		}
	}, null, [$System_Windows_IResourceKey]);
	ss.initClass($System_Windows_TemplatePartAttribute, $asm, {
		get_Name: function() {
			return this.$2$NameField;
		},
		set_Name: function(value) {
			this.$2$NameField = value;
		},
		get_Type: function() {
			return this.$2$TypeField;
		},
		set_Type: function(value) {
			this.$2$TypeField = value;
		}
	});
	ss.initClass($System_Windows_TemplateVisualStateAttribute, $asm, {
		get_GroupName: function() {
			return this.$2$GroupNameField;
		},
		set_GroupName: function(value) {
			this.$2$GroupNameField = value;
		},
		get_Name: function() {
			return this.$2$NameField;
		},
		set_Name: function(value) {
			this.$2$NameField = value;
		}
	});
	ss.initEnum($System_Windows_TextTrimming, $asm, { None: 0, CharacterEllipsis: 1 });
	ss.initEnum($System_Windows_TextWrapping, $asm, { Wrap: 0, NoWrap: 1 });
	ss.initClass($System_Windows_ThemeInfoAttribute, $asm, {
		get_GenericDictionaryLocation: function() {
			return this.$2$GenericDictionaryLocationField;
		},
		set_GenericDictionaryLocation: function(value) {
			this.$2$GenericDictionaryLocationField = value;
		}
	});
	$System_Windows_ThemeInfoAttribute.$ctor1.prototype = $System_Windows_ThemeInfoAttribute.prototype;
	ss.initClass($System_Windows_Thickness, $asm, {
		get_Left: function() {
			return this.$1$LeftField;
		},
		set_Left: function(value) {
			this.$1$LeftField = value;
		},
		get_Top: function() {
			return this.$1$TopField;
		},
		set_Top: function(value) {
			this.$1$TopField = value;
		},
		get_Right: function() {
			return this.$1$RightField;
		},
		set_Right: function(value) {
			this.$1$RightField = value;
		},
		get_Bottom: function() {
			return this.$1$BottomField;
		},
		set_Bottom: function(value) {
			this.$1$BottomField = value;
		},
		get_Location: function() {
			return this.$1$LocationField;
		},
		set_Location: function(value) {
			this.$1$LocationField = value;
		},
		get_Size: function() {
			return this.$1$SizeField;
		},
		set_Size: function(value) {
			this.$1$SizeField = value;
		},
		get_IsUniform: function() {
			return this.$1$IsUniformField;
		},
		set_IsUniform: function(value) {
			this.$1$IsUniformField = value;
		},
		toString: function() {
			return (this.get_IsUniform() ? ss.formatString('Thickness({0})', this.get_Left()) : ss.formatString('Thickness({0}, {1}, {2}, {3})', this.get_Top(), this.get_Right(), this.get_Bottom(), this.get_Left()));
		},
		equals: function(obj) {
			var other = ss.safeCast(obj, $System_Windows_Thickness);
			return ss.referenceEquals(this, other) || !ss.referenceEquals(other, null) && ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Number]).Default.areEqual(this.get_Left(), other.get_Left()) && ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Number]).Default.areEqual(this.get_Top(), other.get_Top()) && ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Number]).Default.areEqual(this.get_Right(), other.get_Right()) && ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Number]).Default.areEqual(this.get_Bottom(), other.get_Bottom());
		},
		getHashCode: function() {
			return ss.getHashCode(this.get_Left()) ^ ss.getHashCode(this.get_Top()) ^ ss.getHashCode(this.get_Right()) ^ ss.getHashCode(this.get_Bottom());
		}
	});
	$System_Windows_Thickness.$ctor1.prototype = $System_Windows_Thickness.$ctor2.prototype = $System_Windows_Thickness.$ctor3.prototype = $System_Windows_Thickness.prototype;
	ss.initClass($System_Windows_ThicknessExtensions, $asm, {});
	ss.initClass($System_Windows_Trigger, $asm, {
		get_Property: function() {
			return this.$5$PropertyField;
		},
		set_Property: function(value) {
			this.$5$PropertyField = value;
		},
		get_Value: function() {
			return this.$5$ValueField;
		},
		set_Value: function(value) {
			this.$5$ValueField = value;
		},
		get_SourceName: function() {
			return this.$5$SourceNameField;
		},
		set_SourceName: function(value) {
			this.$5$SourceNameField = value;
		},
		get_Setters: function() {
			return this.$5$SettersField;
		},
		set_Setters: function(value) {
			this.$5$SettersField = value;
		},
		get_TriggerActions: function() {
			return this.get_Setters();
		},
		CreateDataTriggerCondition: function(element) {
			if (ss.isNullOrUndefined(this.get_Property())) {
				throw new Granular.Exception('Trigger.Property cannot be null', []);
			}
			var dependencyProperty = $System_Windows_PropertyPathElementExtensions.GetDependencyProperty(this.get_Property(), ss.getInstanceType(element));
			var $t2 = ss.isNullOrUndefined(this.get_Value());
			if (!$t2) {
				var $t1 = dependencyProperty.get_PropertyType();
				$t2 = ss.isInstanceOfType(this.get_Value(), $t1);
			}
			var resolvedValue = ($t2 ? this.get_Value() : $System_Windows_Markup_TypeConverter.ConvertValue(this.get_Value().toString(), dependencyProperty.get_PropertyType(), System.Xaml.XamlNamespaces.Empty));
			var source = (Granular.Extensions.StringExtensions.IsNullOrEmpty(this.get_SourceName()) ? element : ss.safeCast($System_Windows_Markup_NameScope.GetTemplateNameScope(element).FindName(this.get_SourceName()), $System_Windows_FrameworkElement));
			return $System_Windows_$TriggerCondition.$Register(source, dependencyProperty, resolvedValue);
		}
	}, $System_Windows_DataTriggerBase, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_ITrigger, $System_Windows_IDataTriggerConditionProvider]);
	ss.initClass($System_Windows_ValueSource, $asm, {
		get_BaseValueSource: function() {
			return this.$1$BaseValueSourceField;
		},
		set_BaseValueSource: function(value) {
			this.$1$BaseValueSourceField = value;
		},
		get_IsExpression: function() {
			return this.$1$IsExpressionField;
		},
		set_IsExpression: function(value) {
			this.$1$IsExpressionField = value;
		},
		get_IsCurrent: function() {
			return this.$1$IsCurrentField;
		},
		set_IsCurrent: function(value) {
			this.$1$IsCurrentField = value;
		},
		get_IsAnimated: function() {
			return this.$1$IsAnimatedField;
		},
		set_IsAnimated: function(value) {
			this.$1$IsAnimatedField = value;
		},
		get_IsCoerced: function() {
			return this.$1$IsCoercedField;
		},
		set_IsCoerced: function(value) {
			this.$1$IsCoercedField = value;
		}
	});
	ss.initEnum($System_Windows_VerticalAlignment, $asm, { Top: 0, Center: 1, Bottom: 2, Stretch: 3 });
	ss.initEnum($System_Windows_Visibility, $asm, { Visible: 0, Hidden: 1, Collapsed: 2 });
	ss.initClass($System_Windows_VisualState, $asm, {
		get_Name: function() {
			return this.$3$NameField;
		},
		set_Name: function(value) {
			this.$3$NameField = value;
		},
		get_Storyboard: function() {
			return ss.cast(this.GetValue($System_Windows_VisualState.StoryboardProperty), $System_Windows_Media_Animation_Storyboard);
		},
		set_Storyboard: function(value) {
			this.SetValue($System_Windows_VisualState.StoryboardProperty, value, 11);
		}
	}, $System_Windows_Freezable, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_VisualStateGroup, $asm, {
		get_Name: function() {
			return this.$3$NameField;
		},
		set_Name: function(value) {
			this.$3$NameField = value;
		},
		get_States: function() {
			return this.$3$StatesField;
		},
		set_States: function(value) {
			this.$3$StatesField = value;
		},
		get_Transitions: function() {
			return this.$3$TransitionsField;
		},
		set_Transitions: function(value) {
			this.$3$TransitionsField = value;
		},
		get_CurrentState: function() {
			return this.$3$CurrentStateField;
		},
		set_CurrentState: function(value) {
			this.$3$CurrentStateField = value;
		},
		SetContainer: function(container) {
			if (ss.isValue(this.$container) && !ss.referenceEquals(this.$container, container)) {
				throw new Granular.Exception("Can't change VisualStateGroup container", []);
			}
			this.$container = container;
		},
		GoToState: function(state, useTransitions) {
			if (ss.referenceEquals(state, this.get_CurrentState())) {
				return true;
			}
			var currentStateName = (ss.isValue(this.get_CurrentState()) ? this.get_CurrentState().get_Name() : '');
			var transition = (useTransitions ? $System_Windows_VisualStateGroup.$GetTransition(this.get_Transitions(), currentStateName, state.get_Name()) : null);
			var transitionStoryboard = (ss.isValue(transition) ? transition.get_Storyboard() : null);
			var storyboard;
			if (ss.isValue(transitionStoryboard) && ss.isValue(state.get_Storyboard())) {
				// create a sequential animation with the transition storyboard first and then the state storyboard
				var sequentialTimeline = new $System_Windows_Media_Animation_SequentialTimeline();
				sequentialTimeline.get_Children().add(transitionStoryboard);
				sequentialTimeline.get_Children().add(state.get_Storyboard());
				storyboard = new $System_Windows_Media_Animation_Storyboard();
				storyboard.get_Children().add(sequentialTimeline);
			}
			else {
				storyboard = transitionStoryboard || state.get_Storyboard();
			}
			this.$StartNewStoryboard(storyboard);
			this.set_CurrentState(state);
			return true;
		},
		$StartNewStoryboard: function(newStoryboard) {
			if (ss.isValue(newStoryboard)) {
				newStoryboard.Begin(this.$container, $System_Windows_Markup_NameScope.GetTemplateNameScope(this.$container), 0, null);
				if (ss.isValue(this.$currentStoryboard)) {
					this.$currentStoryboard.Stop(this.$container);
				}
			}
			else if (ss.isValue(this.$currentStoryboard)) {
				this.$currentStoryboard.Remove(this.$container, null, null);
			}
			this.$currentStoryboard = newStoryboard;
		}
	}, $System_Windows_Freezable, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_VisualStateManager, $asm, {});
	ss.initClass($System_Windows_VisualStates, $asm, {});
	ss.initClass($System_Windows_VisualTransition, $asm, {
		get_From: function() {
			return this.$3$FromField;
		},
		set_From: function(value) {
			this.$3$FromField = value;
		},
		get_To: function() {
			return this.$3$ToField;
		},
		set_To: function(value) {
			this.$3$ToField = value;
		},
		get_Storyboard: function() {
			return ss.cast(this.GetValue($System_Windows_VisualTransition.StoryboardProperty), $System_Windows_Media_Animation_Storyboard);
		},
		set_Storyboard: function(value) {
			this.SetValue($System_Windows_VisualTransition.StoryboardProperty, value, 11);
		}
	}, $System_Windows_Freezable, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Controls_Control, $asm, {
		add_PreviewMouseDoubleClick: function(value) {
			this.AddHandler($System_Windows_Controls_Control.PreviewMouseDoubleClickEvent, value, false);
		},
		remove_PreviewMouseDoubleClick: function(value) {
			this.RemoveHandler($System_Windows_Controls_Control.PreviewMouseDoubleClickEvent, value);
		},
		add_MouseDoubleClick: function(value) {
			this.AddHandler($System_Windows_Controls_Control.MouseDoubleClickEvent, value, false);
		},
		remove_MouseDoubleClick: function(value) {
			this.RemoveHandler($System_Windows_Controls_Control.MouseDoubleClickEvent, value);
		},
		get_Template: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Control.TemplateProperty), $System_Windows_Controls_ControlTemplate);
		},
		set_Template: function(value) {
			this.SetValue($System_Windows_Controls_Control.TemplateProperty, value, 11);
		},
		get_Background: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Control.BackgroundProperty), $System_Windows_Media_Brush);
		},
		set_Background: function(value) {
			this.SetValue($System_Windows_Controls_Control.BackgroundProperty, value, 11);
		},
		get_Foreground: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Control.ForegroundProperty), $System_Windows_Media_Brush);
		},
		set_Foreground: function(value) {
			this.SetValue($System_Windows_Controls_Control.ForegroundProperty, value, 11);
		},
		get_FontFamily: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Control.FontFamilyProperty), $System_Windows_FontFamily);
		},
		set_FontFamily: function(value) {
			this.SetValue($System_Windows_Controls_Control.FontFamilyProperty, value, 11);
		},
		get_FontSize: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Control.FontSizeProperty), Number));
		},
		set_FontSize: function(value) {
			this.SetValue($System_Windows_Controls_Control.FontSizeProperty, value, 11);
		},
		get_FontStyle: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Control.FontStyleProperty), ss.Int32);
		},
		set_FontStyle: function(value) {
			this.SetValue($System_Windows_Controls_Control.FontStyleProperty, value, 11);
		},
		get_FontWeight: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Control.FontWeightProperty), ss.Int32);
		},
		set_FontWeight: function(value) {
			this.SetValue($System_Windows_Controls_Control.FontWeightProperty, value, 11);
		},
		get_FontStretch: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Control.FontStretchProperty), ss.Int32);
		},
		set_FontStretch: function(value) {
			this.SetValue($System_Windows_Controls_Control.FontStretchProperty, value, 11);
		},
		get_BorderBrush: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Control.BorderBrushProperty), $System_Windows_Media_Brush);
		},
		set_BorderBrush: function(value) {
			this.SetValue($System_Windows_Controls_Control.BorderBrushProperty, value, 11);
		},
		get_BorderThickness: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Control.BorderThicknessProperty), $System_Windows_Thickness);
		},
		set_BorderThickness: function(value) {
			this.SetValue($System_Windows_Controls_Control.BorderThicknessProperty, value, 11);
		},
		get_HorizontalContentAlignment: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Control.HorizontalContentAlignmentProperty), ss.Int32);
		},
		set_HorizontalContentAlignment: function(value) {
			this.SetValue($System_Windows_Controls_Control.HorizontalContentAlignmentProperty, value, 11);
		},
		get_VerticalContentAlignment: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Control.VerticalContentAlignmentProperty), ss.Int32);
		},
		set_VerticalContentAlignment: function(value) {
			this.SetValue($System_Windows_Controls_Control.VerticalContentAlignmentProperty, value, 11);
		},
		get_Padding: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Control.PaddingProperty), $System_Windows_Thickness);
		},
		set_Padding: function(value) {
			this.SetValue($System_Windows_Controls_Control.PaddingProperty, value, 11);
		},
		get_IsTabStop: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Control.IsTabStopProperty), Boolean));
		},
		set_IsTabStop: function(value) {
			this.SetValue($System_Windows_Controls_Control.IsTabStopProperty, value, 11);
		},
		get_TabIndex: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Control.TabIndexProperty), ss.Int32));
		},
		set_TabIndex: function(value) {
			this.SetValue($System_Windows_Controls_Control.TabIndexProperty, value, 11);
		},
		OnPropertyChanged: function(e) {
			$System_Windows_FrameworkElement.prototype.OnPropertyChanged.call(this, e);
			var metadata = ss.safeCast(e.get_Property().GetMetadata(ss.getInstanceType(this)), $System_Windows_Controls_ControlPropertyMetadata);
			if (ss.isValue(metadata) && metadata.get_AffectsVisualState()) {
				this.UpdateVisualState(true);
			}
		},
		MeasureOverride: function(availableSize) {
			if (ss.isNullOrUndefined(this.get_TemplateChild())) {
				return $System_Windows_Size.Zero;
			}
			this.get_TemplateChild().Measure(availableSize);
			return this.get_TemplateChild().get_DesiredSize();
		},
		ArrangeOverride: function(finalSize) {
			if (ss.isValue(this.get_TemplateChild())) {
				this.get_TemplateChild().Arrange(new $System_Windows_Rect(finalSize));
			}
			return finalSize;
		},
		OnResourcesChanged: function(e) {
			$System_Windows_FrameworkElement.prototype.OnResourcesChanged.call(this, e);
			this.SetValue($System_Windows_Controls_Control.TemplateProperty, this.$GetDefaultControlTemplate(), 1);
		},
		UpdateVisualState: function(useTransitions) {
			//
		},
		OnApplyTemplate: function() {
			this.UpdateVisualState(false);
		},
		GetTemplate: function() {
			return this.get_Template();
		},
		$GetDefaultControlTemplate: function() {
			var type = ss.getInstanceType(this);
			while (!ss.referenceEquals(type, $System_Windows_FrameworkElement)) {
				var value = {};
				if (this.TryGetResource(new $System_Windows_TemplateKey(type), value)) {
					return ss.safeCast(value.$, $System_Windows_Controls_ControlTemplate);
				}
				type = ss.getBaseType(type);
			}
			return null;
		},
		$RaiseMouseButtonEvent: function(e, routedEvent) {
			var eventArgs = new $System_Windows_Input_MouseButtonEventArgs(routedEvent, e.get_OriginalSource(), e.get_MouseDevice(), e.get_Timestamp(), e.get_AbsolutePosition(), e.get_ChangedButton(), e.get_ButtonState(), e.get_ClickCount());
			this.RaiseEvent(eventArgs);
			return eventArgs.get_Handled();
		}
	}, $System_Windows_FrameworkElement, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initInterface($System_Windows_Controls_IItemContainer, $asm, { PrepareContainerForItem: null, ClearContainerForItem: null });
	ss.initClass($System_Windows_Controls_ContentControl, $asm, {
		get_Content: function() {
			return this.GetValue($System_Windows_Controls_ContentControl.ContentProperty);
		},
		set_Content: function(value) {
			this.SetValue($System_Windows_Controls_ContentControl.ContentProperty, value, 11);
		},
		get_ContentTemplate: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_ContentControl.ContentTemplateProperty), $System_Windows_DataTemplate);
		},
		set_ContentTemplate: function(value) {
			this.SetValue($System_Windows_Controls_ContentControl.ContentTemplateProperty, value, 11);
		},
		get_ContentTemplateSelector: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_ContentControl.ContentTemplateSelectorProperty), $System_Windows_Controls_IDataTemplateSelector);
		},
		set_ContentTemplateSelector: function(value) {
			this.SetValue($System_Windows_Controls_ContentControl.ContentTemplateSelectorProperty, value, 11);
		},
		get_HasContent: function() {
			return ss.unbox(ss.cast(this.GetValue$1($System_Windows_Controls_ContentControl.$HasContentPropertyKey), Boolean));
		},
		set_HasContent: function(value) {
			this.SetValue$1($System_Windows_Controls_ContentControl.$HasContentPropertyKey, value, 11);
		},
		$OnContentChanged: function(e) {
			this.set_HasContent(ss.isValue(this.get_Content()));
			this.RemoveLogicalChild(e.get_OldValue());
			this.AddLogicalChild(e.get_NewValue());
		},
		PrepareContainerForItem: function(item, itemTemplate, itemContainerStyle) {
			if (!this.ContainsValue($System_Windows_Controls_ContentControl.ContentTemplateProperty) && !this.ContainsValue($System_Windows_Controls_ContentControl.ContentTemplateSelectorProperty) && ss.isValue(itemTemplate)) {
				this.set_ContentTemplate(itemTemplate);
				this.$itemTemplate = itemTemplate;
			}
			if (!this.ContainsValue($System_Windows_FrameworkElement.StyleProperty) && ss.isValue(itemContainerStyle)) {
				this.set_Style(itemContainerStyle);
				this.$itemContainerStyle = itemContainerStyle;
			}
			if (!ss.referenceEquals(item, this)) {
				this.set_Content(item);
			}
		},
		ClearContainerForItem: function(item) {
			if (ss.referenceEquals(this.$itemTemplate, this.get_ContentTemplate())) {
				this.ClearValue($System_Windows_Controls_ContentControl.ContentTemplateProperty, 11);
				this.$itemTemplate = null;
			}
			if (ss.referenceEquals(this.$itemContainerStyle, this.get_Style())) {
				this.ClearValue($System_Windows_FrameworkElement.StyleProperty, 11);
				this.$itemContainerStyle = null;
			}
			if (ss.referenceEquals(this.get_Content(), item)) {
				this.ClearValue($System_Windows_Controls_ContentControl.ContentProperty, 11);
			}
		}
	}, $System_Windows_Controls_Control, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer, $System_Windows_Controls_IItemContainer]);
	ss.initInterface($System_Windows_Controls_IPopupLayerHost, $asm, { get_PopupLayer: null });
	ss.initInterface($System_Windows_Controls_IRadioButtonGroupScope, $asm, { GetRadioButtonGroup: null });
	ss.initClass($System_Windows_Window, $asm, {
		get_Title: function() {
			return ss.cast(this.GetValue($System_Windows_Window.TitleProperty), String);
		},
		set_Title: function(value) {
			this.SetValue($System_Windows_Window.TitleProperty, value, 11);
		},
		get_AdornerLayer: function() {
			return this.$7$AdornerLayerField;
		},
		set_AdornerLayer: function(value) {
			this.$7$AdornerLayerField = value;
		},
		get_PopupLayer: function() {
			return this.$7$PopupLayerField;
		},
		set_PopupLayer: function(value) {
			this.$7$PopupLayerField = value;
		},
		OnTemplateChildChanged: function() {
			this.SetVisualChildIndex(this.get_AdornerLayer(), Enumerable.from(this.get_VisualChildren()).count() - 2);
			this.SetVisualChildIndex(this.get_PopupLayer(), Enumerable.from(this.get_VisualChildren()).count() - 1);
		},
		Show: function() {
			if (ss.isValue(this.$presentationSource)) {
				return;
			}
			if (ss.isNullOrUndefined($System_Windows_Application.get_Current().get_MainWindow())) {
				$System_Windows_Application.get_Current().set_MainWindow(this);
			}
			this.$presentationSource = $System_Windows_ApplicationHost.get_Current().get_PresentationSourceFactory().CreatePresentationSource(this);
			this.$presentationSource.set_Title(this.get_Title());
			this.$keyboardNavigation = new $System_Windows_Input_KeyboardNavigation(this.$presentationSource);
		},
		GetRadioButtonGroup: function(groupName) {
			return this.$radioButtonGroupScope.GetSelectionGroup(groupName);
		},
		MeasureOverride: function(availableSize) {
			this.get_AdornerLayer().Measure(availableSize);
			this.get_PopupLayer().Measure(availableSize);
			return $System_Windows_Controls_Control.prototype.MeasureOverride.call(this, availableSize);
		},
		ArrangeOverride: function(finalSize) {
			this.get_AdornerLayer().Arrange(new $System_Windows_Rect(finalSize));
			this.get_PopupLayer().Arrange(new $System_Windows_Rect(finalSize));
			return $System_Windows_Controls_Control.prototype.ArrangeOverride.call(this, finalSize);
		},
		$OnTitleChanged: function(e) {
			if (ss.isValue(this.$presentationSource)) {
				this.$presentationSource.set_Title(this.get_Title());
			}
		}
	}, $System_Windows_Controls_ContentControl, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer, $System_Windows_Controls_IItemContainer, $System_Windows_Controls_IPopupLayerHost, $System_Windows_Controls_IAdornerLayerHost, $System_Windows_Controls_IRadioButtonGroupScope]);
	ss.initClass($System_Windows_Controls_$GridLengthTypeConverter, $asm, {
		ConvertFrom: function(namespaces, value) {
			var text = value.toString().trim();
			if (text.toLowerCase() === 'auto') {
				return $System_Windows_Controls_GridLength.Auto;
			}
			if (text === '*') {
				return $System_Windows_Controls_GridLength.Star;
			}
			if (ss.endsWithString(text, '*')) {
				var stars = {};
				if (Granular.Compatibility.Double.TryParse(text.substr(0, text.length - 1), stars)) {
					return $System_Windows_Controls_GridLength.FromStars(stars.$);
				}
			}
			var pixels = {};
			if (Granular.Compatibility.Double.TryParse(text, pixels)) {
				return $System_Windows_Controls_GridLength.FromPixles(pixels.$);
			}
			throw new Granular.Exception('Can\'t parse GridLength value "{0}"', [text]);
		}
	}, null, [$System_Windows_Markup_ITypeConverter]);
	ss.initInterface($System_Windows_Controls_$IDefinitionBase, $asm, { get_$ActualLength: null, set_$ActualLength: null, get_$MinLength: null, get_$MaxLength: null, get_$Length: null });
	ss.initClass($System_Windows_Controls_$MeasureCache, $asm, {
		$SetMeasure: function(availableSize, measuredSize) {
			this.$availableSizes[this.$nextIndex] = availableSize;
			this.$measuredSizes[this.$nextIndex] = measuredSize;
			this.$nextIndex = (this.$nextIndex + 1) % this.$capacity;
			this.$count = Granular.Extensions.IntExtensions.Min(this.$count + 1, this.$capacity);
		},
		$TryGetMeasure: function(availableSize, measuredSize) {
			for (var i = 0; i < this.$count; i++) {
				if ($System_Windows_SizeExtensions.IsClose(this.$availableSizes[i], availableSize)) {
					measuredSize.$ = this.$measuredSizes[i];
					return true;
				}
			}
			measuredSize.$ = $System_Windows_Size.Empty;
			return false;
		},
		$Clear: function() {
			this.$count = 0;
			this.$nextIndex = 0;
		}
	});
	ss.initClass($System_Windows_Controls_$TextBoxView, $asm, {
		add_$TextChanged: function(value) {
			this.$5$TextChangedField = ss.delegateCombine(this.$5$TextChangedField, value);
		},
		remove_$TextChanged: function(value) {
			this.$5$TextChangedField = ss.delegateRemove(this.$5$TextChangedField, value);
		},
		get_$Text: function() {
			return this.$text;
		},
		set_$Text: function(value) {
			if (ss.referenceEquals(this.$text, value)) {
				return;
			}
			this.$text = value;
			this.$SetRenderElementsProperty(ss.mkdel(this, function(renderElement) {
				renderElement.set_Text(this.$text);
			}));
			this.InvalidateMeasure();
			Granular.Extensions.EventHandlerExtensions.Raise(this.$5$TextChangedField, this);
		},
		get_$MaxLength: function() {
			return this.$maxLength;
		},
		set_$MaxLength: function(value) {
			if (this.$maxLength === value) {
				return;
			}
			this.$maxLength = value;
			this.$SetRenderElementsProperty(ss.mkdel(this, function(renderElement) {
				renderElement.set_MaxLength(this.$maxLength);
			}));
		},
		add_$CaretIndexChanged: function(value) {
			this.$5$CaretIndexChangedField = ss.delegateCombine(this.$5$CaretIndexChangedField, value);
		},
		remove_$CaretIndexChanged: function(value) {
			this.$5$CaretIndexChangedField = ss.delegateRemove(this.$5$CaretIndexChangedField, value);
		},
		get_$CaretIndex: function() {
			return this.$caretIndex;
		},
		set_$CaretIndex: function(value) {
			if (this.$caretIndex === value) {
				return;
			}
			this.$caretIndex = value;
			this.$SetRenderElementsProperty(ss.mkdel(this, function(renderElement) {
				renderElement.set_CaretIndex(this.$caretIndex);
			}));
			Granular.Extensions.EventHandlerExtensions.Raise(this.$5$CaretIndexChangedField, this);
		},
		add_$SelectionStartChanged: function(value) {
			this.$5$SelectionStartChangedField = ss.delegateCombine(this.$5$SelectionStartChangedField, value);
		},
		remove_$SelectionStartChanged: function(value) {
			this.$5$SelectionStartChangedField = ss.delegateRemove(this.$5$SelectionStartChangedField, value);
		},
		get_$SelectionStart: function() {
			return this.$selectionStart;
		},
		set_$SelectionStart: function(value) {
			if (this.$selectionStart === value) {
				return;
			}
			this.$selectionStart = value;
			this.$SetRenderElementsProperty(ss.mkdel(this, function(renderElement) {
				renderElement.set_SelectionStart(this.$selectionStart);
			}));
			Granular.Extensions.EventHandlerExtensions.Raise(this.$5$SelectionStartChangedField, this);
		},
		add_$SelectionLengthChanged: function(value) {
			this.$5$SelectionLengthChangedField = ss.delegateCombine(this.$5$SelectionLengthChangedField, value);
		},
		remove_$SelectionLengthChanged: function(value) {
			this.$5$SelectionLengthChangedField = ss.delegateRemove(this.$5$SelectionLengthChangedField, value);
		},
		get_$SelectionLength: function() {
			return this.$selectionLength;
		},
		set_$SelectionLength: function(value) {
			if (this.$selectionLength === value) {
				return;
			}
			this.$selectionLength = value;
			this.$SetRenderElementsProperty(ss.mkdel(this, function(renderElement) {
				renderElement.set_SelectionLength(this.$selectionLength);
			}));
			Granular.Extensions.EventHandlerExtensions.Raise(this.$5$SelectionLengthChangedField, this);
		},
		get_$AcceptsReturn: function() {
			return this.$acceptsReturn;
		},
		set_$AcceptsReturn: function(value) {
			if (this.$acceptsReturn === value) {
				return;
			}
			this.$acceptsReturn = value;
			this.$SetRenderElementsProperty(ss.mkdel(this, function(renderElement) {
				renderElement.set_AcceptsReturn(this.$acceptsReturn);
			}));
		},
		get_$AcceptsTab: function() {
			return this.$acceptsTab;
		},
		set_$AcceptsTab: function(value) {
			if (this.$acceptsTab === value) {
				return;
			}
			this.$acceptsTab = value;
			this.$SetRenderElementsProperty(ss.mkdel(this, function(renderElement) {
				renderElement.set_AcceptsTab(this.$acceptsTab);
			}));
		},
		get_$IsReadOnly: function() {
			return this.$isReadOnly;
		},
		set_$IsReadOnly: function(value) {
			if (this.$isReadOnly === value) {
				return;
			}
			this.$isReadOnly = value;
			this.$SetRenderElementsIsReadOnly();
		},
		get_$HorizontalScrollBarVisibility: function() {
			return this.$horizontalScrollBarVisibility;
		},
		set_$HorizontalScrollBarVisibility: function(value) {
			if (this.$horizontalScrollBarVisibility === value) {
				return;
			}
			this.$horizontalScrollBarVisibility = value;
			this.$SetRenderElementsProperty(ss.mkdel(this, function(renderElement) {
				renderElement.set_HorizontalScrollBarVisibility(this.$horizontalScrollBarVisibility);
			}));
		},
		get_$VerticalScrollBarVisibility: function() {
			return this.$verticalScrollBarVisibility;
		},
		set_$VerticalScrollBarVisibility: function(value) {
			if (this.$verticalScrollBarVisibility === value) {
				return;
			}
			this.$verticalScrollBarVisibility = value;
			this.$SetRenderElementsProperty(ss.mkdel(this, function(renderElement) {
				renderElement.set_VerticalScrollBarVisibility(this.$verticalScrollBarVisibility);
			}));
		},
		get_$SpellCheck: function() {
			return this.$spellCheck;
		},
		set_$SpellCheck: function(value) {
			if (this.$spellCheck === value) {
				return;
			}
			this.$spellCheck = value;
			this.$SetRenderElementsProperty(ss.mkdel(this, function(renderElement) {
				renderElement.set_SpellCheck(this.$spellCheck);
			}));
		},
		get_$IsPassword: function() {
			return this.$isPassword;
		},
		set_$IsPassword: function(value) {
			if (this.$isPassword === value) {
				return;
			}
			if (this.$textBoxRenderElements.get_count() > 0) {
				throw new Granular.Exception("Can't set TextBoxView.IsPassword after render elements have been created", []);
			}
			this.$isPassword = value;
		},
		$SetRenderElementsProperty: function(setter) {
			var $t1 = ss.getEnumerator(this.$textBoxRenderElements.get_values());
			try {
				while ($t1.moveNext()) {
					var textBoxRenderElement = $t1.current();
					setter(textBoxRenderElement);
				}
			}
			finally {
				$t1.dispose();
			}
		},
		CreateContentRenderElementOverride: function(factory) {
			var textBoxRenderElement = {};
			if (this.$textBoxRenderElements.tryGetValue(factory, textBoxRenderElement)) {
				return textBoxRenderElement.$;
			}
			textBoxRenderElement.$ = factory.CreateTextBoxRenderElement(this);
			textBoxRenderElement.$.set_CaretIndex(this.get_$CaretIndex());
			textBoxRenderElement.$.set_SelectionLength(this.get_$SelectionLength());
			textBoxRenderElement.$.set_SelectionStart(this.get_$SelectionStart());
			textBoxRenderElement.$.set_Text(this.get_$Text());
			textBoxRenderElement.$.set_MaxLength(this.get_$MaxLength());
			textBoxRenderElement.$.set_Bounds(new $System_Windows_Rect(this.get_VisualSize()));
			textBoxRenderElement.$.set_AcceptsReturn(this.get_$AcceptsReturn());
			textBoxRenderElement.$.set_AcceptsTab(this.get_$AcceptsTab());
			textBoxRenderElement.$.set_IsPassword(this.$isPassword);
			textBoxRenderElement.$.set_IsReadOnly(this.get_$IsReadOnly() || !this.get_IsEnabled());
			textBoxRenderElement.$.set_IsHitTestVisible(this.get_IsHitTestVisible() && this.get_IsEnabled());
			textBoxRenderElement.$.set_SpellCheck(this.$spellCheck);
			textBoxRenderElement.$.set_HorizontalScrollBarVisibility(this.get_$HorizontalScrollBarVisibility());
			textBoxRenderElement.$.set_VerticalScrollBarVisibility(this.get_$VerticalScrollBarVisibility());
			textBoxRenderElement.$.set_Foreground(ss.cast(this.GetValue($System_Windows_Controls_Control.ForegroundProperty), $System_Windows_Media_Brush));
			textBoxRenderElement.$.set_FontSize(ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Control.FontSizeProperty), Number)));
			textBoxRenderElement.$.set_FontFamily(ss.cast(this.GetValue($System_Windows_Controls_Control.FontFamilyProperty), $System_Windows_FontFamily));
			textBoxRenderElement.$.set_FontStretch(ss.cast(this.GetValue($System_Windows_Controls_Control.FontStretchProperty), ss.Int32));
			textBoxRenderElement.$.set_FontStyle(ss.cast(this.GetValue($System_Windows_Controls_Control.FontStyleProperty), ss.Int32));
			textBoxRenderElement.$.set_FontWeight(ss.cast(this.GetValue($System_Windows_Controls_Control.FontWeightProperty), ss.Int32));
			textBoxRenderElement.$.set_TextAlignment(ss.cast(this.GetValue($System_Windows_Controls_TextBox.TextAlignmentProperty), ss.Int32));
			textBoxRenderElement.$.set_TextWrapping(ss.cast(this.GetValue($System_Windows_Controls_TextBox.TextWrappingProperty), ss.Int32));
			textBoxRenderElement.$.add_TextChanged(ss.mkdel({ textBoxRenderElement: textBoxRenderElement, $this: this }, function(sender, e) {
				this.$this.set_$Text(this.textBoxRenderElement.$.get_Text());
			}));
			textBoxRenderElement.$.add_CaretIndexChanged(ss.mkdel(this, function(sender1, e1) {
				this.set_$CaretIndex(ss.cast(sender1, $System_Windows_Media_ITextBoxRenderElement).get_CaretIndex());
			}));
			textBoxRenderElement.$.add_SelectionStartChanged(ss.mkdel(this, function(sender2, e2) {
				this.set_$SelectionStart(ss.cast(sender2, $System_Windows_Media_ITextBoxRenderElement).get_SelectionStart());
			}));
			textBoxRenderElement.$.add_SelectionLengthChanged(ss.mkdel(this, function(sender3, e3) {
				this.set_$SelectionLength(ss.cast(sender3, $System_Windows_Media_ITextBoxRenderElement).get_SelectionLength());
			}));
			this.$textBoxRenderElements.add(factory, textBoxRenderElement.$);
			this.InvalidateMeasure();
			return textBoxRenderElement.$;
		},
		MeasureOverride: function(availableSize) {
			return new $System_Windows_Size(0, this.$GetLineHeight());
		},
		ArrangeOverride: function(finalSize) {
			var bounds = new $System_Windows_Rect(finalSize);
			this.$SetRenderElementsProperty(function(renderElement) {
				renderElement.set_Bounds(bounds);
			});
			return finalSize;
		},
		$FocusRenderElement: function() {
			var $t1 = ss.getEnumerator(this.$textBoxRenderElements.get_values());
			try {
				while ($t1.moveNext()) {
					var textBoxRenderElement = $t1.current();
					textBoxRenderElement.Focus();
				}
			}
			finally {
				$t1.dispose();
			}
		},
		$ClearFocusRenderElement: function() {
			var $t1 = ss.getEnumerator(this.$textBoxRenderElements.get_values());
			try {
				while ($t1.moveNext()) {
					var textBoxRenderElement = $t1.current();
					textBoxRenderElement.ClearFocus();
				}
			}
			finally {
				$t1.dispose();
			}
		},
		$ProcessRenderElementKeyEvent: function(e) {
			var $t1 = ss.getEnumerator(this.$textBoxRenderElements.get_values());
			try {
				while ($t1.moveNext()) {
					var textBoxRenderElement = $t1.current();
					textBoxRenderElement.ProcessKeyEvent(e);
				}
			}
			finally {
				$t1.dispose();
			}
		},
		$OnIsEnabledChanged$1: function() {
			this.$SetRenderElementsIsHitTestVisible();
			this.$SetRenderElementsIsReadOnly();
		},
		$SetRenderElementsIsHitTestVisible: function() {
			this.$SetRenderElementsProperty(ss.mkdel(this, function(renderElement) {
				renderElement.set_IsHitTestVisible(this.get_IsHitTestVisible() && this.get_IsEnabled());
			}));
		},
		$SetRenderElementsIsReadOnly: function() {
			this.$SetRenderElementsProperty(ss.mkdel(this, function(renderElement) {
				renderElement.set_IsReadOnly(this.get_$IsReadOnly() || !this.get_IsEnabled());
			}));
		},
		$GetLineHeight: function() {
			var fontSize = ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Control.FontSizeProperty), Number));
			var fontFamily = ss.cast(this.GetValue($System_Windows_Controls_Control.FontFamilyProperty), $System_Windows_FontFamily);
			if (!Granular.Extensions.DoubleExtensions.IsNaN(this.$measuredLineHeight) && Granular.Extensions.DoubleExtensions.IsClose(this.$measuredFontSize, fontSize) && ss.referenceEquals(this.$measuredFontFamily, fontFamily)) {
				return this.$measuredLineHeight;
			}
			this.$measuredFontSize = fontSize;
			this.$measuredFontFamily = fontFamily;
			this.$measuredLineHeight = $System_Windows_ApplicationHost.get_Current().get_TextMeasurementService().Measure('', fontSize, new $System_Windows_Media_Typeface.$ctor1(fontFamily, 0, 0, 0), Number.POSITIVE_INFINITY).get_Height();
			return this.$measuredLineHeight;
		}
	}, $System_Windows_FrameworkElement, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initClass($System_Windows_Controls_Adorner, $asm, {
		get_Child: function() {
			return this.$child;
		},
		set_Child: function(value) {
			if (ss.referenceEquals(this.$child, value)) {
				return;
			}
			if (ss.isValue(this.$child)) {
				this.RemoveLogicalChild(this.$child);
				this.RemoveVisualChild(this.$child);
			}
			this.$child = value;
			if (ss.isValue(this.$child)) {
				this.AddLogicalChild(this.$child);
				this.AddVisualChild(this.$child);
			}
			this.InvalidateMeasure();
		},
		get_AdornedElement: function() {
			return this.$5$AdornedElementField;
		},
		set_AdornedElement: function(value) {
			this.$5$AdornedElementField = value;
		},
		MeasureOverride: function(availableSize) {
			if (ss.isNullOrUndefined(this.get_Child())) {
				return $System_Windows_Size.Zero;
			}
			this.get_Child().Measure(this.get_AdornedElement().get_RenderSize());
			return this.get_AdornedElement().get_RenderSize();
		},
		ArrangeOverride: function(finalSize) {
			if (ss.isValue(this.get_Child())) {
				this.get_Child().Arrange(new $System_Windows_Rect(finalSize));
			}
			return finalSize;
		}
	}, $System_Windows_FrameworkElement, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initClass($System_Windows_Controls_AdornerLayer, $asm, {
		MeasureOverride: function(availableSize) {
			var $t1 = this.get_VisualChildren();
			for (var $t2 = 0; $t2 < $t1.length; $t2++) {
				var adorner = $t1[$t2];
				adorner.Measure(availableSize);
			}
			return $System_Windows_Size.Zero;
		},
		ArrangeOverride: function(finalSize) {
			var $t1 = this.get_VisualChildren();
			for (var $t2 = 0; $t2 < $t1.length; $t2++) {
				var adorner = $t1[$t2];
				adorner.Arrange(this.$adornersBounds.get_item(adorner));
			}
			return finalSize;
		},
		Add: function(adorner) {
			this.AddLogicalChild(adorner);
			this.AddVisualChild(adorner);
			this.$adornersBounds.add(adorner, this.$GetAdornerBounds(adorner));
			this.InvalidateArrange();
		},
		Remove: function(adorner) {
			this.RemoveVisualChild(adorner);
			this.RemoveLogicalChild(adorner);
			this.$adornersBounds.remove(adorner);
		},
		OnVisualParentChanged: function(oldVisualParent, newVisualParent) {
			$System_Windows_FrameworkElement.prototype.OnVisualParentChanged.call(this, oldVisualParent, newVisualParent);
			if (ss.isInstanceOfType(oldVisualParent, $System_Windows_UIElement)) {
				ss.cast(oldVisualParent, $System_Windows_UIElement).remove_LayoutUpdated(ss.mkdel(this, this.$OnParentLayoutUpdated));
			}
			if (ss.isInstanceOfType(newVisualParent, $System_Windows_UIElement)) {
				ss.cast(newVisualParent, $System_Windows_UIElement).add_LayoutUpdated(ss.mkdel(this, this.$OnParentLayoutUpdated));
			}
		},
		$OnParentLayoutUpdated: function(sender, e) {
			this.$SetAdornersBounds();
		},
		$SetAdornersBounds: function() {
			var isInvalidated = false;
			var $t1 = this.get_VisualChildren();
			for (var $t2 = 0; $t2 < $t1.length; $t2++) {
				var adorner = $t1[$t2];
				var newBounds = this.$GetAdornerBounds(adorner);
				var oldBounds = {};
				if (!this.$adornersBounds.tryGetValue(adorner, oldBounds) || !$System_Windows_RectExtensions.IsClose(newBounds, oldBounds.$)) {
					this.$adornersBounds.set_item(adorner, newBounds);
					isInvalidated = true;
				}
			}
			if (isInvalidated) {
				this.InvalidateArrange();
				this.UpdateLayout();
			}
		},
		$GetAdornerBounds: function(adorner) {
			return new $System_Windows_Rect.$ctor2(this.PointFromRoot(adorner.get_AdornedElement().PointToRoot($System_Windows_Point.Zero)), adorner.get_AdornedElement().get_VisualSize());
		}
	}, $System_Windows_FrameworkElement, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initClass($System_Windows_Controls_Decorator, $asm, {
		get_Child: function() {
			return this.$child;
		},
		set_Child: function(value) {
			if (ss.referenceEquals(this.$child, value)) {
				return;
			}
			if (ss.isValue(this.$child)) {
				this.RemoveLogicalChild(this.$child);
				this.RemoveVisualChild(this.$child);
			}
			this.$child = value;
			if (ss.isValue(this.$child)) {
				this.AddLogicalChild(this.$child);
				this.AddVisualChild(this.$child);
			}
			this.InvalidateMeasure();
		},
		MeasureOverride: function(availableSize) {
			if (ss.isNullOrUndefined(this.get_Child())) {
				return $System_Windows_Size.Zero;
			}
			this.get_Child().Measure(availableSize);
			return this.get_Child().get_DesiredSize();
		},
		ArrangeOverride: function(finalSize) {
			if (ss.isValue(this.get_Child())) {
				this.get_Child().Arrange(new $System_Windows_Rect(finalSize));
			}
			return finalSize;
		}
	}, $System_Windows_FrameworkElement, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initClass($System_Windows_Controls_Border, $asm, {
		get_Background: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Border.BackgroundProperty), $System_Windows_Media_Brush);
		},
		set_Background: function(value) {
			this.SetValue($System_Windows_Controls_Border.BackgroundProperty, value, 11);
		},
		get_BorderBrush: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Border.BorderBrushProperty), $System_Windows_Media_Brush);
		},
		set_BorderBrush: function(value) {
			this.SetValue($System_Windows_Controls_Border.BorderBrushProperty, value, 11);
		},
		get_BorderThickness: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Border.BorderThicknessProperty), $System_Windows_Thickness);
		},
		set_BorderThickness: function(value) {
			this.SetValue($System_Windows_Controls_Border.BorderThicknessProperty, value, 11);
		},
		get_CornerRadius: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Border.CornerRadiusProperty), $System_Windows_CornerRadius);
		},
		set_CornerRadius: function(value) {
			this.SetValue($System_Windows_Controls_Border.CornerRadiusProperty, value, 11);
		},
		get_Padding: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Border.PaddingProperty), $System_Windows_Thickness);
		},
		set_Padding: function(value) {
			this.SetValue($System_Windows_Controls_Border.PaddingProperty, value, 11);
		},
		$SetRenderElementsProperty: function(setter) {
			var $t1 = ss.getEnumerator(this.$borderRenderElements.get_values());
			try {
				while ($t1.moveNext()) {
					var borderRenderElement = $t1.current();
					setter(borderRenderElement);
				}
			}
			finally {
				$t1.dispose();
			}
		},
		CreateContentRenderElementOverride: function(factory) {
			var borderRenderElement = {};
			if (this.$borderRenderElements.tryGetValue(factory, borderRenderElement)) {
				return borderRenderElement.$;
			}
			borderRenderElement.$ = factory.CreateBorderRenderElement(this);
			borderRenderElement.$.set_Background(this.get_Background());
			borderRenderElement.$.set_BorderBrush(this.get_BorderBrush());
			borderRenderElement.$.set_BorderThickness(this.get_BorderThickness());
			borderRenderElement.$.set_Bounds(new $System_Windows_Rect(this.get_VisualSize()));
			borderRenderElement.$.set_CornerRadius(this.get_CornerRadius());
			borderRenderElement.$.set_IsHitTestVisible(this.get_IsHitTestVisible());
			this.$borderRenderElements.add(factory, borderRenderElement.$);
			return borderRenderElement.$;
		},
		MeasureOverride: function(availableSize) {
			return $System_Windows_Size.op_Addition($System_Windows_Size.op_Addition($System_Windows_Controls_Decorator.prototype.MeasureOverride.call(this, $System_Windows_SizeExtensions.Max($System_Windows_Size.op_Subtraction($System_Windows_Size.op_Subtraction(availableSize, this.get_BorderThickness().get_Size()), this.get_Padding().get_Size()), $System_Windows_Size.Zero)), this.get_BorderThickness().get_Size()), this.get_Padding().get_Size());
		},
		ArrangeOverride: function(finalSize) {
			if (ss.isValue(this.get_Child())) {
				this.get_Child().Arrange(new $System_Windows_Rect.$ctor2($System_Windows_Point.op_Addition(this.get_BorderThickness().get_Location(), this.get_Padding().get_Location()), $System_Windows_SizeExtensions.Max($System_Windows_Size.op_Subtraction($System_Windows_Size.op_Subtraction(finalSize, this.get_BorderThickness().get_Size()), this.get_Padding().get_Size()), $System_Windows_Size.Zero)));
			}
			var $t1 = ss.getEnumerator(this.$borderRenderElements.get_values());
			try {
				while ($t1.moveNext()) {
					var borderRenderElement = $t1.current();
					borderRenderElement.set_Bounds(new $System_Windows_Rect(finalSize));
				}
			}
			finally {
				$t1.dispose();
			}
			return finalSize;
		},
		HitTestOverride: function(position) {
			return $System_Windows_SizeExtensions.Contains(this.get_VisualSize(), position) && (ss.isValue(this.get_Background()) || ss.isValue(this.get_BorderBrush()) && $System_Windows_Controls_Border.$IsOverBorder(position, this.get_VisualSize(), this.get_BorderThickness(), this.get_CornerRadius()));
		}
	}, $System_Windows_Controls_Decorator, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initClass($System_Windows_Controls_Primitives_ButtonBase, $asm, {
		add_Click: function(value) {
			this.AddHandler($System_Windows_Controls_Primitives_ButtonBase.ClickEvent, value, false);
		},
		remove_Click: function(value) {
			this.RemoveHandler($System_Windows_Controls_Primitives_ButtonBase.ClickEvent, value);
		},
		get_ClickMode: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Primitives_ButtonBase.ClickModeProperty), ss.Int32);
		},
		set_ClickMode: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_ButtonBase.ClickModeProperty, value, 11);
		},
		get_IsPressed: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Primitives_ButtonBase.IsPressedProperty), Boolean));
		},
		set_IsPressed: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_ButtonBase.IsPressedProperty, value, 11);
		},
		RaiseClick: function() {
			var e = new $System_Windows_RoutedEventArgs($System_Windows_Controls_Primitives_ButtonBase.ClickEvent, this);
			this.RaiseEvent(e);
			return e.get_Handled();
		},
		OnClick: function(e) {
			//
		},
		OnIsPressedChanged: function(e) {
			//
		},
		OnPressStarted: function() {
			//
		},
		OnPressEnded: function() {
			//
		},
		OnMouseDown: function(e) {
			if (e.get_ChangedButton() === 0) {
				this.Focus();
				this.set_IsPressed(true);
				this.OnPressStarted();
				e.get_MouseDevice().Capture(this);
				if (this.get_ClickMode() === 1) {
					e.set_Handled(this.RaiseClick());
				}
			}
		},
		OnMouseUp: function(e) {
			if (e.get_ChangedButton() === 0 && ss.referenceEquals(e.get_MouseDevice().get_CaptureTarget(), this)) {
				this.set_IsPressed(false);
				this.OnPressEnded();
				e.get_MouseDevice().ReleaseCapture();
				if (this.get_IsMouseOver() && this.get_ClickMode() === 0) {
					e.set_Handled(this.RaiseClick());
				}
			}
		},
		OnMouseMove: function(e) {
			if (ss.referenceEquals(e.get_MouseDevice().get_CaptureTarget(), this)) {
				this.set_IsPressed(ss.referenceEquals(e.get_MouseDevice().get_CaptureTarget(), this) && $System_Windows_Controls_Primitives_ButtonBase.$IsVisualChild(this, ss.safeCast(e.get_MouseDevice().get_HitTarget(), $System_Windows_Media_Visual)));
			}
		},
		OnKeyDown: function(e) {
			if (e.get_Key() === 18 && !this.get_IsPressed()) {
				this.set_IsPressed(true);
				this.OnPressStarted();
				if (this.get_ClickMode() === 1) {
					e.set_Handled(this.RaiseClick());
				}
			}
		},
		OnKeyUp: function(e) {
			if (e.get_Key() === 18) {
				this.set_IsPressed(false);
				this.OnPressEnded();
				if (this.get_ClickMode() === 0) {
					e.set_Handled(this.RaiseClick());
				}
			}
		},
		OnGotFocus: function(e) {
			this.$keyboardFocus = $System_Windows_Input_Keyboard.Focus(this);
		},
		OnLostFocus: function(e) {
			if (ss.isValue(this.$keyboardFocus)) {
				this.$keyboardFocus.dispose();
				this.$keyboardFocus = null;
			}
		},
		UpdateVisualState: function(useTransitions) {
			$System_Windows_VisualStateManager.GoToState(this, this.$GetCommonState(), useTransitions);
			$System_Windows_VisualStateManager.GoToState(this, this.$GetFocusState(), useTransitions);
		},
		$GetCommonState: function() {
			if (!this.get_IsEnabled()) {
				return $System_Windows_VisualStates.DisabledState;
			}
			if (this.get_IsPressed()) {
				return $System_Windows_VisualStates.PressedState;
			}
			if (this.get_IsMouseOver()) {
				return $System_Windows_VisualStates.MouseOverState;
			}
			return $System_Windows_VisualStates.NormalState;
		},
		$GetFocusState: function() {
			return (this.get_IsFocused() ? $System_Windows_VisualStates.FocusedState : $System_Windows_VisualStates.UnfocusedState);
		}
	}, $System_Windows_Controls_ContentControl, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer, $System_Windows_Controls_IItemContainer]);
	ss.initClass($System_Windows_Controls_Button, $asm, {}, $System_Windows_Controls_Primitives_ButtonBase, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer, $System_Windows_Controls_IItemContainer]);
	ss.initClass($System_Windows_Controls_Panel, $asm, {
		get_Children: function() {
			return this.$5$ChildrenField;
		},
		set_Children: function(value) {
			this.$5$ChildrenField = value;
		},
		get_IsItemsHost: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Panel.IsItemsHostProperty), Boolean));
		},
		set_IsItemsHost: function(value) {
			this.SetValue($System_Windows_Controls_Panel.IsItemsHostProperty, value, 11);
		},
		get_ItemContainerGenerator: function() {
			return this.$itemContainerGenerator;
		},
		set_ItemContainerGenerator: function(value) {
			if (ss.referenceEquals(this.$itemContainerGenerator, value)) {
				return;
			}
			if (ss.isValue(this.$itemContainerGenerator)) {
				this.$itemContainerGenerator.remove_ItemsChanged(ss.mkdel(this, this.OnGeneratorItemsChanged));
				this.get_Children().clear();
			}
			this.$itemContainerGenerator = value;
			if (ss.isValue(this.$itemContainerGenerator)) {
				this.$itemContainerGenerator.add_ItemsChanged(ss.mkdel(this, this.OnGeneratorItemsChanged));
				this.$AddChildren();
			}
		},
		get_Background: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Panel.BackgroundProperty), $System_Windows_Media_Brush);
		},
		set_Background: function(value) {
			this.SetValue($System_Windows_Controls_Panel.BackgroundProperty, value, 11);
		},
		$OnChildrenCollectionChanged: function(sender, e) {
			var $t1 = ss.getEnumerator(e.get_NewItems());
			try {
				while ($t1.moveNext()) {
					var child = $t1.current();
					$System_Windows_Controls_Panel.$MoveVisualChild(child, $System_Windows_Controls_Panel.GetZIndex(child));
				}
			}
			finally {
				$t1.dispose();
			}
		},
		MeasureOverride: null,
		ArrangeOverride: null,
		HitTestOverride: function(position) {
			return ss.isValue(this.get_Background()) && $System_Windows_SizeExtensions.Contains(this.get_VisualSize(), position);
		},
		OnGeneratorItemsChanged: function(sender, e) {
			if (e.get_Action() === 0) {
				for (var i = 0; i < e.get_ItemsCount(); i++) {
					this.get_Children().insert(i + e.get_NewStartingIndex(), this.get_ItemContainerGenerator().Generate(i + e.get_NewStartingIndex()));
				}
			}
			if (e.get_Action() === 1) {
				Granular.Extensions.ListExtensions.RemoveRange($System_Windows_UIElement).call(null, this.get_Children(), e.get_OldStartingIndex(), e.get_ContainersCount());
			}
			if (e.get_Action() === 3) {
				var movedChildren = Enumerable.from(this.get_Children()).skip(e.get_OldStartingIndex()).take(e.get_ContainersCount());
				Granular.Extensions.ListExtensions.RemoveRange($System_Windows_UIElement).call(null, this.get_Children(), e.get_OldStartingIndex(), e.get_ContainersCount());
				Granular.Extensions.ListExtensions.InsertRange($System_Windows_UIElement).call(null, this.get_Children(), e.get_NewStartingIndex(), movedChildren);
			}
			if (e.get_Action() === 2) {
				this.get_Children().set_item(e.get_NewStartingIndex(), this.get_ItemContainerGenerator().Generate(e.get_NewStartingIndex()));
			}
			if (e.get_Action() === 4) {
				this.get_Children().clear();
				this.$AddChildren();
			}
		},
		$AddChildren: function() {
			for (var i = 0; i < this.get_ItemContainerGenerator().get_ItemsCount(); i++) {
				this.get_Children().add(this.get_ItemContainerGenerator().Generate(i));
			}
		},
		$OnIsItemsHostChanged: function(e) {
			this.set_ItemContainerGenerator(((this.get_IsItemsHost() && ss.isInstanceOfType(this.get_TemplatedParent(), $System_Windows_Controls_ItemsControl)) ? ss.cast(this.get_TemplatedParent(), $System_Windows_Controls_ItemsControl).get_ItemContainerGenerator() : null));
		},
		$OnBackgroundChanged: function(e) {
			this.set_VisualBackground(this.get_Background());
		}
	}, $System_Windows_FrameworkElement, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initClass($System_Windows_Controls_Canvas, $asm, {
		MeasureOverride: function(availableSize) {
			var $t1 = this.get_Children().getEnumerator();
			try {
				while ($t1.moveNext()) {
					var child = $t1.current();
					child.Measure($System_Windows_Size.Infinity);
				}
			}
			finally {
				$t1.dispose();
			}
			return $System_Windows_Size.Zero;
		},
		ArrangeOverride: function(finalSize) {
			var $t1 = this.get_Children().getEnumerator();
			try {
				while ($t1.moveNext()) {
					var child = $t1.current();
					// Canvas.Left and Canvas.Top have higher priority
					var x = Granular.Extensions.DoubleExtensions.DefaultIfNaN(Granular.Extensions.DoubleExtensions.DefaultIfNaN($System_Windows_Controls_Canvas.GetLeft(child), finalSize.get_Width() - child.get_DesiredSize().get_Width() - $System_Windows_Controls_Canvas.GetRight(child)), 0);
					var y = Granular.Extensions.DoubleExtensions.DefaultIfNaN(Granular.Extensions.DoubleExtensions.DefaultIfNaN($System_Windows_Controls_Canvas.GetTop(child), finalSize.get_Height() - child.get_DesiredSize().get_Height() - $System_Windows_Controls_Canvas.GetBottom(child)), 0);
					child.Arrange(new $System_Windows_Rect.$ctor2(new $System_Windows_Point.$ctor1(x, y), child.get_DesiredSize()));
				}
			}
			finally {
				$t1.dispose();
			}
			return finalSize;
		}
	}, $System_Windows_Controls_Panel, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initClass($System_Windows_Controls_Primitives_ToggleButton, $asm, {
		add_Checked: function(value) {
			this.AddHandler($System_Windows_Controls_Primitives_ToggleButton.CheckedEvent, value, false);
		},
		remove_Checked: function(value) {
			this.RemoveHandler($System_Windows_Controls_Primitives_ToggleButton.CheckedEvent, value);
		},
		add_Unchecked: function(value) {
			this.AddHandler($System_Windows_Controls_Primitives_ToggleButton.UncheckedEvent, value, false);
		},
		remove_Unchecked: function(value) {
			this.RemoveHandler($System_Windows_Controls_Primitives_ToggleButton.UncheckedEvent, value);
		},
		add_Indeterminate: function(value) {
			this.AddHandler($System_Windows_Controls_Primitives_ToggleButton.IndeterminateEvent, value, false);
		},
		remove_Indeterminate: function(value) {
			this.RemoveHandler($System_Windows_Controls_Primitives_ToggleButton.IndeterminateEvent, value);
		},
		get_IsChecked: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Primitives_ToggleButton.IsCheckedProperty), Boolean);
		},
		set_IsChecked: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_ToggleButton.IsCheckedProperty, value, 11);
		},
		get_IsThreeState: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Primitives_ToggleButton.IsThreeStateProperty), Boolean));
		},
		set_IsThreeState: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_ToggleButton.IsThreeStateProperty, value, 11);
		},
		get_CheckOnClick: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Primitives_ToggleButton.CheckOnClickProperty), Boolean));
		},
		set_CheckOnClick: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_ToggleButton.CheckOnClickProperty, value, 11);
		},
		OnClick: function(e) {
			if (this.get_CheckOnClick()) {
				this.ToggleState();
			}
		},
		ToggleState: function() {
			this.SetCurrentValue($System_Windows_Controls_Primitives_ToggleButton.IsCheckedProperty, $System_Windows_Controls_Primitives_ToggleButton.GetToggledState(this.get_IsChecked(), this.get_IsThreeState()));
		},
		OnIsCheckedChanged: function(e) {
			if (ss.isValue(this.get_IsChecked()) && ss.unbox(this.get_IsChecked())) {
				this.RaiseEvent(new $System_Windows_RoutedEventArgs($System_Windows_Controls_Primitives_ToggleButton.CheckedEvent, this));
			}
			if (ss.isValue(this.get_IsChecked()) && !ss.unbox(this.get_IsChecked())) {
				this.RaiseEvent(new $System_Windows_RoutedEventArgs($System_Windows_Controls_Primitives_ToggleButton.UncheckedEvent, this));
			}
		},
		UpdateVisualState: function(useTransitions) {
			$System_Windows_Controls_Primitives_ButtonBase.prototype.UpdateVisualState.call(this, useTransitions);
			$System_Windows_VisualStateManager.GoToState(this, this.$GetCheckState(), useTransitions);
		},
		$GetCheckState: function() {
			if (ss.isValue(this.get_IsChecked())) {
				return (ss.unbox(this.get_IsChecked()) ? $System_Windows_VisualStates.CheckedState : $System_Windows_VisualStates.UncheckedState);
			}
			return $System_Windows_VisualStates.IndeterminateState;
		}
	}, $System_Windows_Controls_Primitives_ButtonBase, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer, $System_Windows_Controls_IItemContainer]);
	ss.initClass($System_Windows_Controls_CheckBox, $asm, {}, $System_Windows_Controls_Primitives_ToggleButton, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer, $System_Windows_Controls_IItemContainer]);
	ss.initClass($System_Windows_Controls_ColumnDefinition, $asm, {
		get_Width: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_ColumnDefinition.WidthProperty), $System_Windows_Controls_GridLength);
		},
		set_Width: function(value) {
			this.SetValue($System_Windows_Controls_ColumnDefinition.WidthProperty, value, 11);
		},
		get_MinWidth: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_ColumnDefinition.MinWidthProperty), Number));
		},
		set_MinWidth: function(value) {
			this.SetValue($System_Windows_Controls_ColumnDefinition.MinWidthProperty, value, 11);
		},
		get_MaxWidth: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_ColumnDefinition.MaxWidthProperty), Number));
		},
		set_MaxWidth: function(value) {
			this.SetValue($System_Windows_Controls_ColumnDefinition.MaxWidthProperty, value, 11);
		},
		get_ActualWidth: function() {
			return ss.unbox(ss.cast(this.$actualWidthValueEntry.get_Value(), Number));
		},
		set_ActualWidth: function(value) {
			this.$actualWidthValueEntry.SetBaseValue(11, value);
		},
		get_$ActualLength: function() {
			return this.get_ActualWidth();
		},
		set_$ActualLength: function(value) {
			this.set_ActualWidth(value);
		},
		get_$MinLength: function() {
			return this.get_MinWidth();
		},
		get_$MaxLength: function() {
			return this.get_MaxWidth();
		},
		get_$Length: function() {
			return this.get_Width();
		}
	}, $System_Windows_Freezable, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_Controls_$IDefinitionBase]);
	ss.initClass($System_Windows_Controls_ContentPresenter, $asm, {
		get_Content: function() {
			return this.GetValue($System_Windows_Controls_ContentPresenter.ContentProperty);
		},
		set_Content: function(value) {
			this.SetValue($System_Windows_Controls_ContentPresenter.ContentProperty, value, 11);
		},
		get_ContentTemplate: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_ContentPresenter.ContentTemplateProperty), $System_Windows_DataTemplate);
		},
		set_ContentTemplate: function(value) {
			this.SetValue($System_Windows_Controls_ContentPresenter.ContentTemplateProperty, value, 11);
		},
		get_ContentTemplateSelector: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_ContentPresenter.ContentTemplateSelectorProperty), $System_Windows_Controls_IDataTemplateSelector);
		},
		set_ContentTemplateSelector: function(value) {
			this.SetValue($System_Windows_Controls_ContentPresenter.ContentTemplateSelectorProperty, value, 11);
		},
		get_$Template: function() {
			return this.$template;
		},
		set_$Template: function(value) {
			if (ss.referenceEquals(this.$template, value)) {
				return;
			}
			this.$template = value;
			this.ApplyTemplate();
		},
		MeasureOverride: function(availableSize) {
			if (ss.isNullOrUndefined(this.get_TemplateChild())) {
				return $System_Windows_Size.Zero;
			}
			this.get_TemplateChild().Measure(availableSize);
			return this.get_TemplateChild().get_DesiredSize();
		},
		ArrangeOverride: function(finalSize) {
			if (ss.isValue(this.get_TemplateChild())) {
				this.get_TemplateChild().Arrange(new $System_Windows_Rect(finalSize));
			}
			return finalSize;
		},
		GetTemplate: function() {
			return this.get_$Template();
		},
		OnApplyTemplate: function() {
			this.$SetDataContext();
		},
		OnResourcesChanged: function(e) {
			$System_Windows_FrameworkElement.prototype.OnResourcesChanged.call(this, e);
			this.$SetTemplate();
		},
		OnContentChanged: function(e) {
			this.$SetTemplate();
		},
		$SetTemplate: function() {
			this.set_$Template(this.$FindTemplate());
		},
		$SetDataContext: function() {
			if (ss.isInstanceOfType(this.get_Content(), $System_Windows_Media_Visual)) {
				this.ClearValue($System_Windows_FrameworkElement.DataContextProperty, 11);
			}
			else {
				this.set_DataContext(this.get_Content());
			}
		},
		$FindTemplate: function() {
			if (ss.isNullOrUndefined(this.get_Content())) {
				return $System_Windows_FrameworkTemplate.Empty;
			}
			if (ss.isInstanceOfType(this.get_Content(), $System_Windows_UIElement)) {
				return new $System_$Windows_Controls_ContentPresenter$UIElementTemplate(ss.cast(this.get_Content(), $System_Windows_UIElement));
			}
			if (ss.isValue(this.get_ContentTemplate())) {
				return this.get_ContentTemplate();
			}
			if (ss.isValue(this.get_ContentTemplateSelector())) {
				this.get_ContentTemplateSelector().SelectTemplate(this.get_Content(), this);
			}
			var dataTemplate = {};
			if (this.$TryFindDataTemplate(ss.getInstanceType(this.get_Content()), dataTemplate)) {
				return dataTemplate.$;
			}
			return $System_$Windows_Controls_ContentPresenter$DefaultContentTemplate.$Default;
		},
		$TryFindDataTemplate: function(type, dataTemplate) {
			var value = {};
			if (this.TryGetResource(new $System_Windows_TemplateKey(type), value)) {
				dataTemplate.$ = ss.safeCast(value.$, $System_Windows_DataTemplate);
				return ss.isValue(dataTemplate.$);
			}
			if (ss.isValue(ss.getBaseType(type))) {
				return this.$TryFindDataTemplate(ss.getBaseType(type), dataTemplate);
			}
			dataTemplate.$ = null;
			return false;
		},
		PrepareContainerForItem: function(item, itemTemplate, itemContainerStyle) {
			if (!this.ContainsValue($System_Windows_Controls_ContentPresenter.ContentTemplateProperty) && !this.ContainsValue($System_Windows_Controls_ContentPresenter.ContentTemplateSelectorProperty)) {
				this.set_ContentTemplate(itemTemplate);
				this.$itemTemplate = itemTemplate;
			}
			if (!this.ContainsValue($System_Windows_FrameworkElement.StyleProperty)) {
				this.set_Style(itemContainerStyle);
				this.$itemContainerStyle = itemContainerStyle;
			}
			this.set_Content(item);
		},
		ClearContainerForItem: function(item) {
			if (ss.referenceEquals(this.$itemTemplate, this.get_ContentTemplate())) {
				this.ClearValue($System_Windows_Controls_ContentPresenter.ContentTemplateProperty, 11);
				this.$itemTemplate = null;
			}
			if (ss.referenceEquals(this.$itemContainerStyle, this.get_Style())) {
				this.ClearValue($System_Windows_FrameworkElement.StyleProperty, 11);
				this.$itemContainerStyle = null;
			}
			this.ClearValue($System_Windows_Controls_ContentPresenter.ContentProperty, 11);
		}
	}, $System_Windows_FrameworkElement, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer, $System_Windows_Controls_IItemContainer]);
	ss.initClass($System_Windows_Controls_ControlPropertyMetadata, $asm, {
		get_AffectsVisualState: function() {
			return this.$3$AffectsVisualStateField;
		},
		set_AffectsVisualState: function(value) {
			this.$3$AffectsVisualStateField = value;
		}
	}, $System_Windows_FrameworkPropertyMetadata);
	ss.initClass($System_Windows_Controls_ControlTemplate, $asm, {
		get_TargetType: function() {
			return this.$targetType;
		},
		set_TargetType: function(value) {
			if (ss.referenceEquals(this.$targetType, value)) {
				return;
			}
			this.$targetType = value;
		},
		get_Key: function() {
			var $t1 = this.$key;
			if (ss.isNullOrUndefined($t1)) {
				$t1 = new $System_Windows_TemplateKey(this.get_TargetType());
			}
			return $t1;
		},
		set_Key: function(value) {
			this.$key = value;
		}
	}, $System_Windows_FrameworkTemplate, [$System_Windows_IFrameworkTemplate]);
	ss.initEnum($System_Windows_Controls_Dock, $asm, { Left: 0, Top: 1, Right: 2, Bottom: 3 });
	ss.initClass($System_Windows_Controls_DockPanel, $asm, {
		get_LastChildFill: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_DockPanel.LastChildFillProperty), Boolean));
		},
		set_LastChildFill: function(value) {
			this.SetValue($System_Windows_Controls_DockPanel.LastChildFillProperty, value, 11);
		},
		MeasureOverride: function(availableSize) {
			var remainingWidth = availableSize.get_Width();
			var remainingHeight = availableSize.get_Height();
			var $t1 = this.get_Children().getEnumerator();
			try {
				while ($t1.moveNext()) {
					var child = $t1.current();
					child.Measure($System_Windows_SizeExtensions.Max(new $System_Windows_Size(remainingWidth, remainingHeight), $System_Windows_Size.Zero));
					if ($System_Windows_Controls_DockPanel.$GetDockOrientation($System_Windows_Controls_DockPanel.GetDock(child)) === 0) {
						remainingWidth -= child.get_DesiredSize().get_Width();
					}
					else {
						remainingHeight -= child.get_DesiredSize().get_Height();
					}
				}
			}
			finally {
				$t1.dispose();
			}
			var childrenWidth = 0;
			var childrenHeight = 0;
			for (var i = this.get_Children().get_count() - 1; i >= 0; i--) {
				var child1 = this.get_Children().get_item(i);
				if ($System_Windows_Controls_DockPanel.$GetDockOrientation($System_Windows_Controls_DockPanel.GetDock(child1)) === 0) {
					childrenWidth += child1.get_DesiredSize().get_Width();
					childrenHeight = Math.max(childrenHeight, child1.get_DesiredSize().get_Height());
				}
				else {
					childrenHeight += child1.get_DesiredSize().get_Height();
					childrenWidth = Math.max(childrenWidth, child1.get_DesiredSize().get_Width());
				}
			}
			return new $System_Windows_Size(childrenWidth, childrenHeight);
		},
		ArrangeOverride: function(finalSize) {
			var remainingWidth = finalSize.get_Width();
			var remainingHeight = finalSize.get_Height();
			var left = 0;
			var top = 0;
			for (var i = 0; i < this.get_Children().get_count(); i++) {
				var child = this.get_Children().get_item(i);
				var childDock = $System_Windows_Controls_DockPanel.GetDock(child);
				var childDockOrientation = $System_Windows_Controls_DockPanel.$GetDockOrientation(childDock);
				var childFill = this.get_LastChildFill() && i === this.get_Children().get_count() - 1;
				var cellWidth = ((childDockOrientation === 1 || childFill) ? remainingWidth : child.get_DesiredSize().get_Width());
				var cellHeight = ((childDockOrientation === 0 || childFill) ? remainingHeight : child.get_DesiredSize().get_Height());
				var cellLeft = ((childDock === 2) ? (remainingWidth - cellWidth) : 0);
				var cellTop = ((childDock === 3) ? (remainingHeight - cellHeight) : 0);
				child.Arrange(new $System_Windows_Rect.$ctor3(left + cellLeft, top + cellTop, Granular.Extensions.DoubleExtensions.Max(cellWidth, 0), Granular.Extensions.DoubleExtensions.Max(cellHeight, 0)));
				if (childDockOrientation === 0) {
					remainingWidth -= cellWidth;
					if (childDock === 0) {
						left += cellWidth;
					}
				}
				else {
					remainingHeight -= cellHeight;
					if (childDock === 1) {
						top += cellHeight;
					}
				}
			}
			return finalSize;
		}
	}, $System_Windows_Controls_Panel, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initEnum($System_Windows_Controls_ExpandDirection, $asm, { Down: 0, Up: 1, Left: 2, Right: 3 });
	ss.initClass($System_Windows_Controls_HeaderedContentControl, $asm, {
		get_Header: function() {
			return this.GetValue($System_Windows_Controls_HeaderedContentControl.HeaderProperty);
		},
		set_Header: function(value) {
			this.SetValue($System_Windows_Controls_HeaderedContentControl.HeaderProperty, value, 11);
		},
		get_HeaderTemplate: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_HeaderedContentControl.HeaderTemplateProperty), $System_Windows_DataTemplate);
		},
		set_HeaderTemplate: function(value) {
			this.SetValue($System_Windows_Controls_HeaderedContentControl.HeaderTemplateProperty, value, 11);
		},
		get_HeaderTemplateSelector: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_HeaderedContentControl.HeaderTemplateSelectorProperty), $System_Windows_Controls_IDataTemplateSelector);
		},
		set_HeaderTemplateSelector: function(value) {
			this.SetValue($System_Windows_Controls_HeaderedContentControl.HeaderTemplateSelectorProperty, value, 11);
		},
		get_HasHeader: function() {
			return ss.unbox(ss.cast(this.GetValue$1($System_Windows_Controls_HeaderedContentControl.$HasHeaderPropertyKey), Boolean));
		},
		set_HasHeader: function(value) {
			this.SetValue$1($System_Windows_Controls_HeaderedContentControl.$HasHeaderPropertyKey, value, 11);
		},
		$OnHeaderChanged: function(e) {
			this.set_HasHeader(ss.isValue(this.get_Header()));
			this.RemoveLogicalChild(e.get_OldValue());
			this.AddLogicalChild(e.get_NewValue());
		}
	}, $System_Windows_Controls_ContentControl, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer, $System_Windows_Controls_IItemContainer]);
	ss.initClass($System_Windows_Controls_Expander, $asm, {
		add_Expanded: function(value) {
			this.AddHandler($System_Windows_Controls_Expander.ExpandedEvent, value, false);
		},
		remove_Expanded: function(value) {
			this.RemoveHandler($System_Windows_Controls_Expander.ExpandedEvent, value);
		},
		add_Collapsed: function(value) {
			this.AddHandler($System_Windows_Controls_Expander.CollapsedEvent, value, false);
		},
		remove_Collapsed: function(value) {
			this.RemoveHandler($System_Windows_Controls_Expander.CollapsedEvent, value);
		},
		get_ExpandDirection: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Expander.ExpandDirectionProperty), ss.Int32);
		},
		set_ExpandDirection: function(value) {
			this.SetValue($System_Windows_Controls_Expander.ExpandDirectionProperty, value, 11);
		},
		get_IsExpanded: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Expander.IsExpandedProperty), Boolean));
		},
		set_IsExpanded: function(value) {
			this.SetValue($System_Windows_Controls_Expander.IsExpandedProperty, value, 11);
		},
		$OnIsExpandedChanged: function(e) {
			if (ss.unbox(ss.cast(e.get_NewValue(), Boolean))) {
				this.RaiseEvent(new $System_Windows_RoutedEventArgs($System_Windows_Controls_Expander.ExpandedEvent, this));
			}
			else {
				this.RaiseEvent(new $System_Windows_RoutedEventArgs($System_Windows_Controls_Expander.CollapsedEvent, this));
			}
		},
		UpdateVisualState: function(useTransitions) {
			$System_Windows_VisualStateManager.GoToState(this, this.$GetCommonState(), useTransitions);
			$System_Windows_VisualStateManager.GoToState(this, this.$GetExpansionState(), useTransitions);
		},
		$GetCommonState: function() {
			if (!this.get_IsEnabled()) {
				return $System_Windows_VisualStates.DisabledState;
			}
			if (this.get_IsMouseOver()) {
				return $System_Windows_VisualStates.MouseOverState;
			}
			return $System_Windows_VisualStates.NormalState;
		},
		$GetExpansionState: function() {
			return (this.get_IsExpanded() ? $System_Windows_VisualStates.ExpandedState : $System_Windows_VisualStates.CollapsedState);
		}
	}, $System_Windows_Controls_HeaderedContentControl, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer, $System_Windows_Controls_IItemContainer]);
	ss.initEnum($System_Windows_Controls_FlowDirection, $asm, { LeftToRight: 0, TopDown: 1, RightToLeft: 2, BottomUp: 3 });
	ss.initClass($System_Windows_Controls_Grid, $asm, {
		get_RowDefinitions: function() {
			return this.$6$RowDefinitionsField;
		},
		set_RowDefinitions: function(value) {
			this.$6$RowDefinitionsField = value;
		},
		get_ColumnDefinitions: function() {
			return this.$6$ColumnDefinitionsField;
		},
		set_ColumnDefinitions: function(value) {
			this.$6$ColumnDefinitionsField = value;
		},
		MeasureOverride: function(availableSize) {
			var currentRowDefinitions = ((this.get_RowDefinitions().get_count() === 0) ? this.$defaultRowDefinitions : Enumerable.from(this.get_RowDefinitions()).toArray());
			var currentColumnDefinitions = ((this.get_ColumnDefinitions().get_count() === 0) ? this.$defaultColumnDefinitions : Enumerable.from(this.get_ColumnDefinitions()).toArray());
			if (currentRowDefinitions.length === 1 && currentColumnDefinitions.length === 1) {
				// optimization
				return this.$MeasureSingleCell(availableSize, currentColumnDefinitions[0].get_$Length(), currentRowDefinitions[0].get_$Length());
			}
			var rowsLength = { $: Enumerable.from(currentRowDefinitions).select(function(definitionBase) {
				return (definitionBase.get_$Length().get_IsAbsolute() ? definitionBase.get_$Length().get_Value() : 0);
			}).toArray() };
			var columnsLength = { $: Enumerable.from(currentColumnDefinitions).select(function(definitionBase1) {
				return (definitionBase1.get_$Length().get_IsAbsolute() ? definitionBase1.get_$Length().get_Value() : 0);
			}).toArray() };
			var row = {};
			var column = {};
			var rowSpan = {};
			var columnSpan = {};
			var $t1 = this.get_Children().getEnumerator();
			try {
				while ($t1.moveNext()) {
					var child = $t1.current();
					$System_Windows_Controls_Grid.$GetChildPosition(child, currentRowDefinitions.length, currentColumnDefinitions.length, row, column, rowSpan, columnSpan);
					child.Measure(new $System_Windows_Size($System_Windows_Controls_Grid.$GetMeasureLength(currentColumnDefinitions, availableSize.get_Width(), column.$, columnSpan.$), $System_Windows_Controls_Grid.$GetMeasureLength(currentRowDefinitions, availableSize.get_Height(), row.$, rowSpan.$)));
					if (rowSpan.$ === 1 && (currentRowDefinitions[row.$].get_$Length().get_IsAuto() || currentRowDefinitions[row.$].get_$Length().get_IsStar())) {
						rowsLength.$[row.$] = Math.max(rowsLength.$[row.$], child.get_DesiredSize().get_Height());
					}
					if (columnSpan.$ === 1 && (currentColumnDefinitions[column.$].get_$Length().get_IsAuto() || currentColumnDefinitions[column.$].get_$Length().get_IsStar())) {
						columnsLength.$[column.$] = Math.max(columnsLength.$[column.$], child.get_DesiredSize().get_Width());
					}
				}
			}
			finally {
				$t1.dispose();
			}
			$System_Windows_Controls_Grid.$SetBoundedValues(currentRowDefinitions, rowsLength);
			$System_Windows_Controls_Grid.$SetBoundedValues(currentColumnDefinitions, columnsLength);
			return new $System_Windows_Size(Enumerable.from(columnsLength.$).sum(), Enumerable.from(rowsLength.$).sum());
		},
		ArrangeOverride: function(finalSize) {
			var currentRowDefinitions = ((this.get_RowDefinitions().get_count() === 0) ? this.$defaultRowDefinitions : Enumerable.from(this.get_RowDefinitions()).toArray());
			var currentColumnDefinitions = ((this.get_ColumnDefinitions().get_count() === 0) ? this.$defaultColumnDefinitions : Enumerable.from(this.get_ColumnDefinitions()).toArray());
			if (currentRowDefinitions.length === 1 && currentColumnDefinitions.length === 1) {
				// optimization
				return this.$ArrangeSingleCell(finalSize, currentColumnDefinitions[0], currentRowDefinitions[0]);
			}
			var rowsLength = { $: Enumerable.from(currentRowDefinitions).select(function(definitionBase) {
				return (definitionBase.get_$Length().get_IsAbsolute() ? definitionBase.get_$Length().get_Value() : 0);
			}).toArray() };
			var columnsLength = { $: Enumerable.from(currentColumnDefinitions).select(function(definitionBase1) {
				return (definitionBase1.get_$Length().get_IsAbsolute() ? definitionBase1.get_$Length().get_Value() : 0);
			}).toArray() };
			var row = {};
			var column = {};
			var rowSpan = {};
			var columnSpan = {};
			var $t1 = this.get_Children().getEnumerator();
			try {
				while ($t1.moveNext()) {
					var child = $t1.current();
					$System_Windows_Controls_Grid.$GetChildPosition(child, currentRowDefinitions.length, currentColumnDefinitions.length, row, column, rowSpan, columnSpan);
					if (rowSpan.$ === 1 && currentRowDefinitions[row.$].get_$Length().get_IsAuto()) {
						rowsLength.$[row.$] = Math.max(rowsLength.$[row.$], child.get_DesiredSize().get_Height());
					}
					if (columnSpan.$ === 1 && currentColumnDefinitions[column.$].get_$Length().get_IsAuto()) {
						columnsLength.$[column.$] = Math.max(columnsLength.$[column.$], child.get_DesiredSize().get_Width());
					}
				}
			}
			finally {
				$t1.dispose();
			}
			var rowStarLength = $System_Windows_Controls_Grid.$GetStarLength(currentRowDefinitions, finalSize.get_Height() - Enumerable.from(rowsLength.$).sum());
			var columnStarLength = $System_Windows_Controls_Grid.$GetStarLength(currentColumnDefinitions, finalSize.get_Width() - Enumerable.from(columnsLength.$).sum());
			$System_Windows_Controls_Grid.$SetStarLengths(currentRowDefinitions, rowStarLength, rowsLength);
			$System_Windows_Controls_Grid.$SetStarLengths(currentColumnDefinitions, columnStarLength, columnsLength);
			$System_Windows_Controls_Grid.$SetBoundedValues(currentRowDefinitions, rowsLength);
			$System_Windows_Controls_Grid.$SetBoundedValues(currentColumnDefinitions, columnsLength);
			$System_Windows_Controls_Grid.$SetActualLength(currentRowDefinitions, rowsLength.$);
			$System_Windows_Controls_Grid.$SetActualLength(currentColumnDefinitions, columnsLength.$);
			var $t2 = this.get_Children().getEnumerator();
			try {
				while ($t2.moveNext()) {
					var child1 = $t2.current();
					$System_Windows_Controls_Grid.$GetChildPosition(child1, currentRowDefinitions.length, currentColumnDefinitions.length, row, column, rowSpan, columnSpan);
					child1.Arrange(new $System_Windows_Rect.$ctor3(Enumerable.from(columnsLength.$).take(column.$).sum(), Enumerable.from(rowsLength.$).take(row.$).sum(), Enumerable.from(columnsLength.$).skip(column.$).take(columnSpan.$).sum(), Enumerable.from(rowsLength.$).skip(row.$).take(rowSpan.$).sum()));
				}
			}
			finally {
				$t2.dispose();
			}
			return finalSize;
		},
		$MeasureSingleCell: function(availableSize, width, height) {
			var desiredSize = $System_Windows_Size.Zero;
			availableSize = new $System_Windows_Size((width.get_IsAbsolute() ? width.get_Value() : availableSize.get_Width()), (height.get_IsAbsolute() ? height.get_Value() : availableSize.get_Height()));
			var $t1 = this.get_Children().getEnumerator();
			try {
				while ($t1.moveNext()) {
					var child = $t1.current();
					child.Measure(availableSize);
					desiredSize = $System_Windows_SizeExtensions.Max(desiredSize, child.get_DesiredSize());
				}
			}
			finally {
				$t1.dispose();
			}
			return desiredSize;
		},
		$ArrangeSingleCell: function(finalSize, columnDefinition, rowDefinition) {
			var finalWidth = (rowDefinition.get_$Length().get_IsAbsolute() ? rowDefinition.get_$Length().get_Value() : finalSize.get_Width());
			var finalHeight = (columnDefinition.get_$Length().get_IsAbsolute() ? columnDefinition.get_$Length().get_Value() : finalSize.get_Height());
			var finalRect = new $System_Windows_Rect.$ctor1(finalWidth, finalHeight);
			var $t1 = this.get_Children().getEnumerator();
			try {
				while ($t1.moveNext()) {
					var child = $t1.current();
					child.Arrange(finalRect);
				}
			}
			finally {
				$t1.dispose();
			}
			columnDefinition.set_$ActualLength(finalWidth);
			rowDefinition.set_$ActualLength(finalHeight);
			return finalSize;
		}
	}, $System_Windows_Controls_Panel, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initClass($System_Windows_Controls_GridLength, $asm, {
		get_GridUnitType: function() {
			return this.$1$GridUnitTypeField;
		},
		set_GridUnitType: function(value) {
			this.$1$GridUnitTypeField = value;
		},
		get_Value: function() {
			return this.$1$ValueField;
		},
		set_Value: function(value) {
			this.$1$ValueField = value;
		},
		get_IsAuto: function() {
			return this.get_GridUnitType() === 0;
		},
		get_IsAbsolute: function() {
			return this.get_GridUnitType() === 1;
		},
		get_IsStar: function() {
			return this.get_GridUnitType() === 2;
		},
		equals: function(obj) {
			var other = ss.safeCast(obj, $System_Windows_Controls_GridLength);
			return ss.referenceEquals(this, other) || !ss.referenceEquals(other, null) && this.get_GridUnitType() === other.get_GridUnitType() && ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Number]).Default.areEqual(this.get_Value(), other.get_Value());
		},
		getHashCode: function() {
			return ss.getHashCode(this.get_GridUnitType()) ^ ss.getHashCode(this.get_Value());
		},
		toString: function() {
			return (this.get_IsAuto() ? 'Auto' : ss.formatString('{0}{1}', this.get_Value(), (this.get_IsAbsolute() ? 'px' : '*')));
		}
	});
	ss.initEnum($System_Windows_Controls_GridUnitType, $asm, { Auto: 0, Pixel: 1, Star: 2 });
	ss.initInterface($System_Windows_Controls_IDataTemplateSelector, $asm, { SelectTemplate: null });
	ss.initInterface($System_Windows_Controls_IGeneratorHost, $asm, { get_View: null, GetContainerForItem: null, PrepareContainerForItem: null, ClearContainerForItem: null });
	ss.initInterface($System_Windows_Controls_IItemContainerGenerator, $asm, { add_ItemsChanged: null, remove_ItemsChanged: null, get_ItemsCount: null, Generate: null, RemoveRange: null, ContainerFromItem: null, ItemFromContainer: null, IndexFromContainer: null });
	ss.initClass($System_Windows_Controls_Image, $asm, {
		add_ImageFailed: function(value) {
			this.AddHandler($System_Windows_Controls_Image.ImageFailedEvent, value, false);
		},
		remove_ImageFailed: function(value) {
			this.RemoveHandler($System_Windows_Controls_Image.ImageFailedEvent, value);
		},
		get_Source: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Image.SourceProperty), $System_Windows_Media_ImageSource);
		},
		set_Source: function(value) {
			this.SetValue($System_Windows_Controls_Image.SourceProperty, value, 11);
		},
		get_Stretch: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Image.StretchProperty), ss.Int32);
		},
		set_Stretch: function(value) {
			this.SetValue($System_Windows_Controls_Image.StretchProperty, value, 11);
		},
		get_StretchDirection: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Image.StretchDirectionProperty), ss.Int32);
		},
		set_StretchDirection: function(value) {
			this.SetValue($System_Windows_Controls_Image.StretchDirectionProperty, value, 11);
		},
		get_$BitmapSource: function() {
			return this.$bitmapSource;
		},
		set_$BitmapSource: function(value) {
			if (ss.referenceEquals(this.$bitmapSource, value)) {
				return;
			}
			if (ss.isValue(this.$bitmapSource)) {
				this.$bitmapSource.remove_DownloadCompleted(ss.mkdel(this, this.$OnBitmapSourceDownloadCompleted));
				this.$bitmapSource.remove_DownloadFailed(ss.mkdel(this, this.$OnBitmapSourceDownloadFailed));
			}
			this.$bitmapSource = value;
			if (ss.isValue(this.$bitmapSource)) {
				this.$bitmapSource.add_DownloadCompleted(ss.mkdel(this, this.$OnBitmapSourceDownloadCompleted));
				this.$bitmapSource.add_DownloadFailed(ss.mkdel(this, this.$OnBitmapSourceDownloadFailed));
			}
		},
		CreateContentRenderElementOverride: function(factory) {
			var imageRenderElement = {};
			if (this.$imageRenderElements.tryGetValue(factory, imageRenderElement)) {
				return imageRenderElement.$;
			}
			imageRenderElement.$ = factory.CreateImageRenderElement(this);
			if (ss.isValue(this.get_Source())) {
				imageRenderElement.$.set_Bounds($System_Windows_Controls_Image.$GetStretchRect(this.get_Source().get_Size(), this.get_VisualBounds().get_Size(), this.get_Stretch(), this.get_StretchDirection()));
				imageRenderElement.$.set_Source(this.get_Source());
			}
			this.$imageRenderElements.add(factory, imageRenderElement.$);
			return imageRenderElement.$;
		},
		MeasureOverride: function(availableSize) {
			if ((this.get_Stretch() === 0 || this.get_StretchDirection() === 0) && ss.isValue(this.get_Source())) {
				return $System_Windows_SizeExtensions.DefaultIfNullOrEmpty(this.get_Source().get_Size(), null);
			}
			return $System_Windows_Size.Zero;
		},
		ArrangeOverride: function(finalSize) {
			var imageRenderElementBounds = (ss.isValue(this.get_Source()) ? $System_Windows_Controls_Image.$GetStretchRect(this.get_Source().get_Size(), finalSize, this.get_Stretch(), this.get_StretchDirection()) : $System_Windows_Rect.Zero);
			var $t1 = ss.getEnumerator(this.$imageRenderElements.get_values());
			try {
				while ($t1.moveNext()) {
					var imageRenderElement = $t1.current();
					imageRenderElement.set_Bounds(imageRenderElementBounds);
					imageRenderElement.set_Source(this.get_Source());
				}
			}
			finally {
				$t1.dispose();
			}
			return finalSize;
		},
		$OnSourceChanged: function(e) {
			this.set_$BitmapSource(ss.safeCast(this.get_Source(), $System_Windows_Media_Imaging_BitmapSource));
			this.InvalidateMeasure();
		},
		$OnBitmapSourceDownloadCompleted: function(sender, e) {
			this.InvalidateMeasure();
		},
		$OnBitmapSourceDownloadFailed: function(sender, e) {
			this.RaiseEvent(new $System_Windows_RoutedEventArgs($System_Windows_Controls_Image.ImageFailedEvent, this));
		}
	}, $System_Windows_FrameworkElement, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initClass($System_Windows_Controls_InnerCollectionView, $asm, {
		add_CollectionChanged: function(value) {
			this.$1$CollectionChangedField = ss.delegateCombine(this.$1$CollectionChangedField, value);
		},
		remove_CollectionChanged: function(value) {
			this.$1$CollectionChangedField = ss.delegateRemove(this.$1$CollectionChangedField, value);
		},
		add_CurrentChanged: function(value) {
			this.$1$CurrentChangedField = ss.delegateCombine(this.$1$CurrentChangedField, value);
		},
		remove_CurrentChanged: function(value) {
			this.$1$CurrentChangedField = ss.delegateRemove(this.$1$CurrentChangedField, value);
		},
		get_SourceCollection: function() {
			return this;
		},
		get_CurrentItem: function() {
			return this.$currentItem;
		},
		set_CurrentItem: function(value) {
			this.$SetCurrent$1(value);
		},
		get_CurrentItemIndex: function() {
			return this.$currentItemIndex;
		},
		set_CurrentItemIndex: function(value) {
			this.$SetCurrent(value);
		},
		get_CanFilter: function() {
			return false;
		},
		get_FilterPredicate: function() {
			return this.$1$FilterPredicateField;
		},
		set_FilterPredicate: function(value) {
			this.$1$FilterPredicateField = value;
		},
		get_CanSort: function() {
			return false;
		},
		get_SortKeySelector: function() {
			return this.$1$SortKeySelectorField;
		},
		set_SortKeySelector: function(value) {
			this.$1$SortKeySelectorField = value;
		},
		get_SortDirection: function() {
			return this.$1$SortDirectionField;
		},
		set_SortDirection: function(value) {
			this.$1$SortDirectionField = value;
		},
		get_item: function(index) {
			return this.$innerCollection.get_item(index);
		},
		set_item: function(index, value) {
			this.$innerCollection.set_item(index, value);
		},
		get_count: function() {
			return this.$innerCollection.get_count();
		},
		get_IsReadOnly: function() {
			return false;
		},
		$OnInnerCollectionChanged: function(sender, e) {
			this.$SetCurrent$1(this.get_CurrentItem());
			Granular.Collections.NotifyCollectionChangedEventHandlerExtensions.Raise(this.$1$CollectionChangedField, this, e);
		},
		$SetCurrent$1: function(item) {
			var itemIndex = this.$innerCollection.indexOf(item);
			if (itemIndex !== -1) {
				this.$SetCurrent$2(item, itemIndex);
			}
			else if (this.$currentItemIndex >= 0 && this.$currentItemIndex < this.$innerCollection.get_count()) {
				this.$SetCurrent$2(this.$innerCollection.get_item(this.$currentItemIndex), this.$currentItemIndex);
			}
			else {
				this.$SetCurrent$2(null, Math.min(this.$currentItemIndex, this.$innerCollection.get_count()));
			}
		},
		$SetCurrent: function(itemIndex) {
			if (itemIndex >= 0 && itemIndex < this.$innerCollection.get_count()) {
				this.$SetCurrent$2(this.$innerCollection.get_item(itemIndex), itemIndex);
			}
			else {
				this.$SetCurrent$2(null, Math.min(itemIndex, this.$innerCollection.get_count()));
			}
		},
		$SetCurrent$2: function(item, itemIndex) {
			if (ss.referenceEquals(this.$currentItem, item) && this.$currentItemIndex === itemIndex) {
				return;
			}
			this.$currentItem = item;
			this.$currentItemIndex = itemIndex;
			Granular.Extensions.EventHandlerExtensions.Raise(this.$1$CurrentChangedField, this);
		},
		add: function(value) {
			this.$innerCollection.add(value);
		},
		clear: function() {
			this.$innerCollection.clear();
		},
		contains: function(value) {
			return this.$innerCollection.contains(value);
		},
		indexOf: function(value) {
			return this.$innerCollection.indexOf(value);
		},
		insert: function(index, value) {
			this.$innerCollection.insert(index, value);
		},
		remove: function(value) {
			return this.$innerCollection.remove(value);
		},
		removeAt: function(index) {
			this.$innerCollection.removeAt(index);
		},
		CopyTo: function(array, arrayIndex) {
			this.$innerCollection.CopyTo(array, arrayIndex);
		},
		getEnumerator: function() {
			return this.$innerCollection.getEnumerator();
		}
	}, null, [ss.IEnumerable, ss.IEnumerable, Granular.Collections.INotifyCollectionChanged, ss.makeGenericType(Granular.Collections.IObservableCollection$1, [Object]), $System_Windows_Data_ICollectionView, ss.ICollection, ss.IList]);
	ss.initInterface($System_Windows_Controls_IStyleSelector, $asm, { SelectStyle: null });
	ss.initClass($System_Windows_Controls_ItemCollection, $asm, {
		add_CollectionChanged: function(value) {
			this.$1$CollectionChangedField = ss.delegateCombine(this.$1$CollectionChangedField, value);
		},
		remove_CollectionChanged: function(value) {
			this.$1$CollectionChangedField = ss.delegateRemove(this.$1$CollectionChangedField, value);
		},
		add_CurrentChanged: function(value) {
			this.$1$CurrentChangedField = ss.delegateCombine(this.$1$CurrentChangedField, value);
		},
		remove_CurrentChanged: function(value) {
			this.$1$CurrentChangedField = ss.delegateRemove(this.$1$CurrentChangedField, value);
		},
		get_SourceCollection: function() {
			return this.$delegateView.get_SourceCollection();
		},
		get_CurrentItem: function() {
			return this.$delegateView.get_CurrentItem();
		},
		set_CurrentItem: function(value) {
			this.$delegateView.set_CurrentItem(value);
		},
		get_CurrentItemIndex: function() {
			return this.$delegateView.get_CurrentItemIndex();
		},
		set_CurrentItemIndex: function(value) {
			this.$delegateView.set_CurrentItemIndex(value);
		},
		get_CanFilter: function() {
			return this.$delegateView.get_CanFilter();
		},
		get_FilterPredicate: function() {
			return this.$delegateView.get_FilterPredicate();
		},
		set_FilterPredicate: function(value) {
			this.$delegateView.set_FilterPredicate(value);
		},
		get_CanSort: function() {
			return this.$delegateView.get_CanSort();
		},
		get_SortKeySelector: function() {
			return this.$delegateView.get_SortKeySelector();
		},
		set_SortKeySelector: function(value) {
			this.$delegateView.set_SortKeySelector(value);
		},
		get_SortDirection: function() {
			return this.$delegateView.get_SortDirection();
		},
		set_SortDirection: function(value) {
			this.$delegateView.set_SortDirection(value);
		},
		get_item: function(index) {
			return Enumerable.from(this.$delegateView).elementAt(index);
		},
		set_item: function(index, value) {
			this.$VerifyDefaultView();
			this.$defaultView.set_item(index, value);
		},
		get_count: function() {
			return Enumerable.from(this.$delegateView).count();
		},
		SetItemsSource: function(source) {
			if (ss.isValue(this.$innerView)) {
				if (ss.referenceEquals(this.$innerView.get_SourceCollection(), source)) {
					return;
				}
				this.$innerView.dispose();
				this.$innerView = null;
			}
			if (ss.isInstanceOfType(source, $System_Windows_Data_ICollectionView)) {
				this.$SetDelegateView(ss.cast(source, $System_Windows_Data_ICollectionView));
			}
			else {
				this.$innerView = new $System_Windows_Data_CollectionView(source);
				this.$SetDelegateView(this.$innerView);
			}
		},
		ClearItemsSource: function() {
			if (ss.isValue(this.$innerView)) {
				this.$innerView.dispose();
				this.$innerView = null;
			}
			this.$SetDelegateView(this.$defaultView);
		},
		$SetDelegateView: function(collectionView) {
			if (ss.referenceEquals(this.$delegateView, collectionView)) {
				return;
			}
			var oldItems;
			if (ss.isValue(this.$delegateView)) {
				this.$delegateView.remove_CollectionChanged(ss.mkdel(this, this.OnDelegateViewCollectionChanged));
				this.$delegateView.remove_CurrentChanged(ss.mkdel(this, this.OnDelegateViewCurrentChanged));
				oldItems = Enumerable.from(this.$delegateView).select(function(x) {
					return ss.cast(x, Object);
				});
			}
			else {
				oldItems = [];
			}
			this.$delegateView = collectionView || $System_Windows_Data_CollectionView.Empty;
			this.$delegateView.add_CollectionChanged(ss.mkdel(this, this.OnDelegateViewCollectionChanged));
			this.$delegateView.add_CurrentChanged(ss.mkdel(this, this.OnDelegateViewCurrentChanged));
			Granular.Collections.NotifyCollectionChangedEventHandlerExtensions.Raise(this.$1$CollectionChangedField, this, Granular.Collections.NotifyCollectionChangedEventArgs.Reset(oldItems, Enumerable.from(this.$delegateView).select(function(x) {
				return ss.cast(x, Object);
			})));
			Granular.Extensions.EventHandlerExtensions.Raise(this.$1$CurrentChangedField, this);
		},
		OnDelegateViewCollectionChanged: function(sender, e) {
			Granular.Collections.NotifyCollectionChangedEventHandlerExtensions.Raise(this.$1$CollectionChangedField, this, e);
		},
		OnDelegateViewCurrentChanged: function(sender, e) {
			Granular.Extensions.EventHandlerExtensions.Raise$3(this.$1$CurrentChangedField, this, e);
		},
		add: function(value) {
			this.$VerifyDefaultView();
			this.$defaultView.add(value);
		},
		clear: function() {
			this.$VerifyDefaultView();
			this.$defaultView.clear();
		},
		contains: function(value) {
			this.$VerifyDefaultView();
			return this.$defaultView.contains(value);
		},
		indexOf: function(value) {
			return Granular.Compatibility.Array.IndexOf(Object).call(null, Enumerable.from(this.$delegateView).select(function(x) {
				return ss.cast(x, Object);
			}).toArray(), value);
		},
		insert: function(index, value) {
			this.$VerifyDefaultView();
			this.$defaultView.insert(index, value);
		},
		get_IsReadOnly: function() {
			return false;
		},
		remove: function(value) {
			this.$VerifyDefaultView();
			return this.$defaultView.remove(value);
		},
		removeAt: function(index) {
			this.$VerifyDefaultView();
			this.$defaultView.removeAt(index);
		},
		CopyTo: function(array, arrayIndex) {
			System.Linq.EnumerableExtensions.CopyTo(Object).call(null, Enumerable.from(this.$delegateView).toArray(), array, arrayIndex);
		},
		$VerifyDefaultView: function() {
			if (!ss.referenceEquals(this.$delegateView, this.$defaultView)) {
				throw new Granular.Exception("Can't change ItemCollection while ItemSource is set", []);
			}
		},
		getEnumerator: function() {
			return ss.getEnumerator(this.$delegateView);
		}
	}, null, [ss.IEnumerable, ss.IEnumerable, Granular.Collections.INotifyCollectionChanged, ss.makeGenericType(Granular.Collections.IObservableCollection$1, [Object]), $System_Windows_Data_ICollectionView, ss.ICollection, ss.IList]);
	ss.initClass($System_Windows_Controls_ItemContainerGenerator, $asm, {
		add_ItemsChanged: function(value) {
			this.$1$ItemsChangedField = ss.delegateCombine(this.$1$ItemsChangedField, value);
		},
		remove_ItemsChanged: function(value) {
			this.$1$ItemsChangedField = ss.delegateRemove(this.$1$ItemsChangedField, value);
		},
		get_ItemsCount: function() {
			return this.$host.get_View().get_count();
		},
		dispose: function() {
			this.$host.get_View().remove_CollectionChanged(ss.mkdel(this, this.$OnViewCollectionChanged));
			this.RemoveRange(0, this.get_ItemsCount());
		},
		$OnViewCollectionChanged: function(sender, e) {
			var oldItemsCount = Enumerable.from(e.get_OldItems()).count();
			var newItemsCount = Enumerable.from(e.get_NewItems()).count();
			var oldContainersCount = Enumerable.from(this.$generatedContainers).where(function(container) {
				return container.get_$Index() >= e.get_OldStartingIndex() && container.get_$Index() < e.get_OldStartingIndex() + oldItemsCount;
			}).count();
			if (e.get_Action() === 0) {
				this.$ShiftGeneratedContainersIndex(e.get_NewStartingIndex(), newItemsCount);
			}
			if (e.get_Action() === 1) {
				this.RemoveRange(e.get_OldStartingIndex(), oldItemsCount);
				this.$ShiftGeneratedContainersIndex(e.get_OldStartingIndex(), -oldItemsCount);
			}
			if (e.get_Action() === 3) {
				this.$SwitchGeneratedContainersIndex(e.get_OldStartingIndex(), e.get_NewStartingIndex(), newItemsCount);
			}
			if (e.get_Action() === 2) {
				this.$RefershRange(e.get_NewStartingIndex(), newItemsCount);
			}
			if (e.get_Action() === 4) {
				this.RemoveRange(0, this.get_ItemsCount());
			}
			Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_Controls_ItemsChangedEventArgs).call(null, this.$1$ItemsChangedField, this, new $System_Windows_Controls_ItemsChangedEventArgs(e.get_Action(), e.get_OldStartingIndex(), e.get_NewStartingIndex(), newItemsCount, oldContainersCount));
		},
		Generate: function(index) {
			var container = Enumerable.from(this.$generatedContainers).firstOrDefault(function(c) {
				return c.get_$Index() === index;
			}, ss.getDefaultValue($System_$Windows_Controls_ItemContainerGenerator$GeneratedItemContainer));
			if (ss.isNullOrUndefined(container)) {
				container = new $System_$Windows_Controls_ItemContainerGenerator$GeneratedItemContainer(this.$host.GetContainerForItem(this.$host.get_View().get_item(index)), this.$host.get_View().get_item(index), index);
				this.$host.PrepareContainerForItem(container.get_$Item(), container.get_$Container());
				this.$generatedContainers.push(container);
			}
			return container.get_$Container();
		},
		RemoveRange: function(startIndex, count) {
			var i = 0;
			while (i < this.$generatedContainers.length) {
				var container = this.$generatedContainers[i];
				if (container.get_$Index() >= startIndex && container.get_$Index() < startIndex + count) {
					this.$Remove(container);
					continue;
				}
				i++;
			}
		},
		$Remove: function(container) {
			ss.remove(this.$generatedContainers, container);
			this.$host.ClearContainerForItem(container.get_$Item(), container.get_$Container());
		},
		$RefershRange: function(startIndex, count) {
			for (var $t1 = 0; $t1 < this.$generatedContainers.length; $t1++) {
				var container = this.$generatedContainers[$t1];
				if (container.get_$Index() >= startIndex && container.get_$Index() < startIndex + count) {
					this.$Refersh(container);
				}
			}
		},
		$Refersh: function(container) {
			this.$host.ClearContainerForItem(container.get_$Item(), container.get_$Container());
			container.set_$Item(this.$host.get_View().get_item(container.get_$Index()));
			container.set_$Container(this.$host.GetContainerForItem(this.$host.get_View().get_item(container.get_$Index())));
			this.$host.PrepareContainerForItem(container.get_$Item(), container.get_$Container());
		},
		ContainerFromItem: function(item) {
			var generatedItemContainer = Enumerable.from(this.$generatedContainers).firstOrDefault(function(c) {
				return ss.referenceEquals(c.get_$Item(), item);
			}, ss.getDefaultValue($System_$Windows_Controls_ItemContainerGenerator$GeneratedItemContainer));
			return (ss.isValue(generatedItemContainer) ? generatedItemContainer.get_$Container() : null);
		},
		ItemFromContainer: function(container) {
			var generatedItemContainer = Enumerable.from(this.$generatedContainers).firstOrDefault(function(c) {
				return ss.referenceEquals(c.get_$Container(), container);
			}, ss.getDefaultValue($System_$Windows_Controls_ItemContainerGenerator$GeneratedItemContainer));
			return (ss.isValue(generatedItemContainer) ? generatedItemContainer.get_$Item() : null);
		},
		IndexFromContainer: function(container) {
			var generatedItemContainer = Enumerable.from(this.$generatedContainers).firstOrDefault(function(c) {
				return ss.referenceEquals(c.get_$Container(), container);
			}, ss.getDefaultValue($System_$Windows_Controls_ItemContainerGenerator$GeneratedItemContainer));
			return (ss.isValue(generatedItemContainer) ? generatedItemContainer.get_$Index() : -1);
		},
		$ShiftGeneratedContainersIndex: function(startIndex, offset) {
			for (var $t1 = 0; $t1 < this.$generatedContainers.length; $t1++) {
				var container = this.$generatedContainers[$t1];
				if (container.get_$Index() >= startIndex) {
					container.set_$Index(container.get_$Index() + offset);
				}
			}
		},
		$SwitchGeneratedContainersIndex: function(sourceIndex, targetIndex, count) {
			var offset = targetIndex - sourceIndex;
			for (var $t1 = 0; $t1 < this.$generatedContainers.length; $t1++) {
				var container = this.$generatedContainers[$t1];
				if (container.get_$Index() >= sourceIndex && container.get_$Index() < sourceIndex + count) {
					container.set_$Index(container.get_$Index() + offset);
				}
				else if (container.get_$Index() >= sourceIndex && container.get_$Index() < targetIndex || container.get_$Index() >= targetIndex && container.get_$Index() < sourceIndex) {
					container.set_$Index(container.get_$Index() - offset);
				}
			}
		}
	}, null, [$System_Windows_Controls_IItemContainerGenerator, ss.IDisposable]);
	ss.initClass($System_Windows_Controls_ItemContainerGeneratorExtensions, $asm, {});
	ss.initClass($System_Windows_Controls_ItemsChangedEventArgs, $asm, {
		get_Action: function() {
			return this.$2$ActionField;
		},
		set_Action: function(value) {
			this.$2$ActionField = value;
		},
		get_OldStartingIndex: function() {
			return this.$2$OldStartingIndexField;
		},
		set_OldStartingIndex: function(value) {
			this.$2$OldStartingIndexField = value;
		},
		get_NewStartingIndex: function() {
			return this.$2$NewStartingIndexField;
		},
		set_NewStartingIndex: function(value) {
			this.$2$NewStartingIndexField = value;
		},
		get_ItemsCount: function() {
			return this.$2$ItemsCountField;
		},
		set_ItemsCount: function(value) {
			this.$2$ItemsCountField = value;
		},
		get_ContainersCount: function() {
			return this.$2$ContainersCountField;
		},
		set_ContainersCount: function(value) {
			this.$2$ContainersCountField = value;
		}
	}, ss.EventArgs);
	ss.initClass($System_Windows_Controls_ItemsControl, $asm, {
		get_ItemsSource: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_ItemsControl.ItemsSourceProperty), ss.IEnumerable);
		},
		set_ItemsSource: function(value) {
			this.SetValue($System_Windows_Controls_ItemsControl.ItemsSourceProperty, value, 11);
		},
		get_ItemContainerStyle: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_ItemsControl.ItemContainerStyleProperty), $System_Windows_Style);
		},
		set_ItemContainerStyle: function(value) {
			this.SetValue($System_Windows_Controls_ItemsControl.ItemContainerStyleProperty, value, 11);
		},
		get_ItemContainerStyleSelector: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_ItemsControl.ItemContainerStyleSelectorProperty), $System_Windows_Controls_IStyleSelector);
		},
		set_ItemContainerStyleSelector: function(value) {
			this.SetValue($System_Windows_Controls_ItemsControl.ItemContainerStyleSelectorProperty, value, 11);
		},
		get_ItemsPanel: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_ItemsControl.ItemsPanelProperty), $System_Windows_IFrameworkTemplate);
		},
		set_ItemsPanel: function(value) {
			this.SetValue($System_Windows_Controls_ItemsControl.ItemsPanelProperty, value, 11);
		},
		get_ItemTemplate: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_ItemsControl.ItemTemplateProperty), $System_Windows_DataTemplate);
		},
		set_ItemTemplate: function(value) {
			this.SetValue($System_Windows_Controls_ItemsControl.ItemTemplateProperty, value, 11);
		},
		get_ItemTemplateSelector: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_ItemsControl.ItemTemplateSelectorProperty), $System_Windows_Controls_IDataTemplateSelector);
		},
		set_ItemTemplateSelector: function(value) {
			this.SetValue($System_Windows_Controls_ItemsControl.ItemTemplateSelectorProperty, value, 11);
		},
		get_Items: function() {
			return this.$6$ItemsField;
		},
		set_Items: function(value) {
			this.$6$ItemsField = value;
		},
		get_View: function() {
			return this.get_Items();
		},
		get_ItemContainerGenerator: function() {
			return ss.cast(this.GetValue$1($System_Windows_Controls_ItemsControl.$ItemContainerGeneratorPropertyKey), $System_Windows_Controls_IItemContainerGenerator);
		},
		set_ItemContainerGenerator: function(value) {
			this.SetValue$1($System_Windows_Controls_ItemsControl.$ItemContainerGeneratorPropertyKey, value, 11);
		},
		IsItemItsOwnContainer: function(item) {
			return this.IsItemItsOwnContainerOverride(item);
		},
		IsItemItsOwnContainerOverride: function(item) {
			return ss.isInstanceOfType(item, $System_Windows_FrameworkElement);
		},
		GetContainerForItem: function(item) {
			if (this.IsItemItsOwnContainer(item)) {
				return ss.safeCast(item, $System_Windows_FrameworkElement);
			}
			return this.GetContainerForItemOverride();
		},
		GetContainerForItemOverride: function() {
			return new $System_Windows_Controls_ContentPresenter();
		},
		PrepareContainerForItem: function(item, container) {
			this.PrepareContainerForItemOverride(item, container);
			this.OnPrepareContainerForItem(item, container);
		},
		PrepareContainerForItemOverride: function(item, container) {
			if (ss.isInstanceOfType(container, $System_Windows_Controls_IItemContainer)) {
				var itemTemplate = this.get_ItemTemplate() || (ss.isValue(this.get_ItemTemplateSelector()) ? this.get_ItemTemplateSelector().SelectTemplate(item, container) : null);
				var itemContainerStyle = this.get_ItemContainerStyle() || (ss.isValue(this.get_ItemContainerStyleSelector()) ? this.get_ItemContainerStyleSelector().SelectStyle(item, container) : null);
				ss.cast(container, $System_Windows_Controls_IItemContainer).PrepareContainerForItem(item, itemTemplate, itemContainerStyle);
			}
		},
		OnPrepareContainerForItem: function(item, container) {
			//
		},
		ClearContainerForItem: function(item, container) {
			this.ClearContainerForItemOverride(item, container);
			this.OnClearContainerForItem(item, container);
		},
		ClearContainerForItemOverride: function(item, container) {
			if (ss.isInstanceOfType(container, $System_Windows_Controls_IItemContainer)) {
				ss.cast(container, $System_Windows_Controls_IItemContainer).ClearContainerForItem(item);
			}
		},
		OnClearContainerForItem: function(item, container) {
			//
		},
		$OnItemsSourceChanged: function(e) {
			if (ss.isNullOrUndefined(this.get_ItemsSource()) && !this.GetValueSource($System_Windows_Controls_ItemsControl.ItemsSourceProperty).get_IsExpression()) {
				this.get_Items().ClearItemsSource();
			}
			else {
				this.get_Items().SetItemsSource(this.get_ItemsSource());
			}
		}
	}, $System_Windows_Controls_Control, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer, $System_Windows_Controls_IGeneratorHost]);
	ss.initClass($System_Windows_Controls_ItemsPanelTemplate, $asm, {}, $System_Windows_FrameworkTemplate, [$System_Windows_IFrameworkTemplate]);
	ss.initClass($System_Windows_Controls_ItemsPresenter, $asm, {
		get_ItemContainerGenerator: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_ItemsPresenter.ItemContainerGeneratorProperty), $System_Windows_Controls_IItemContainerGenerator);
		},
		set_ItemContainerGenerator: function(value) {
			this.SetValue($System_Windows_Controls_ItemsPresenter.ItemContainerGeneratorProperty, value, 11);
		},
		get_Template: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_ItemsPresenter.TemplateProperty), $System_Windows_IFrameworkTemplate);
		},
		set_Template: function(value) {
			this.SetValue($System_Windows_Controls_ItemsPresenter.TemplateProperty, value, 11);
		},
		get_Panel: function() {
			return this.$panel;
		},
		set_Panel: function(value) {
			if (ss.referenceEquals(this.$panel, value)) {
				return;
			}
			if (ss.isValue(this.$panel)) {
				this.$panel.set_ItemContainerGenerator(null);
			}
			this.$panel = value;
			if (ss.isValue(this.$panel)) {
				this.$panel.set_ItemContainerGenerator(this.get_ItemContainerGenerator());
			}
		},
		MeasureOverride: function(availableSize) {
			if (ss.isNullOrUndefined(this.get_Panel())) {
				return $System_Windows_Size.Zero;
			}
			this.get_Panel().Measure(availableSize);
			return this.get_Panel().get_DesiredSize();
		},
		ArrangeOverride: function(finalSize) {
			if (ss.isValue(this.get_Panel())) {
				this.get_Panel().Arrange(new $System_Windows_Rect(finalSize));
			}
			return finalSize;
		},
		GetTemplate: function() {
			return this.get_Template();
		},
		$OnItemContainerGeneratorChanged: function(e) {
			if (ss.isValue(this.get_Panel())) {
				this.get_Panel().set_ItemContainerGenerator(this.get_ItemContainerGenerator());
			}
		},
		$OnTemplateChanged: function(e) {
			if (ss.isValue(this.get_ItemContainerGenerator())) {
				this.get_ItemContainerGenerator().RemoveRange(0, this.get_ItemContainerGenerator().get_ItemsCount());
			}
			this.ApplyTemplate();
			this.set_Panel(ss.safeCast(Enumerable.from(this.get_VisualChildren()).firstOrDefault(null, ss.getDefaultValue($System_Windows_Media_Visual)), $System_Windows_Controls_Panel));
		}
	}, $System_Windows_FrameworkElement, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initClass($System_Windows_Controls_Primitives_Selector, $asm, {
		add_SelectionChanged: function(value) {
			this.AddHandler($System_Windows_Controls_Primitives_Selector.SelectionChangedEvent, value, false);
		},
		remove_SelectionChanged: function(value) {
			this.RemoveHandler($System_Windows_Controls_Primitives_Selector.SelectionChangedEvent, value);
		},
		add_Selected: function(value) {
			this.AddHandler($System_Windows_Controls_Primitives_Selector.SelectedEvent, value, false);
		},
		remove_Selected: function(value) {
			this.RemoveHandler($System_Windows_Controls_Primitives_Selector.SelectedEvent, value);
		},
		add_Unselected: function(value) {
			this.AddHandler($System_Windows_Controls_Primitives_Selector.UnselectedEvent, value, false);
		},
		remove_Unselected: function(value) {
			this.RemoveHandler($System_Windows_Controls_Primitives_Selector.UnselectedEvent, value);
		},
		get_IsSynchronizedWithCurrentItem: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Primitives_Selector.IsSynchronizedWithCurrentItemProperty), Boolean);
		},
		set_IsSynchronizedWithCurrentItem: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_Selector.IsSynchronizedWithCurrentItemProperty, value, 11);
		},
		get_SelectedIndex: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Primitives_Selector.SelectedIndexProperty), ss.Int32));
		},
		set_SelectedIndex: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_Selector.SelectedIndexProperty, value, 11);
		},
		get_SelectedItem: function() {
			return this.GetValue($System_Windows_Controls_Primitives_Selector.SelectedItemProperty);
		},
		set_SelectedItem: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_Selector.SelectedItemProperty, value, 11);
		},
		get_SelectedValue: function() {
			return this.GetValue($System_Windows_Controls_Primitives_Selector.SelectedValueProperty);
		},
		set_SelectedValue: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_Selector.SelectedValueProperty, value, 11);
		},
		get_SelectedValuePath: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Primitives_Selector.SelectedValuePathProperty), String);
		},
		set_SelectedValuePath: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_Selector.SelectedValuePathProperty, value, 11);
		},
		get_IsSelected: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Primitives_Selector.IsSelectedProperty), Boolean));
		},
		set_IsSelected: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_Selector.IsSelectedProperty, value, 11);
		},
		OnGotFocus: function(e) {
			$System_Windows_Controls_Primitives_Selector.$SetIsSelectionActive(this, true);
		},
		OnLostFocus: function(e) {
			$System_Windows_Controls_Primitives_Selector.$SetIsSelectionActive(this, false);
		},
		$OnSelectedIndexChanged: function(e) {
			//
		},
		$OnSelectedItemChanged: function(e) {
			if (ss.isValue(e.get_OldValue())) {
				this.get_ItemContainerGenerator().ContainerFromItem(e.get_OldValue()).SetCurrentValue($System_Windows_Controls_Primitives_Selector.IsSelectedProperty, false);
			}
			if (ss.isValue(e.get_NewValue())) {
				this.get_ItemContainerGenerator().ContainerFromItem(e.get_NewValue()).SetCurrentValue($System_Windows_Controls_Primitives_Selector.IsSelectedProperty, true);
			}
		},
		$OnSelectedValueChanged: function(e) {
			//
		}
	}, $System_Windows_Controls_ItemsControl, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer, $System_Windows_Controls_IGeneratorHost]);
	ss.initClass($System_Windows_Controls_ListBox, $asm, {
		get_SelectedItems: function() {
			return ss.cast(this.GetValue$1($System_Windows_Controls_ListBox.$SelectedItemsPropertyKey), ss.IEnumerable);
		},
		set_SelectedItems: function(value) {
			this.SetValue$1($System_Windows_Controls_ListBox.$SelectedItemsPropertyKey, value, 11);
		},
		get_SelectionMode: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_ListBox.SelectionModeProperty), ss.Int32);
		},
		set_SelectionMode: function(value) {
			this.SetValue($System_Windows_Controls_ListBox.SelectionModeProperty, value, 11);
		},
		IsItemItsOwnContainerOverride: function(item) {
			return ss.isInstanceOfType(item, $System_Windows_Controls_ListBoxItem);
		},
		GetContainerForItemOverride: function() {
			return new $System_Windows_Controls_ListBoxItem();
		},
		OnPrepareContainerForItem: function(item, container) {
			container.add_PreviewMouseDown(ss.mkdel(this, this.$OnItemContainerPreviewMouseDown));
			// handled too
			container.add_MouseDown(ss.mkdel(this, this.$OnItemContainerMouseDown));
			container.add_KeyDown(ss.mkdel(this, this.$OnItemContainerKeyDown));
			container.add_GotKeyboardFocus(ss.mkdel(this, this.$OnItemContainerGotKeyboardFocus));
		},
		OnClearContainerForItem: function(item, container) {
			container.remove_PreviewMouseDown(ss.mkdel(this, this.$OnItemContainerPreviewMouseDown));
			// handled too
			container.remove_MouseDown(ss.mkdel(this, this.$OnItemContainerMouseDown));
			container.remove_KeyDown(ss.mkdel(this, this.$OnItemContainerKeyDown));
			container.remove_GotKeyboardFocus(ss.mkdel(this, this.$OnItemContainerGotKeyboardFocus));
		},
		$OnItemContainerPreviewMouseDown: function(sender, e) {
			if (e.get_ChangedButton() === 0 || e.get_ChangedButton() === 2) {
				this.$isItemContainerBeingClicked = true;
			}
		},
		$OnItemContainerMouseDown: function(sender, e) {
			if (e.get_ChangedButton() === 0 || e.get_ChangedButton() === 2) {
				this.$selectionBehavior.$SetClickSelection(ss.cast(sender, $System_Windows_Controls_ListBoxItem), $System_Windows_ApplicationHostExtensions.GetKeyboardDeviceFromElement($System_Windows_ApplicationHost.get_Current(), this).get_Modifiers());
				this.$isItemContainerBeingClicked = false;
			}
		},
		$OnItemContainerKeyDown: function(sender, e) {
			if (e.get_Key() === 18) {
				this.$selectionBehavior.$SetClickSelection(ss.cast(sender, $System_Windows_Controls_ListBoxItem), e.get_KeyboardDevice().get_Modifiers());
			}
		},
		$OnItemContainerGotKeyboardFocus: function(sender, e) {
			if (!this.$isItemContainerBeingClicked) {
				this.$selectionBehavior.$SetFocusChangeSelection(ss.cast(sender, $System_Windows_Controls_ListBoxItem), e.get_KeyboardDevice().get_Modifiers());
			}
		},
		$SetSelectionBehavior: function() {
			this.$selectionBehavior = $System_Windows_Controls_ListBox.$CreateSelectionBehavior(this, this.get_SelectionMode());
		},
		$SetSelectionAnchor: function(item) {
			this.$selectionAnchor = item;
		},
		$SetSingleSelection: function(item) {
			this.set_SelectedItem(this.get_ItemContainerGenerator().ItemFromContainer(item));
			for (var i = 0; i < this.get_ItemContainerGenerator().get_ItemsCount(); i++) {
				var itemContainer = this.get_ItemContainerGenerator().Generate(i);
				itemContainer.SetCurrentValue($System_Windows_Controls_Primitives_Selector.IsSelectedProperty, ss.referenceEquals(itemContainer, item));
			}
		},
		$SetRangeSelection: function(item) {
			var itemIndex = this.get_ItemContainerGenerator().IndexFromContainer(item);
			var selectionAnchorIndex = this.get_ItemContainerGenerator().IndexFromContainer(this.$selectionAnchor);
			var rangeStartIndex = Granular.Extensions.IntExtensions.Min(itemIndex, selectionAnchorIndex);
			var rangeEndIndex = Granular.Extensions.IntExtensions.Max(itemIndex, selectionAnchorIndex);
			for (var i = 0; i < this.get_ItemContainerGenerator().get_ItemsCount(); i++) {
				var itemContainer = this.get_ItemContainerGenerator().Generate(i);
				itemContainer.SetCurrentValue($System_Windows_Controls_Primitives_Selector.IsSelectedProperty, rangeStartIndex <= i && i <= rangeEndIndex);
			}
		},
		$ToggleSelection: function(item) {
			item.SetCurrentValue($System_Windows_Controls_Primitives_Selector.IsSelectedProperty, !ss.unbox(ss.cast(item.GetValue($System_Windows_Controls_Primitives_Selector.IsSelectedProperty), Boolean)));
		},
		$ToggleSingleSelection: function(item) {
			var isSelected = !ss.unbox(ss.cast(item.GetValue($System_Windows_Controls_Primitives_Selector.IsSelectedProperty), Boolean));
			this.set_SelectedItem((isSelected ? this.get_ItemContainerGenerator().ItemFromContainer(item) : null));
			for (var i = 0; i < this.get_ItemContainerGenerator().get_ItemsCount(); i++) {
				var itemContainer = this.get_ItemContainerGenerator().Generate(i);
				itemContainer.SetCurrentValue($System_Windows_Controls_Primitives_Selector.IsSelectedProperty, ss.referenceEquals(itemContainer, item) && isSelected);
			}
		}
	}, $System_Windows_Controls_Primitives_Selector, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer, $System_Windows_Controls_IGeneratorHost]);
	ss.initClass($System_Windows_Controls_ListBoxItem, $asm, {
		add_Selected: function(value) {
			this.AddHandler($System_Windows_Controls_ListBoxItem.SelectedEvent, value, false);
		},
		remove_Selected: function(value) {
			this.RemoveHandler($System_Windows_Controls_ListBoxItem.SelectedEvent, value);
		},
		add_Unselected: function(value) {
			this.AddHandler($System_Windows_Controls_ListBoxItem.UnselectedEvent, value, false);
		},
		remove_Unselected: function(value) {
			this.RemoveHandler($System_Windows_Controls_ListBoxItem.UnselectedEvent, value);
		},
		get_IsSelected: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_ListBoxItem.IsSelectedProperty), Boolean));
		},
		set_IsSelected: function(value) {
			this.SetValue($System_Windows_Controls_ListBoxItem.IsSelectedProperty, value, 11);
		},
		OnMouseDown: function(e) {
			this.Focus();
		},
		$OnIsSelectedChanged: function(e) {
			this.RaiseEvent(new $System_Windows_RoutedEventArgs(((ss.unbox(ss.cast(e.get_NewValue(), Boolean)) === true) ? $System_Windows_Controls_ListBoxItem.SelectedEvent : $System_Windows_Controls_ListBoxItem.UnselectedEvent), this));
		},
		UpdateVisualState: function(useTransitions) {
			$System_Windows_VisualStateManager.GoToState(this, this.$GetCommonState(), useTransitions);
			$System_Windows_VisualStateManager.GoToState(this, this.$GetSelectionState(), useTransitions);
			$System_Windows_VisualStateManager.GoToState(this, this.$GetFocusState(), useTransitions);
		},
		$GetCommonState: function() {
			if (!this.get_IsEnabled()) {
				return $System_Windows_VisualStates.DisabledState;
			}
			if (this.get_IsMouseOver()) {
				return $System_Windows_VisualStates.MouseOverState;
			}
			return $System_Windows_VisualStates.NormalState;
		},
		$GetSelectionState: function() {
			if (!this.get_IsSelected()) {
				return $System_Windows_VisualStates.UnselectedState;
			}
			if (!$System_Windows_Controls_Primitives_Selector.GetIsSelectionActive(this)) {
				return $System_Windows_VisualStates.SelectedUnfocusedState;
			}
			return $System_Windows_VisualStates.SelectedState;
		},
		$GetFocusState: function() {
			return (this.get_IsFocused() ? $System_Windows_VisualStates.FocusedState : $System_Windows_VisualStates.UnfocusedState);
		}
	}, $System_Windows_Controls_ContentControl, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer, $System_Windows_Controls_IItemContainer]);
	ss.initEnum($System_Windows_Controls_Orientation, $asm, { Horizontal: 0, Vertical: 1 });
	ss.initClass($System_Windows_Controls_PasswordBox, $asm, {
		add_PasswordChanged: function(value) {
			this.AddHandler($System_Windows_Controls_PasswordBox.PasswordChangedEvent, value, false);
		},
		remove_PasswordChanged: function(value) {
			this.RemoveHandler($System_Windows_Controls_PasswordBox.PasswordChangedEvent, value);
		},
		get_MaxLength: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_PasswordBox.MaxLengthProperty), ss.Int32));
		},
		set_MaxLength: function(value) {
			this.SetValue($System_Windows_Controls_PasswordBox.MaxLengthProperty, value, 11);
		},
		get_Password: function() {
			return this.$password;
		},
		set_Password: function(value) {
			if (ss.referenceEquals(this.$password, value)) {
				return;
			}
			this.$password = value;
			this.$textBoxView.set_$Text(this.$password);
			this.RaiseEvent(new $System_Windows_RoutedEventArgs($System_Windows_Controls_PasswordBox.PasswordChangedEvent, this));
		},
		OnApplyTemplate: function() {
			$System_Windows_Controls_Control.prototype.OnApplyTemplate.call(this);
			if (ss.isNullOrUndefined(this.get_Template())) {
				this.$contentHost = null;
			}
			else {
				this.$contentHost = ss.safeCast($System_Windows_FrameworkTemplateExtensions.FindName(this.get_Template(), 'PART_ContentHost', this), $System_Windows_Controls_Decorator);
				this.$contentHost.set_Child(this.$textBoxView);
			}
		},
		SelectAll: function() {
			this.$textBoxView.set_$SelectionStart(0);
			this.$textBoxView.set_$SelectionLength(this.get_Password().length);
		},
		OnGotFocus: function(e) {
			this.$textBoxView.$FocusRenderElement();
		},
		OnLostFocus: function(e) {
			this.$textBoxView.$ClearFocusRenderElement();
		},
		OnMouseDown: function(e) {
			this.Focus();
		},
		UpdateVisualState: function(useTransitions) {
			$System_Windows_VisualStateManager.GoToState(this, this.$GetCommonState(), useTransitions);
			$System_Windows_VisualStateManager.GoToState(this, this.$GetFocusState(), useTransitions);
		},
		$GetCommonState: function() {
			if (!this.get_IsEnabled()) {
				return $System_Windows_VisualStates.DisabledState;
			}
			if (this.get_IsMouseOver()) {
				return $System_Windows_VisualStates.MouseOverState;
			}
			return $System_Windows_VisualStates.NormalState;
		},
		$GetFocusState: function() {
			return (this.get_IsFocused() ? $System_Windows_VisualStates.FocusedState : $System_Windows_VisualStates.UnfocusedState);
		}
	}, $System_Windows_Controls_Control, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initClass($System_Windows_Controls_PopupLayer, $asm, {
		add_ClosePopupRequest: function(value) {
			this.$5$ClosePopupRequestField = ss.delegateCombine(this.$5$ClosePopupRequestField, value);
		},
		remove_ClosePopupRequest: function(value) {
			this.$5$ClosePopupRequestField = ss.delegateRemove(this.$5$ClosePopupRequestField, value);
		},
		MeasureOverride: function(availableSize) {
			var $t1 = this.get_VisualChildren();
			for (var $t2 = 0; $t2 < $t1.length; $t2++) {
				var child = $t1[$t2];
				child.Measure(availableSize);
			}
			return $System_Windows_Size.Zero;
		},
		ArrangeOverride: function(finalSize) {
			var $t1 = this.get_VisualChildren();
			for (var $t2 = 0; $t2 < $t1.length; $t2++) {
				var child = $t1[$t2];
				child.Arrange(new $System_Windows_Rect.$ctor2($System_Windows_Controls_PopupLayer.GetPosition(child), child.get_DesiredSize()));
			}
			return finalSize;
		},
		AddChild: function(child) {
			this.AddVisualChild(child);
			this.$BringToFront(child);
			this.InvalidateMeasure();
		},
		RemoveChild: function(child) {
			this.RemoveVisualChild(child);
			this.InvalidateMeasure();
		},
		OnMouseDown: function(e) {
			if (ss.referenceEquals(e.get_OriginalSource(), this)) {
				Granular.Extensions.EventHandlerExtensions.Raise(this.$5$ClosePopupRequestField, this);
				e.set_Handled(e.get_MouseDevice().ProcessRawEvent(new $System_Windows_Input_RawMouseButtonEventArgs(e.get_ChangedButton(), e.get_ButtonState(), e.get_AbsolutePosition(), e.get_Timestamp())));
			}
		},
		HitTestOverride: function(position) {
			// receive a click if there is a non "StaysOpen" child opened
			return Enumerable.from(this.get_VisualChildren()).any(function(child) {
				return $System_Windows_Controls_PopupLayer.GetIsOpen(child) && !$System_Windows_Controls_PopupLayer.GetStaysOpen(child);
			});
		},
		$BringToFront: function(child) {
			this.SetVisualChildIndex(child, Enumerable.from(this.get_VisualChildren()).count() - 1);
		}
	}, $System_Windows_FrameworkElement, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initClass($System_Windows_Controls_Primitives_RangeBase, $asm, {
		add_ValueChanged: function(value) {
			this.AddHandler($System_Windows_Controls_Primitives_RangeBase.ValueChangedEvent, value, false);
		},
		remove_ValueChanged: function(value) {
			this.RemoveHandler($System_Windows_Controls_Primitives_RangeBase.ValueChangedEvent, value);
		},
		get_Value: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Primitives_RangeBase.ValueProperty), Number));
		},
		set_Value: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_RangeBase.ValueProperty, value, 11);
		},
		get_Minimum: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Primitives_RangeBase.MinimumProperty), Number));
		},
		set_Minimum: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_RangeBase.MinimumProperty, value, 11);
		},
		get_Maximum: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Primitives_RangeBase.MaximumProperty), Number));
		},
		set_Maximum: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_RangeBase.MaximumProperty, value, 11);
		},
		get_SmallChange: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Primitives_RangeBase.SmallChangeProperty), Number));
		},
		set_SmallChange: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_RangeBase.SmallChangeProperty, value, 11);
		},
		get_LargeChange: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Primitives_RangeBase.LargeChangeProperty), Number));
		},
		set_LargeChange: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_RangeBase.LargeChangeProperty, value, 11);
		},
		UpdateVisualState: function(useTransitions) {
			$System_Windows_VisualStateManager.GoToState(this, this.$GetCommonState(), useTransitions);
			$System_Windows_VisualStateManager.GoToState(this, this.$GetFocusState(), useTransitions);
		},
		OnValueChanged: function(e) {
			this.RaiseEvent(new (ss.makeGenericType($System_Windows_RoutedPropertyChangedEventArgs$1, [Number]))($System_Windows_Controls_Primitives_RangeBase.ValueChangedEvent, this, ss.unbox(ss.cast(e.get_OldValue(), Number)), ss.unbox(ss.cast(e.get_NewValue(), Number))));
		},
		OnMinimumChanged: function(e) {
			this.CoerceValue($System_Windows_Controls_Primitives_RangeBase.ValueProperty);
			// CoerceValueRange may return a different value
		},
		OnMaximumChanged: function(e) {
			this.CoerceValue($System_Windows_Controls_Primitives_RangeBase.ValueProperty);
			// CoerceValueRange may return a different value
		},
		$GetCommonState: function() {
			if (!this.get_IsEnabled()) {
				return $System_Windows_VisualStates.DisabledState;
			}
			if (this.get_IsMouseOver()) {
				return $System_Windows_VisualStates.MouseOverState;
			}
			return $System_Windows_VisualStates.NormalState;
		},
		$GetFocusState: function() {
			return (this.get_IsKeyboardFocused() ? $System_Windows_VisualStates.FocusedState : $System_Windows_VisualStates.UnfocusedState);
		}
	}, $System_Windows_Controls_Control, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initClass($System_Windows_Controls_ProgressBar, $asm, {
		get_IsIndeterminate: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_ProgressBar.IsIndeterminateProperty), Boolean));
		},
		set_IsIndeterminate: function(value) {
			this.SetValue($System_Windows_Controls_ProgressBar.IsIndeterminateProperty, value, 11);
		},
		get_$Track: function() {
			return this.$track;
		},
		set_$Track: function(value) {
			if (ss.referenceEquals(this.$track, value)) {
				return;
			}
			if (ss.isValue(this.$track)) {
				this.$track.remove_LayoutUpdated(ss.mkdel(this, this.$OnTrackLayoutUpdated));
			}
			this.$track = value;
			if (ss.isValue(this.$track)) {
				this.$track.add_LayoutUpdated(ss.mkdel(this, this.$OnTrackLayoutUpdated));
			}
		},
		get_$Indicator: function() {
			return this.$indicator;
		},
		set_$Indicator: function(value) {
			if (ss.referenceEquals(this.$indicator, value)) {
				return;
			}
			if (ss.isValue(this.$indicator)) {
				this.$indicator.remove_LayoutUpdated(ss.mkdel(this, this.$OnIndicatorLayoutUpdated));
			}
			this.$indicator = value;
			if (ss.isValue(this.$indicator)) {
				this.$indicator.add_LayoutUpdated(ss.mkdel(this, this.$OnIndicatorLayoutUpdated));
			}
		},
		OnApplyTemplate: function() {
			$System_Windows_Controls_Control.prototype.OnApplyTemplate.call(this);
			if (ss.isValue(this.get_Template())) {
				this.set_$Track(ss.safeCast($System_Windows_FrameworkTemplateExtensions.FindName(this.get_Template(), 'PART_Track', this), $System_Windows_FrameworkElement));
				this.set_$Indicator(ss.safeCast($System_Windows_FrameworkTemplateExtensions.FindName(this.get_Template(), 'PART_Indicator', this), $System_Windows_FrameworkElement));
				this.$glow = ss.safeCast($System_Windows_FrameworkTemplateExtensions.FindName(this.get_Template(), 'PART_Glow', this), $System_Windows_Controls_Border);
			}
			else {
				this.set_$Track(null);
				this.set_$Indicator(null);
				this.$glow = null;
			}
			this.$SetIndicatorSize();
			this.$SetGlowColor();
			this.$SetGlowAnimation();
		},
		OnValueChanged: function(e) {
			this.$SetIndicatorSize();
		},
		OnMinimumChanged: function(e) {
			this.$SetIndicatorSize();
		},
		OnMaximumChanged: function(e) {
			this.$SetIndicatorSize();
		},
		$OnTrackLayoutUpdated: function(sender, e) {
			this.$SetIndicatorSize();
		},
		$OnIndicatorLayoutUpdated: function(sender, e) {
			this.$SetGlowAnimation();
		},
		$OnIsIndeterminateChanged: function(e) {
			this.$SetIndicatorSize();
			this.$SetGlowColor();
		},
		$OnForegroundChanged: function(e) {
			this.$SetGlowColor();
		},
		$SetIndicatorSize: function() {
			if (ss.isNullOrUndefined(this.get_$Track()) || ss.isNullOrUndefined(this.get_$Indicator())) {
				return;
			}
			var width = (this.get_IsIndeterminate() ? this.get_$Track().get_ActualWidth() : (this.get_$Track().get_ActualWidth() * (this.get_Value() - this.get_Minimum()) / (this.get_Maximum() - this.get_Minimum())));
			if (!Granular.Extensions.DoubleExtensions.IsClose(this.get_$Indicator().get_Width(), width)) {
				this.get_$Indicator().set_Width(width);
			}
		},
		$SetGlowColor: function() {
			if (ss.isNullOrUndefined(this.$glow)) {
				return;
			}
			if (this.get_IsIndeterminate() && !ss.isInstanceOfType(this.get_Foreground(), $System_Windows_Media_SolidColorBrush)) {
				this.$glow.set_Background(this.get_Foreground());
			}
			else {
				var color = (this.get_IsIndeterminate() ? ss.cast(this.get_Foreground(), $System_Windows_Media_SolidColorBrush).get_Color() : $System_Windows_Media_Color.FromArgb(128, 255, 255, 255));
				this.$glow.set_Background(new $System_Windows_Media_LinearGradientBrush.$ctor3($System_Windows_Point.Zero, new $System_Windows_Point.$ctor1(1, 0), [new $System_Windows_Media_GradientStop.$ctor1($System_Windows_Media_Colors.get_Transparent(), 0), new $System_Windows_Media_GradientStop.$ctor1(color, 0.4), new $System_Windows_Media_GradientStop.$ctor1(color, 0.6), new $System_Windows_Media_GradientStop.$ctor1($System_Windows_Media_Colors.get_Transparent(), 1)]));
			}
		},
		$SetGlowAnimation: function() {
			if (ss.isNullOrUndefined(this.get_$Indicator()) || ss.isNullOrUndefined(this.$glow) || Granular.Extensions.DoubleExtensions.IsClose(this.get_$Indicator().get_ActualWidth(), this.$currentAnimatedIndicatorWidth)) {
				return;
			}
			this.$currentAnimatedIndicatorWidth = this.get_$Indicator().get_ActualWidth();
			var currentOffset = this.$glow.get_Margin().get_Left();
			if (ss.isValue(this.$currentAnimationClock)) {
				this.$glow.get_RootClock().RemoveClock(this.$currentAnimationClock);
				this.$currentAnimationClock = null;
			}
			if (this.get_$Indicator().get_ActualWidth() > 0) {
				var startOffset = -this.$glow.get_ActualWidth();
				var endOffset = this.get_$Indicator().get_ActualWidth();
				var time = new ss.TimeSpan((endOffset - startOffset) / 200 * 10000000);
				var thicknessAnimation = new $System_Windows_Media_Animation_ThicknessAnimationUsingKeyFrames();
				var $t2 = thicknessAnimation.get_KeyFrames();
				var $t1 = new $System_Windows_Media_Animation_LinearThicknessKeyFrame();
				$t1.set_Value(new $System_Windows_Thickness.$ctor3(startOffset, 0, 0, 0));
				$t1.set_KeyTime($System_Windows_Media_Animation_KeyTime.FromTimeSpan(new ss.TimeSpan(0)));
				$t2.add($t1);
				var $t4 = thicknessAnimation.get_KeyFrames();
				var $t3 = new $System_Windows_Media_Animation_LinearThicknessKeyFrame();
				$t3.set_Value(new $System_Windows_Thickness.$ctor3(endOffset, 0, 0, 0));
				$t3.set_KeyTime($System_Windows_Media_Animation_KeyTime.FromTimeSpan(time));
				$t4.add($t3);
				thicknessAnimation.set_Duration(new $System_Windows_Duration(new ss.TimeSpan(time.ticks + (new ss.TimeSpan(1 * 10000000)).ticks)));
				thicknessAnimation.set_RepeatBehavior($System_Windows_Media_Animation_RepeatBehavior.Forever);
				thicknessAnimation.set_BeginTime(new ss.TimeSpan(-Granular.Extensions.TimeSpanExtensions.Scale(time, (currentOffset - startOffset) / (endOffset - startOffset)).ticks));
				this.$currentAnimationClock = ss.cast(thicknessAnimation.CreateClock(), $System_Windows_Media_Animation_AnimationTimelineClock);
				$System_Windows_Media_Animation_AnimatableExtensions.ApplyAnimationClock(this.$glow, $System_Windows_FrameworkElement.MarginProperty, this.$currentAnimationClock, 0, null);
				this.$currentAnimationClock.Begin(this.$glow.get_RootClock());
			}
			else {
				$System_Windows_Media_Animation_AnimatableExtensions.ClearAnimationClocks(this.$glow, $System_Windows_FrameworkElement.MarginProperty, null);
			}
		}
	}, $System_Windows_Controls_Primitives_RangeBase, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initClass($System_Windows_Controls_RadioButton, $asm, {
		get_GroupName: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_RadioButton.GroupNameProperty), String);
		},
		set_GroupName: function(value) {
			this.SetValue($System_Windows_Controls_RadioButton.GroupNameProperty, value, 11);
		},
		get_$CurrentGroup: function() {
			return this.$currentGroup;
		},
		set_$CurrentGroup: function(value) {
			if (ss.referenceEquals(this.$currentGroup, value)) {
				return;
			}
			if (ss.isValue(this.$currentGroup)) {
				if (ss.referenceEquals(this.$currentGroup.get_Selection(), this)) {
					this.$currentGroup.set_Selection(null);
				}
				this.$currentGroup.remove_SelectionChanged(ss.mkdel(this, this.$OnCurrentSelectionGroupChanged));
			}
			this.$currentGroup = value;
			if (ss.isValue(this.$currentGroup)) {
				this.$currentGroup.add_SelectionChanged(ss.mkdel(this, this.$OnCurrentSelectionGroupChanged));
				if (ss.isNullOrUndefined(this.$currentGroup.get_Selection()) && this.get_IsChecked() === true) {
					this.$currentGroup.set_Selection(this);
				}
				else {
					this.set_IsChecked(ss.referenceEquals(this.$currentGroup.get_Selection(), this));
				}
			}
		},
		ToggleState: function() {
			this.set_IsChecked(true);
		},
		OnVisualAncestorChanged: function() {
			$System_Windows_Media_Visual.prototype.OnVisualAncestorChanged.call(this);
			this.$SetCurrentGroup();
		},
		$OnGroupNameChanged: function(e) {
			this.$SetCurrentGroup();
		},
		$SetCurrentGroup: function() {
			this.set_$CurrentGroup((!Granular.Extensions.StringExtensions.IsNullOrEmpty(this.get_GroupName()) ? this.$GetGroup(this.get_GroupName()) : this.$GetDefaultGroup()));
		},
		OnIsCheckedChanged: function(e) {
			$System_Windows_Controls_Primitives_ToggleButton.prototype.OnIsCheckedChanged.call(this, e);
			if (this.get_IsChecked() === true && ss.isValue(this.get_$CurrentGroup())) {
				this.get_$CurrentGroup().set_Selection(this);
			}
		},
		$OnCurrentSelectionGroupChanged: function(sender, e) {
			this.set_IsChecked(ss.referenceEquals(this.get_$CurrentGroup().get_Selection(), this));
		},
		$GetGroup: function(name) {
			var scope = $System_Windows_Controls_RadioButton.$GetSelectionGroupScope(this);
			return (ss.isValue(scope) ? scope.GetRadioButtonGroup(name) : null);
		},
		$GetDefaultGroup: function() {
			if (ss.isNullOrUndefined(this.get_LogicalParent())) {
				return null;
			}
			var group = ss.cast(this.get_LogicalParent().GetValue($System_Windows_Controls_RadioButton.$SelectionGroupProperty), ss.makeGenericType($System_Windows_Controls_ISelectionGroup$1, [$System_Windows_Controls_RadioButton]));
			if (ss.isNullOrUndefined(group)) {
				group = new (ss.makeGenericType($System_Windows_Controls_SelectionGroup$1, [$System_Windows_Controls_RadioButton]))();
				this.get_LogicalParent().SetValue($System_Windows_Controls_RadioButton.$SelectionGroupProperty, group, 11);
			}
			return group;
		}
	}, $System_Windows_Controls_Primitives_ToggleButton, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer, $System_Windows_Controls_IItemContainer]);
	ss.initClass($System_Windows_Controls_RowDefinition, $asm, {
		get_Height: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_RowDefinition.HeightProperty), $System_Windows_Controls_GridLength);
		},
		set_Height: function(value) {
			this.SetValue($System_Windows_Controls_RowDefinition.HeightProperty, value, 11);
		},
		get_MinHeight: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_RowDefinition.MinHeightProperty), Number));
		},
		set_MinHeight: function(value) {
			this.SetValue($System_Windows_Controls_RowDefinition.MinHeightProperty, value, 11);
		},
		get_MaxHeight: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_RowDefinition.MaxHeightProperty), Number));
		},
		set_MaxHeight: function(value) {
			this.SetValue($System_Windows_Controls_RowDefinition.MaxHeightProperty, value, 11);
		},
		get_ActualHeight: function() {
			return ss.unbox(ss.cast(this.$actualHeightValueEntry.get_Value(), Number));
		},
		set_ActualHeight: function(value) {
			this.$actualHeightValueEntry.SetBaseValue(11, value);
		},
		get_$ActualLength: function() {
			return this.get_ActualHeight();
		},
		set_$ActualLength: function(value) {
			this.set_ActualHeight(value);
		},
		get_$MinLength: function() {
			return this.get_MinHeight();
		},
		get_$MaxLength: function() {
			return this.get_MaxHeight();
		},
		get_$Length: function() {
			return this.get_Height();
		}
	}, $System_Windows_Freezable, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_Controls_$IDefinitionBase]);
	ss.initEnum($System_Windows_Controls_ScrollBarVisibility, $asm, { Disabled: 0, Auto: 1, Hidden: 2, Visible: 3 });
	ss.initClass($System_Windows_Controls_ScrollChangedEventArgs, $asm, {
		get_Offset: function() {
			return this.$3$OffsetField;
		},
		set_Offset: function(value) {
			this.$3$OffsetField = value;
		},
		get_OffsetChange: function() {
			return this.$3$OffsetChangeField;
		},
		set_OffsetChange: function(value) {
			this.$3$OffsetChangeField = value;
		},
		get_Extent: function() {
			return this.$3$ExtentField;
		},
		set_Extent: function(value) {
			this.$3$ExtentField = value;
		},
		get_ExtentChange: function() {
			return this.$3$ExtentChangeField;
		},
		set_ExtentChange: function(value) {
			this.$3$ExtentChangeField = value;
		},
		get_Viewport: function() {
			return this.$3$ViewportField;
		},
		set_Viewport: function(value) {
			this.$3$ViewportField = value;
		},
		get_ViewportChange: function() {
			return this.$3$ViewportChangeField;
		},
		set_ViewportChange: function(value) {
			this.$3$ViewportChangeField = value;
		},
		InvokeEventHandler: function(handler, target) {
			if (ss.isValue(handler)) {
				handler(target, this);
			}
			else {
				$System_Windows_RoutedEventArgs.prototype.InvokeEventHandler.call(this, handler, target);
			}
		}
	}, $System_Windows_RoutedEventArgs);
	ss.initClass($System_Windows_Controls_ScrollContentPresenter, $asm, {
		get_AdornerLayer: function() {
			return this.$6$AdornerLayerField;
		},
		set_AdornerLayer: function(value) {
			this.$6$AdornerLayerField = value;
		},
		get_CanContentScroll: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_ScrollContentPresenter.CanContentScrollProperty), Boolean));
		},
		set_CanContentScroll: function(value) {
			this.SetValue($System_Windows_Controls_ScrollContentPresenter.CanContentScrollProperty, value, 11);
		},
		get_ExtentSize: function() {
			return this.$delegateScrollInfo.get_ExtentSize();
		},
		get_ViewportSize: function() {
			return this.$delegateScrollInfo.get_ViewportSize();
		},
		get_CanHorizontallyScroll: function() {
			return this.$delegateScrollInfo.get_CanHorizontallyScroll();
		},
		set_CanHorizontallyScroll: function(value) {
			if (this.$delegateScrollInfo.get_CanHorizontallyScroll() === value) {
				return;
			}
			this.$delegateScrollInfo.set_CanHorizontallyScroll(value);
			this.InvalidateMeasure();
		},
		get_CanVerticallyScroll: function() {
			return this.$delegateScrollInfo.get_CanVerticallyScroll();
		},
		set_CanVerticallyScroll: function(value) {
			if (this.$delegateScrollInfo.get_CanVerticallyScroll() === value) {
				return;
			}
			this.$delegateScrollInfo.set_CanVerticallyScroll(value);
			this.InvalidateMeasure();
		},
		get_Offset: function() {
			return this.$delegateScrollInfo.get_Offset();
		},
		set_Offset: function(value) {
			if ($System_Windows_Point.op_Equality(this.$delegateScrollInfo.get_Offset(), value)) {
				return;
			}
			this.$delegateScrollInfo.set_Offset(value);
			this.InvalidateArrange();
		},
		OnTemplateChildChanged: function() {
			// move AdornerLayer to the top
			this.SetVisualChildIndex(this.get_AdornerLayer(), Enumerable.from(this.get_VisualChildren()).count() - 1);
		},
		MeasureOverride: function(availableSize) {
			this.get_AdornerLayer().Measure(availableSize);
			var availableScrollSize = new $System_Windows_Size((this.get_CanHorizontallyScroll() ? Number.POSITIVE_INFINITY : availableSize.get_Width()), (this.get_CanVerticallyScroll() ? Number.POSITIVE_INFINITY : availableSize.get_Height()));
			var measuredSize = $System_Windows_Controls_ContentPresenter.prototype.MeasureOverride.call(this, availableScrollSize);
			this.$innerScrollInfo.set_$ExtentSize(measuredSize);
			this.$innerScrollInfo.set_$ViewportSize(availableSize);
			return $System_Windows_SizeExtensions.Min(measuredSize, availableSize);
		},
		ArrangeOverride: function(finalSize) {
			this.get_AdornerLayer().Arrange(new $System_Windows_Rect(finalSize));
			if (ss.isValue(this.get_TemplateChild())) {
				if (ss.referenceEquals(this.$delegateScrollInfo, this.$innerScrollInfo)) {
					var finalScrollSize = new $System_Windows_Size((this.get_CanHorizontallyScroll() ? Number.POSITIVE_INFINITY : finalSize.get_Width()), (this.get_CanVerticallyScroll() ? Number.POSITIVE_INFINITY : finalSize.get_Height()));
					var childFinalSize = $System_Windows_SizeExtensions.Bounds(this.get_TemplateChild().get_DesiredSize(), finalSize, finalScrollSize);
					var childOffset = $System_Windows_PointExtensions.Bounds(this.get_Offset(), $System_Windows_Point.Zero, $System_Windows_SizeExtensions.ToPoint($System_Windows_SizeExtensions.Max($System_Windows_Size.op_Subtraction(childFinalSize, this.get_ViewportSize()), $System_Windows_Size.Zero)));
					this.get_TemplateChild().Arrange(new $System_Windows_Rect.$ctor2($System_Windows_Point.op_UnaryNegation(childOffset), childFinalSize));
				}
				else {
					// CanContentScroll and Content implements IScrollInfo
					this.get_TemplateChild().Arrange(new $System_Windows_Rect(finalSize));
				}
			}
			this.$innerScrollInfo.set_$ExtentSize((ss.isValue(this.get_TemplateChild()) ? this.get_TemplateChild().get_VisualSize() : $System_Windows_Size.Zero));
			this.$innerScrollInfo.set_$ViewportSize(finalSize);
			return finalSize;
		},
		OnContentChanged: function(e) {
			$System_Windows_Controls_ContentPresenter.prototype.OnContentChanged.call(this, e);
			this.$delegateScrollInfo = this.$GetDelegateScrollInfo();
		},
		$GetDelegateScrollInfo: function() {
			if (this.get_CanContentScroll()) {
				if (ss.isInstanceOfType(this.get_Content(), $System_Windows_Controls_Primitives_IScrollInfo)) {
					return ss.cast(this.get_Content(), $System_Windows_Controls_Primitives_IScrollInfo);
				}
				if (ss.isInstanceOfType(this.get_Content(), $System_Windows_Controls_ItemsPresenter) && ss.isInstanceOfType(ss.cast(this.get_Content(), $System_Windows_Controls_ItemsPresenter).get_Panel(), $System_Windows_Controls_Primitives_IScrollInfo)) {
					return ss.cast(ss.cast(this.get_Content(), $System_Windows_Controls_ItemsPresenter).get_Panel(), $System_Windows_Controls_Primitives_IScrollInfo);
				}
			}
			return this.$innerScrollInfo;
		},
		$OnCanContentScrollChanged: function(e) {
			this.$delegateScrollInfo = this.$GetDelegateScrollInfo();
		}
	}, $System_Windows_Controls_ContentPresenter, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer, $System_Windows_Controls_IItemContainer, $System_Windows_Controls_Primitives_IScrollInfo, $System_Windows_Controls_IAdornerLayerHost]);
	ss.initClass($System_Windows_Controls_ScrollEventArgs, $asm, {
		get_NewValue: function() {
			return this.$3$NewValueField;
		},
		set_NewValue: function(value) {
			this.$3$NewValueField = value;
		},
		get_ScrollEventType: function() {
			return this.$3$ScrollEventTypeField;
		},
		set_ScrollEventType: function(value) {
			this.$3$ScrollEventTypeField = value;
		},
		InvokeEventHandler: function(handler, target) {
			if (ss.isValue(handler)) {
				handler(target, this);
			}
			else {
				$System_Windows_RoutedEventArgs.prototype.InvokeEventHandler.call(this, handler, target);
			}
		}
	}, $System_Windows_RoutedEventArgs);
	ss.initEnum($System_Windows_Controls_ScrollEventType, $asm, { EndScroll: 0, LargeDecrement: 1, LargeIncrement: 2, SmallDecrement: 3, SmallIncrement: 4, ThumbTrack: 5 });
	ss.initClass($System_Windows_Controls_ScrollViewer, $asm, {
		add_ScrollChanged: function(value) {
			this.AddHandler($System_Windows_Controls_ScrollViewer.ScrollChangedEvent, value, false);
		},
		remove_ScrollChanged: function(value) {
			this.RemoveHandler($System_Windows_Controls_ScrollViewer.ScrollChangedEvent, value);
		},
		get_ComputedHorizontalScrollBarVisibility: function() {
			return ss.cast(this.GetValue$1($System_Windows_Controls_ScrollViewer.$ComputedHorizontalScrollBarVisibilityPropertyKey), ss.Int32);
		},
		set_ComputedHorizontalScrollBarVisibility: function(value) {
			this.SetValue$1($System_Windows_Controls_ScrollViewer.$ComputedHorizontalScrollBarVisibilityPropertyKey, value, 11);
		},
		get_ComputedVerticalScrollBarVisibility: function() {
			return ss.cast(this.GetValue$1($System_Windows_Controls_ScrollViewer.$ComputedVerticalScrollBarVisibilityPropertyKey), ss.Int32);
		},
		set_ComputedVerticalScrollBarVisibility: function(value) {
			this.SetValue$1($System_Windows_Controls_ScrollViewer.$ComputedVerticalScrollBarVisibilityPropertyKey, value, 11);
		},
		get_ComputedScrollBarsVisibility: function() {
			return ss.cast(this.GetValue$1($System_Windows_Controls_ScrollViewer.$ComputedScrollBarsVisibilityPropertyKey), ss.Int32);
		},
		set_ComputedScrollBarsVisibility: function(value) {
			this.SetValue$1($System_Windows_Controls_ScrollViewer.$ComputedScrollBarsVisibilityPropertyKey, value, 11);
		},
		get_HorizontalScrollBarVisibility: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_ScrollViewer.HorizontalScrollBarVisibilityProperty), ss.Int32);
		},
		set_HorizontalScrollBarVisibility: function(value) {
			this.SetValue($System_Windows_Controls_ScrollViewer.HorizontalScrollBarVisibilityProperty, value, 11);
		},
		get_VerticalScrollBarVisibility: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_ScrollViewer.VerticalScrollBarVisibilityProperty), ss.Int32);
		},
		set_VerticalScrollBarVisibility: function(value) {
			this.SetValue($System_Windows_Controls_ScrollViewer.VerticalScrollBarVisibilityProperty, value, 11);
		},
		get_HorizontalOffset: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_ScrollViewer.HorizontalOffsetProperty), Number));
		},
		set_HorizontalOffset: function(value) {
			this.SetValue($System_Windows_Controls_ScrollViewer.HorizontalOffsetProperty, value, 11);
		},
		get_VerticalOffset: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_ScrollViewer.VerticalOffsetProperty), Number));
		},
		set_VerticalOffset: function(value) {
			this.SetValue($System_Windows_Controls_ScrollViewer.VerticalOffsetProperty, value, 11);
		},
		get_ExtentWidth: function() {
			return ss.unbox(ss.cast(this.GetValue$1($System_Windows_Controls_ScrollViewer.$ExtentWidthPropertyKey), Number));
		},
		set_ExtentWidth: function(value) {
			this.SetValue$1($System_Windows_Controls_ScrollViewer.$ExtentWidthPropertyKey, value, 11);
		},
		get_ExtentHeight: function() {
			return ss.unbox(ss.cast(this.GetValue$1($System_Windows_Controls_ScrollViewer.$ExtentHeightPropertyKey), Number));
		},
		set_ExtentHeight: function(value) {
			this.SetValue$1($System_Windows_Controls_ScrollViewer.$ExtentHeightPropertyKey, value, 11);
		},
		get_ViewportWidth: function() {
			return ss.unbox(ss.cast(this.GetValue$1($System_Windows_Controls_ScrollViewer.$ViewportWidthPropertyKey), Number));
		},
		set_ViewportWidth: function(value) {
			this.SetValue$1($System_Windows_Controls_ScrollViewer.$ViewportWidthPropertyKey, value, 11);
		},
		get_ViewportHeight: function() {
			return ss.unbox(ss.cast(this.GetValue$1($System_Windows_Controls_ScrollViewer.$ViewportHeightPropertyKey), Number));
		},
		set_ViewportHeight: function(value) {
			this.SetValue$1($System_Windows_Controls_ScrollViewer.$ViewportHeightPropertyKey, value, 11);
		},
		get_ScrollableWidth: function() {
			return ss.unbox(ss.cast(this.GetValue$1($System_Windows_Controls_ScrollViewer.$ScrollableWidthPropertyKey), Number));
		},
		set_ScrollableWidth: function(value) {
			this.SetValue$1($System_Windows_Controls_ScrollViewer.$ScrollableWidthPropertyKey, value, 11);
		},
		get_ScrollableHeight: function() {
			return ss.unbox(ss.cast(this.GetValue$1($System_Windows_Controls_ScrollViewer.$ScrollableHeightPropertyKey), Number));
		},
		set_ScrollableHeight: function(value) {
			this.SetValue$1($System_Windows_Controls_ScrollViewer.$ScrollableHeightPropertyKey, value, 11);
		},
		get_$HorizontalScrollBar: function() {
			return this.$horizontalScrollBar;
		},
		set_$HorizontalScrollBar: function(value) {
			if (ss.referenceEquals(this.$horizontalScrollBar, value)) {
				return;
			}
			if (ss.isValue(this.$horizontalScrollBar)) {
				this.$horizontalScrollBar.remove_ValueChanged(ss.mkdel(this, this.$OnScrollBarValueChanged));
			}
			this.$horizontalScrollBar = value;
			if (ss.isValue(this.$horizontalScrollBar)) {
				this.$horizontalScrollBar.add_ValueChanged(ss.mkdel(this, this.$OnScrollBarValueChanged));
			}
		},
		get_$VerticalScrollBar: function() {
			return this.$verticalScrollBar;
		},
		set_$VerticalScrollBar: function(value) {
			if (ss.referenceEquals(this.$verticalScrollBar, value)) {
				return;
			}
			if (ss.isValue(this.$verticalScrollBar)) {
				this.$verticalScrollBar.remove_ValueChanged(ss.mkdel(this, this.$OnScrollBarValueChanged));
			}
			this.$verticalScrollBar = value;
			if (ss.isValue(this.$verticalScrollBar)) {
				this.$verticalScrollBar.add_ValueChanged(ss.mkdel(this, this.$OnScrollBarValueChanged));
			}
		},
		OnApplyTemplate: function() {
			$System_Windows_Controls_Control.prototype.OnApplyTemplate.call(this);
			if (ss.isValue(this.get_Template())) {
				this.$scrollContentPresenter = ss.safeCast($System_Windows_FrameworkTemplateExtensions.FindName(this.get_Template(), 'PART_ScrollContentPresenter', this), $System_Windows_Controls_ScrollContentPresenter);
				this.set_$HorizontalScrollBar(ss.safeCast($System_Windows_FrameworkTemplateExtensions.FindName(this.get_Template(), 'PART_HorizontalScrollBar', this), $System_Windows_Controls_Primitives_ScrollBar));
				this.set_$VerticalScrollBar(ss.safeCast($System_Windows_FrameworkTemplateExtensions.FindName(this.get_Template(), 'PART_VerticalScrollBar', this), $System_Windows_Controls_Primitives_ScrollBar));
			}
			else {
				this.$scrollContentPresenter = null;
				this.set_$HorizontalScrollBar(null);
				this.set_$VerticalScrollBar(null);
			}
			this.$SetContentCanScroll();
			this.$SetScrollInfoSizes();
		},
		$OnScrollBarValueChanged: function(sender, e) {
			this.set_HorizontalOffset(this.get_$HorizontalScrollBar().get_Value());
			this.set_VerticalOffset(this.get_$VerticalScrollBar().get_Value());
		},
		OnMouseWheel: function(e) {
			if (ss.isValue(this.$scrollContentPresenter)) {
				var $t2 = this.get_VerticalOffset();
				var $t1 = e.get_Delta();
				this.set_VerticalOffset(Granular.Extensions.DoubleExtensions.Bounds($t2 - (($t1 > 0) ? 1 : (($t1 < 0) ? -1 : 0)) * $System_Windows_Controls_Primitives_ScrollInfoExtensions.MouseWheelDelta, 0, this.get_ScrollableHeight()));
				e.set_Handled(true);
			}
		},
		$SetOffsets: function() {
			if (ss.isValue(this.$scrollContentPresenter)) {
				this.$scrollContentPresenter.set_Offset(new $System_Windows_Point.$ctor1(this.get_HorizontalOffset(), this.get_VerticalOffset()));
			}
			if (ss.isValue(this.get_$HorizontalScrollBar())) {
				this.get_$HorizontalScrollBar().set_Value(this.get_HorizontalOffset());
			}
			if (ss.isValue(this.get_$VerticalScrollBar())) {
				this.get_$VerticalScrollBar().set_Value(this.get_VerticalOffset());
			}
		},
		$SetContentCanScroll: function() {
			if (ss.isValue(this.$scrollContentPresenter)) {
				this.$scrollContentPresenter.set_CanHorizontallyScroll(this.get_HorizontalScrollBarVisibility() !== 0);
				this.$scrollContentPresenter.set_CanVerticallyScroll(this.get_VerticalScrollBarVisibility() !== 0);
			}
		},
		$SetScrollInfoSizes: function() {
			if (ss.isValue(this.$scrollContentPresenter)) {
				this.set_ExtentWidth(this.$scrollContentPresenter.get_ExtentSize().get_Width());
				this.set_ExtentHeight(this.$scrollContentPresenter.get_ExtentSize().get_Height());
				this.set_ViewportWidth(this.$scrollContentPresenter.get_ViewportSize().get_Width());
				this.set_ViewportHeight(this.$scrollContentPresenter.get_ViewportSize().get_Height());
			}
			else {
				this.set_ExtentWidth(0);
				this.set_ExtentHeight(0);
				this.set_ViewportWidth(0);
				this.set_ViewportHeight(0);
			}
			this.set_ScrollableWidth(Granular.Extensions.DoubleExtensions.Max(this.get_ExtentWidth() - this.get_ViewportWidth(), 0));
			this.set_ScrollableHeight(Granular.Extensions.DoubleExtensions.Max(this.get_ExtentHeight() - this.get_ViewportHeight(), 0));
			this.set_HorizontalOffset(Granular.Extensions.DoubleExtensions.Min(this.get_HorizontalOffset(), this.get_ScrollableWidth()));
			this.set_VerticalOffset(Granular.Extensions.DoubleExtensions.Min(this.get_VerticalOffset(), this.get_ScrollableHeight()));
		},
		MeasureOverride: function(availableSize) {
			if (ss.isNullOrUndefined(this.get_TemplateChild())) {
				return $System_Windows_Size.Zero;
			}
			this.set_ComputedHorizontalScrollBarVisibility($System_Windows_Controls_ScrollViewer.$GetScrollBarVisibility(this.get_HorizontalScrollBarVisibility(), false));
			this.set_ComputedVerticalScrollBarVisibility($System_Windows_Controls_ScrollViewer.$GetScrollBarVisibility(this.get_VerticalScrollBarVisibility(), false));
			this.set_ComputedScrollBarsVisibility(((this.get_ComputedHorizontalScrollBarVisibility() === 0 && this.get_ComputedVerticalScrollBarVisibility() === 0) ? 0 : 2));
			// 3 passes, each pass can cause an overflow (and add a scrollbar which invalidates the measure), starting with no overlaps
			for (var measurePass = 0; measurePass < 3; measurePass++) {
				// computed visibilities can invalidate the ScrollBars measure, invalidate their path so they will be re-measured through TemplateChild
				$System_Windows_Controls_ScrollViewer.$InvalidateElementMeasurePath(this, this.get_$HorizontalScrollBar());
				$System_Windows_Controls_ScrollViewer.$InvalidateElementMeasurePath(this, this.get_$VerticalScrollBar());
				this.get_TemplateChild().Measure(availableSize);
				var measuredHorizontalScrollBarVisibility = $System_Windows_Controls_ScrollViewer.$GetScrollBarVisibility(this.get_HorizontalScrollBarVisibility(), ss.isValue(this.$scrollContentPresenter) && this.$scrollContentPresenter.get_ViewportSize().get_Width() < this.$scrollContentPresenter.get_ExtentSize().get_Width());
				var measuredVerticalScrollBarVisibility = $System_Windows_Controls_ScrollViewer.$GetScrollBarVisibility(this.get_VerticalScrollBarVisibility(), ss.isValue(this.$scrollContentPresenter) && this.$scrollContentPresenter.get_ViewportSize().get_Height() < this.$scrollContentPresenter.get_ExtentSize().get_Height());
				if (this.get_ComputedHorizontalScrollBarVisibility() === measuredHorizontalScrollBarVisibility && this.get_ComputedVerticalScrollBarVisibility() === measuredVerticalScrollBarVisibility) {
					break;
				}
				this.set_ComputedHorizontalScrollBarVisibility(measuredHorizontalScrollBarVisibility);
				this.set_ComputedVerticalScrollBarVisibility(measuredVerticalScrollBarVisibility);
				this.set_ComputedScrollBarsVisibility(((this.get_ComputedHorizontalScrollBarVisibility() === 0 && this.get_ComputedVerticalScrollBarVisibility() === 0) ? 0 : 2));
			}
			this.$SetScrollInfoSizes();
			return this.get_TemplateChild().get_DesiredSize();
		}
	}, $System_Windows_Controls_ContentControl, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer, $System_Windows_Controls_IItemContainer]);
	ss.initClass($System_Windows_Controls_SelectionChangedEventArgs, $asm, {
		get_AddedItems: function() {
			return this.$3$AddedItemsField;
		},
		set_AddedItems: function(value) {
			this.$3$AddedItemsField = value;
		},
		get_RemovedItems: function() {
			return this.$3$RemovedItemsField;
		},
		set_RemovedItems: function(value) {
			this.$3$RemovedItemsField = value;
		},
		InvokeEventHandler: function(handler, target) {
			if (ss.isValue(handler)) {
				handler(target, this);
			}
			else {
				$System_Windows_RoutedEventArgs.prototype.InvokeEventHandler.call(this, handler, target);
			}
		}
	}, $System_Windows_RoutedEventArgs);
	ss.initEnum($System_Windows_Controls_SelectionMode, $asm, { Single: 0, Multiple: 1, Extended: 2 });
	ss.initClass($System_Windows_Controls_SpellCheck, $asm, {});
	ss.initClass($System_Windows_Controls_StackPanel, $asm, {
		get_Orientation: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_StackPanel.OrientationProperty), ss.Int32);
		},
		set_Orientation: function(value) {
			this.SetValue($System_Windows_Controls_StackPanel.OrientationProperty, value, 11);
		},
		get_FlowDirection: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_StackPanel.FlowDirectionProperty), ss.Int32);
		},
		set_FlowDirection: function(value) {
			this.SetValue($System_Windows_Controls_StackPanel.FlowDirectionProperty, value, 11);
		},
		get_$IsNormalFlow: function() {
			return this.get_FlowDirection() === 0 || this.get_FlowDirection() === 1;
		},
		MeasureOverride: function(availableSize) {
			var mainLength = 0;
			var crossLength = 0;
			var $t1 = this.get_Children().getEnumerator();
			try {
				while ($t1.moveNext()) {
					var child = $t1.current();
					this.$MeasureChild(child, Number.POSITIVE_INFINITY, this.$GetCrossLength(availableSize));
					mainLength += this.$GetMainLength(child.get_DesiredSize());
					crossLength = Math.max(crossLength, this.$GetCrossLength(child.get_DesiredSize()));
				}
			}
			finally {
				$t1.dispose();
			}
			return this.$CreateSize(mainLength, crossLength);
		},
		ArrangeOverride: function(finalSize) {
			var panelMainLength = Enumerable.from(this.get_Children()).select(ss.mkdel(this, function(child) {
				return this.$GetMainLength(child.get_DesiredSize());
			})).sum();
			var panelCrossLength = this.$GetCrossLength(finalSize);
			var childrenMainLength = 0;
			var $t1 = this.get_Children().getEnumerator();
			try {
				while ($t1.moveNext()) {
					var child1 = $t1.current();
					var childMainLength = this.$GetMainLength(child1.get_DesiredSize());
					var childMainStart = (this.get_$IsNormalFlow() ? childrenMainLength : (panelMainLength - childrenMainLength - childMainLength));
					this.$ArrangeChild(child1, childMainStart, 0, childMainLength, panelCrossLength);
					childrenMainLength += childMainLength;
				}
			}
			finally {
				$t1.dispose();
			}
			return this.$CreateSize(this.$GetMainLength(finalSize), panelCrossLength);
		},
		$CreateSize: function(mainLength, crossLength) {
			if (this.get_Orientation() === 0) {
				return new $System_Windows_Size(mainLength, crossLength);
			}
			return new $System_Windows_Size(crossLength, mainLength);
		},
		$GetMainLength: function(size) {
			return ((this.get_Orientation() === 0) ? size.get_Width() : size.get_Height());
		},
		$GetCrossLength: function(size) {
			return ((this.get_Orientation() === 0) ? size.get_Height() : size.get_Width());
		},
		$MeasureChild: function(child, availableMainLength, availableCrossLength) {
			child.Measure(((this.get_Orientation() === 0) ? new $System_Windows_Size(availableMainLength, availableCrossLength) : new $System_Windows_Size(availableCrossLength, availableMainLength)));
		},
		$ArrangeChild: function(child, finalMainStart, finalCrossStart, finalMainLength, finalCrossLength) {
			child.Arrange(((this.get_Orientation() === 0) ? new $System_Windows_Rect.$ctor3(finalMainStart, finalCrossStart, finalMainLength, finalCrossLength) : new $System_Windows_Rect.$ctor3(finalCrossStart, finalMainStart, finalCrossLength, finalMainLength)));
		}
	}, $System_Windows_Controls_Panel, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initEnum($System_Windows_Controls_TextAlignment, $asm, { Left: 0, Right: 1, Center: 2, Justify: 3 });
	ss.initClass($System_Windows_Controls_TextBlock, $asm, {
		get_Text: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_TextBlock.TextProperty), String);
		},
		set_Text: function(value) {
			this.SetValue($System_Windows_Controls_TextBlock.TextProperty, value, 11);
		},
		get_Foreground: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_TextBlock.ForegroundProperty), $System_Windows_Media_Brush);
		},
		set_Foreground: function(value) {
			this.SetValue($System_Windows_Controls_TextBlock.ForegroundProperty, value, 11);
		},
		get_FontFamily: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_TextBlock.FontFamilyProperty), $System_Windows_FontFamily);
		},
		set_FontFamily: function(value) {
			this.SetValue($System_Windows_Controls_TextBlock.FontFamilyProperty, value, 11);
		},
		get_FontSize: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_TextBlock.FontSizeProperty), Number));
		},
		set_FontSize: function(value) {
			this.SetValue($System_Windows_Controls_TextBlock.FontSizeProperty, value, 11);
		},
		get_FontStyle: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_TextBlock.FontStyleProperty), ss.Int32);
		},
		set_FontStyle: function(value) {
			this.SetValue($System_Windows_Controls_TextBlock.FontStyleProperty, value, 11);
		},
		get_FontWeight: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_TextBlock.FontWeightProperty), ss.Int32);
		},
		set_FontWeight: function(value) {
			this.SetValue($System_Windows_Controls_TextBlock.FontWeightProperty, value, 11);
		},
		get_FontStretch: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_TextBlock.FontStretchProperty), ss.Int32);
		},
		set_FontStretch: function(value) {
			this.SetValue($System_Windows_Controls_TextBlock.FontStretchProperty, value, 11);
		},
		get_TextAlignment: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_TextBlock.TextAlignmentProperty), ss.Int32);
		},
		set_TextAlignment: function(value) {
			this.SetValue($System_Windows_Controls_TextBlock.TextAlignmentProperty, value, 11);
		},
		get_TextTrimming: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_TextBlock.TextTrimmingProperty), ss.Int32);
		},
		set_TextTrimming: function(value) {
			this.SetValue($System_Windows_Controls_TextBlock.TextTrimmingProperty, value, 11);
		},
		get_TextWrapping: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_TextBlock.TextWrappingProperty), ss.Int32);
		},
		set_TextWrapping: function(value) {
			this.SetValue($System_Windows_Controls_TextBlock.TextWrappingProperty, value, 11);
		},
		CreateContentRenderElementOverride: function(factory) {
			var textBlockRenderElement = {};
			if (this.$textBlockRenderElements.tryGetValue(factory, textBlockRenderElement)) {
				return textBlockRenderElement.$;
			}
			textBlockRenderElement.$ = factory.CreateTextBlockRenderElement(this);
			textBlockRenderElement.$.set_Bounds(new $System_Windows_Rect(this.get_VisualBounds().get_Size()));
			textBlockRenderElement.$.set_FontFamily(this.get_FontFamily());
			textBlockRenderElement.$.set_Foreground(this.get_Foreground());
			textBlockRenderElement.$.set_FontSize(this.get_FontSize());
			textBlockRenderElement.$.set_FontStyle(this.get_FontStyle());
			textBlockRenderElement.$.set_FontStretch(this.get_FontStretch());
			textBlockRenderElement.$.set_FontWeight(this.get_FontWeight());
			textBlockRenderElement.$.set_Text(this.get_Text());
			textBlockRenderElement.$.set_TextAlignment(this.get_TextAlignment());
			textBlockRenderElement.$.set_TextTrimming(this.get_TextTrimming());
			textBlockRenderElement.$.set_TextWrapping(this.get_TextWrapping());
			this.$textBlockRenderElements.add(factory, textBlockRenderElement.$);
			return textBlockRenderElement.$;
		},
		MeasureOverride: function(availableSize) {
			var measuredSize = {};
			if (this.$measureCache.$TryGetMeasure($System_Windows_Size.FromWidth(availableSize.get_Width()), measuredSize)) {
				return measuredSize.$;
			}
			measuredSize.$ = $System_Windows_ApplicationHost.get_Current().get_TextMeasurementService().Measure(ss.coalesce(this.get_Text(), ''), this.get_FontSize(), new $System_Windows_Media_Typeface.$ctor1(this.get_FontFamily(), this.get_FontStyle(), this.get_FontWeight(), this.get_FontStretch()), availableSize.get_Width());
			this.$measureCache.$SetMeasure($System_Windows_Size.FromWidth(availableSize.get_Width()), measuredSize.$);
			return measuredSize.$;
		},
		ArrangeOverride: function(finalSize) {
			var $t1 = ss.getEnumerator(this.$textBlockRenderElements.get_values());
			try {
				while ($t1.moveNext()) {
					var textBlockRenderElement = $t1.current();
					textBlockRenderElement.set_Bounds(new $System_Windows_Rect(finalSize));
				}
			}
			finally {
				$t1.dispose();
			}
			return finalSize;
		},
		$OnTextChanged: function(e) {
			this.$SetRenderElementsProperty(ss.mkdel(this, function(textBlockRenderElement) {
				textBlockRenderElement.set_Text(this.get_Text());
			}));
			this.$measureCache.$Clear();
		},
		$OnFontFamilyChanged: function(e) {
			this.$SetRenderElementsProperty(ss.mkdel(this, function(textBlockRenderElement) {
				textBlockRenderElement.set_FontFamily(this.get_FontFamily());
			}));
			this.$measureCache.$Clear();
		},
		$OnFontSizeChanged: function(e) {
			this.$SetRenderElementsProperty(ss.mkdel(this, function(textBlockRenderElement) {
				textBlockRenderElement.set_FontSize(this.get_FontSize());
			}));
			this.$measureCache.$Clear();
		},
		$OnFontStyleChanged: function(e) {
			this.$SetRenderElementsProperty(ss.mkdel(this, function(textBlockRenderElement) {
				textBlockRenderElement.set_FontStyle(this.get_FontStyle());
			}));
			this.$measureCache.$Clear();
		},
		$OnFontWeightChanged: function(e) {
			this.$SetRenderElementsProperty(ss.mkdel(this, function(textBlockRenderElement) {
				textBlockRenderElement.set_FontWeight(this.get_FontWeight());
			}));
			this.$measureCache.$Clear();
		},
		$OnFontStretchChanged: function(e) {
			this.$SetRenderElementsProperty(ss.mkdel(this, function(textBlockRenderElement) {
				textBlockRenderElement.set_FontStretch(this.get_FontStretch());
			}));
			this.$measureCache.$Clear();
		},
		$SetRenderElementsProperty: function(setter) {
			var $t1 = ss.getEnumerator(this.$textBlockRenderElements.get_values());
			try {
				while ($t1.moveNext()) {
					var textBlockRenderElement = $t1.current();
					setter(textBlockRenderElement);
				}
			}
			finally {
				$t1.dispose();
			}
		}
	}, $System_Windows_FrameworkElement, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initClass($System_Windows_Controls_Primitives_TextBoxBase, $asm, {
		add_SelectionChanged: function(value) {
			this.AddHandler($System_Windows_Controls_Primitives_TextBoxBase.SelectionChangedEvent, value, false);
		},
		remove_SelectionChanged: function(value) {
			this.RemoveHandler($System_Windows_Controls_Primitives_TextBoxBase.SelectionChangedEvent, value);
		},
		add_TextChanged: function(value) {
			this.AddHandler($System_Windows_Controls_Primitives_TextBoxBase.TextChangedEvent, value, false);
		},
		remove_TextChanged: function(value) {
			this.RemoveHandler($System_Windows_Controls_Primitives_TextBoxBase.TextChangedEvent, value);
		},
		get_AcceptsReturn: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Primitives_TextBoxBase.AcceptsReturnProperty), Boolean));
		},
		set_AcceptsReturn: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_TextBoxBase.AcceptsReturnProperty, value, 11);
		},
		get_AcceptsTab: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Primitives_TextBoxBase.AcceptsTabProperty), Boolean));
		},
		set_AcceptsTab: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_TextBoxBase.AcceptsTabProperty, value, 11);
		},
		get_IsReadOnly: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Primitives_TextBoxBase.IsReadOnlyProperty), Boolean));
		},
		set_IsReadOnly: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_TextBoxBase.IsReadOnlyProperty, value, 11);
		},
		get_ContentHost: function() {
			return this.$6$ContentHostField;
		},
		set_ContentHost: function(value) {
			this.$6$ContentHostField = value;
		},
		OnApplyTemplate: function() {
			$System_Windows_Controls_Control.prototype.OnApplyTemplate.call(this);
			if (ss.isNullOrUndefined(this.get_Template())) {
				this.set_ContentHost(null);
			}
			else {
				this.set_ContentHost(ss.safeCast($System_Windows_FrameworkTemplateExtensions.FindName(this.get_Template(), 'PART_ContentHost', this), $System_Windows_Controls_Decorator));
				this.get_ContentHost().set_Child(this.GetTextBoxContent());
			}
		},
		GetTextBoxContent: null,
		OnMouseDown: function(e) {
			this.Focus();
		},
		UpdateVisualState: function(useTransitions) {
			$System_Windows_VisualStateManager.GoToState(this, this.$GetCommonState(), useTransitions);
			$System_Windows_VisualStateManager.GoToState(this, this.$GetFocusState(), useTransitions);
		},
		$GetCommonState: function() {
			if (!this.get_IsEnabled()) {
				return $System_Windows_VisualStates.DisabledState;
			}
			if (this.get_IsMouseOver()) {
				return $System_Windows_VisualStates.MouseOverState;
			}
			return $System_Windows_VisualStates.NormalState;
		},
		$GetFocusState: function() {
			return (this.get_IsFocused() ? $System_Windows_VisualStates.FocusedState : $System_Windows_VisualStates.UnfocusedState);
		}
	}, $System_Windows_Controls_Control, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initClass($System_Windows_Controls_TextBox, $asm, {
		get_Text: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_TextBox.TextProperty), String);
		},
		set_Text: function(value) {
			this.SetValue($System_Windows_Controls_TextBox.TextProperty, value, 11);
		},
		get_CaretIndex: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_TextBox.CaretIndexProperty), ss.Int32));
		},
		set_CaretIndex: function(value) {
			this.SetValue($System_Windows_Controls_TextBox.CaretIndexProperty, value, 11);
		},
		get_SelectionStart: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_TextBox.SelectionStartProperty), ss.Int32));
		},
		set_SelectionStart: function(value) {
			this.SetValue($System_Windows_Controls_TextBox.SelectionStartProperty, value, 11);
		},
		get_SelectionLength: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_TextBox.SelectionLengthProperty), ss.Int32));
		},
		set_SelectionLength: function(value) {
			this.SetValue($System_Windows_Controls_TextBox.SelectionLengthProperty, value, 11);
		},
		get_MaxLength: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_TextBox.MaxLengthProperty), ss.Int32));
		},
		set_MaxLength: function(value) {
			this.SetValue($System_Windows_Controls_TextBox.MaxLengthProperty, value, 11);
		},
		get_TextAlignment: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_TextBox.TextAlignmentProperty), ss.Int32);
		},
		set_TextAlignment: function(value) {
			this.SetValue($System_Windows_Controls_TextBox.TextAlignmentProperty, value, 11);
		},
		get_TextWrapping: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_TextBox.TextWrappingProperty), ss.Int32);
		},
		set_TextWrapping: function(value) {
			this.SetValue($System_Windows_Controls_TextBox.TextWrappingProperty, value, 11);
		},
		get_HorizontalScrollBarVisibility: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_TextBox.HorizontalScrollBarVisibilityProperty), ss.Int32);
		},
		set_HorizontalScrollBarVisibility: function(value) {
			this.SetValue($System_Windows_Controls_TextBox.HorizontalScrollBarVisibilityProperty, value, 11);
		},
		get_VerticalScrollBarVisibility: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_TextBox.VerticalScrollBarVisibilityProperty), ss.Int32);
		},
		set_VerticalScrollBarVisibility: function(value) {
			this.SetValue($System_Windows_Controls_TextBox.VerticalScrollBarVisibilityProperty, value, 11);
		},
		get_LineCount: function() {
			return this.$7$LineCountField;
		},
		set_LineCount: function(value) {
			this.$7$LineCountField = value;
		},
		GetTextBoxContent: function() {
			return this.$textBoxView;
		},
		Clear: function() {
			this.set_Text('');
		},
		Select: function(start, length) {
			this.$textBoxView.set_$SelectionStart(start);
			this.$textBoxView.set_$SelectionLength(length);
		},
		GetCharacterIndexFromLineIndex: function(lineIndex) {
			return Granular.Extensions.StringExtensions.GetCharacterIndexFromLineIndex(Granular.Extensions.StringExtensions.DefaultIfNullOrEmpty(this.get_Text(), null), lineIndex);
		},
		GetLineIndexFromCharacterIndex: function(charIndex) {
			return Granular.Extensions.StringExtensions.GetLineIndexFromCharacterIndex(Granular.Extensions.StringExtensions.DefaultIfNullOrEmpty(this.get_Text(), null), charIndex);
		},
		GetLineLength: function(lineIndex) {
			return Granular.Extensions.StringExtensions.GetLineLength(Granular.Extensions.StringExtensions.DefaultIfNullOrEmpty(this.get_Text(), null), lineIndex);
		},
		GetLineText: function(lineIndex) {
			return Granular.Extensions.StringExtensions.GetLineText(Granular.Extensions.StringExtensions.DefaultIfNullOrEmpty(this.get_Text(), null), lineIndex);
		},
		ScrollToLine: function(lineIndex) {
			var characterIndex = this.GetCharacterIndexFromLineIndex(lineIndex);
			if (characterIndex !== -1) {
				this.Select(characterIndex, characterIndex);
			}
		},
		$OnTextChanged: function(e) {
			this.$textBoxView.set_$Text(this.get_Text());
			this.RaiseEvent(new $System_Windows_Controls_TextChangedEventArgs($System_Windows_Controls_Primitives_TextBoxBase.TextChangedEvent, this));
		},
		OnGotFocus: function(e) {
			this.$textBoxView.$FocusRenderElement();
		},
		OnLostFocus: function(e) {
			this.$textBoxView.$ClearFocusRenderElement();
		},
		OnKeyDown: function(e) {
			if (e.get_Key() === 6 && !this.get_AcceptsReturn() || e.get_Key() === 3 && !this.get_AcceptsTab()) {
				return;
			}
			this.$textBoxView.$ProcessRenderElementKeyEvent(e);
		}
	}, $System_Windows_Controls_Primitives_TextBoxBase, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initClass($System_Windows_Controls_TextChangedEventArgs, $asm, {
		InvokeEventHandler: function(handler, target) {
			if (ss.isValue(handler)) {
				handler(target, this);
			}
			else {
				$System_Windows_RoutedEventArgs.prototype.InvokeEventHandler.call(this, handler, target);
			}
		}
	}, $System_Windows_RoutedEventArgs);
	ss.initClass($System_Windows_Controls_UIElementCollection, $asm, {
		add_CollectionChanged: function(value) {
			this.$1$CollectionChangedField = ss.delegateCombine(this.$1$CollectionChangedField, value);
		},
		remove_CollectionChanged: function(value) {
			this.$1$CollectionChangedField = ss.delegateRemove(this.$1$CollectionChangedField, value);
		},
		get_count: function() {
			return this.$children.length;
		},
		get_item: function(index) {
			return this.$children[index];
		},
		set_item: function(index, value) {
			if (ss.referenceEquals(this.$children[index], value)) {
				return;
			}
			var args = Granular.Collections.NotifyCollectionChangedEventArgs.Replace(this.$children[index], value, index);
			if (ss.isValue(this.$children[index])) {
				this.$ClearChildParent(this.$children[index]);
			}
			this.$children[index] = value;
			if (ss.isValue(this.$children[index])) {
				this.$SetChildParent(this.$children[index]);
			}
			Granular.Collections.NotifyCollectionChangedEventHandlerExtensions.Raise(this.$1$CollectionChangedField, this, args);
		},
		get_IsReadOnly: function() {
			return false;
		},
		add: function(item) {
			this.$children.push(item);
			this.$SetChildParent(item);
			Granular.Collections.NotifyCollectionChangedEventHandlerExtensions.Raise(this.$1$CollectionChangedField, this, Granular.Collections.NotifyCollectionChangedEventArgs.Add(item, this.$children.length));
		},
		clear: function() {
			var lastChildren = Array.prototype.slice.call(this.$children);
			ss.clear(this.$children);
			var $t1 = ss.getEnumerator(lastChildren);
			try {
				while ($t1.moveNext()) {
					var child = $t1.current();
					this.$ClearChildParent(child);
				}
			}
			finally {
				$t1.dispose();
			}
			Granular.Collections.NotifyCollectionChangedEventHandlerExtensions.Raise(this.$1$CollectionChangedField, this, Granular.Collections.NotifyCollectionChangedEventArgs.RemoveRange(lastChildren, 0));
		},
		contains: function(item) {
			return ss.contains(this.$children, item);
		},
		indexOf: function(item) {
			return ss.indexOf(this.$children, item);
		},
		insert: function(index, item) {
			ss.insert(this.$children, index, item);
			this.$SetChildParent(item);
			Granular.Collections.NotifyCollectionChangedEventHandlerExtensions.Raise(this.$1$CollectionChangedField, this, Granular.Collections.NotifyCollectionChangedEventArgs.Add(item, index));
		},
		remove: function(item) {
			var index = ss.indexOf(this.$children, item);
			if (index === -1) {
				return false;
			}
			var result = ss.remove(this.$children, item);
			this.$ClearChildParent(item);
			Granular.Collections.NotifyCollectionChangedEventHandlerExtensions.Raise(this.$1$CollectionChangedField, this, Granular.Collections.NotifyCollectionChangedEventArgs.Remove(item, index));
			return result;
		},
		removeAt: function(index) {
			this.remove(this.$children[index]);
		},
		CopyTo: function(array, arrayIndex) {
			System.Linq.EnumerableExtensions.CopyTo($System_Windows_UIElement).call(null, this.$children, array, arrayIndex);
		},
		$ClearChildParent: function(child) {
			this.$parent.RemoveLogicalChild(child);
			this.$parent.RemoveVisualChild(child);
		},
		$SetChildParent: function(child) {
			this.$parent.AddLogicalChild(child);
			this.$parent.AddVisualChild(child);
		},
		getEnumerator: function() {
			return ss.getEnumerator(this.$children);
		}
	}, null, [ss.IEnumerable, ss.IEnumerable, ss.ICollection, ss.IList, Granular.Collections.INotifyCollectionChanged]);
	ss.initClass($System_Windows_Controls_UserControl, $asm, {}, $System_Windows_Controls_ContentControl, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer, $System_Windows_Controls_IItemContainer]);
	ss.initClass($System_Windows_Controls_WrapPanel, $asm, {
		get_Orientation: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_WrapPanel.OrientationProperty), ss.Int32);
		},
		set_Orientation: function(value) {
			this.SetValue($System_Windows_Controls_WrapPanel.OrientationProperty, value, 11);
		},
		MeasureOverride: function(availableSize) {
			if (!Enumerable.from(this.get_Children()).any()) {
				return $System_Windows_Size.Zero;
			}
			var $t1 = this.get_Children().getEnumerator();
			try {
				while ($t1.moveNext()) {
					var child = $t1.current();
					this.$MeasureChild(child, this.$GetMainLength(availableSize), this.$GetCrossLength(availableSize));
				}
			}
			finally {
				$t1.dispose();
			}
			var groups = this.$GetElementGroups(availableSize);
			var mainLength = Enumerable.from(groups).select(ss.mkdel(this, function(group) {
				return Enumerable.from(group).select(ss.mkdel(this, function(child1) {
					return this.$GetMainLength(child1.get_DesiredSize());
				})).sum();
			})).max();
			var crossLength = Enumerable.from(groups).select(ss.mkdel(this, function(group1) {
				return Enumerable.from(group1).select(ss.mkdel(this, function(child2) {
					return this.$GetCrossLength(child2.get_DesiredSize());
				})).max();
			})).sum();
			return this.$CreateSize(mainLength, crossLength);
		},
		ArrangeOverride: function(finalSize) {
			if (!Enumerable.from(this.get_Children()).any()) {
				return $System_Windows_Size.Zero;
			}
			var groups = this.$GetElementGroups(finalSize);
			var maxMainLength = 0;
			var totalCrossLength = 0;
			var $t1 = ss.getEnumerator(groups);
			try {
				while ($t1.moveNext()) {
					var group = $t1.current();
					var groupMainLength = 0;
					var groupMaxCrossLength = Enumerable.from(group).select(ss.mkdel(this, function(child) {
						return this.$GetCrossLength(child.get_DesiredSize());
					})).max();
					var $t2 = ss.getEnumerator(group);
					try {
						while ($t2.moveNext()) {
							var child1 = $t2.current();
							var childMainLength = this.$GetMainLength(child1.get_DesiredSize());
							this.$ArrangeChild(child1, groupMainLength, totalCrossLength, childMainLength, groupMaxCrossLength);
							groupMainLength += childMainLength;
						}
					}
					finally {
						$t2.dispose();
					}
					maxMainLength = Math.max(maxMainLength, groupMainLength);
					totalCrossLength += groupMaxCrossLength;
				}
			}
			finally {
				$t1.dispose();
			}
			return finalSize;
		},
		$GetElementGroups: function(size) {
			var mainLength = this.$GetMainLength(size);
			var groups = [];
			var currentGroup = [];
			var currentGroupMainLength = 0;
			var $t1 = this.get_Children().getEnumerator();
			try {
				while ($t1.moveNext()) {
					var child = $t1.current();
					var childMainLength = this.$GetMainLength(child.get_DesiredSize());
					if (currentGroupMainLength > 0 && currentGroupMainLength + childMainLength > mainLength) {
						groups.push(currentGroup);
						// start a new group
						currentGroup = [];
						currentGroupMainLength = 0;
					}
					currentGroupMainLength += childMainLength;
					currentGroup.push(child);
				}
			}
			finally {
				$t1.dispose();
			}
			groups.push(currentGroup);
			return groups;
		},
		$MeasureChild: function(child, availableMainLength, availableCrossLength) {
			child.Measure(((this.get_Orientation() === 0) ? new $System_Windows_Size(availableMainLength, availableCrossLength) : new $System_Windows_Size(availableCrossLength, availableMainLength)));
		},
		$ArrangeChild: function(child, finalMainStart, finalCrossStart, finalMainLength, finalCrossLength) {
			child.Arrange(((this.get_Orientation() === 0) ? new $System_Windows_Rect.$ctor3(finalMainStart, finalCrossStart, finalMainLength, finalCrossLength) : new $System_Windows_Rect.$ctor3(finalCrossStart, finalMainStart, finalCrossLength, finalMainLength)));
		},
		$CreateSize: function(mainLength, crossLength) {
			if (this.get_Orientation() === 0) {
				return new $System_Windows_Size(mainLength, crossLength);
			}
			return new $System_Windows_Size(crossLength, mainLength);
		},
		$GetMainLength: function(size) {
			return ((this.get_Orientation() === 0) ? size.get_Width() : size.get_Height());
		},
		$GetCrossLength: function(size) {
			return ((this.get_Orientation() === 0) ? size.get_Height() : size.get_Width());
		}
	}, $System_Windows_Controls_Panel, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initEnum($System_Windows_Controls_Primitives_ClickMode, $asm, { Release: 0, Press: 1 });
	ss.initClass($System_Windows_Controls_Primitives_DragCompletedEventArgs, $asm, {
		get_IsCanceled: function() {
			return this.$3$IsCanceledField;
		},
		set_IsCanceled: function(value) {
			this.$3$IsCanceledField = value;
		},
		InvokeEventHandler: function(handler, target) {
			if (ss.isValue(handler)) {
				handler(target, this);
			}
			else {
				$System_Windows_RoutedEventArgs.prototype.InvokeEventHandler.call(this, handler, target);
			}
		}
	}, $System_Windows_RoutedEventArgs);
	ss.initClass($System_Windows_Controls_Primitives_DragDeltaEventArgs, $asm, {
		get_Delta: function() {
			return this.$3$DeltaField;
		},
		set_Delta: function(value) {
			this.$3$DeltaField = value;
		},
		InvokeEventHandler: function(handler, target) {
			if (ss.isValue(handler)) {
				handler(target, this);
			}
			else {
				$System_Windows_RoutedEventArgs.prototype.InvokeEventHandler.call(this, handler, target);
			}
		}
	}, $System_Windows_RoutedEventArgs);
	ss.initClass($System_Windows_Controls_Primitives_DragStartedEventArgs, $asm, {
		InvokeEventHandler: function(handler, target) {
			if (ss.isValue(handler)) {
				handler(target, this);
			}
			else {
				$System_Windows_RoutedEventArgs.prototype.InvokeEventHandler.call(this, handler, target);
			}
		}
	}, $System_Windows_RoutedEventArgs);
	ss.initClass($System_Windows_Controls_Primitives_Placement, $asm, {});
	ss.initEnum($System_Windows_Controls_Primitives_PlacementMode, $asm, { Absolute: 0, Relative: 1, Bottom: 2, Center: 3, Right: 4, AbsolutePoint: 5, RelativePoint: 6, Mouse: 7, MousePoint: 8, Left: 9, Top: 10 });
	ss.initClass($System_Windows_Controls_Primitives_Popup, $asm, {
		add_Opened: function(value) {
			this.$5$OpenedField = ss.delegateCombine(this.$5$OpenedField, value);
		},
		remove_Opened: function(value) {
			this.$5$OpenedField = ss.delegateRemove(this.$5$OpenedField, value);
		},
		add_Closed: function(value) {
			this.$5$ClosedField = ss.delegateCombine(this.$5$ClosedField, value);
		},
		remove_Closed: function(value) {
			this.$5$ClosedField = ss.delegateRemove(this.$5$ClosedField, value);
		},
		get_HorizontalOffset: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Primitives_Popup.HorizontalOffsetProperty), Number));
		},
		set_HorizontalOffset: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_Popup.HorizontalOffsetProperty, value, 11);
		},
		get_VerticalOffset: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Primitives_Popup.VerticalOffsetProperty), Number));
		},
		set_VerticalOffset: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_Popup.VerticalOffsetProperty, value, 11);
		},
		get_Placement: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Primitives_Popup.PlacementProperty), ss.Int32);
		},
		set_Placement: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_Popup.PlacementProperty, value, 11);
		},
		get_PlacementRectangle: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Primitives_Popup.PlacementRectangleProperty), $System_Windows_Rect);
		},
		set_PlacementRectangle: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_Popup.PlacementRectangleProperty, value, 11);
		},
		get_PlacementTarget: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Primitives_Popup.PlacementTargetProperty), $System_Windows_Media_Visual);
		},
		set_PlacementTarget: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_Popup.PlacementTargetProperty, value, 11);
		},
		get_IsOpen: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Primitives_Popup.IsOpenProperty), Boolean));
		},
		set_IsOpen: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_Popup.IsOpenProperty, value, 11);
		},
		get_StaysOpen: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Primitives_Popup.StaysOpenProperty), Boolean));
		},
		set_StaysOpen: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_Popup.StaysOpenProperty, value, 11);
		},
		get_Child: function() {
			return this.$child;
		},
		set_Child: function(value) {
			if (ss.referenceEquals(this.$child, value)) {
				return;
			}
			if (ss.isValue(this.$child)) {
				this.RemoveLogicalChild(this.$child);
			}
			this.$child = value;
			this.$popupContainer.set_$Child(this.$child);
			if (ss.isValue(this.$child)) {
				this.AddLogicalChild(this.$child);
			}
		},
		get_$PopupLayer: function() {
			return this.$popupLayer;
		},
		set_$PopupLayer: function(value) {
			if (ss.referenceEquals(this.$popupLayer, value)) {
				return;
			}
			if (ss.isValue(this.$popupLayer)) {
				this.$popupLayer.RemoveChild(this.$popupContainer);
				this.$popupLayer.remove_ClosePopupRequest(ss.mkdel(this, this.$OnClosePopupRequest));
			}
			this.$popupLayer = value;
			if (ss.isValue(this.$popupLayer)) {
				this.$popupLayer.AddChild(this.$popupContainer);
				this.$popupLayer.add_ClosePopupRequest(ss.mkdel(this, this.$OnClosePopupRequest));
			}
			this.$SetPosition();
		},
		OnOpened: function() {
			//
		},
		OnClosed: function() {
			//
		},
		OnVisualAncestorChanged: function() {
			$System_Windows_Media_Visual.prototype.OnVisualAncestorChanged.call(this);
			this.set_$PopupLayer($System_Windows_Controls_PopupLayer.GetPopupLayer(this));
		},
		$OnStaysOpenChanged: function(e) {
			$System_Windows_Controls_PopupLayer.SetStaysOpen(this.$popupContainer, ss.unbox(ss.cast(e.get_NewValue(), Boolean)));
		},
		$OnIsOpenChanged: function(e) {
			var isOpen = ss.unbox(ss.cast(e.get_NewValue(), Boolean));
			this.$popupContainer.set_$IsOpen(isOpen);
			if (isOpen) {
				this.$SetPosition();
				this.OnOpened();
				Granular.Extensions.EventHandlerExtensions.Raise(this.$5$OpenedField, this);
			}
			else {
				this.OnClosed();
				Granular.Extensions.EventHandlerExtensions.Raise(this.$5$ClosedField, this);
			}
		},
		$OnClosePopupRequest: function(sender, e) {
			if (!this.get_StaysOpen()) {
				this.set_IsOpen(false);
			}
		},
		$SetPosition: function() {
			if (ss.isValue(this.get_$PopupLayer()) && this.get_IsOpen()) {
				this.$popupContainer.Measure(this.get_$PopupLayer().get_VisualSize());
				var popupSize = this.$popupContainer.get_DesiredSize();
				var placementTargetRect = (ss.isValue(this.get_PlacementTarget()) ? new $System_Windows_Rect.$ctor2(this.get_$PopupLayer().PointFromRoot(this.get_PlacementTarget().PointToRoot($System_Windows_Point.Zero)), this.get_PlacementTarget().get_VisualSize()) : $System_Windows_Rect.Zero);
				var position = $System_Windows_Controls_Primitives_Placement.GetPosition(this.get_Placement(), placementTargetRect, this.get_PlacementRectangle(), this.$GetMouseBounds(), new $System_Windows_Point.$ctor1(this.get_HorizontalOffset(), this.get_VerticalOffset()), popupSize, new $System_Windows_Rect(this.get_$PopupLayer().get_VisualSize()));
				this.$popupContainer.set_$Position(position);
				this.get_$PopupLayer().UpdateLayout();
			}
		},
		$GetMouseBounds: function() {
			if (this.get_Placement() !== 7 && this.get_Placement() !== 8) {
				return $System_Windows_Rect.Zero;
			}
			return new $System_Windows_Rect.$ctor2(this.get_$PopupLayer().PointFromRoot($System_Windows_ApplicationHostExtensions.GetMouseDeviceFromElement($System_Windows_ApplicationHost.get_Current(), this.get_$PopupLayer()).get_Position()), new $System_Windows_Size(12, 19));
		}
	}, $System_Windows_FrameworkElement, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initClass($System_Windows_Controls_Primitives_RepeatButton, $asm, {
		get_Delay: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Primitives_RepeatButton.DelayProperty), ss.Int32));
		},
		set_Delay: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_RepeatButton.DelayProperty, value, 11);
		},
		get_Interval: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Primitives_RepeatButton.IntervalProperty), ss.Int32));
		},
		set_Interval: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_RepeatButton.IntervalProperty, value, 11);
		},
		OnPressStarted: function() {
			this.$timer.set_Interval(new ss.TimeSpan(((this.get_Delay() > 0) ? this.get_Delay() : this.get_Interval()) * 10000));
			this.$timer.Start();
		},
		OnPressEnded: function() {
			this.$timer.Stop();
		},
		$OnTimerTick: function(sender, e) {
			// the first interval can be different
			if (this.$timer.get_Interval().ticks / 10000 !== this.get_Interval()) {
				this.$timer.Stop();
				this.$timer.set_Interval(new ss.TimeSpan(this.get_Interval() * 10000));
				this.$timer.Start();
			}
			if (this.get_IsPressed()) {
				this.RaiseClick();
			}
		}
	}, $System_Windows_Controls_Primitives_ButtonBase, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer, $System_Windows_Controls_IItemContainer]);
	ss.initClass($System_Windows_Controls_Primitives_ScrollBar, $asm, {
		add_Scroll: function(value) {
			this.AddHandler($System_Windows_Controls_Primitives_ScrollBar.ScrollEvent, value, false);
		},
		remove_Scroll: function(value) {
			this.RemoveHandler($System_Windows_Controls_Primitives_ScrollBar.ScrollEvent, value);
		},
		get_Orientation: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Primitives_ScrollBar.OrientationProperty), ss.Int32);
		},
		set_Orientation: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_ScrollBar.OrientationProperty, value, 11);
		},
		get_ViewportSize: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Primitives_ScrollBar.ViewportSizeProperty), Number));
		},
		set_ViewportSize: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_ScrollBar.ViewportSizeProperty, value, 11);
		},
		get_$Thumb: function() {
			return this.$thumb;
		},
		set_$Thumb: function(value) {
			if (ss.referenceEquals(this.$thumb, value)) {
				return;
			}
			if (ss.isValue(this.$thumb)) {
				this.$thumb.remove_DragStarted(ss.mkdel(this, this.$OnThumbDragStarted));
				this.$thumb.remove_DragDelta(ss.mkdel(this, this.$OnThumbDragDelta));
				this.$thumb.remove_DragCompleted(ss.mkdel(this, this.$OnThumbDragCompleted));
			}
			this.$thumb = value;
			if (ss.isValue(this.$thumb)) {
				this.$thumb.add_DragStarted(ss.mkdel(this, this.$OnThumbDragStarted));
				this.$thumb.add_DragDelta(ss.mkdel(this, this.$OnThumbDragDelta));
				this.$thumb.add_DragCompleted(ss.mkdel(this, this.$OnThumbDragCompleted));
			}
		},
		get_$Track: function() {
			return this.$track;
		},
		set_$Track: function(value) {
			this.$track = value;
			if (ss.isValue(this.$track)) {
				this.set_$Thumb(this.$track.get_Thumb());
				this.set_$DecreasePageButton(this.$track.get_DecreaseRepeatButton());
				this.set_$IncreasePageButton(this.$track.get_IncreaseRepeatButton());
			}
			else {
				this.set_$Thumb(null);
				this.set_$DecreasePageButton(null);
				this.set_$IncreasePageButton(null);
			}
		},
		get_$DecreasePageButton: function() {
			return this.$decreasePageButton;
		},
		set_$DecreasePageButton: function(value) {
			if (ss.referenceEquals(this.$decreasePageButton, value)) {
				return;
			}
			if (ss.isValue(this.$decreasePageButton)) {
				this.$decreasePageButton.remove_Click(ss.mkdel(this, this.$OnDecreasePageClicked));
			}
			this.$decreasePageButton = value;
			if (ss.isValue(this.$decreasePageButton)) {
				this.$decreasePageButton.add_Click(ss.mkdel(this, this.$OnDecreasePageClicked));
			}
		},
		get_$IncreasePageButton: function() {
			return this.$increasePageButton;
		},
		set_$IncreasePageButton: function(value) {
			if (ss.referenceEquals(this.$increasePageButton, value)) {
				return;
			}
			if (ss.isValue(this.$increasePageButton)) {
				this.$increasePageButton.remove_Click(ss.mkdel(this, this.$OnIncreasePageClicked));
			}
			this.$increasePageButton = value;
			if (ss.isValue(this.$increasePageButton)) {
				this.$increasePageButton.add_Click(ss.mkdel(this, this.$OnIncreasePageClicked));
			}
		},
		get_$DecreaseLineButton: function() {
			return this.$decreaseLineButton;
		},
		set_$DecreaseLineButton: function(value) {
			if (ss.referenceEquals(this.$decreaseLineButton, value)) {
				return;
			}
			if (ss.isValue(this.$decreaseLineButton)) {
				this.$decreaseLineButton.remove_Click(ss.mkdel(this, this.$OnDecreaseLineClicked));
			}
			this.$decreaseLineButton = value;
			if (ss.isValue(this.$decreaseLineButton)) {
				this.$decreaseLineButton.add_Click(ss.mkdel(this, this.$OnDecreaseLineClicked));
			}
		},
		get_$IncreaseLineButton: function() {
			return this.$increaseLineButton;
		},
		set_$IncreaseLineButton: function(value) {
			if (ss.referenceEquals(this.$increaseLineButton, value)) {
				return;
			}
			if (ss.isValue(this.$increaseLineButton)) {
				this.$increaseLineButton.remove_Click(ss.mkdel(this, this.$OnIncreaseLineClicked));
			}
			this.$increaseLineButton = value;
			if (ss.isValue(this.$increaseLineButton)) {
				this.$increaseLineButton.add_Click(ss.mkdel(this, this.$OnIncreaseLineClicked));
			}
		},
		OnApplyTemplate: function() {
			$System_Windows_Controls_Control.prototype.OnApplyTemplate.call(this);
			if (ss.isValue(this.get_Template())) {
				this.set_$DecreaseLineButton(ss.safeCast($System_Windows_FrameworkTemplateExtensions.FindName(this.get_Template(), 'PART_DecreaseButton', this), $System_Windows_Controls_Primitives_ButtonBase));
				this.set_$IncreaseLineButton(ss.safeCast($System_Windows_FrameworkTemplateExtensions.FindName(this.get_Template(), 'PART_IncreaseButton', this), $System_Windows_Controls_Primitives_ButtonBase));
				this.set_$Track(ss.safeCast($System_Windows_FrameworkTemplateExtensions.FindName(this.get_Template(), 'PART_Track', this), $System_Windows_Controls_Primitives_Track));
			}
			else {
				this.set_$DecreaseLineButton(null);
				this.set_$IncreaseLineButton(null);
				this.set_$Track(null);
			}
		},
		$OnDecreaseLineClicked: function(sender, e) {
			this.set_Value(this.get_Value() - this.get_SmallChange());
			this.$RaiseScrollEvent(3);
			e.set_Handled(true);
		},
		$OnIncreaseLineClicked: function(sender, e) {
			this.set_Value(this.get_Value() + this.get_SmallChange());
			this.$RaiseScrollEvent(4);
			e.set_Handled(true);
		},
		$OnDecreasePageClicked: function(sender, e) {
			this.set_Value(this.get_Value() - this.get_LargeChange());
			this.$RaiseScrollEvent(1);
			e.set_Handled(true);
		},
		$OnIncreasePageClicked: function(sender, e) {
			this.set_Value(this.get_Value() + this.get_LargeChange());
			this.$RaiseScrollEvent(2);
			e.set_Handled(true);
		},
		$OnThumbDragStarted: function(sender, e) {
			this.$dragInitialValue = this.get_Value();
			e.set_Handled(true);
		},
		$OnThumbDragDelta: function(sender, e) {
			this.set_Value(((Math.abs(this.$GetCrossLength(e.get_Delta())) > this.$SnapBackThreshold) ? this.$dragInitialValue : Granular.Extensions.DoubleExtensions.Bounds(this.$dragInitialValue + (this.get_Maximum() - this.get_Minimum()) * this.$GetMainLength(e.get_Delta()) / (this.$GetMainLength$1(this.get_$Track().get_RenderSize()) - this.$GetMainLength$1(this.get_$Thumb().get_RenderSize())), this.get_Minimum(), this.get_Maximum())));
			this.$RaiseScrollEvent(5);
			e.set_Handled(true);
		},
		$OnThumbDragCompleted: function(sender, e) {
			if (e.get_IsCanceled()) {
				this.set_Value(this.$dragInitialValue);
			}
			this.$RaiseScrollEvent(0);
			e.set_Handled(true);
		},
		$OnViewportSizeChanged: function(e) {
			this.set_SmallChange($System_Windows_Controls_Primitives_ScrollInfoExtensions.ScrollLineDelta);
			this.set_LargeChange(Granular.Extensions.DoubleExtensions.Max(this.get_ViewportSize() - $System_Windows_Controls_Primitives_ScrollInfoExtensions.ScrollLineDelta, $System_Windows_Controls_Primitives_ScrollInfoExtensions.ScrollLineDelta));
		},
		$GetMainLength$1: function(size) {
			return ((this.get_Orientation() === 0) ? size.get_Width() : size.get_Height());
		},
		$GetMainLength: function(point) {
			return ((this.get_Orientation() === 0) ? point.get_X() : point.get_Y());
		},
		$GetCrossLength: function(point) {
			return ((this.get_Orientation() === 0) ? point.get_Y() : point.get_X());
		},
		$RaiseScrollEvent: function(scrollEventType) {
			this.RaiseEvent(new $System_Windows_Controls_ScrollEventArgs($System_Windows_Controls_Primitives_ScrollBar.ScrollEvent, this, scrollEventType, this.get_Value()));
		}
	}, $System_Windows_Controls_Primitives_RangeBase, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initClass($System_Windows_Controls_Primitives_ScrollInfoExtensions, $asm, {});
	ss.initClass($System_Windows_Controls_Primitives_Thumb, $asm, {
		add_DragStarted: function(value) {
			this.AddHandler($System_Windows_Controls_Primitives_Thumb.DragStartedEvent, value, false);
		},
		remove_DragStarted: function(value) {
			this.RemoveHandler($System_Windows_Controls_Primitives_Thumb.DragStartedEvent, value);
		},
		add_DragDelta: function(value) {
			this.AddHandler($System_Windows_Controls_Primitives_Thumb.DragDeltaEvent, value, false);
		},
		remove_DragDelta: function(value) {
			this.RemoveHandler($System_Windows_Controls_Primitives_Thumb.DragDeltaEvent, value);
		},
		add_DragCompleted: function(value) {
			this.AddHandler($System_Windows_Controls_Primitives_Thumb.DragCompletedEvent, value, false);
		},
		remove_DragCompleted: function(value) {
			this.RemoveHandler($System_Windows_Controls_Primitives_Thumb.DragCompletedEvent, value);
		},
		get_IsDragging: function() {
			return ss.unbox(ss.cast(this.GetValue$1($System_Windows_Controls_Primitives_Thumb.$IsDraggingPropertyKey), Boolean));
		},
		set_IsDragging: function(value) {
			this.SetValue$1($System_Windows_Controls_Primitives_Thumb.$IsDraggingPropertyKey, value, 11);
		},
		OnMouseDown: function(e) {
			if (e.get_ChangedButton() === 0) {
				e.get_MouseDevice().Capture(this);
				this.$dragStartPosition = e.get_AbsolutePosition();
				this.set_IsDragging(true);
				var dragStartedEventArgs = new $System_Windows_Controls_Primitives_DragStartedEventArgs($System_Windows_Controls_Primitives_Thumb.DragStartedEvent, this);
				this.RaiseEvent(dragStartedEventArgs);
				e.set_Handled(dragStartedEventArgs.get_Handled());
			}
		},
		OnMouseMove: function(e) {
			if (this.get_IsDragging()) {
				var DragDeltaEventArgs = new $System_Windows_Controls_Primitives_DragDeltaEventArgs($System_Windows_Controls_Primitives_Thumb.DragDeltaEvent, this, $System_Windows_Point.op_Subtraction(e.get_AbsolutePosition(), this.$dragStartPosition));
				this.RaiseEvent(DragDeltaEventArgs);
				e.set_Handled(DragDeltaEventArgs.get_Handled());
			}
		},
		OnMouseUp: function(e) {
			if (this.get_IsDragging()) {
				e.get_MouseDevice().ReleaseCapture();
				this.set_IsDragging(false);
				var dragCompletedEventArgs = new $System_Windows_Controls_Primitives_DragCompletedEventArgs($System_Windows_Controls_Primitives_Thumb.DragCompletedEvent, this, false);
				this.RaiseEvent(dragCompletedEventArgs);
				e.set_Handled(dragCompletedEventArgs.get_Handled());
			}
		},
		UpdateVisualState: function(useTransitions) {
			$System_Windows_VisualStateManager.GoToState(this, this.$GetCommonState(), useTransitions);
			$System_Windows_VisualStateManager.GoToState(this, this.$GetFocusState(), useTransitions);
		},
		$GetCommonState: function() {
			if (!this.get_IsEnabled()) {
				return $System_Windows_VisualStates.DisabledState;
			}
			if (this.get_IsDragging()) {
				return $System_Windows_VisualStates.PressedState;
			}
			if (this.get_IsMouseOver()) {
				return $System_Windows_VisualStates.MouseOverState;
			}
			return $System_Windows_VisualStates.NormalState;
		},
		$GetFocusState: function() {
			return (this.get_IsKeyboardFocused() ? $System_Windows_VisualStates.FocusedState : $System_Windows_VisualStates.UnfocusedState);
		}
	}, $System_Windows_Controls_Control, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initClass($System_Windows_Controls_Primitives_Track, $asm, {
		get_Orientation: function() {
			return ss.cast(this.GetValue($System_Windows_Controls_Primitives_Track.OrientationProperty), ss.Int32);
		},
		set_Orientation: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_Track.OrientationProperty, value, 11);
		},
		get_Minimum: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Primitives_Track.MinimumProperty), Number));
		},
		set_Minimum: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_Track.MinimumProperty, value, 11);
		},
		get_Maximum: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Primitives_Track.MaximumProperty), Number));
		},
		set_Maximum: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_Track.MaximumProperty, value, 11);
		},
		get_Value: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Primitives_Track.ValueProperty), Number));
		},
		set_Value: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_Track.ValueProperty, value, 11);
		},
		get_ViewportSize: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Controls_Primitives_Track.ViewportSizeProperty), Number));
		},
		set_ViewportSize: function(value) {
			this.SetValue($System_Windows_Controls_Primitives_Track.ViewportSizeProperty, value, 11);
		},
		get_DecreaseRepeatButton: function() {
			return this.$decreaseRepeatButton;
		},
		set_DecreaseRepeatButton: function(value) {
			if (ss.referenceEquals(this.$decreaseRepeatButton, value)) {
				return;
			}
			if (ss.isValue(this.$decreaseRepeatButton)) {
				this.RemoveVisualChild(this.$decreaseRepeatButton);
			}
			this.$decreaseRepeatButton = value;
			if (ss.isValue(this.$decreaseRepeatButton)) {
				this.AddVisualChild(this.$decreaseRepeatButton);
			}
		},
		get_IncreaseRepeatButton: function() {
			return this.$increaseRepeatButton;
		},
		set_IncreaseRepeatButton: function(value) {
			if (ss.referenceEquals(this.$increaseRepeatButton, value)) {
				return;
			}
			if (ss.isValue(this.$increaseRepeatButton)) {
				this.RemoveVisualChild(this.$increaseRepeatButton);
			}
			this.$increaseRepeatButton = value;
			if (ss.isValue(this.$increaseRepeatButton)) {
				this.AddVisualChild(this.$increaseRepeatButton);
			}
		},
		get_Thumb: function() {
			return this.$thumb;
		},
		set_Thumb: function(value) {
			if (ss.referenceEquals(this.$thumb, value)) {
				return;
			}
			if (ss.isValue(this.$thumb)) {
				this.RemoveVisualChild(this.$thumb);
			}
			this.$thumb = value;
			if (ss.isValue(this.$thumb)) {
				this.AddVisualChild(this.$thumb);
			}
		},
		get_ThumbMinLength: function() {
			return this.$5$ThumbMinLengthField;
		},
		set_ThumbMinLength: function(value) {
			this.$5$ThumbMinLengthField = value;
		},
		MeasureOverride: function(availableSize) {
			if (ss.isValue(this.get_Thumb())) {
				this.get_Thumb().Measure(availableSize);
				return $System_Windows_SizeExtensions.Combine(this.$GetMainSize(0), this.get_Thumb().get_DesiredSize());
			}
			return $System_Windows_Size.Zero;
		},
		ArrangeOverride: function(finalSize) {
			var mainLength = this.$GetMainLength(finalSize);
			var crossLength = this.$GetCrossLength(finalSize);
			// the scrollable range (Maximum - Minimum) equals to (ExtentSize - ViewportSize)
			// the thumb ratio should be (ViewportSize / ExtentSize) = (ViewportSize / (ViewportSize + Maximum - Minimum))
			var thumbMainLength = Granular.Extensions.DoubleExtensions.Bounds((isNaN(this.get_ViewportSize()) ? (ss.isNullOrUndefined(this.get_Thumb()) ? 0 : this.$GetMainLength(this.get_Thumb().get_DesiredSize())) : (mainLength * this.get_ViewportSize() / (this.get_ViewportSize() + this.get_Maximum() - this.get_Minimum()))), this.get_ThumbMinLength(), Granular.Extensions.DoubleExtensions.Max(this.get_ThumbMinLength(), mainLength));
			// the decrease and increase buttons fill the remaining area (these buttons are usually transparent)
			var decreaseButtonMainLength = ((this.get_Maximum() === this.get_Minimum()) ? 0 : ((mainLength - thumbMainLength) * (Granular.Extensions.DoubleExtensions.Min(this.get_Value(), this.get_Maximum()) - this.get_Minimum()) / (this.get_Maximum() - this.get_Minimum())));
			var increaseButtonMainLength = mainLength - thumbMainLength - decreaseButtonMainLength;
			if (ss.isValue(this.get_DecreaseRepeatButton()) && ss.isValue(this.get_IncreaseRepeatButton())) {
				this.$ArrangeChild(this.get_DecreaseRepeatButton(), 0, 0, decreaseButtonMainLength, crossLength);
				this.$ArrangeChild(this.get_IncreaseRepeatButton(), decreaseButtonMainLength + thumbMainLength, 0, increaseButtonMainLength, crossLength);
			}
			if (ss.isValue(this.get_Thumb())) {
				this.$ArrangeChild(this.get_Thumb(), decreaseButtonMainLength, 0, thumbMainLength, crossLength);
			}
			return finalSize;
		},
		$GetMainLength: function(size) {
			return ((this.get_Orientation() === 0) ? size.get_Width() : size.get_Height());
		},
		$GetCrossLength: function(size) {
			return ((this.get_Orientation() === 0) ? size.get_Height() : size.get_Width());
		},
		$GetMainSize: function(length) {
			return ((this.get_Orientation() === 0) ? $System_Windows_Size.FromWidth(length) : $System_Windows_Size.FromHeight(length));
		},
		$ArrangeChild: function(child, finalMainStart, finalCrossStart, finalMainLength, finalCrossLength) {
			child.Arrange(((this.get_Orientation() === 0) ? new $System_Windows_Rect.$ctor3(finalMainStart, finalCrossStart, Granular.Extensions.DoubleExtensions.Max(finalMainLength, 0), Granular.Extensions.DoubleExtensions.Max(finalCrossLength, 0)) : new $System_Windows_Rect.$ctor3(finalCrossStart, finalMainStart, Granular.Extensions.DoubleExtensions.Max(finalCrossLength, 0), Granular.Extensions.DoubleExtensions.Max(finalMainLength, 0))));
		}
	}, $System_Windows_FrameworkElement, [$System_Windows_Media_Animation_IAnimatable, $System_Windows_IInputElement, $System_Windows_IResourceContainer]);
	ss.initClass($System_Windows_Data_Binding, $asm, {
		get_Path: function() {
			return this.$1$PathField;
		},
		set_Path: function(value) {
			this.$1$PathField = value;
		},
		get_Source: function() {
			return this.$1$SourceField;
		},
		set_Source: function(value) {
			this.$1$SourceField = value;
		},
		get_RelativeSource: function() {
			return this.$1$RelativeSourceField;
		},
		set_RelativeSource: function(value) {
			this.$1$RelativeSourceField = value;
		},
		get_ElementName: function() {
			return this.$1$ElementNameField;
		},
		set_ElementName: function(value) {
			this.$1$ElementNameField = value;
		},
		get_Mode: function() {
			return this.$1$ModeField;
		},
		set_Mode: function(value) {
			this.$1$ModeField = value;
		},
		get_UpdateSourceTrigger: function() {
			return this.$1$UpdateSourceTriggerField;
		},
		set_UpdateSourceTrigger: function(value) {
			this.$1$UpdateSourceTriggerField = value;
		},
		get_StringFormat: function() {
			return this.$1$StringFormatField;
		},
		set_StringFormat: function(value) {
			this.$1$StringFormatField = value;
		},
		get_Converter: function() {
			return this.$1$ConverterField;
		},
		set_Converter: function(value) {
			this.$1$ConverterField = value;
		},
		get_ConverterParameter: function() {
			return this.$1$ConverterParameterField;
		},
		set_ConverterParameter: function(value) {
			this.$1$ConverterParameterField = value;
		},
		get_FallbackValue: function() {
			return this.$1$FallbackValueField;
		},
		set_FallbackValue: function(value) {
			this.$1$FallbackValueField = value;
		},
		get_TargetNullValue: function() {
			return this.$1$TargetNullValueField;
		},
		set_TargetNullValue: function(value) {
			this.$1$TargetNullValueField = value;
		},
		ProvideValue: function(context) {
			return this;
		},
		CreateExpression: function(dependencyObject, dependencyProperty) {
			return new $System_Windows_Data_BindingExpression(dependencyObject, dependencyProperty, $System_Windows_Data_Binding.$GetDataContextRelativePath(this.get_Path() || $System_Windows_PropertyPath.Empty, this.get_Source(), this.get_RelativeSource(), this.get_ElementName()), this.get_Source(), this.get_RelativeSource(), this.get_ElementName(), this.get_Mode(), this.get_UpdateSourceTrigger(), this.get_Converter() || $System_Windows_Data_Binding.$GetStringFormatConverter(this.get_StringFormat()), this.get_ConverterParameter(), this.get_FallbackValue(), this.get_TargetNullValue());
		}
	}, null, [$System_Windows_Markup_IMarkupExtension, $System_Windows_IExpressionProvider]);
	ss.initClass($System_Windows_Data_BindingExpression, $asm, {
		add_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateCombine(this.$1$ValueChangedField, value);
		},
		remove_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateRemove(this.$1$ValueChangedField, value);
		},
		get_Value: function() {
			return this.$targetValue.get_Value();
		},
		get_Target: function() {
			return this.$1$TargetField;
		},
		set_Target: function(value) {
			this.$1$TargetField = value;
		},
		get_TargetProperty: function() {
			return this.$1$TargetPropertyField;
		},
		set_TargetProperty: function(value) {
			this.$1$TargetPropertyField = value;
		},
		get_Path: function() {
			return this.$1$PathField;
		},
		set_Path: function(value) {
			this.$1$PathField = value;
		},
		get_Source: function() {
			return this.$1$SourceField;
		},
		set_Source: function(value) {
			this.$1$SourceField = value;
		},
		get_RelativeSource: function() {
			return this.$1$RelativeSourceField;
		},
		set_RelativeSource: function(value) {
			this.$1$RelativeSourceField = value;
		},
		get_ElementName: function() {
			return this.$1$ElementNameField;
		},
		set_ElementName: function(value) {
			this.$1$ElementNameField = value;
		},
		get_Mode: function() {
			return this.$1$ModeField;
		},
		set_Mode: function(value) {
			this.$1$ModeField = value;
		},
		get_UpdateSourceTrigger: function() {
			return this.$1$UpdateSourceTriggerField;
		},
		set_UpdateSourceTrigger: function(value) {
			this.$1$UpdateSourceTriggerField = value;
		},
		get_Converter: function() {
			return this.$1$ConverterField;
		},
		set_Converter: function(value) {
			this.$1$ConverterField = value;
		},
		get_ConverterParameter: function() {
			return this.$1$ConverterParameterField;
		},
		set_ConverterParameter: function(value) {
			this.$1$ConverterParameterField = value;
		},
		get_FallbackValue: function() {
			return this.$1$FallbackValueField;
		},
		set_FallbackValue: function(value) {
			this.$1$FallbackValueField = value;
		},
		get_TargetNullValue: function() {
			return this.$1$TargetNullValueField;
		},
		set_TargetNullValue: function(value) {
			this.$1$TargetNullValueField = value;
		},
		get_Status: function() {
			return this.$1$StatusField;
		},
		set_Status: function(value) {
			this.$1$StatusField = value;
		},
		dispose: function() {
			this.$sourceExpression.dispose();
			if (ss.isInstanceOfType(this.get_Target(), $System_Windows_Media_Visual)) {
				ss.cast(this.get_Target(), $System_Windows_Media_Visual).remove_VisualAncestorChanged(ss.mkdel(this, this.$OnTargetVisualAncestorChanged));
			}
			if (ss.isInstanceOfType(this.get_Target(), $System_Windows_UIElement)) {
				ss.cast(this.get_Target(), $System_Windows_UIElement).remove_LostFocus(ss.mkdel(this, this.$OnLostFocus));
			}
			this.set_Target(null);
			this.set_TargetProperty(null);
			this.set_Status(2);
		},
		SetValue: function(value) {
			this.$targetValue.set_Value(value);
			return true;
		},
		$OnTargetVisualAncestorChanged: function(sender, e) {
			var $t2 = this.$sourceExpression;
			var $t1 = this.get_Source();
			if (ss.isNullOrUndefined($t1)) {
				$t1 = $System_Windows_Data_BindingExpression.$GetRelativeSource(this.get_Target(), this.get_RelativeSource(), this.get_ElementName());
			}
			$t2.SetBaseValue($t1);
		},
		$UpdateTargetOnSourceChanged: function() {
			if ($System_Windows_ReentrancyLock.op_Implicit(this.$disableTargetUpdate)) {
				return;
			}
			{
				var $t1 = this.$disableSourceUpdate.Enter();
				try {
					this.UpdateTarget();
				}
				finally {
					if (ss.isValue($t1)) {
						$t1.dispose();
					}
				}
			}
		},
		UpdateTarget: function() {
			var value = (ss.isValue(this.$sourceExpression) ? this.$sourceExpression.get_Value() : $System_Windows_Data_ObservableValue.UnsetValue);
			if (ss.referenceEquals(value, $System_Windows_Data_ObservableValue.UnsetValue) && ss.isValue(this.get_FallbackValue())) {
				value = this.get_FallbackValue();
			}
			else if (ss.isNullOrUndefined(value) && ss.isValue(this.get_TargetNullValue())) {
				value = this.get_TargetNullValue();
			}
			else if (!ss.referenceEquals(value, $System_Windows_Data_ObservableValue.UnsetValue) && ss.isValue(this.get_Converter())) {
				value = this.get_Converter().Convert(value, this.get_TargetProperty().get_PropertyType(), this.get_ConverterParameter());
			}
			this.$targetValue.set_Value(value);
			this.set_Status((!ss.referenceEquals(value, $System_Windows_Data_ObservableValue.UnsetValue) ? 1 : 3));
		},
		$UpdateSourceOnTargetChanged: function() {
			if ($System_Windows_ReentrancyLock.op_Implicit(this.$disableSourceUpdate)) {
				return;
			}
			{
				var $t1 = this.$disableTargetUpdate.Enter();
				try {
					this.UpdateSource();
				}
				finally {
					if (ss.isValue($t1)) {
						$t1.dispose();
					}
				}
			}
		},
		UpdateSource: function() {
			var convertedValue = (ss.isValue(this.get_Converter()) ? this.get_Converter().ConvertBack(this.$targetValue.get_Value(), this.$sourceExpression.get_ValueType(), this.get_ConverterParameter()) : this.$targetValue.get_Value());
			if (this.$sourceExpression.TrySetValue(convertedValue)) {
				this.set_Status(1);
			}
			else {
				this.set_Status(4);
			}
		},
		$OnTargetValueChanged: function(sender, e) {
			if (this.get_UpdateSourceTrigger() === 0 && this.$isSourceUpdateMode) {
				this.$UpdateSourceOnTargetChanged();
			}
			Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_Data_ObservableValueChangedArgs).call(null, this.$1$ValueChangedField, this, e);
		},
		$OnLostFocus: function(sender, e) {
			this.$UpdateSourceOnTargetChanged();
		}
	}, null, [$System_Windows_Data_IObservableValue, $System_Windows_IExpression, ss.IDisposable]);
	ss.initEnum($System_Windows_Data_BindingMode, $asm, { TwoWay: 0, OneWay: 1, OneWayToSource: 2, Default: 3 });
	ss.initEnum($System_Windows_Data_BindingStatus, $asm, { Inactive: 0, Active: 1, Detached: 2, UpdateTargetError: 3, UpdateSourceError: 4 });
	ss.initInterface($System_Windows_Data_IPropertyObserver, $asm, { get_ValueType: null, TrySetValue: null, SetBaseValue: null }, [$System_Windows_Data_IObservableValue]);
	ss.initClass($System_Windows_Data_ClrPropertyObserver, $asm, {
		add_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateCombine(this.$1$ValueChangedField, value);
		},
		remove_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateRemove(this.$1$ValueChangedField, value);
		},
		get_Value: function() {
			return this.$observableValue.get_Value();
		},
		get_ValueType: function() {
			return this.$propertyInfo.returnType;
		},
		SetBaseValue: function(baseValue) {
			this.$baseValue = baseValue;
			this.$RegisterNotifiers();
			this.$observableValue.set_Value(this.$GetValue());
		},
		TrySetValue: function(value) {
			if ($System_Windows_Data_ObservableValue.IsNullOrUnset(this.$baseValue) || ss.isNullOrUndefined(this.$propertySetMethod)) {
				return false;
			}
			ss.midel(this.$propertySetMethod, this.$baseValue).apply(null, Enumerable.from(this.$index).concat([value]).toArray());
			this.$observableValue.set_Value(this.$GetValue());
			return true;
		},
		$GetValue: function() {
			if ($System_Windows_Data_ObservableValue.IsNullOrUnset(this.$baseValue) || ss.isNullOrUndefined(this.$propertyGetMethod)) {
				return $System_Windows_Data_ObservableValue.UnsetValue;
			}
			return ss.midel(this.$propertyGetMethod, this.$baseValue).apply(null, Enumerable.from(this.$index).toArray());
		},
		$RegisterNotifiers: function() {
			if (ss.isValue(this.$currentPropertyNotifier)) {
				this.$currentPropertyNotifier.remove_PropertyChanged(ss.mkdel(this, this.$OnNotifierPropertyChanged));
			}
			if (ss.isValue(this.$currentCollectionNotifier)) {
				this.$currentCollectionNotifier.remove_CollectionChanged(ss.mkdel(this, this.$OnNotifierCollectionChanged));
			}
			this.$currentPropertyNotifier = ss.safeCast(this.$baseValue, System.ComponentModel.INotifyPropertyChanged);
			if (Enumerable.from(this.$index).any()) {
				this.$currentCollectionNotifier = ss.safeCast(this.$baseValue, Granular.Collections.INotifyCollectionChanged);
			}
			if (ss.isValue(this.$currentPropertyNotifier)) {
				this.$currentPropertyNotifier.add_PropertyChanged(ss.mkdel(this, this.$OnNotifierPropertyChanged));
			}
			if (ss.isValue(this.$currentCollectionNotifier)) {
				this.$currentCollectionNotifier.add_CollectionChanged(ss.mkdel(this, this.$OnNotifierCollectionChanged));
			}
		},
		$OnNotifierPropertyChanged: function(sender, e) {
			if (ss.referenceEquals(e.get_PropertyName(), this.$propertyInfo.name)) {
				this.$observableValue.set_Value(this.$GetValue());
			}
		},
		$OnNotifierCollectionChanged: function(sender, e) {
			this.$observableValue.set_Value(this.$GetValue());
		},
		dispose: function() {
			if (ss.isValue(this.$currentPropertyNotifier)) {
				this.$currentPropertyNotifier.remove_PropertyChanged(ss.mkdel(this, this.$OnNotifierPropertyChanged));
			}
		}
	}, null, [$System_Windows_Data_IObservableValue, $System_Windows_Data_IPropertyObserver, ss.IDisposable]);
	ss.initClass($System_Windows_Data_CollectionView, $asm, {
		add_CollectionChanged: function(value) {
			this.$1$CollectionChangedField = ss.delegateCombine(this.$1$CollectionChangedField, value);
		},
		remove_CollectionChanged: function(value) {
			this.$1$CollectionChangedField = ss.delegateRemove(this.$1$CollectionChangedField, value);
		},
		add_CurrentChanged: function(value) {
			this.$1$CurrentChangedField = ss.delegateCombine(this.$1$CurrentChangedField, value);
		},
		remove_CurrentChanged: function(value) {
			this.$1$CurrentChangedField = ss.delegateRemove(this.$1$CurrentChangedField, value);
		},
		get_SourceCollection: function() {
			return this.$1$SourceCollectionField;
		},
		set_SourceCollection: function(value) {
			this.$1$SourceCollectionField = value;
		},
		get_CurrentItem: function() {
			return this.$currentItem;
		},
		set_CurrentItem: function(value) {
			this.$SetCurrent$1(value);
		},
		get_CurrentItemIndex: function() {
			return this.$currentItemIndex;
		},
		set_CurrentItemIndex: function(value) {
			this.$SetCurrent(value);
		},
		get_CanFilter: function() {
			return true;
		},
		get_FilterPredicate: function() {
			return this.$filterPredicate;
		},
		set_FilterPredicate: function(value) {
			if (ss.staticEquals(this.$filterPredicate, value)) {
				return;
			}
			this.$filterPredicate = value;
			this.$ResetInnerCollection();
		},
		get_CanSort: function() {
			return true;
		},
		get_SortKeySelector: function() {
			return this.$sortKeySelector;
		},
		set_SortKeySelector: function(value) {
			if (ss.staticEquals(this.$sortKeySelector, value)) {
				return;
			}
			this.$sortKeySelector = value;
			this.$ResetInnerCollection();
		},
		get_SortDirection: function() {
			return this.$sortDirection;
		},
		set_SortDirection: function(value) {
			if (this.$sortDirection === value) {
				return;
			}
			this.$sortDirection = value;
			this.$ResetInnerCollection();
		},
		dispose: function() {
			if (ss.isInstanceOfType(this.get_SourceCollection(), Granular.Collections.INotifyCollectionChanged)) {
				ss.cast(this.get_SourceCollection(), Granular.Collections.INotifyCollectionChanged).remove_CollectionChanged(ss.mkdel(this, this.$OnSourceCollectionChanged));
			}
		},
		$SetCurrent$1: function(item) {
			var itemIndex = Granular.Compatibility.Array.IndexOf(Object).call(null, this.$innerCollection, item);
			if (itemIndex !== -1) {
				this.$SetCurrent$2(item, itemIndex);
			}
			else if (this.$currentItemIndex >= 0 && this.$currentItemIndex < this.$innerCollection.length) {
				this.$SetCurrent$2(this.$innerCollection[this.$currentItemIndex], this.$currentItemIndex);
			}
			else {
				this.$SetCurrent$2(null, Math.min(this.$currentItemIndex, this.$innerCollection.length));
			}
		},
		$SetCurrent: function(itemIndex) {
			if (itemIndex >= 0 && itemIndex < this.$innerCollection.length) {
				this.$SetCurrent$2(this.$innerCollection[itemIndex], itemIndex);
			}
			else {
				this.$SetCurrent$2(null, Math.min(itemIndex, this.$innerCollection.length));
			}
		},
		$SetCurrent$2: function(item, itemIndex) {
			if (ss.referenceEquals(this.$currentItem, item) && this.$currentItemIndex === itemIndex) {
				return;
			}
			this.$currentItem = item;
			this.$currentItemIndex = itemIndex;
			Granular.Extensions.EventHandlerExtensions.Raise(this.$1$CurrentChangedField, this);
		},
		$ResetInnerCollection: function() {
			var oldInnerCollection = this.$innerCollection || [];
			this.$innerCollection = Enumerable.from($System_Windows_Data_CollectionView.$TranslateCollection(Enumerable.from(this.get_SourceCollection()).select(function(x) {
				return ss.cast(x, Object);
			}), this.$filterPredicate, this.$sortKeySelector, this.$sortDirection)).toArray();
			if (ss.contains(this.$innerCollection, this.get_CurrentItem())) {
				this.$SetCurrent$1(this.get_CurrentItem());
			}
			else {
				this.$SetCurrent(((this.get_CurrentItemIndex() >= oldInnerCollection.length) ? this.$innerCollection.length : this.get_CurrentItemIndex()));
			}
			Granular.Collections.NotifyCollectionChangedEventHandlerExtensions.Raise(this.$1$CollectionChangedField, this, Granular.Collections.NotifyCollectionChangedEventArgs.Reset(oldInnerCollection, this.$innerCollection));
		},
		$OnSourceCollectionChanged: function(sender, e) {
			var oldInnerCollection = this.$innerCollection;
			this.$innerCollection = Enumerable.from($System_Windows_Data_CollectionView.$TranslateCollection(Enumerable.from(this.get_SourceCollection()).select(function(x) {
				return ss.cast(x, Object);
			}), this.$filterPredicate, this.$sortKeySelector, this.$sortDirection)).toArray();
			if (ss.contains(this.$innerCollection, this.get_CurrentItem())) {
				this.$SetCurrent$1(this.get_CurrentItem());
			}
			else {
				this.$SetCurrent(((this.get_CurrentItemIndex() >= oldInnerCollection.length) ? this.$innerCollection.length : this.get_CurrentItemIndex()));
			}
			var oldItems = Enumerable.from(e.get_OldItems()).intersect(oldInnerCollection).toArray();
			var newItems = Enumerable.from(e.get_NewItems()).intersect(this.$innerCollection).toArray();
			if (Enumerable.from(oldItems).count() > 1 || Enumerable.from(newItems).count() > 1) {
				Granular.Collections.NotifyCollectionChangedEventHandlerExtensions.Raise(this.$1$CollectionChangedField, this, Granular.Collections.NotifyCollectionChangedEventArgs.Reset(oldInnerCollection, this.$innerCollection));
				return;
			}
			var oldItem = Enumerable.from(e.get_OldItems()).firstOrDefault(null, ss.getDefaultValue(Object));
			var oldIndex = Granular.Compatibility.Array.FindIndex(Object).call(null, oldInnerCollection, function(item) {
				return ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Object]).Default.areEqual(item, oldItem);
			});
			var newItem = Enumerable.from(e.get_NewItems()).firstOrDefault(null, ss.getDefaultValue(Object));
			var newIndex = Granular.Compatibility.Array.FindIndex(Object).call(null, this.$innerCollection, function(item1) {
				return ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Object]).Default.areEqual(item1, newItem);
			});
			if (oldIndex === -1 && newIndex === -1 || ss.referenceEquals(oldItem, newItem) && oldIndex === newIndex) {
				return;
			}
			if (ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Object]).Default.areEqual(oldItem, newItem)) {
				Granular.Collections.NotifyCollectionChangedEventHandlerExtensions.Raise(this.$1$CollectionChangedField, this, Granular.Collections.NotifyCollectionChangedEventArgs.Move(newItem, oldIndex, newIndex));
			}
			else if (oldIndex === newIndex) {
				Granular.Collections.NotifyCollectionChangedEventHandlerExtensions.Raise(this.$1$CollectionChangedField, this, Granular.Collections.NotifyCollectionChangedEventArgs.Replace(oldItem, newItem, newIndex));
			}
			else {
				if (oldIndex !== -1) {
					Granular.Collections.NotifyCollectionChangedEventHandlerExtensions.Raise(this.$1$CollectionChangedField, this, Granular.Collections.NotifyCollectionChangedEventArgs.Remove(oldItem, oldIndex));
				}
				if (newIndex !== -1) {
					Granular.Collections.NotifyCollectionChangedEventHandlerExtensions.Raise(this.$1$CollectionChangedField, this, Granular.Collections.NotifyCollectionChangedEventArgs.Add(newItem, newIndex));
				}
			}
		},
		getEnumerator: function() {
			return Enumerable.from(this.$innerCollection).select(function(x) {
				return ss.cast(x, Object);
			}).getEnumerator();
		}
	}, null, [ss.IEnumerable, ss.IEnumerable, Granular.Collections.INotifyCollectionChanged, ss.makeGenericType(Granular.Collections.IObservableCollection$1, [Object]), $System_Windows_Data_ICollectionView, ss.IDisposable]);
	ss.initClass($System_Windows_Data_ConstantObservableValue, $asm, {
		add_ValueChanged: function(value) {
		},
		remove_ValueChanged: function(value) {
		},
		get_Value: function() {
			return this.$1$ValueField;
		},
		set_Value: function(value) {
			this.$1$ValueField = value;
		}
	}, null, [$System_Windows_Data_IObservableValue]);
	ss.initClass($System_Windows_Data_DependencyPropertyObserver, $asm, {
		add_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateCombine(this.$1$ValueChangedField, value);
		},
		remove_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateRemove(this.$1$ValueChangedField, value);
		},
		get_Value: function() {
			return this.$observableValue.get_Value();
		},
		get_ValueType: function() {
			return this.$dependencyProperty.get_PropertyType();
		},
		SetBaseValue: function(baseValue) {
			this.$baseValue = baseValue;
			this.$RegisterDependencyObject();
			this.$observableValue.set_Value(this.$GetValue());
		},
		TrySetValue: function(value) {
			var dependencyObject = ss.safeCast(this.$baseValue, $System_Windows_DependencyObject);
			if (ss.isNullOrUndefined(dependencyObject) || this.$dependencyProperty.get_IsReadOnly()) {
				return false;
			}
			dependencyObject.SetValue(this.$dependencyProperty, value, 11);
			this.$observableValue.set_Value(this.$GetValue());
			return true;
		},
		$GetValue: function() {
			var dependencyObject = ss.safeCast(this.$baseValue, $System_Windows_DependencyObject);
			return (ss.isValue(dependencyObject) ? dependencyObject.GetValue(this.$dependencyProperty) : $System_Windows_Data_ObservableValue.UnsetValue);
		},
		$RegisterDependencyObject: function() {
			if (ss.isValue(this.$currentDependencyObject)) {
				this.$currentDependencyObject.remove_PropertyChanged(ss.mkdel(this, this.$OnDependencyObjectPropertyChanged));
			}
			this.$currentDependencyObject = ss.safeCast(this.$baseValue, $System_Windows_DependencyObject);
			if (ss.isValue(this.$currentDependencyObject)) {
				this.$currentDependencyObject.add_PropertyChanged(ss.mkdel(this, this.$OnDependencyObjectPropertyChanged));
			}
		},
		$OnDependencyObjectPropertyChanged: function(sender, e) {
			if (ss.referenceEquals(e.get_Property(), this.$dependencyProperty)) {
				this.$observableValue.set_Value(this.$GetValue());
			}
		},
		dispose: function() {
			if (ss.isValue(this.$currentDependencyObject)) {
				this.$currentDependencyObject.remove_PropertyChanged(ss.mkdel(this, this.$OnDependencyObjectPropertyChanged));
			}
		}
	}, null, [$System_Windows_Data_IObservableValue, $System_Windows_Data_IPropertyObserver, ss.IDisposable]);
	ss.initClass($System_Windows_Data_IndexPropertyObserver, $asm, {
		add_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateCombine(this.$1$ValueChangedField, value);
		},
		remove_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateRemove(this.$1$ValueChangedField, value);
		},
		get_Value: function() {
			return this.$indexerObserver.get_Value();
		},
		get_ValueType: function() {
			return this.$indexerObserver.get_ValueType();
		},
		dispose: function() {
			if (ss.isInstanceOfType(this.$baseObserver, ss.IDisposable)) {
				ss.cast(this.$baseObserver, ss.IDisposable).dispose();
			}
			if (ss.isInstanceOfType(this.$indexerObserver, ss.IDisposable)) {
				ss.cast(this.$indexerObserver, ss.IDisposable).dispose();
			}
		},
		TrySetValue: function(value) {
			return (ss.isValue(this.$indexerObserver) ? this.$indexerObserver.TrySetValue(value) : false);
		},
		SetBaseValue: function(baseValue) {
			if (ss.isValue(this.$baseObserver)) {
				this.$baseObserver.SetBaseValue(baseValue);
			}
			else {
				this.$indexerObserver.SetBaseValue(baseValue);
			}
		}
	}, null, [$System_Windows_Data_IObservableValue, $System_Windows_Data_IPropertyObserver, ss.IDisposable]);
	ss.initEnum($System_Windows_Data_ListSortDirection, $asm, { Ascending: 0, Descending: 1 });
	ss.initClass($System_Windows_Data_NamedObject, $asm, {
		toString: function() {
			return ss.formatString('{{{0}}}', this.$name);
		}
	});
	ss.initClass($System_Windows_Data_ObservableExpression, $asm, {
		add_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateCombine(this.$1$ValueChangedField, value);
		},
		remove_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateRemove(this.$1$ValueChangedField, value);
		},
		get_Value: function() {
			return this.$observableValue.get_Value();
		},
		get_ValueType: function() {
			return this.$1$ValueTypeField;
		},
		set_ValueType: function(value) {
			this.$1$ValueTypeField = value;
		},
		SetBaseValue: function(baseValue) {
			if (ss.isValue(this.$baseObserver)) {
				this.$baseObserver.SetBaseValue(baseValue);
			}
			else {
				this.$observableValue.set_Value(baseValue);
				this.set_ValueType((ss.isValue(baseValue) ? ss.getInstanceType(baseValue) : null));
			}
		},
		TrySetValue: function(value) {
			return ss.isValue(this.$delegateObserver) && (ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Object]).Default.areEqual(this.$delegateObserver.get_Value(), value) || this.$delegateObserver.TrySetValue(value));
		},
		$SetDelegateObserverBaseValue: function() {
			var baseValue = this.$baseObserver.get_Value();
			if ($System_Windows_Data_ObservableValue.IsNullOrUnset(baseValue) || ss.referenceEquals(this.$baseObserverValueType, ss.getInstanceType(baseValue))) {
				if (ss.isValue(this.$delegateObserver)) {
					this.$delegateObserver.SetBaseValue(baseValue);
				}
				return;
			}
			this.$baseObserverValueType = ss.getInstanceType(baseValue);
			if (ss.isInstanceOfType(this.$delegateObserver, ss.IDisposable)) {
				ss.cast(this.$delegateObserver, ss.IDisposable).dispose();
			}
			this.$delegateObserver = this.$propertyPathElement.CreatePropertyObserver(this.$baseObserverValueType);
			if (ss.isValue(this.$delegateObserver)) {
				this.set_ValueType(this.$delegateObserver.get_ValueType());
				this.$delegateObserver.SetBaseValue(baseValue);
				this.$delegateObserver.add_ValueChanged(ss.mkdel(this, function(sender, e) {
					this.$observableValue.set_Value(this.$delegateObserver.get_Value());
				}));
				this.$observableValue.set_Value(this.$delegateObserver.get_Value());
			}
			else {
				this.set_ValueType(null);
				this.$observableValue.set_Value($System_Windows_Data_ObservableValue.UnsetValue);
			}
		},
		dispose: function() {
			if (ss.isInstanceOfType(this.$baseObserver, ss.IDisposable)) {
				this.$baseObserver.dispose();
			}
			if (ss.isInstanceOfType(this.$delegateObserver, ss.IDisposable)) {
				ss.cast(this.$delegateObserver, ss.IDisposable).dispose();
			}
		}
	}, null, [$System_Windows_Data_IObservableValue, ss.IDisposable]);
	$System_Windows_Data_ObservableExpression.$ctor2.prototype = $System_Windows_Data_ObservableExpression.$ctor1.prototype = $System_Windows_Data_ObservableExpression.$ctor3.prototype = $System_Windows_Data_ObservableExpression.prototype;
	ss.initClass($System_Windows_Data_ObservableValue, $asm, {
		add_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateCombine(this.$1$ValueChangedField, value);
		},
		remove_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateRemove(this.$1$ValueChangedField, value);
		},
		get_Value: function() {
			return this.$value;
		},
		set_Value: function(value) {
			if (ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Object]).Default.areEqual(this.$value, value)) {
				return;
			}
			var e = new $System_Windows_Data_ObservableValueChangedArgs(this.$value, value);
			var oldObservableValue = ss.safeCast(this.$value, $System_Windows_Data_IObservableValue);
			if (ss.isValue(oldObservableValue)) {
				oldObservableValue.remove_ValueChanged(ss.mkdel(this, this.$OnObservableValueChanged));
			}
			this.$value = value;
			var newObservableValue = ss.safeCast(this.$value, $System_Windows_Data_IObservableValue);
			if (ss.isValue(newObservableValue)) {
				newObservableValue.add_ValueChanged(ss.mkdel(this, this.$OnObservableValueChanged));
			}
			Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_Data_ObservableValueChangedArgs).call(null, this.$1$ValueChangedField, this, e);
		},
		$OnObservableValueChanged: function(sender, e) {
			Granular.Extensions.EventHandlerExtensions.Raise$4($System_Windows_Data_ObservableValueChangedArgs).call(null, this.$1$ValueChangedField, this, e);
		}
	}, null, [$System_Windows_Data_IObservableValue]);
	$System_Windows_Data_ObservableValue.$ctor1.prototype = $System_Windows_Data_ObservableValue.prototype;
	ss.initClass($System_Windows_Data_ObservableValueChangedArgs, $asm, {
		get_NewValue: function() {
			return this.$2$NewValueField;
		},
		set_NewValue: function(value) {
			this.$2$NewValueField = value;
		},
		get_OldValue: function() {
			return this.$2$OldValueField;
		},
		set_OldValue: function(value) {
			this.$2$OldValueField = value;
		}
	}, ss.EventArgs);
	ss.initClass($System_Windows_Data_ReadOnlyObservableValue, $asm, {
		add_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateCombine(this.$1$ValueChangedField, value);
		},
		remove_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateRemove(this.$1$ValueChangedField, value);
		},
		get_Value: function() {
			return this.$source.get_Value();
		}
	}, null, [$System_Windows_Data_IObservableValue]);
	ss.initClass($System_Windows_Data_RelativeSource, $asm, {
		get_Mode: function() {
			return this.$1$ModeField;
		},
		set_Mode: function(value) {
			this.$1$ModeField = value;
		},
		get_AncestorLevel: function() {
			return this.$1$AncestorLevelField;
		},
		set_AncestorLevel: function(value) {
			this.$1$AncestorLevelField = value;
		},
		get_AncestorType: function() {
			return this.$1$AncestorTypeField;
		},
		set_AncestorType: function(value) {
			this.$1$AncestorTypeField = value;
		},
		ProvideValue: function(context) {
			return this;
		}
	}, null, [$System_Windows_Markup_IMarkupExtension]);
	ss.initEnum($System_Windows_Data_RelativeSourceMode, $asm, { TemplatedParent: 0, Self: 1, FindAncestor: 2 });
	ss.initClass($System_Windows_Data_TemplateBindingExtension, $asm, {
		get_Property: function() {
			return this.$1$PropertyField;
		},
		set_Property: function(value) {
			this.$1$PropertyField = value;
		},
		get_Converter: function() {
			return this.$1$ConverterField;
		},
		set_Converter: function(value) {
			this.$1$ConverterField = value;
		},
		get_ConverterParameter: function() {
			return this.$1$ConverterParameterField;
		},
		set_ConverterParameter: function(value) {
			this.$1$ConverterParameterField = value;
		},
		ProvideValue: function(context) {
			var $t1 = new $System_Windows_Data_Binding();
			$t1.set_Path(new $System_Windows_PropertyPath([this.get_Property()]));
			var $t2 = new $System_Windows_Data_RelativeSource();
			$t2.set_Mode(0);
			$t1.set_RelativeSource($t2);
			$t1.set_Converter(this.get_Converter());
			$t1.set_ConverterParameter(this.get_ConverterParameter());
			return $t1;
		}
	}, null, [$System_Windows_Markup_IMarkupExtension]);
	ss.initEnum($System_Windows_Data_UpdateSourceTrigger, $asm, { Default: 0, PropertyChanged: 1, LostFocus: 2, Explicit: 3 });
	ss.initClass($System_Windows_Input_Cursor, $asm, {
		get_CursorType: function() {
			return this.$1$CursorTypeField;
		},
		set_CursorType: function(value) {
			this.$1$CursorTypeField = value;
		},
		get_ImageSource: function() {
			return this.$1$ImageSourceField;
		},
		set_ImageSource: function(value) {
			this.$1$ImageSourceField = value;
		},
		get_Hotspot: function() {
			return this.$1$HotspotField;
		},
		set_Hotspot: function(value) {
			this.$1$HotspotField = value;
		},
		toString: function() {
			return ss.formatString('Cursor({0})', (ss.isValue(this.get_ImageSource()) ? this.get_ImageSource().toString() : this.get_CursorType().toString()));
		}
	});
	$System_Windows_Input_Cursor.$ctor1.prototype = $System_Windows_Input_Cursor.$ctor2.prototype = $System_Windows_Input_Cursor.prototype;
	ss.initClass($System_Windows_Input_Cursors, $asm, {});
	ss.initEnum($System_Windows_Input_CursorType, $asm, { None: 0, No: 1, Arrow: 2, AppStarting: 3, Cross: 4, Help: 5, IBeam: 6, SizeAll: 7, SizeNESW: 8, SizeNS: 9, SizeNWSE: 10, SizeWE: 11, UpArrow: 12, Wait: 13, Hand: 14, Pen: 15, ScrollNS: 16, ScrollWE: 17, ScrollAll: 18, ScrollN: 19, ScrollS: 20, ScrollW: 21, ScrollE: 22, ScrollNW: 23, ScrollNE: 24, ScrollSW: 25, ScrollSE: 26, ArrowCD: 27 });
	ss.initClass($System_Windows_Input_CursorTypeConverter, $asm, {
		ConvertFrom: function(namespaces, value) {
			if (ss.isInstanceOfType(value, String)) {
				var propertyInfo = ss.getMembers($System_Windows_Input_Cursors, 16, 24 | 256, ss.cast(value, String));
				if (ss.isValue(propertyInfo)) {
					return ss.midel(propertyInfo.getter, null).apply(null, []);
				}
			}
			throw new Granular.Exception('Can\'t convert "{0}" to Cursor', [value]);
		}
	}, null, [$System_Windows_Markup_ITypeConverter]);
	ss.initClass($System_Windows_Input_FocusManager, $asm, {});
	ss.initEnum($System_Windows_Input_FocusNavigationDirection, $asm, { Next: 0, Previous: 1, First: 2, Last: 3, Left: 4, Right: 5, Up: 6, Down: 7 });
	ss.initInterface($System_Windows_Input_IInputDevice, $asm, { Activate: null, Deactivate: null });
	ss.initClass($System_Windows_Input_InputEventArgs, $asm, {
		get_Device: function() {
			return this.$3$DeviceField;
		},
		set_Device: function(value) {
			this.$3$DeviceField = value;
		},
		get_Timestamp: function() {
			return this.$3$TimestampField;
		},
		set_Timestamp: function(value) {
			this.$3$TimestampField = value;
		}
	}, $System_Windows_RoutedEventArgs);
	ss.initEnum($System_Windows_Input_Key, $asm, { None: 0, Cancel: 1, Back: 2, Tab: 3, LineFeed: 4, Clear: 5, Return: 6, Enter: 6, Pause: 7, CapsLock: 8, Capital: 8, HangulMode: 9, KanaMode: 9, JunjaMode: 10, FinalMode: 11, KanjiMode: 12, HanjaMode: 12, Escape: 13, ImeConvert: 14, ImeNonConvert: 15, ImeAccept: 16, ImeModeChange: 17, Space: 18, PageUp: 19, Prior: 19, PageDown: 20, Next: 20, End: 21, Home: 22, Left: 23, Up: 24, Right: 25, Down: 26, Select: 27, Print: 28, Execute: 29, Snapshot: 30, PrintScreen: 30, Insert: 31, Delete: 32, Help: 33, D0: 34, D1: 35, D2: 36, D3: 37, D4: 38, D5: 39, D6: 40, D7: 41, D8: 42, D9: 43, A: 44, B: 45, C: 46, D: 47, E: 48, F: 49, G: 50, H: 51, I: 52, J: 53, K: 54, L: 55, M: 56, N: 57, O: 58, P: 59, Q: 60, R: 61, S: 62, T: 63, U: 64, V: 65, W: 66, X: 67, Y: 68, Z: 69, LWin: 70, RWin: 71, Apps: 72, Sleep: 73, NumPad0: 74, NumPad1: 75, NumPad2: 76, NumPad3: 77, NumPad4: 78, NumPad5: 79, NumPad6: 80, NumPad7: 81, NumPad8: 82, NumPad9: 83, Multiply: 84, Add: 85, Separator: 86, Subtract: 87, Decimal: 88, Divide: 89, F1: 90, F2: 91, F3: 92, F4: 93, F5: 94, F6: 95, F7: 96, F8: 97, F9: 98, F10: 99, F11: 100, F12: 101, F13: 102, F14: 103, F15: 104, F16: 105, F17: 106, F18: 107, F19: 108, F20: 109, F21: 110, F22: 111, F23: 112, F24: 113, NumLock: 114, Scroll: 115, LeftShift: 116, RightShift: 117, LeftCtrl: 118, RightCtrl: 119, LeftAlt: 120, RightAlt: 121, BrowserBack: 122, BrowserForward: 123, BrowserRefresh: 124, BrowserStop: 125, BrowserSearch: 126, BrowserFavorites: 127, BrowserHome: 128, VolumeMute: 129, VolumeDown: 130, VolumeUp: 131, MediaNextTrack: 132, MediaPreviousTrack: 133, MediaStop: 134, MediaPlayPause: 135, LaunchMail: 136, SelectMedia: 137, LaunchApplication1: 138, LaunchApplication2: 139, OemSemicolon: 140, Oem1: 140, OemPlus: 141, OemComma: 142, OemMinus: 143, OemPeriod: 144, OemQuestion: 145, Oem2: 145, OemTilde: 146, Oem3: 146, AbntC1: 147, AbntC2: 148, OemOpenBrackets: 149, Oem4: 149, OemPipe: 150, Oem5: 150, OemCloseBrackets: 151, Oem6: 151, OemQuotes: 152, Oem7: 152, Oem8: 153, OemBackslash: 154, Oem102: 154, ImeProcessed: 155, System: 156, OemAttn: 157, DbeAlphanumeric: 157, OemFinish: 158, DbeKatakana: 158, DbeHiragana: 159, OemCopy: 159, DbeSbcsChar: 160, OemAuto: 160, DbeDbcsChar: 161, OemEnlw: 161, OemBackTab: 162, DbeRoman: 162, DbeNoRoman: 163, Attn: 163, CrSel: 164, DbeEnterWordRegisterMode: 164, ExSel: 165, DbeEnterImeConfigureMode: 165, EraseEof: 166, DbeFlushString: 166, Play: 167, DbeCodeInput: 167, DbeNoCodeInput: 168, Zoom: 168, NoName: 169, DbeDetermineString: 169, DbeEnterDialogConversionMode: 170, Pa1: 170, OemClear: 171, DeadCharProcessed: 172 });
	ss.initClass($System_Windows_Input_Keyboard, $asm, {});
	ss.initClass($System_Windows_Input_KeyboardDevice, $asm, {
		add_PreProcessKey: function(value) {
			this.$1$PreProcessKeyField = ss.delegateCombine(this.$1$PreProcessKeyField, value);
		},
		remove_PreProcessKey: function(value) {
			this.$1$PreProcessKeyField = ss.delegateRemove(this.$1$PreProcessKeyField, value);
		},
		add_PostProcessKey: function(value) {
			this.$1$PostProcessKeyField = ss.delegateCombine(this.$1$PostProcessKeyField, value);
		},
		remove_PostProcessKey: function(value) {
			this.$1$PostProcessKeyField = ss.delegateRemove(this.$1$PostProcessKeyField, value);
		},
		add_TargetChanged: function(value) {
			this.$1$TargetChangedField = ss.delegateCombine(this.$1$TargetChangedField, value);
		},
		remove_TargetChanged: function(value) {
			this.$1$TargetChangedField = ss.delegateRemove(this.$1$TargetChangedField, value);
		},
		get_Target: function() {
			return this.$target;
		},
		set_Target: function(value) {
			if (ss.referenceEquals(this.$target, value)) {
				return;
			}
			var oldTarget = this.$target;
			this.$target = value;
			this.$OnTargetChanged(oldTarget, this.$target);
			Granular.Extensions.EventHandlerExtensions.Raise(this.$1$TargetChangedField, this);
		},
		get_Modifiers: function() {
			return ((this.$downKeys.contains(120) || this.$downKeys.contains(121)) ? 1 : 0) | ((this.$downKeys.contains(118) || this.$downKeys.contains(119)) ? 2 : 0) | ((this.$downKeys.contains(116) || this.$downKeys.contains(117)) ? 4 : 0) | ((this.$downKeys.contains(70) || this.$downKeys.contains(71)) ? 8 : 0);
		},
		Activate: function() {
			//
		},
		Deactivate: function() {
			if (ss.isValue(this.get_Target())) {
				var timestamp = this.$presentationSource.GetTimestamp();
				var $t1 = this.$downKeys.getEnumerator();
				try {
					while ($t1.moveNext()) {
						var key = $t1.current();
						$System_Windows_IInputElementExtensions.RaiseEvents(this.get_Target(), new $System_Windows_Input_KeyEventArgs($System_Windows_Input_Keyboard.PreviewKeyUpEvent, this.get_Target(), this, timestamp, key, 0, false), new $System_Windows_Input_KeyEventArgs($System_Windows_Input_Keyboard.KeyUpEvent, this.get_Target(), this, timestamp, key, 0, false));
					}
				}
				finally {
					$t1.dispose();
				}
			}
			this.$downKeys.clear();
		},
		ProcessRawEvent: function(rawEvent) {
			if (rawEvent.get_KeyStates() === 1) {
				this.$downKeys.add(rawEvent.get_Key());
			}
			else {
				this.$downKeys.remove(rawEvent.get_Key());
			}
			var previewRoutedEvent;
			var routedEvent;
			if (rawEvent.get_KeyStates() === 1) {
				previewRoutedEvent = $System_Windows_Input_Keyboard.PreviewKeyDownEvent;
				routedEvent = $System_Windows_Input_Keyboard.KeyDownEvent;
			}
			else if (rawEvent.get_KeyStates() === 0) {
				previewRoutedEvent = $System_Windows_Input_Keyboard.PreviewKeyUpEvent;
				routedEvent = $System_Windows_Input_Keyboard.KeyUpEvent;
			}
			else {
				throw new Granular.Exception('Unexpected KeyStates "{0}"', [rawEvent.get_KeyStates()]);
			}
			var previewEventArgs = new $System_Windows_Input_KeyEventArgs(previewRoutedEvent, this.get_Target(), this, rawEvent.get_Timestamp(), rawEvent.get_Key(), rawEvent.get_KeyStates(), rawEvent.get_IsRepeat());
			var eventArgs = new $System_Windows_Input_KeyEventArgs(routedEvent, this.get_Target(), this, rawEvent.get_Timestamp(), rawEvent.get_Key(), rawEvent.get_KeyStates(), rawEvent.get_IsRepeat());
			$System_Windows_Input_KeyEventHandlerExtensions.Raise(this.$1$PreProcessKeyField, this, previewEventArgs);
			if (ss.isValue(this.get_Target())) {
				$System_Windows_IInputElementExtensions.RaiseEvents(this.get_Target(), previewEventArgs, eventArgs);
			}
			$System_Windows_Input_KeyEventHandlerExtensions.Raise(this.$1$PostProcessKeyField, this, eventArgs);
			return (previewEventArgs.get_Handled() || eventArgs.get_Handled()) && !previewEventArgs.get_ForceHostHandling() && !eventArgs.get_ForceHostHandling();
		},
		GetKeyStates: function(key) {
			return (this.$downKeys.contains(key) ? 1 : 0);
		},
		Focus: function(element) {
			this.set_Target(element);
			return new $System_Windows_Disposable(ss.mkdel(this, function() {
				if (ss.referenceEquals(this.get_Target(), element)) {
					this.set_Target(null);
				}
			}));
		},
		$OnTargetChanged: function(oldTarget, newTarget) {
			var timestamp = this.$presentationSource.GetTimestamp();
			if (ss.isValue(oldTarget)) {
				var $t1 = this.$downKeys.getEnumerator();
				try {
					while ($t1.moveNext()) {
						var key = $t1.current();
						$System_Windows_IInputElementExtensions.RaiseEvents(oldTarget, new $System_Windows_Input_KeyEventArgs($System_Windows_Input_Keyboard.PreviewKeyUpEvent, oldTarget, this, timestamp, key, 0, false), new $System_Windows_Input_KeyEventArgs($System_Windows_Input_Keyboard.KeyUpEvent, oldTarget, this, timestamp, key, 0, false));
					}
				}
				finally {
					$t1.dispose();
				}
				$System_Windows_IInputElementExtensions.RaiseEvents(oldTarget, new $System_Windows_Input_KeyboardFocusChangedEventArgs($System_Windows_Input_Keyboard.PreviewLostKeyboardFocusEvent, oldTarget, this, timestamp, oldTarget, newTarget), new $System_Windows_Input_KeyboardFocusChangedEventArgs($System_Windows_Input_Keyboard.LostKeyboardFocusEvent, oldTarget, this, timestamp, oldTarget, newTarget));
			}
			if (ss.isValue(newTarget)) {
				$System_Windows_IInputElementExtensions.RaiseEvents(newTarget, new $System_Windows_Input_KeyboardFocusChangedEventArgs($System_Windows_Input_Keyboard.PreviewGotKeyboardFocusEvent, newTarget, this, timestamp, oldTarget, newTarget), new $System_Windows_Input_KeyboardFocusChangedEventArgs($System_Windows_Input_Keyboard.GotKeyboardFocusEvent, newTarget, this, timestamp, oldTarget, newTarget));
				var $t2 = this.$downKeys.getEnumerator();
				try {
					while ($t2.moveNext()) {
						var key1 = $t2.current();
						$System_Windows_IInputElementExtensions.RaiseEvents(newTarget, new $System_Windows_Input_KeyEventArgs($System_Windows_Input_Keyboard.PreviewKeyDownEvent, newTarget, this, timestamp, key1, 0, false), new $System_Windows_Input_KeyEventArgs($System_Windows_Input_Keyboard.KeyDownEvent, newTarget, this, timestamp, key1, 0, false));
					}
				}
				finally {
					$t2.dispose();
				}
			}
		}
	}, null, [$System_Windows_Input_IInputDevice]);
	ss.initClass($System_Windows_Input_KeyboardEventArgs, $asm, {
		get_KeyboardDevice: function() {
			return this.$4$KeyboardDeviceField;
		},
		set_KeyboardDevice: function(value) {
			this.$4$KeyboardDeviceField = value;
		}
	}, $System_Windows_Input_InputEventArgs);
	ss.initClass($System_Windows_Input_KeyboardFocusChangedEventArgs, $asm, {
		get_OldFocus: function() {
			return this.$5$OldFocusField;
		},
		set_OldFocus: function(value) {
			this.$5$OldFocusField = value;
		},
		get_NewFocus: function() {
			return this.$5$NewFocusField;
		},
		set_NewFocus: function(value) {
			this.$5$NewFocusField = value;
		},
		InvokeEventHandler: function(handler, target) {
			if (ss.isValue(handler)) {
				handler(target, this);
			}
			else {
				$System_Windows_RoutedEventArgs.prototype.InvokeEventHandler.call(this, handler, target);
			}
		}
	}, $System_Windows_Input_KeyboardEventArgs);
	ss.initClass($System_Windows_Input_KeyboardNavigation, $asm, {
		dispose: function() {
			this.$presentationSource.get_KeyboardDevice().remove_TargetChanged(ss.mkdel(this, this.$OnTargetChanged));
			this.$presentationSource.get_KeyboardDevice().remove_PostProcessKey(ss.mkdel(this, this.$OnPostProcessKey));
		},
		$OnTargetChanged: function(sender, e) {
			if (ss.isValue(this.$focusVisualAdorner)) {
				this.$focusVisualAdorner.dispose();
				this.$focusVisualAdorner = null;
			}
			var focusedElement = ss.cast(this.$presentationSource.get_KeyboardDevice().get_Target(), $System_Windows_FrameworkElement);
			if (ss.isValue(focusedElement)) {
				this.$focusVisualAdorner = $System_$Windows_Input_KeyboardNavigation$FocusVisualAdorner.$Attach(focusedElement);
				$System_Windows_Input_KeyboardNavigation.$SetNavigationFocusElement(focusedElement);
			}
		},
		$OnPostProcessKey: function(sender, e) {
			if (e.get_Handled()) {
				return;
			}
			var navigationDirection = {};
			var navigationModeProperty = {};
			if ($System_Windows_Input_KeyboardNavigation.$TryGetNavigationMode(e, navigationModeProperty, navigationDirection)) {
				var currentTarget = ss.cast(this.$presentationSource.get_KeyboardDevice().get_Target(), $System_Windows_UIElement) || this.$presentationSource.get_RootElement();
				var newTarget = ss.cast($System_Windows_Input_KeyboardNavigationTarget.FindTarget(currentTarget, navigationDirection.$, navigationModeProperty.$), $System_Windows_UIElement);
				if (!ss.referenceEquals(currentTarget, newTarget) && ss.isValue(newTarget)) {
					newTarget.Focus();
				}
				e.set_Handled(true);
			}
		}
	}, null, [ss.IDisposable]);
	ss.initEnum($System_Windows_Input_KeyboardNavigationMode, $asm, { Continue: 0, Once: 1, Cycle: 2, None: 3, Contained: 4, Local: 5 });
	ss.initClass($System_Windows_Input_KeyboardNavigationTarget, $asm, {});
	ss.initClass($System_Windows_Input_KeyEventArgs, $asm, {
		get_Key: function() {
			return this.$5$KeyField;
		},
		set_Key: function(value) {
			this.$5$KeyField = value;
		},
		get_KeyStates: function() {
			return this.$5$KeyStatesField;
		},
		set_KeyStates: function(value) {
			this.$5$KeyStatesField = value;
		},
		get_IsUp: function() {
			return this.get_KeyStates() === 0;
		},
		get_IsDown: function() {
			return this.get_KeyStates() === 1;
		},
		get_IsRepeat: function() {
			return this.$5$IsRepeatField;
		},
		set_IsRepeat: function(value) {
			this.$5$IsRepeatField = value;
		},
		get_ForceHostHandling: function() {
			return this.$5$ForceHostHandlingField;
		},
		set_ForceHostHandling: function(value) {
			this.$5$ForceHostHandlingField = value;
		},
		InvokeEventHandler: function(handler, target) {
			if (ss.isValue(handler)) {
				handler(target, this);
			}
			else {
				$System_Windows_RoutedEventArgs.prototype.InvokeEventHandler.call(this, handler, target);
			}
		}
	}, $System_Windows_Input_KeyboardEventArgs);
	ss.initClass($System_Windows_Input_KeyEventHandlerExtensions, $asm, {});
	ss.initEnum($System_Windows_Input_KeyStates, $asm, { None: 0, Down: 1 });
	ss.initEnum($System_Windows_Input_ModifierKeys, $asm, { None: 0, Alt: 1, Control: 2, Shift: 4, Windows: 8 });
	ss.initClass($System_Windows_Input_Mouse, $asm, {});
	ss.initEnum($System_Windows_Input_MouseButton, $asm, { Left: 0, Middle: 1, Right: 2, XButton1: 3, XButton2: 4 });
	ss.initClass($System_Windows_Input_MouseEventArgs, $asm, {
		get_MouseDevice: function() {
			return this.$4$MouseDeviceField;
		},
		set_MouseDevice: function(value) {
			this.$4$MouseDeviceField = value;
		},
		get_LeftButton: function() {
			return this.$4$LeftButtonField;
		},
		set_LeftButton: function(value) {
			this.$4$LeftButtonField = value;
		},
		get_MiddleButton: function() {
			return this.$4$MiddleButtonField;
		},
		set_MiddleButton: function(value) {
			this.$4$MiddleButtonField = value;
		},
		get_RightButton: function() {
			return this.$4$RightButtonField;
		},
		set_RightButton: function(value) {
			this.$4$RightButtonField = value;
		},
		get_XButton1: function() {
			return this.$4$XButton1Field;
		},
		set_XButton1: function(value) {
			this.$4$XButton1Field = value;
		},
		get_XButton2: function() {
			return this.$4$XButton2Field;
		},
		set_XButton2: function(value) {
			this.$4$XButton2Field = value;
		},
		get_AbsolutePosition: function() {
			return this.$4$AbsolutePositionField;
		},
		set_AbsolutePosition: function(value) {
			this.$4$AbsolutePositionField = value;
		},
		GetPosition: function(relativeTo) {
			return relativeTo.GetRelativePosition(this.get_AbsolutePosition());
		},
		InvokeEventHandler: function(handler, target) {
			if (ss.isValue(handler)) {
				handler(target, this);
			}
			else {
				$System_Windows_RoutedEventArgs.prototype.InvokeEventHandler.call(this, handler, target);
			}
		}
	}, $System_Windows_Input_InputEventArgs);
	ss.initClass($System_Windows_Input_MouseButtonEventArgs, $asm, {
		get_ChangedButton: function() {
			return this.$5$ChangedButtonField;
		},
		set_ChangedButton: function(value) {
			this.$5$ChangedButtonField = value;
		},
		get_ButtonState: function() {
			return this.$5$ButtonStateField;
		},
		set_ButtonState: function(value) {
			this.$5$ButtonStateField = value;
		},
		get_ClickCount: function() {
			return this.$5$ClickCountField;
		},
		set_ClickCount: function(value) {
			this.$5$ClickCountField = value;
		},
		InvokeEventHandler: function(handler, target) {
			if (ss.isValue(handler)) {
				handler(target, this);
			}
			else {
				$System_Windows_Input_MouseEventArgs.prototype.InvokeEventHandler.call(this, handler, target);
			}
		}
	}, $System_Windows_Input_MouseEventArgs);
	ss.initEnum($System_Windows_Input_MouseButtonState, $asm, { Released: 0, Pressed: 1 });
	ss.initClass($System_Windows_Input_MouseDevice, $asm, {
		get_HitTarget: function() {
			return this.$hitTarget;
		},
		set_HitTarget: function(value) {
			this.$hitTarget = value;
			this.$SetTarget();
		},
		get_CaptureTarget: function() {
			return this.$captureTarget;
		},
		set_CaptureTarget: function(value) {
			this.$captureTarget = value;
			this.$SetTarget();
		},
		get_$IsActive: function() {
			return this.$isActive;
		},
		set_$IsActive: function(value) {
			this.$isActive = value;
			this.$SetTarget();
		},
		get_Target: function() {
			return this.$target;
		},
		set_Target: function(value) {
			if (ss.referenceEquals(this.$target, value)) {
				return;
			}
			var oldTarget = this.$target;
			this.$target = value;
			this.$OnTargetChanged(oldTarget, this.$target);
		},
		get_Position: function() {
			return this.$1$PositionField;
		},
		set_Position: function(value) {
			this.$1$PositionField = value;
		},
		add_CursorChanged: function(value) {
			this.$1$CursorChangedField = ss.delegateCombine(this.$1$CursorChangedField, value);
		},
		remove_CursorChanged: function(value) {
			this.$1$CursorChangedField = ss.delegateRemove(this.$1$CursorChangedField, value);
		},
		get_Cursor: function() {
			return this.$cursor;
		},
		set_Cursor: function(value) {
			if (ss.referenceEquals(this.$cursor, value)) {
				return;
			}
			this.$cursor = value;
			Granular.Extensions.EventHandlerExtensions.Raise(this.$1$CursorChangedField, this);
		},
		dispose: function() {
			this.$presentationSource.remove_HitTestInvalidated(ss.mkdel(this, this.$OnHitTestInvalidated));
		},
		$SetTarget: function() {
			this.set_Target((this.get_$IsActive() ? (this.get_CaptureTarget() || this.get_HitTarget()) : null));
		},
		Activate: function() {
			this.set_$IsActive(true);
		},
		Deactivate: function() {
			var lastTarget = this.get_Target();
			this.set_$IsActive(false);
			if (ss.isValue(lastTarget)) {
				var timestamp = this.$presentationSource.GetTimestamp();
				var $t1 = this.$pressedButtons.getEnumerator();
				try {
					while ($t1.moveNext()) {
						var button = $t1.current();
						$System_Windows_IInputElementExtensions.RaiseEvents(lastTarget, new $System_Windows_Input_MouseButtonEventArgs($System_Windows_Input_Mouse.PreviewMouseUpEvent, lastTarget, this, timestamp, this.get_Position(), button, 0, 1), new $System_Windows_Input_MouseButtonEventArgs($System_Windows_Input_Mouse.MouseUpEvent, lastTarget, this, timestamp, this.get_Position(), button, 0, 1));
					}
				}
				finally {
					$t1.dispose();
				}
			}
			this.$pressedButtons.clear();
		},
		ProcessRawEvent: function(rawEventArgs) {
			if (!this.get_$IsActive()) {
				this.Activate();
			}
			this.set_Position(rawEventArgs.get_Position());
			this.set_HitTarget(this.$presentationSource.HitTest(this.get_Position()));
			if (ss.isNullOrUndefined(this.get_Target())) {
				return false;
			}
			if (ss.isInstanceOfType(rawEventArgs, $System_Windows_Input_RawMouseButtonEventArgs)) {
				return this.$ProcessRawMouseButtonEvent(ss.cast(rawEventArgs, $System_Windows_Input_RawMouseButtonEventArgs));
			}
			if (ss.isInstanceOfType(rawEventArgs, $System_Windows_Input_RawMouseWheelEventArgs)) {
				return this.$ProcessRawMouseWheelEvent(ss.cast(rawEventArgs, $System_Windows_Input_RawMouseWheelEventArgs));
			}
			return $System_Windows_IInputElementExtensions.RaiseEvents(this.get_Target(), new $System_Windows_Input_MouseEventArgs($System_Windows_Input_Mouse.PreviewMouseMoveEvent, this.get_Target(), this, rawEventArgs.get_Timestamp(), rawEventArgs.get_Position()), new $System_Windows_Input_MouseEventArgs($System_Windows_Input_Mouse.MouseMoveEvent, this.get_Target(), this, rawEventArgs.get_Timestamp(), rawEventArgs.get_Position()));
		},
		$ProcessRawMouseButtonEvent: function(rawEventArgs) {
			var isPressed = rawEventArgs.get_ButtonState() === 1;
			if (isPressed) {
				this.$pressedButtons.add(rawEventArgs.get_Button());
			}
			else {
				this.$pressedButtons.remove(rawEventArgs.get_Button());
			}
			return $System_Windows_IInputElementExtensions.RaiseEvents(this.get_Target(), new $System_Windows_Input_MouseButtonEventArgs((isPressed ? $System_Windows_Input_Mouse.PreviewMouseDownEvent : $System_Windows_Input_Mouse.PreviewMouseUpEvent), this.get_Target(), this, rawEventArgs.get_Timestamp(), rawEventArgs.get_Position(), rawEventArgs.get_Button(), rawEventArgs.get_ButtonState(), 1), new $System_Windows_Input_MouseButtonEventArgs((isPressed ? $System_Windows_Input_Mouse.MouseDownEvent : $System_Windows_Input_Mouse.MouseUpEvent), this.get_Target(), this, rawEventArgs.get_Timestamp(), rawEventArgs.get_Position(), rawEventArgs.get_Button(), rawEventArgs.get_ButtonState(), 1));
		},
		$ProcessRawMouseWheelEvent: function(rawEventArgs) {
			return $System_Windows_IInputElementExtensions.RaiseEvents(this.get_Target(), new $System_Windows_Input_MouseWheelEventArgs($System_Windows_Input_Mouse.PreviewMouseWheelEvent, this.get_Target(), this, rawEventArgs.get_Timestamp(), rawEventArgs.get_Position(), rawEventArgs.get_Delta()), new $System_Windows_Input_MouseWheelEventArgs($System_Windows_Input_Mouse.MouseWheelEvent, this.get_Target(), this, rawEventArgs.get_Timestamp(), rawEventArgs.get_Position(), rawEventArgs.get_Delta()));
		},
		$OnHitTestInvalidated: function(sender, e) {
			this.set_HitTarget(this.$presentationSource.HitTest(this.get_Position()));
		},
		GetButtonState: function(button) {
			return (this.$pressedButtons.contains(button) ? 1 : 0);
		},
		Capture: function(element) {
			this.set_CaptureTarget(element);
		},
		ReleaseCapture: function() {
			this.set_CaptureTarget(null);
		},
		$OnTargetChanged: function(oldTarget, newTarget) {
			var oldTargetPath = (ss.isValue(oldTarget) ? Enumerable.from(oldTarget.GetPathFromRoot()).toArray() : []);
			var newTargetPath = (ss.isValue(newTarget) ? Enumerable.from(newTarget.GetPathFromRoot()).toArray() : []);
			var splitIndex = 0;
			while (splitIndex < oldTargetPath.length && splitIndex < newTargetPath.length && ss.referenceEquals(oldTargetPath[splitIndex], newTargetPath[splitIndex])) {
				splitIndex++;
			}
			var timestamp = this.$presentationSource.GetTimestamp();
			for (var i = oldTargetPath.length - 1; i >= splitIndex; i--) {
				oldTargetPath[i].RaiseEvent(new $System_Windows_Input_MouseEventArgs($System_Windows_Input_Mouse.MouseLeaveEvent, oldTargetPath[i], this, timestamp, this.get_Position()));
			}
			for (var i1 = splitIndex; i1 < newTargetPath.length; i1++) {
				newTargetPath[i1].RaiseEvent(new $System_Windows_Input_MouseEventArgs($System_Windows_Input_Mouse.MouseEnterEvent, newTargetPath[i1], this, timestamp, this.get_Position()));
			}
			this.set_Cursor(this.$QueryCursor(timestamp));
		},
		UpdateCursor: function() {
			this.set_Cursor(this.$QueryCursor(this.$presentationSource.GetTimestamp()));
		},
		$QueryCursor: function(timestamp) {
			if (ss.isNullOrUndefined(this.get_Target())) {
				return $System_Windows_Input_Cursors.get_Arrow();
			}
			var e = new $System_Windows_Input_QueryCursorEventArgs($System_Windows_Input_Mouse.QueryCursorEvent, this.get_Target(), this, timestamp, this.get_Position());
			e.set_Cursor($System_Windows_Input_Cursors.get_Arrow());
			this.get_Target().RaiseEvent(e);
			return (e.get_Handled() ? e.get_Cursor() : $System_Windows_Input_Cursors.get_Arrow());
		}
	}, null, [$System_Windows_Input_IInputDevice, ss.IDisposable]);
	ss.initClass($System_Windows_Input_MouseWheelEventArgs, $asm, {
		get_Delta: function() {
			return this.$5$DeltaField;
		},
		set_Delta: function(value) {
			this.$5$DeltaField = value;
		},
		InvokeEventHandler: function(handler, target) {
			if (ss.isValue(handler)) {
				handler(target, this);
			}
			else {
				$System_Windows_Input_MouseEventArgs.prototype.InvokeEventHandler.call(this, handler, target);
			}
		}
	}, $System_Windows_Input_MouseEventArgs);
	ss.initClass($System_Windows_Input_QueryCursorEventArgs, $asm, {
		get_Cursor: function() {
			return this.$5$CursorField;
		},
		set_Cursor: function(value) {
			this.$5$CursorField = value;
		},
		InvokeEventHandler: function(handler, target) {
			if (ss.isValue(handler)) {
				handler(target, this);
			}
			else {
				$System_Windows_Input_MouseEventArgs.prototype.InvokeEventHandler.call(this, handler, target);
			}
		}
	}, $System_Windows_Input_MouseEventArgs);
	ss.initClass($System_Windows_Input_RawEventArgs, $asm, {
		get_Timestamp: function() {
			return this.$1$TimestampField;
		},
		set_Timestamp: function(value) {
			this.$1$TimestampField = value;
		}
	});
	ss.initClass($System_Windows_Input_RawKeyboardEventArgs, $asm, {
		get_Key: function() {
			return this.$2$KeyField;
		},
		set_Key: function(value) {
			this.$2$KeyField = value;
		},
		get_KeyStates: function() {
			return this.$2$KeyStatesField;
		},
		set_KeyStates: function(value) {
			this.$2$KeyStatesField = value;
		},
		get_IsRepeat: function() {
			return this.$2$IsRepeatField;
		},
		set_IsRepeat: function(value) {
			this.$2$IsRepeatField = value;
		}
	}, $System_Windows_Input_RawEventArgs);
	ss.initClass($System_Windows_Input_RawMouseEventArgs, $asm, {
		get_Position: function() {
			return this.$2$PositionField;
		},
		set_Position: function(value) {
			this.$2$PositionField = value;
		}
	}, $System_Windows_Input_RawEventArgs);
	ss.initClass($System_Windows_Input_RawMouseButtonEventArgs, $asm, {
		get_Button: function() {
			return this.$3$ButtonField;
		},
		set_Button: function(value) {
			this.$3$ButtonField = value;
		},
		get_ButtonState: function() {
			return this.$3$ButtonStateField;
		},
		set_ButtonState: function(value) {
			this.$3$ButtonStateField = value;
		}
	}, $System_Windows_Input_RawMouseEventArgs);
	ss.initClass($System_Windows_Input_RawMouseWheelEventArgs, $asm, {
		get_Delta: function() {
			return this.$3$DeltaField;
		},
		set_Delta: function(value) {
			this.$3$DeltaField = value;
		}
	}, $System_Windows_Input_RawMouseEventArgs);
	ss.initClass($System_Windows_Markup_$BooleanTypeConverter, $asm, {
		ConvertFrom: function(namespaces, value) {
			var text = value.toString().trim().toLowerCase();
			if (text !== 'true' && text !== 'false') {
				throw new Granular.Exception('Can\'t convert "{0}" to boolean', [text]);
			}
			return text === 'true';
		}
	}, null, [$System_Windows_Markup_ITypeConverter]);
	ss.initClass($System_Windows_Markup_$DoubleTypeConverter, $asm, {
		ConvertFrom: function(namespaces, value) {
			var text = value.toString().trim().toLowerCase();
			if (text === 'auto') {
				return Number.NaN;
			}
			return parseFloat(text);
		}
	}, null, [$System_Windows_Markup_ITypeConverter]);
	ss.initClass($System_Windows_Markup_$EnumTypeConverter, $asm, {
		ConvertFrom: function(namespaces, value) {
			return ss.Enum.parse(this.$type, value.toString().trim());
		}
	}, null, [$System_Windows_Markup_ITypeConverter]);
	ss.initClass($System_Windows_Markup_$Int32TypeConverter, $asm, {
		ConvertFrom: function(namespaces, value) {
			return parseInt(ss.cast(value, String));
		}
	}, null, [$System_Windows_Markup_ITypeConverter]);
	ss.initClass($System_Windows_Markup_$ObjectTypeConverter, $asm, {
		ConvertFrom: function(namespaces, value) {
			return value;
		}
	}, null, [$System_Windows_Markup_ITypeConverter]);
	ss.initClass($System_Windows_Markup_$ParseTypeConverter, $asm, {
		ConvertFrom: function(namespaces, value) {
			return ss.midel(this.$parseMethod, null)(value.toString().trim());
		}
	}, null, [$System_Windows_Markup_ITypeConverter]);
	ss.initClass($System_Windows_Markup_$StringTypeConverter, $asm, {
		ConvertFrom: function(namespaces, value) {
			return value.toString();
		}
	}, null, [$System_Windows_Markup_ITypeConverter]);
	ss.initClass($System_Windows_Markup_$TimeSpanTypeConverter, $asm, {
		ConvertFrom: function(namespaces, value) {
			var timeSpan = {};
			if (Granular.Compatibility.TimeSpan.TryParse(value.toString(), timeSpan)) {
				return timeSpan.$;
			}
			throw new Granular.Exception('Can\'t parse TimeSpan value "{0}"', [value]);
		}
	}, null, [$System_Windows_Markup_ITypeConverter]);
	ss.initClass($System_Windows_Markup_$TypeTypeConverter, $asm, {
		ConvertFrom: function(namespaces, value) {
			return $System_Windows_Markup_TypeParser.ParseType$1(value.toString().trim(), namespaces);
		}
	}, null, [$System_Windows_Markup_ITypeConverter]);
	ss.initInterface($System_Windows_Markup_IEventAdapter, $asm, { get_HandlerType: null, AddHandler: null });
	ss.initClass($System_Windows_Markup_ClrEventAdapter, $asm, {
		get_HandlerType: function() {
			return System.Reflection.EventInfoExtensions.GetEventHandlerType(this.$eventInfo);
		},
		AddHandler: function(target, handler) {
			ss.midel(this.$eventInfo.adder, target)(handler);
		}
	}, null, [$System_Windows_Markup_IEventAdapter]);
	ss.initInterface($System_Windows_Markup_IPropertyAdapter, $asm, { get_PropertyType: null, get_HasGetter: null, get_HasSetter: null, GetValue: null, SetValue: null });
	ss.initClass($System_Windows_Markup_ClrPropertyAdapter, $asm, {
		get_PropertyType: function() {
			return this.$property.returnType;
		},
		get_HasGetter: function() {
			return ss.isValue(System.Reflection.PropertyInfoExtensions.GetGetMethod(this.$property));
		},
		get_HasSetter: function() {
			return ss.isValue(System.Reflection.PropertyInfoExtensions.GetSetMethod(this.$property));
		},
		GetValue: function(target) {
			return ss.midel(this.$property.getter, target).apply(null, this.$index);
		},
		SetValue: function(target, value, valueSource) {
			ss.midel(this.$property.setter, target).apply(null, this.$index.concat(value));
		}
	}, null, [$System_Windows_Markup_IPropertyAdapter]);
	ss.initClass($System_Windows_Markup_ConstantElementFactory, $asm, {
		get_ElementType: function() {
			return this.$1$ElementTypeField;
		},
		set_ElementType: function(value) {
			this.$1$ElementTypeField = value;
		},
		CreateElement: function(context) {
			return this.$value;
		}
	}, null, [$System_Windows_Markup_IElementFactory]);
	ss.initClass($System_Windows_Markup_PropertyAttribute, $asm, {
		get_Name: function() {
			return this.$2$NameField;
		},
		set_Name: function(value) {
			this.$2$NameField = value;
		}
	});
	ss.initClass($System_Windows_Markup_ContentPropertyAttribute, $asm, {}, $System_Windows_Markup_PropertyAttribute);
	ss.initClass($System_Windows_Markup_ConvertedElementFactory, $asm, {
		get_ElementType: function() {
			return this.$1$ElementTypeField;
		},
		set_ElementType: function(value) {
			this.$1$ElementTypeField = value;
		},
		CreateElement: function(context) {
			return $System_Windows_Markup_TypeConverter.ConvertValue(this.$valueFactory.CreateElement(context), this.get_ElementType(), this.$namespaces);
		}
	}, null, [$System_Windows_Markup_IElementFactory]);
	ss.initClass($System_Windows_Markup_DependencyPropertyAdapter, $asm, {
		get_PropertyType: function() {
			return this.$property.get_PropertyType();
		},
		get_HasGetter: function() {
			return true;
		},
		get_HasSetter: function() {
			return !this.$property.get_IsReadOnly();
		},
		GetValue: function(target) {
			return ss.cast(target, $System_Windows_DependencyObject).GetValue(this.$property);
		},
		SetValue: function(target, value, valueSource) {
			ss.cast(target, $System_Windows_DependencyObject).SetValue(this.$property, value, valueSource);
		}
	}, null, [$System_Windows_Markup_IPropertyAdapter]);
	ss.initClass($System_Windows_Markup_DictionaryKeyPropertyAttribute, $asm, {}, $System_Windows_Markup_PropertyAttribute);
	ss.initClass($System_Windows_Markup_ElementCollectionContentInitailizer, $asm, {});
	ss.initClass($System_Windows_Markup_ElementCollectionContentInitializer, $asm, {
		InitializeElement: function(element, context) {
			var $t1 = ss.getEnumerator(this.$elementsFactory);
			try {
				while ($t1.moveNext()) {
					var elementFactory = $t1.current();
					ss.add(element, elementFactory.CreateElement(context));
				}
			}
			finally {
				$t1.dispose();
			}
		}
	}, null, [$System_Windows_Markup_IElementInitializer]);
	ss.initClass($System_Windows_Markup_ElementDictionaryContentInitializer, $asm, {
		InitializeElement: function(element, context) {
			var $t1 = ss.getEnumerator(this.$keyElementFactories);
			try {
				while ($t1.moveNext()) {
					var keyElementFactory = $t1.current();
					var pair = keyElementFactory.$CreateElement(context);
					element.add(pair.key, pair.value);
				}
			}
			finally {
				$t1.dispose();
			}
		}
	}, null, [$System_Windows_Markup_IElementInitializer]);
	ss.initClass($System_Windows_Markup_ElementEventMemberInitializer, $asm, {
		InitializeElement: function(element, context) {
			this.$eventAdapter.AddHandler(element, $System_Windows_Markup_ElementEventMemberInitializer.$CreateEventHandler(this.$eventAdapter.get_HandlerType(), context.get_Root(), this.$eventHandlerName));
		}
	}, null, [$System_Windows_Markup_IElementInitializer]);
	ss.initClass($System_Windows_Markup_ElementFactory, $asm, {
		get_ElementType: function() {
			return this.$1$ElementTypeField;
		},
		set_ElementType: function(value) {
			this.$1$ElementTypeField = value;
		},
		CreateElement: function(context) {
			var target = ss.createInstance(this.get_ElementType());
			this.$elementInitializer.InitializeElement(target, context);
			return target;
		}
	}, null, [$System_Windows_Markup_IElementFactory]);
	ss.initClass($System_Windows_Markup_ElementInitializer, $asm, {
		InitializeElement: function(element, context) {
			context = $System_Windows_Markup_InitializeContextExtensions.CreateChildContext(context, element);
			if (!ss.isAssignableFrom(this.$elementType, ss.getInstanceType(element))) {
				throw new Granular.Exception('Can\'t initialize element of type "{0}" as it\'s not a subclass of "{1}"', [ss.getTypeName(ss.getInstanceType(element)), ss.getTypeName(this.$elementType)]);
			}
			if (ss.isInstanceOfType(element, $System_Windows_Markup_ISupportInitialize)) {
				ss.cast(element, $System_Windows_Markup_ISupportInitialize).BeginInit();
			}
			if (ss.referenceEquals(element, context.get_Root()) && ss.isInstanceOfType(element, $System_Windows_DependencyObject)) {
				$System_Windows_Markup_NameScope.SetNameScope(ss.cast(element, $System_Windows_DependencyObject), context.get_NameScope());
			}
			if (ss.isInstanceOfType(element, $System_Windows_FrameworkElement)) {
				ss.cast(element, $System_Windows_FrameworkElement).set_TemplatedParent(context.get_TemplatedParent());
			}
			var $t1 = ss.getEnumerator(this.$memberInitializers);
			try {
				while ($t1.moveNext()) {
					var memberInitializer = $t1.current();
					memberInitializer.InitializeElement(element, context);
				}
			}
			finally {
				$t1.dispose();
			}
			var name = Granular.Extensions.StringExtensions.DefaultIfNullOrEmpty(this.$nameDirectiveValue, (ss.isValue(this.$nameProperty) ? ss.cast(this.$nameProperty.GetValue(element), String) : ''));
			if (!Granular.Extensions.StringExtensions.IsNullOrEmpty(this.$nameDirectiveValue) && ss.isValue(this.$nameProperty)) {
				// name property exists, but the name directive was used, so update the property
				this.$nameProperty.SetValue(element, name, context.get_ValueSource());
			}
			if (!Granular.Extensions.StringExtensions.IsNullOrEmpty(name)) {
				context.get_NameScope().RegisterName(name, element);
			}
			if (ss.isValue(this.$contentInitializer)) {
				this.$contentInitializer.InitializeElement(element, context);
			}
			if (ss.referenceEquals(element, context.get_Root())) {
				var $t2 = ss.getEnumerator(context.get_NameScope());
				try {
					while ($t2.moveNext()) {
						var pair = $t2.current();
						$System_Windows_Markup_ElementInitializer.$SetFieldValue(element, pair.key, pair.value);
					}
				}
				finally {
					$t2.dispose();
				}
			}
			if (ss.isInstanceOfType(element, $System_Windows_Markup_ISupportInitialize)) {
				ss.cast(element, $System_Windows_Markup_ISupportInitialize).EndInit();
			}
		}
	}, null, [$System_Windows_Markup_IElementInitializer]);
	ss.initClass($System_Windows_Markup_ElementMemberInitializer, $asm, {});
	ss.initClass($System_Windows_Markup_ElementPropertyMemberInitializer, $asm, {
		InitializeElement: function(element, context) {
			this.$propertyAdapter.SetValue(element, this.$propertyValueFactory.CreateElement(context), context.get_ValueSource());
		}
	}, null, [$System_Windows_Markup_IElementInitializer]);
	ss.initClass($System_Windows_Markup_EventAdapter, $asm, {});
	ss.initClass($System_Windows_Markup_EventPropertyAdapter, $asm, {
		get_HandlerType: function() {
			return this.$eventProperty.returnType;
		},
		AddHandler: function(target, handler) {
			ss.midel(this.$eventProperty.setter, target).apply(null, [].concat(handler));
		}
	}, null, [$System_Windows_Markup_IEventAdapter]);
	ss.initClass($System_Windows_Markup_FrameworkElementFactoryInitializer, $asm, {
		InitializeElement: function(element, context) {
			this.$propertyAdapter.SetValue(element, new $System_Windows_FrameworkElementFactory(this.$elementFactory, context), context.get_ValueSource());
		}
	}, null, [$System_Windows_Markup_IElementInitializer]);
	ss.initInterface($System_Windows_Markup_INameScope, $asm, { RegisterName: null, UnregisterName: null, FindName: null }, [ss.IEnumerable, ss.IEnumerable]);
	ss.initClass($System_Windows_Markup_InitializeContext, $asm, {
		get_Target: function() {
			return this.$1$TargetField;
		},
		set_Target: function(value) {
			this.$1$TargetField = value;
		},
		get_ParentContext: function() {
			return this.$1$ParentContextField;
		},
		set_ParentContext: function(value) {
			this.$1$ParentContextField = value;
		},
		get_ValueSource: function() {
			return this.$1$ValueSourceField;
		},
		set_ValueSource: function(value) {
			this.$1$ValueSourceField = value;
		},
		get_NameScope: function() {
			return this.$1$NameScopeField;
		},
		set_NameScope: function(value) {
			this.$1$NameScopeField = value;
		},
		get_TemplatedParent: function() {
			return this.$1$TemplatedParentField;
		},
		set_TemplatedParent: function(value) {
			this.$1$TemplatedParentField = value;
		},
		get_Root: function() {
			return this.$1$RootField;
		},
		set_Root: function(value) {
			this.$1$RootField = value;
		}
	});
	$System_Windows_Markup_InitializeContext.$ctor1.prototype = $System_Windows_Markup_InitializeContext.prototype;
	ss.initClass($System_Windows_Markup_InitializeContextExtensions, $asm, {});
	ss.initInterface($System_Windows_Markup_ISupportInitialize, $asm, { BeginInit: null, EndInit: null });
	ss.initInterface($System_Windows_Markup_IValueProvider, $asm, { ProvideValue: null });
	ss.initClass($System_Windows_Markup_KnownTypes, $asm, {});
	ss.initClass($System_Windows_Markup_MarkupExtensionElementFactory, $asm, {
		get_ElementType: function() {
			return Object;
		},
		CreateElement: function(context) {
			return ss.cast(this.$valueFactory.CreateElement(context), $System_Windows_Markup_IMarkupExtension).ProvideValue(context);
		}
	}, null, [$System_Windows_Markup_IElementFactory]);
	ss.initClass($System_Windows_Markup_MarkupExtensionParameterAttribute, $asm, {
		get_Index: function() {
			return this.$3$IndexField;
		},
		set_Index: function(value) {
			this.$3$IndexField = value;
		}
	}, $System_Windows_Markup_PropertyAttribute);
	ss.initClass($System_Windows_Markup_NameScope, $asm, {
		RegisterName: function(name, value) {
			if (this.$items.containsKey(name)) {
				throw new Granular.Exception('Scope already contains an item named "{0}"', [name]);
			}
			this.$items.add(name, value);
		},
		UnregisterName: function(name) {
			if (!this.$items.containsKey(name)) {
				throw new Granular.Exception('Scope doesn\'t contain an item named "{0}"', [name]);
			}
			this.$items.remove(name);
		},
		FindName: function(name) {
			return (this.$items.containsKey(name) ? this.$items.get_item(name) : (ss.isValue(this.$parent) ? this.$parent.FindName(name) : null));
		},
		getEnumerator: function() {
			return (ss.isValue(this.$parent) ? Enumerable.from(this.$parent).concat(this.$items).getEnumerator() : this.$items.getEnumerator());
		}
	}, null, [ss.IEnumerable, ss.IEnumerable, $System_Windows_Markup_INameScope]);
	ss.initClass($System_Windows_Markup_PropertyAdapter, $asm, {});
	ss.initClass($System_Windows_Markup_PropertyPathParser, $asm, {
		Parse: function() {
			this.$tokens = new (ss.makeGenericType(Granular.Collections.ReadOnlyStack$1, [System.Xaml.Token]))($System_Windows_Markup_PropertyPathParser.$lexer.GetTokens(this.$text));
			var elements = [];
			elements.push(this.$MatchElement(this.$namespaces));
			while (!this.$tokens.get_IsEmpty()) {
				this.$MatchTerminal('.');
				elements.push(this.$MatchElement(this.$namespaces));
			}
			return elements;
		},
		$MatchElement: function(namespaces) {
			this.$VerifyTokensExists();
			var propertyName = this.$TryMatchPropertyName(namespaces);
			var indexRawValues = this.$TryMatchIndexRawValues();
			if (propertyName.get_IsEmpty() && !Enumerable.from(indexRawValues).any()) {
				throw new Granular.Exception('Can\'t parse "{0}", Property name or Index parameters were expected, "{1}" was found at index {2}', [this.$text, this.$tokens.Peek().get_Value(), this.$tokens.Peek().get_Start()]);
			}
			return (Enumerable.from(indexRawValues).any() ? new $System_Windows_IndexPropertyPathElement(propertyName, indexRawValues, namespaces) : new $System_Windows_PropertyPathElement(propertyName));
		},
		$TryMatchPropertyName: function(namespaces) {
			if (!this.$tokens.get_IsEmpty() && this.$tokens.Peek().get_Value() === '(') {
				this.$MatchTerminal('(');
				var propertyName = this.$MatchValue();
				if (!this.$tokens.get_IsEmpty() && this.$tokens.Peek().get_Value() === '.') {
					this.$MatchTerminal('.');
					propertyName = ss.formatString('{0}.{1}', propertyName, this.$MatchValue());
				}
				this.$MatchTerminal(')');
				var xamlName = System.Xaml.XamlName.FromPrefixedName(propertyName, namespaces);
				if (xamlName.get_IsEmpty()) {
					throw new Granular.Exception('Can\'t parse "{0}", Can\'t parse property name "{1}" at index {2}, is namespace missing?', [this.$text, propertyName, this.$tokens.Peek().get_Start() - propertyName.length - 1]);
				}
				return xamlName;
			}
			if (!this.$tokens.get_IsEmpty() && ss.cast(this.$tokens.Peek().get_Id(), ss.Int32) === 1) {
				return new System.Xaml.XamlName(this.$MatchValue(), null);
			}
			return System.Xaml.XamlName.Empty;
		},
		$TryMatchIndexRawValues: function() {
			var values = [];
			if (!this.$tokens.get_IsEmpty() && this.$tokens.Peek().get_Value() === '[') {
				this.$MatchTerminal('[');
				values.push(this.$MatchValue());
				while (!this.$tokens.get_IsEmpty() && this.$tokens.Peek().get_Value() === ',') {
					this.$MatchTerminal(',');
					values.push(this.$MatchValue());
				}
				this.$MatchTerminal(']');
			}
			return values;
		},
		$MatchValue: function() {
			this.$VerifyTokensExists();
			var token = this.$tokens.Pop();
			if (ss.cast(token.get_Id(), ss.Int32) !== 1) {
				throw new Granular.Exception('Can\'t parse "{0}", "{1}" was not expected at index {2}', [this.$text, token.get_Value(), token.get_Start()]);
			}
			return token.get_Value();
		},
		$MatchTerminal: function(terminal) {
			this.$VerifyTokensExists();
			var token = this.$tokens.Pop();
			if (ss.cast(token.get_Id(), ss.Int32) !== 0 || !ss.referenceEquals(token.get_Value(), terminal)) {
				throw new Granular.Exception('Can\'t parse "{0}", "{1}" is expected, "{2}" was found at index {3}', [this.$text, terminal, token.get_Value(), token.get_Start()]);
			}
			return token;
		},
		$VerifyTokensExists: function() {
			if (this.$tokens.get_IsEmpty()) {
				throw new Granular.Exception('Can\'t parse "{0}", stream was terminated unexpectedly', [this.$text]);
			}
		}
	});
	ss.initClass($System_Windows_Markup_RoutedEventAdapter, $asm, {
		get_HandlerType: function() {
			return this.$routedEvent.get_HandlerType();
		},
		AddHandler: function(target, handler) {
			ss.cast(target, $System_Windows_UIElement).AddHandler(this.$routedEvent, handler, false);
		}
	}, null, [$System_Windows_Markup_IEventAdapter]);
	ss.initClass($System_Windows_Markup_RuntimeNamePropertyAttribute, $asm, {}, $System_Windows_Markup_PropertyAttribute);
	ss.initClass($System_Windows_Markup_TypeConverter, $asm, {});
	ss.initClass($System_Windows_Markup_TypeConverterAttribute, $asm, {
		get_ConverterType: function() {
			return this.$2$ConverterTypeField;
		},
		set_ConverterType: function(value) {
			this.$2$ConverterTypeField = value;
		}
	});
	ss.initClass($System_Windows_Markup_TypeParser, $asm, {});
	ss.initClass($System_Windows_Markup_ValueProvider, $asm, {
		ProvideValue: function() {
			return this.$provideValue();
		}
	}, null, [$System_Windows_Markup_IValueProvider]);
	ss.initClass($System_Windows_Markup_XamlElementExtensions, $asm, {});
	ss.initClass($System_Windows_Markup_XamlLoader, $asm, {});
	ss.initClass($System_Windows_Markup_XamlTypes, $asm, {});
	ss.initClass($System_Windows_Markup_XmlnsDefinitionAttribute, $asm, {
		get_XmlNamespace: function() {
			return this.$2$XmlNamespaceField;
		},
		set_XmlNamespace: function(value) {
			this.$2$XmlNamespaceField = value;
		},
		get_ClrNamespace: function() {
			return this.$2$ClrNamespaceField;
		},
		set_ClrNamespace: function(value) {
			this.$2$ClrNamespaceField = value;
		},
		get_AssemblyName: function() {
			return this.$2$AssemblyNameField;
		},
		set_AssemblyName: function(value) {
			this.$2$AssemblyNameField = value;
		}
	});
	ss.initClass($System_Windows_Media_Animation_Animatable, $asm, {
		get_RootClock: function() {
			return this.$3$RootClockField;
		},
		set_RootClock: function(value) {
			this.$3$RootClockField = value;
		},
		SetAnimationClocks: function(dependencyProperty, animationClocks, layerOwner) {
			var animationExpression = this.$GetInitializedAnimationExpression(dependencyProperty);
			animationExpression.SetClocks(animationClocks, layerOwner);
		},
		AddAnimationClocks: function(dependencyProperty, animationClocks, layerOwner) {
			var animationExpression = this.$GetInitializedAnimationExpression(dependencyProperty);
			animationExpression.AddClocks(animationClocks, layerOwner);
		},
		RemoveAnimationClocks: function(dependencyProperty, animationClocks, layerOwner) {
			var animationExpression = this.$GetInitializedAnimationExpression(dependencyProperty);
			animationExpression.RemoveClocks(animationClocks, layerOwner);
		},
		$GetInitializedAnimationExpression: function(dependencyProperty) {
			var entry = this.GetValueEntry(dependencyProperty);
			var animationExpression = ss.safeCast(entry.GetAnimationValue(false), $System_Windows_Media_Animation_AnimationExpression);
			if (ss.isNullOrUndefined(animationExpression)) {
				animationExpression = new $System_Windows_Media_Animation_AnimationExpression(this, dependencyProperty);
				entry.SetAnimationValue(animationExpression);
			}
			return animationExpression;
		},
		OnInheritanceParentChanged: function(oldInheritanceParent, newInheritanceParent) {
			$System_Windows_Freezable.prototype.OnInheritanceParentChanged.call(this, oldInheritanceParent, newInheritanceParent);
			this.set_RootClock((ss.isInstanceOfType(newInheritanceParent, $System_Windows_Media_Animation_IAnimatable) ? ss.cast(newInheritanceParent, $System_Windows_Media_Animation_IAnimatable).get_RootClock() : null));
		}
	}, $System_Windows_Freezable, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_Media_Animation_IAnimatable]);
	ss.initClass($System_Windows_Media_Brush, $asm, {
		get_Opacity: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Media_Brush.OpacityProperty), Number));
		},
		set_Opacity: function(value) {
			this.SetValue($System_Windows_Media_Brush.OpacityProperty, value, 11);
		}
	}, $System_Windows_Media_Animation_Animatable, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_Media_Animation_IAnimatable]);
	ss.initClass($System_Windows_Media_Brushes, $asm, {});
	ss.initEnum($System_Windows_Media_BrushMappingMode, $asm, { Absolute: 0, RelativeToBoundingBox: 1 });
	ss.initClass($System_Windows_Media_BrushTypeConverter, $asm, {
		ConvertFrom: function(namespaces, value) {
			return new $System_Windows_Media_SolidColorBrush.$ctor1(ss.cast(this.$colorTypeConverter.ConvertFrom(namespaces, value), $System_Windows_Media_Color));
		}
	}, null, [$System_Windows_Markup_ITypeConverter]);
	ss.initClass($System_Windows_Media_Color, $asm, {
		get_A: function() {
			return this.$1$AField;
		},
		set_A: function(value) {
			this.$1$AField = value;
		},
		get_R: function() {
			return this.$1$RField;
		},
		set_R: function(value) {
			this.$1$RField = value;
		},
		get_G: function() {
			return this.$1$GField;
		},
		set_G: function(value) {
			this.$1$GField = value;
		},
		get_B: function() {
			return this.$1$BField;
		},
		set_B: function(value) {
			this.$1$BField = value;
		},
		equals: function(obj) {
			var other = ss.safeCast(obj, $System_Windows_Media_Color);
			return ss.referenceEquals(this, other) || !ss.referenceEquals(other, null) && this.get_A() === other.get_A() && this.get_R() === other.get_R() && this.get_G() === other.get_G() && this.get_B() === other.get_B();
		},
		getHashCode: function() {
			return ss.getHashCode(this.get_A()) ^ ss.getHashCode(this.get_R()) ^ ss.getHashCode(this.get_G()) ^ ss.getHashCode(this.get_B());
		},
		toString: function() {
			return ss.formatString('#{0:X2}{1:X2}{2:X2}{3:X2}', this.get_A(), this.get_R(), this.get_G(), this.get_B());
		},
		IsClose: function(color) {
			return Math.abs(this.get_A() - color.get_A()) <= 1 && Math.abs(this.get_R() - color.get_R()) <= 1 && Math.abs(this.get_G() - color.get_G()) <= 1 && Math.abs(this.get_B() - color.get_B()) <= 1;
		}
	});
	ss.initClass($System_Windows_Media_ColorExtensions, $asm, {});
	ss.initClass($System_Windows_Media_Colors, $asm, {});
	ss.initClass($System_Windows_Media_ColorTypeConverter, $asm, {
		ConvertFrom: function(namespaces, value) {
			if (ss.isInstanceOfType(value, String)) {
				var stringValue = ss.cast(value, String).trim();
				if (ss.startsWithString(stringValue, '#') && stringValue.length === 9) {
					return $System_Windows_Media_Color.FromUInt32(Granular.Compatibility.Convert.ToUInt32(stringValue.substring(1), 16));
				}
				if (ss.startsWithString(stringValue, '#') && stringValue.length === 7) {
					return $System_Windows_Media_Color.FromUInt32(4278190080 | Granular.Compatibility.Convert.ToUInt32(stringValue.substring(1), 16));
				}
				var propertyInfo = ss.getMembers($System_Windows_Media_Colors, 16, 24 | 256, stringValue);
				if (ss.isValue(propertyInfo)) {
					return ss.midel(propertyInfo.getter, null).apply(null, []);
				}
			}
			throw new Granular.Exception('Can\'t convert "{0}" to Color', [value]);
		}
	}, null, [$System_Windows_Markup_ITypeConverter]);
	ss.initClass($System_Windows_Media_GradientBrush, $asm, {
		get_SpreadMethod: function() {
			return ss.cast(this.GetValue($System_Windows_Media_GradientBrush.SpreadMethodProperty), ss.Int32);
		},
		set_SpreadMethod: function(value) {
			this.SetValue($System_Windows_Media_GradientBrush.SpreadMethodProperty, value, 11);
		},
		get_GradientStops: function() {
			return ss.cast(this.GetValue($System_Windows_Media_GradientBrush.GradientStopsProperty), $System_Windows_Media_GradientStopCollection);
		},
		set_GradientStops: function(value) {
			this.SetValue($System_Windows_Media_GradientBrush.GradientStopsProperty, value, 11);
		}
	}, $System_Windows_Media_Brush, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_Media_Animation_IAnimatable]);
	$System_Windows_Media_GradientBrush.$ctor1.prototype = $System_Windows_Media_GradientBrush.prototype;
	ss.initEnum($System_Windows_Media_GradientSpreadMethod, $asm, { Pad: 0, Reflect: 1, Repeat: 2 });
	ss.initClass($System_Windows_Media_GradientStop, $asm, {
		get_Color: function() {
			return ss.cast(this.GetValue($System_Windows_Media_GradientStop.ColorProperty), $System_Windows_Media_Color);
		},
		set_Color: function(value) {
			this.SetValue($System_Windows_Media_GradientStop.ColorProperty, value, 11);
		},
		get_Offset: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Media_GradientStop.OffsetProperty), Number));
		},
		set_Offset: function(value) {
			this.SetValue($System_Windows_Media_GradientStop.OffsetProperty, value, 11);
		}
	}, $System_Windows_Media_Animation_Animatable, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_Media_Animation_IAnimatable]);
	$System_Windows_Media_GradientStop.$ctor1.prototype = $System_Windows_Media_GradientStop.prototype;
	ss.initClass($System_Windows_Media_GradientStopCollection, $asm, {}, ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Media_GradientStop]), [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, ss.IEnumerable, ss.IEnumerable, Granular.Collections.INotifyCollectionChanged, ss.makeGenericType(Granular.Collections.IObservableCollection$1, [$System_Windows_Media_GradientStop]), ss.ICollection, ss.IList]);
	$System_Windows_Media_GradientStopCollection.$ctor1.prototype = $System_Windows_Media_GradientStopCollection.prototype;
	ss.initInterface($System_Windows_Media_IBorderRenderElement, $asm, { get_Background: null, set_Background: null, get_BorderThickness: null, set_BorderThickness: null, get_BorderBrush: null, set_BorderBrush: null, get_Bounds: null, set_Bounds: null, get_CornerRadius: null, set_CornerRadius: null, get_IsHitTestVisible: null, set_IsHitTestVisible: null });
	ss.initInterface($System_Windows_Media_IDrawingRenderElement, $asm, { DrawLine: null });
	ss.initInterface($System_Windows_Media_IImageRenderElement, $asm, { get_Bounds: null, set_Bounds: null, get_Source: null, set_Source: null });
	ss.initClass($System_Windows_Media_TileBrush, $asm, {
		get_TileMode: function() {
			return ss.cast(this.GetValue($System_Windows_Media_TileBrush.TileModeProperty), ss.Int32);
		},
		set_TileMode: function(value) {
			this.SetValue($System_Windows_Media_TileBrush.TileModeProperty, value, 11);
		},
		get_Stretch: function() {
			return ss.cast(this.GetValue($System_Windows_Media_TileBrush.StretchProperty), ss.Int32);
		},
		set_Stretch: function(value) {
			this.SetValue($System_Windows_Media_TileBrush.StretchProperty, value, 11);
		},
		get_Viewport: function() {
			return ss.cast(this.GetValue($System_Windows_Media_TileBrush.ViewportProperty), $System_Windows_Rect);
		},
		set_Viewport: function(value) {
			this.SetValue($System_Windows_Media_TileBrush.ViewportProperty, value, 11);
		},
		get_ViewportUnits: function() {
			return ss.cast(this.GetValue($System_Windows_Media_TileBrush.ViewportUnitsProperty), ss.Int32);
		},
		set_ViewportUnits: function(value) {
			this.SetValue($System_Windows_Media_TileBrush.ViewportUnitsProperty, value, 11);
		}
	}, $System_Windows_Media_Brush, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_Media_Animation_IAnimatable]);
	ss.initClass($System_Windows_Media_ImageBrush, $asm, {
		get_ImageSource: function() {
			return ss.cast(this.GetValue($System_Windows_Media_ImageBrush.ImageSourceProperty), String);
		},
		set_ImageSource: function(value) {
			this.SetValue($System_Windows_Media_ImageBrush.ImageSourceProperty, value, 11);
		}
	}, $System_Windows_Media_TileBrush, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_Media_Animation_IAnimatable]);
	ss.initClass($System_Windows_Media_ImageSource, $asm, {
		get_RenderImageSource: null,
		get_Size: function() {
			return (ss.isValue(this.get_RenderImageSource()) ? this.get_RenderImageSource().get_Size() : $System_Windows_Size.Empty);
		}
	}, $System_Windows_Media_Animation_Animatable, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_Media_Animation_IAnimatable]);
	ss.initClass($System_Windows_Media_ImageSourceTypeConverter, $asm, {
		ConvertFrom: function(namespaces, value) {
			var $t1 = new $System_Windows_Media_Imaging_BitmapImage();
			$t1.set_UriSource(ss.cast(value, String));
			return $t1;
		}
	}, null, [$System_Windows_Markup_ITypeConverter]);
	ss.initInterface($System_Windows_Media_IRenderElementFactory, $asm, { CreateVisualRenderElement: null, CreateDrawingRenderElement: null, CreateTextBoxRenderElement: null, CreateTextBlockRenderElement: null, CreateBorderRenderElement: null, CreateImageRenderElement: null });
	ss.initInterface($System_Windows_Media_IRenderImageSource, $asm, { add_StateChanged: null, remove_StateChanged: null, get_State: null, get_Size: null });
	ss.initInterface($System_Windows_Media_ITextBlockRenderElement, $asm, { get_Bounds: null, set_Bounds: null, get_FontFamily: null, set_FontFamily: null, get_Foreground: null, set_Foreground: null, get_FontSize: null, set_FontSize: null, get_FontStyle: null, set_FontStyle: null, get_FontStretch: null, set_FontStretch: null, get_FontWeight: null, set_FontWeight: null, get_Text: null, set_Text: null, get_TextAlignment: null, set_TextAlignment: null, get_TextTrimming: null, set_TextTrimming: null, get_TextWrapping: null, set_TextWrapping: null });
	ss.initInterface($System_Windows_Media_ITextBoxRenderElement, $asm, { add_TextChanged: null, remove_TextChanged: null, get_Text: null, set_Text: null, get_MaxLength: null, set_MaxLength: null, add_CaretIndexChanged: null, remove_CaretIndexChanged: null, get_CaretIndex: null, set_CaretIndex: null, add_SelectionStartChanged: null, remove_SelectionStartChanged: null, get_SelectionLength: null, set_SelectionLength: null, add_SelectionLengthChanged: null, remove_SelectionLengthChanged: null, get_SelectionStart: null, set_SelectionStart: null, get_Bounds: null, set_Bounds: null, get_AcceptsReturn: null, set_AcceptsReturn: null, get_AcceptsTab: null, set_AcceptsTab: null, get_IsPassword: null, set_IsPassword: null, get_IsReadOnly: null, set_IsReadOnly: null, get_SpellCheck: null, set_SpellCheck: null, get_Foreground: null, set_Foreground: null, get_FontSize: null, set_FontSize: null, get_FontFamily: null, set_FontFamily: null, get_FontStretch: null, set_FontStretch: null, get_FontStyle: null, set_FontStyle: null, get_FontWeight: null, set_FontWeight: null, get_IsHitTestVisible: null, set_IsHitTestVisible: null, get_TextWrapping: null, set_TextWrapping: null, get_TextAlignment: null, set_TextAlignment: null, get_HorizontalScrollBarVisibility: null, set_HorizontalScrollBarVisibility: null, get_VerticalScrollBarVisibility: null, set_VerticalScrollBarVisibility: null, Focus: null, ClearFocus: null, ProcessKeyEvent: null });
	ss.initInterface($System_Windows_Media_IVisualRenderElement, $asm, { get_Background: null, set_Background: null, get_Bounds: null, set_Bounds: null, get_ClipToBounds: null, set_ClipToBounds: null, get_IsHitTestVisible: null, set_IsHitTestVisible: null, get_IsVisible: null, set_IsVisible: null, get_Opacity: null, set_Opacity: null, get_Transform: null, set_Transform: null, get_Children: null, InsertChild: null, RemoveChild: null });
	ss.initClass($System_Windows_Media_LinearGradientBrush, $asm, {
		get_StartPoint: function() {
			return ss.cast(this.GetValue($System_Windows_Media_LinearGradientBrush.StartPointProperty), $System_Windows_Point);
		},
		set_StartPoint: function(value) {
			this.SetValue($System_Windows_Media_LinearGradientBrush.StartPointProperty, value, 11);
		},
		get_EndPoint: function() {
			return ss.cast(this.GetValue($System_Windows_Media_LinearGradientBrush.EndPointProperty), $System_Windows_Point);
		},
		set_EndPoint: function(value) {
			this.SetValue($System_Windows_Media_LinearGradientBrush.EndPointProperty, value, 11);
		},
		get_Angle: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Media_LinearGradientBrush.AngleProperty), Number));
		},
		set_Angle: function(value) {
			this.SetValue($System_Windows_Media_LinearGradientBrush.AngleProperty, value, 11);
		},
		$SetAngle: function() {
			if ($System_Windows_PointExtensions.IsClose(this.get_StartPoint(), this.get_EndPoint())) {
				this.set_Angle(0);
			}
			else {
				var offset = $System_Windows_Point.op_Subtraction(this.get_EndPoint(), this.get_StartPoint());
				var $t1 = offset.get_Y();
				this.set_Angle((($t1 > 0) ? 1 : (($t1 < 0) ? -1 : 0)) * Math.acos(offset.get_X() / Math.sqrt(offset.get_X() * offset.get_X() + offset.get_Y() * offset.get_Y())) * 180 / Math.PI);
			}
		}
	}, $System_Windows_Media_GradientBrush, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_Media_Animation_IAnimatable]);
	$System_Windows_Media_LinearGradientBrush.$ctor2.prototype = $System_Windows_Media_LinearGradientBrush.$ctor1.prototype = $System_Windows_Media_LinearGradientBrush.$ctor4.prototype = $System_Windows_Media_LinearGradientBrush.$ctor3.prototype = $System_Windows_Media_LinearGradientBrush.prototype;
	ss.initClass($System_Windows_Media_Matrix, $asm, {
		get_M11: function() {
			return this.$1$M11Field;
		},
		set_M11: function(value) {
			this.$1$M11Field = value;
		},
		get_M12: function() {
			return this.$1$M12Field;
		},
		set_M12: function(value) {
			this.$1$M12Field = value;
		},
		get_M21: function() {
			return this.$1$M21Field;
		},
		set_M21: function(value) {
			this.$1$M21Field = value;
		},
		get_M22: function() {
			return this.$1$M22Field;
		},
		set_M22: function(value) {
			this.$1$M22Field = value;
		},
		get_OffsetX: function() {
			return this.$1$OffsetXField;
		},
		set_OffsetX: function(value) {
			this.$1$OffsetXField = value;
		},
		get_OffsetY: function() {
			return this.$1$OffsetYField;
		},
		set_OffsetY: function(value) {
			this.$1$OffsetYField = value;
		},
		get_IsIdentity: function() {
			return this.get_M11() === 1 && this.get_M12() === 0 && this.get_M21() === 0 && this.get_M22() === 1 && this.get_OffsetX() === 0 && this.get_OffsetY() === 0;
		},
		get_IsTranslation: function() {
			return this.get_M11() === 1 && this.get_M12() === 0 && this.get_M21() === 0 && this.get_M22() === 1;
		},
		get_IsScaling: function() {
			return this.get_M12() === 0 && this.get_M21() === 0 && this.get_OffsetX() === 0 && this.get_OffsetY() === 0;
		},
		toString: function() {
			if (this.get_IsIdentity()) {
				return 'IdentityMatrix';
			}
			if (this.get_IsTranslation()) {
				return ss.formatString('TranslationMatrix({0}, {1})', this.get_OffsetX(), this.get_OffsetY());
			}
			if (this.get_IsScaling()) {
				return ss.formatString('ScalingMatrix({0}, {1})', this.get_M11(), this.get_M22());
			}
			return ss.formatString('Matrix({0}, {1}, {2}, {3}, {4}, {5})', this.get_M11(), this.get_M12(), this.get_M21(), this.get_M22(), this.get_OffsetX(), this.get_OffsetY());
		},
		equals: function(obj) {
			var other = ss.safeCast(obj, $System_Windows_Media_Matrix);
			return ss.referenceEquals(this, other) || !ss.referenceEquals(other, null) && ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Number]).Default.areEqual(this.get_M11(), other.get_M11()) && ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Number]).Default.areEqual(this.get_M12(), other.get_M12()) && ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Number]).Default.areEqual(this.get_M21(), other.get_M21()) && ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Number]).Default.areEqual(this.get_M22(), other.get_M22()) && ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Number]).Default.areEqual(this.get_OffsetX(), other.get_OffsetX()) && ss.makeGenericType(Granular.Compatibility.EqualityComparer$1, [Number]).Default.areEqual(this.get_OffsetY(), other.get_OffsetY());
		},
		getHashCode: function() {
			return ss.getHashCode(this.get_M11()) ^ ss.getHashCode(this.get_M12()) ^ ss.getHashCode(this.get_M21()) ^ ss.getHashCode(this.get_M22()) ^ ss.getHashCode(this.get_OffsetX()) ^ ss.getHashCode(this.get_OffsetY());
		},
		IsClose: function(matrix) {
			return Granular.Extensions.DoubleExtensions.IsClose(this.get_M11(), matrix.get_M11()) && Granular.Extensions.DoubleExtensions.IsClose(this.get_M12(), matrix.get_M12()) && Granular.Extensions.DoubleExtensions.IsClose(this.get_M21(), matrix.get_M21()) && Granular.Extensions.DoubleExtensions.IsClose(this.get_M22(), matrix.get_M22()) && Granular.Extensions.DoubleExtensions.IsClose(this.get_OffsetX(), matrix.get_OffsetX()) && Granular.Extensions.DoubleExtensions.IsClose(this.get_OffsetY(), matrix.get_OffsetY());
		}
	});
	ss.initClass($System_Windows_Media_RadialGradientBrush, $asm, {
		get_Center: function() {
			return ss.cast(this.GetValue($System_Windows_Media_RadialGradientBrush.CenterProperty), $System_Windows_Point);
		},
		set_Center: function(value) {
			this.SetValue($System_Windows_Media_RadialGradientBrush.CenterProperty, value, 11);
		},
		get_GradientOrigin: function() {
			return ss.cast(this.GetValue($System_Windows_Media_RadialGradientBrush.GradientOriginProperty), $System_Windows_Point);
		},
		set_GradientOrigin: function(value) {
			this.SetValue($System_Windows_Media_RadialGradientBrush.GradientOriginProperty, value, 11);
		},
		get_RadiusX: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Media_RadialGradientBrush.RadiusXProperty), Number));
		},
		set_RadiusX: function(value) {
			this.SetValue($System_Windows_Media_RadialGradientBrush.RadiusXProperty, value, 11);
		},
		get_RadiusY: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Media_RadialGradientBrush.RadiusYProperty), Number));
		},
		set_RadiusY: function(value) {
			this.SetValue($System_Windows_Media_RadialGradientBrush.RadiusYProperty, value, 11);
		}
	}, $System_Windows_Media_GradientBrush, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_Media_Animation_IAnimatable]);
	$System_Windows_Media_RadialGradientBrush.$ctor2.prototype = $System_Windows_Media_RadialGradientBrush.$ctor1.prototype = $System_Windows_Media_RadialGradientBrush.prototype;
	ss.initEnum($System_Windows_Media_RenderImageState, $asm, { Idle: 0, DownloadProgress: 1, DownloadCompleted: 2, DownloadFailed: 3 });
	ss.initEnum($System_Windows_Media_RenderImageType, $asm, { Unknown: 0, Gif: 1, Jpeg: 2, Png: 3, Svg: 4 });
	ss.initClass($System_Windows_Media_RotateTransform, $asm, {
		get_Value: function() {
			return this.$matrix;
		},
		get_Angle: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Media_RotateTransform.AngleProperty), Number));
		},
		set_Angle: function(value) {
			this.SetValue($System_Windows_Media_RotateTransform.AngleProperty, value, 11);
		},
		get_CenterX: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Media_RotateTransform.CenterXProperty), Number));
		},
		set_CenterX: function(value) {
			this.SetValue($System_Windows_Media_RotateTransform.CenterXProperty, value, 11);
		},
		get_CenterY: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Media_RotateTransform.CenterYProperty), Number));
		},
		set_CenterY: function(value) {
			this.SetValue($System_Windows_Media_RotateTransform.CenterYProperty, value, 11);
		},
		$SetMatrix: function() {
			this.$matrix = $System_Windows_Media_Matrix.RotationMatrix(Math.PI * this.get_Angle() / 180, this.get_CenterX(), this.get_CenterY());
		}
	}, $System_Windows_Media_Transform);
	ss.initClass($System_Windows_Media_ScaleTransform, $asm, {
		get_Value: function() {
			return this.$matrix;
		},
		get_ScaleX: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Media_ScaleTransform.ScaleXProperty), Number));
		},
		set_ScaleX: function(value) {
			this.SetValue($System_Windows_Media_ScaleTransform.ScaleXProperty, value, 11);
		},
		get_ScaleY: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Media_ScaleTransform.ScaleYProperty), Number));
		},
		set_ScaleY: function(value) {
			this.SetValue($System_Windows_Media_ScaleTransform.ScaleYProperty, value, 11);
		},
		get_CenterX: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Media_ScaleTransform.CenterXProperty), Number));
		},
		set_CenterX: function(value) {
			this.SetValue($System_Windows_Media_ScaleTransform.CenterXProperty, value, 11);
		},
		get_CenterY: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Media_ScaleTransform.CenterYProperty), Number));
		},
		set_CenterY: function(value) {
			this.SetValue($System_Windows_Media_ScaleTransform.CenterYProperty, value, 11);
		},
		$SetMatrix: function() {
			this.$matrix = $System_Windows_Media_Matrix.ScalingMatrix(this.get_ScaleX(), this.get_ScaleY(), this.get_CenterX(), this.get_CenterY());
		}
	}, $System_Windows_Media_Transform);
	ss.initClass($System_Windows_Media_SkewTransform, $asm, {
		get_Value: function() {
			return this.$matrix;
		},
		get_AngleX: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Media_SkewTransform.AngleXProperty), Number));
		},
		set_AngleX: function(value) {
			this.SetValue($System_Windows_Media_SkewTransform.AngleXProperty, value, 11);
		},
		get_AngleY: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Media_SkewTransform.AngleYProperty), Number));
		},
		set_AngleY: function(value) {
			this.SetValue($System_Windows_Media_SkewTransform.AngleYProperty, value, 11);
		},
		get_CenterX: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Media_SkewTransform.CenterXProperty), Number));
		},
		set_CenterX: function(value) {
			this.SetValue($System_Windows_Media_SkewTransform.CenterXProperty, value, 11);
		},
		get_CenterY: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Media_SkewTransform.CenterYProperty), Number));
		},
		set_CenterY: function(value) {
			this.SetValue($System_Windows_Media_SkewTransform.CenterYProperty, value, 11);
		},
		$SetMatrix: function() {
			this.$matrix = $System_Windows_Media_Matrix.SkewMatrix(Math.PI * this.get_AngleX() / 180, Math.PI * this.get_AngleY() / 180, this.get_CenterX(), this.get_CenterY());
		}
	}, $System_Windows_Media_Transform);
	ss.initClass($System_Windows_Media_SolidColorBrush, $asm, {
		get_Color: function() {
			return ss.cast(this.GetValue($System_Windows_Media_SolidColorBrush.ColorProperty), $System_Windows_Media_Color);
		},
		set_Color: function(value) {
			this.SetValue($System_Windows_Media_SolidColorBrush.ColorProperty, value, 11);
		},
		toString: function() {
			return ss.formatString('SolidColorBrush({0})', this.get_Color());
		}
	}, $System_Windows_Media_Brush, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_Media_Animation_IAnimatable]);
	$System_Windows_Media_SolidColorBrush.$ctor1.prototype = $System_Windows_Media_SolidColorBrush.prototype;
	ss.initEnum($System_Windows_Media_Stretch, $asm, { None: 0, Fill: 1, Uniform: 2, UniformToFill: 3 });
	ss.initEnum($System_Windows_Media_StretchDirection, $asm, { UpOnly: 0, DownOnly: 1, Both: 2 });
	ss.initEnum($System_Windows_Media_TileMode, $asm, { None: 0, Tile: 1 });
	ss.initClass($System_Windows_Media_Typeface, $asm, {
		get_FontFamily: function() {
			return this.$1$FontFamilyField;
		},
		set_FontFamily: function(value) {
			this.$1$FontFamilyField = value;
		},
		get_Stretch: function() {
			return this.$1$StretchField;
		},
		set_Stretch: function(value) {
			this.$1$StretchField = value;
		},
		get_Style: function() {
			return this.$1$StyleField;
		},
		set_Style: function(value) {
			this.$1$StyleField = value;
		},
		get_Weight: function() {
			return this.$1$WeightField;
		},
		set_Weight: function(value) {
			this.$1$WeightField = value;
		}
	});
	$System_Windows_Media_Typeface.$ctor1.prototype = $System_Windows_Media_Typeface.prototype;
	ss.initClass($System_Windows_Media_VisualExtensions, $asm, {});
	ss.initClass($System_Windows_Media_VisualWeakReference, $asm, {
		get_Visual: function() {
			return this.$1$VisualField;
		},
		set_Visual: function(value) {
			this.$1$VisualField = value;
		},
		dispose: function() {
			if (ss.isValue(this.get_Visual())) {
				this.get_Visual().remove_VisualAncestorChanged(ss.mkdel(this, this.$OnVisualAncestorChanged));
				this.set_Visual(null);
			}
		},
		$OnVisualAncestorChanged: function(sender, e) {
			if (!$System_Windows_Media_VisualExtensions.IsAncestorOf(this.$ancestor, this.get_Visual())) {
				this.dispose();
			}
		}
	}, null, [ss.IDisposable]);
	ss.initClass($System_Windows_Media_Animation_$ColorAnimationOperations, $asm, {
		get_Zero: function() {
			return $System_Windows_Media_Color.FromUInt32(0);
		},
		Add: function(value1, value2) {
			return $System_Windows_Media_Color.op_Addition(value1, value2);
		},
		Subtract: function(value1, value2) {
			return $System_Windows_Media_Color.op_Subtraction(value1, value2);
		},
		Scale: function(value, factor) {
			return $System_Windows_Media_Color.op_Multiply(factor, value);
		},
		Interpolate: function(value1, value2, progress) {
			return $System_Windows_Media_Color.op_Addition($System_Windows_Media_Color.op_Multiply(1 - progress, value1), $System_Windows_Media_Color.op_Multiply(progress, value2));
		}
	}, null, [ss.makeGenericType($System_Windows_Media_Animation_IAnimationOperations$1, [$System_Windows_Media_Color])]);
	ss.initClass($System_Windows_Media_Animation_$DoubleAnimationOperations, $asm, {
		get_Zero: function() {
			return 0;
		},
		Add: function(value1, value2) {
			return ss.unbox(value1) + ss.unbox(value2);
		},
		Subtract: function(value1, value2) {
			return ss.unbox(value1) - ss.unbox(value2);
		},
		Scale: function(value, factor) {
			return factor * ss.unbox(value);
		},
		Interpolate: function(value1, value2, progress) {
			return ss.Nullable$1.add(ss.Nullable$1.mul(1 - progress, value1), ss.Nullable$1.mul(progress, value2));
		}
	}, null, [ss.makeGenericType($System_Windows_Media_Animation_IAnimationOperations$1, [ss.makeGenericType(ss.Nullable$1, [Number])])]);
	ss.initClass($System_Windows_Media_Animation_$RectAnimationOperations, $asm, {
		get_Zero: function() {
			return $System_Windows_Rect.Zero;
		},
		Add: function(value1, value2) {
			return new $System_Windows_Rect.$ctor2($System_Windows_Point.op_Addition(value1.get_Location(), value2.get_Location()), $System_Windows_Size.op_Addition(value1.get_Size(), value2.get_Size()));
		},
		Subtract: function(value1, value2) {
			return new $System_Windows_Rect.$ctor2($System_Windows_Point.op_Subtraction(value1.get_Location(), value2.get_Location()), $System_Windows_Size.op_Subtraction(value1.get_Size(), value2.get_Size()));
		},
		Scale: function(value, factor) {
			return new $System_Windows_Rect.$ctor2($System_Windows_Point.op_Multiply(factor, value.get_Location()), $System_Windows_Size.op_Multiply(factor, value.get_Size()));
		},
		Interpolate: function(value1, value2, progress) {
			return new $System_Windows_Rect.$ctor2($System_Windows_Point.op_Addition($System_Windows_Point.op_Multiply(1 - progress, value1.get_Location()), $System_Windows_Point.op_Multiply(progress, value2.get_Location())), $System_Windows_Size.op_Addition($System_Windows_Size.op_Multiply(1 - progress, value1.get_Size()), $System_Windows_Size.op_Multiply(progress, value2.get_Size())));
		}
	}, null, [ss.makeGenericType($System_Windows_Media_Animation_IAnimationOperations$1, [$System_Windows_Rect])]);
	ss.initClass($System_Windows_Media_Animation_$ThicknessAnimationOperations, $asm, {
		get_Zero: function() {
			return $System_Windows_Thickness.Zero;
		},
		Add: function(value1, value2) {
			return $System_Windows_Thickness.op_Addition(value1, value2);
		},
		Subtract: function(value1, value2) {
			return $System_Windows_Thickness.op_Subtraction(value1, value2);
		},
		Scale: function(value, factor) {
			return $System_Windows_Thickness.op_Multiply(factor, value);
		},
		Interpolate: function(value1, value2, progress) {
			return $System_Windows_Thickness.op_Addition($System_Windows_Thickness.op_Multiply(1 - progress, value1), $System_Windows_Thickness.op_Multiply(progress, value2));
		}
	}, null, [ss.makeGenericType($System_Windows_Media_Animation_IAnimationOperations$1, [$System_Windows_Thickness])]);
	ss.initClass($System_Windows_Media_Animation_AnimatableExtensions, $asm, {});
	ss.initInterface($System_Windows_Media_Animation_IRootClock, $asm, { get_Time: null, AddClock: null, RemoveClock: null });
	ss.initClass($System_Windows_Media_Animation_AnimatableRootClock, $asm, {
		get_Time: function() {
			return this.$rootClock.get_Time();
		},
		get_IsConnected: function() {
			return this.$isConnected;
		},
		set_IsConnected: function(value) {
			if (this.$isConnected === value) {
				return;
			}
			this.$isConnected = value;
			if (this.$isConnected) {
				for (var $t1 = 0; $t1 < this.$clocks.length; $t1++) {
					var clock = this.$clocks[$t1];
					this.$rootClock.AddClock(clock);
				}
			}
			else {
				for (var $t2 = 0; $t2 < this.$clocks.length; $t2++) {
					var clock1 = this.$clocks[$t2];
					this.$rootClock.RemoveClock(clock1);
				}
				this.$CleanClocks();
			}
		},
		AddClock: function(clock) {
			if (ss.contains(this.$clocks, clock)) {
				return;
			}
			this.$clocks.push(clock);
			if (this.get_IsConnected()) {
				this.$rootClock.AddClock(clock);
			}
		},
		RemoveClock: function(clock) {
			ss.remove(this.$clocks, clock);
			if (this.get_IsConnected()) {
				this.$rootClock.RemoveClock(clock);
			}
		},
		$CleanClocks: function() {
			var time = this.get_Time();
			var i = 0;
			while (i < this.$clocks.length) {
				if (this.$clocks[i].get_LastTick().ticks < time.ticks) {
					ss.removeAt(this.$clocks, i);
				}
				else {
					i++;
				}
			}
		}
	}, null, [$System_Windows_Media_Animation_IRootClock]);
	ss.initInterface($System_Windows_Media_Animation_IClock, $asm, { get_FirstTick: null, get_LastTick: null, get_Duration: null, Tick: null });
	ss.initClass($System_Windows_Media_Animation_AnimationClock, $asm, {
		get_FirstTick: function() {
			return new ss.TimeSpan(0);
		},
		get_LastTick: function() {
			return this.get_Duration();
		},
		get_Duration: function() {
			return this.$1$DurationField;
		},
		set_Duration: function(value) {
			this.$1$DurationField = value;
		},
		Tick: function(time) {
			var previousTick;
			var nextTick;
			var progressState;
			var progress;
			if (time.ticks < (new ss.TimeSpan(0)).ticks) {
				previousTick = Granular.Compatibility.TimeSpan.MinValue;
				nextTick = new ss.TimeSpan(0);
				progress = 0;
				progressState = 0;
			}
			else if (time.ticks < this.get_Duration().ticks) {
				previousTick = time;
				nextTick = time;
				progress = Granular.Extensions.TimeSpanExtensions.Divide(time, this.get_Duration());
				progressState = 1;
			}
			else {
				previousTick = this.get_Duration();
				nextTick = Granular.Compatibility.TimeSpan.MaxValue;
				progress = 1;
				progressState = 2;
			}
			return new $System_Windows_Media_Animation_ClockState(progressState, progress, 0, previousTick, nextTick);
		}
	}, null, [$System_Windows_Media_Animation_IClock]);
	ss.initClass($System_Windows_Media_Animation_AnimationExpression, $asm, {
		add_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateCombine(this.$1$ValueChangedField, value);
		},
		remove_ValueChanged: function(value) {
			this.$1$ValueChangedField = ss.delegateRemove(this.$1$ValueChangedField, value);
		},
		get_Value: function() {
			return this.$observableValue.get_Value();
		},
		SetValue: function(value) {
			return false;
		},
		SetClocks: function(clocks, layerOwner) {
			this.$layers.SetClocks(clocks, this.$GetAnimationBaseValue(), $System_Windows_Media_Animation_AnimationLayerKey.FromLayerOwner(layerOwner));
		},
		AddClocks: function(clocks, layerOwner) {
			this.$layers.AddClocks(clocks, $System_Windows_Media_Animation_AnimationLayerKey.FromLayerOwner(layerOwner));
		},
		RemoveClocks: function(clocks, layerOwner) {
			this.$layers.RemoveClocks(clocks, $System_Windows_Media_Animation_AnimationLayerKey.FromLayerOwner(layerOwner));
		},
		$SetAnimationValue: function() {
			this.$observableValue.set_Value((this.$layers.get_HasValue() ? this.$layers.GetValue(this.$GetAnimationBaseValue()) : $System_Windows_Data_ObservableValue.UnsetValue));
		},
		$GetAnimationBaseValue: function() {
			if (ss.isNullOrUndefined(this.$dependencyObject)) {
				return $System_Windows_Data_ObservableValue.UnsetValue;
			}
			var entry = this.$dependencyObject.GetValueEntry(this.$dependencyProperty);
			return entry.GetBaseValue(true);
		},
		$OnLayerInvalidated: function(sender, e) {
			this.$SetAnimationValue();
		}
	}, null, [$System_Windows_Data_IObservableValue, $System_Windows_IExpression]);
	ss.initClass($System_Windows_Media_Animation_AnimationLayer, $asm, {
		add_ClockInvalidated: function(value) {
			this.$1$ClockInvalidatedField = ss.delegateCombine(this.$1$ClockInvalidatedField, value);
		},
		remove_ClockInvalidated: function(value) {
			this.$1$ClockInvalidatedField = ss.delegateRemove(this.$1$ClockInvalidatedField, value);
		},
		get_HasValue: function() {
			return Enumerable.from(this.$clocks).any(function(clock) {
				return clock.get_CurrentState().get_ProgressState() === 1 || clock.get_IsFilling();
			});
		},
		get_IsEmpty: function() {
			return !Enumerable.from(this.$clocks).any();
		},
		GetValue: function(defaultDestinationValue) {
			var defaultOriginValue = (ss.referenceEquals(this.$snapshotValue, $System_Windows_Media_Animation_AnimationLayer.$UnsetValue) ? defaultDestinationValue : this.$snapshotValue);
			var $t1 = ss.getEnumerator(this.$clocks);
			try {
				while ($t1.moveNext()) {
					var clock = $t1.current();
					if (clock.get_CurrentState().get_ProgressState() === 1 || clock.get_IsFilling()) {
						defaultOriginValue = clock.GetValue(defaultOriginValue, defaultDestinationValue);
					}
				}
			}
			finally {
				$t1.dispose();
			}
			return defaultOriginValue;
		},
		SetClocks: function(newClocks, defaultDestinationValue) {
			this.$DetachClocks(this.$clocks);
			this.$snapshotValue = (Enumerable.from(newClocks).any() ? this.GetValue(defaultDestinationValue) : $System_Windows_Media_Animation_AnimationLayer.$UnsetValue);
			this.$clocks = Enumerable.from(newClocks).toArray();
			this.$AttachClocks(this.$clocks);
		},
		AddClocks: function(newClocks) {
			if (Enumerable.from(newClocks).except(this.$clocks).count() !== Enumerable.from(newClocks).count()) {
				throw new Granular.Exception("Can't add clocks that already exist on the animation layer", []);
			}
			this.$AttachClocks(newClocks);
			this.$clocks = Enumerable.from(this.$clocks).concat(newClocks).toArray();
		},
		RemoveClocks: function(oldClocks) {
			if (Enumerable.from(oldClocks).except(this.$clocks).count() !== 0) {
				throw new Granular.Exception("Can't remove clocks that don't exist on the animation layer", []);
			}
			this.$DetachClocks(oldClocks);
			this.$clocks = Enumerable.from(this.$clocks).except(oldClocks).toArray();
		},
		$AttachClocks: function(newClocks) {
			var $t1 = ss.getEnumerator(newClocks);
			try {
				while ($t1.moveNext()) {
					var clock = $t1.current();
					clock.add_Invalidated(ss.mkdel(this, this.$OnClockInvalidated));
				}
			}
			finally {
				$t1.dispose();
			}
		},
		$DetachClocks: function(oldClocks) {
			var $t1 = ss.getEnumerator(oldClocks);
			try {
				while ($t1.moveNext()) {
					var clock = $t1.current();
					clock.remove_Invalidated(ss.mkdel(this, this.$OnClockInvalidated));
				}
			}
			finally {
				$t1.dispose();
			}
		},
		$OnClockInvalidated: function(sender, e) {
			Granular.Extensions.EventHandlerExtensions.Raise(this.$1$ClockInvalidatedField, this);
		},
		dispose: function() {
			this.$DetachClocks(this.$clocks);
		}
	}, null, [ss.IDisposable]);
	ss.initClass($System_Windows_Media_Animation_AnimationLayerCollection, $asm, {
		add_LayerInvalidated: function(value) {
			this.$1$LayerInvalidatedField = ss.delegateCombine(this.$1$LayerInvalidatedField, value);
		},
		remove_LayerInvalidated: function(value) {
			this.$1$LayerInvalidatedField = ss.delegateRemove(this.$1$LayerInvalidatedField, value);
		},
		get_HasValue: function() {
			return this.$defaultLayer.get_HasValue() || Enumerable.from(this.$layers.get_values()).any(function(layer) {
				return layer.get_HasValue();
			});
		},
		GetValue: function(defaultDestinationValue) {
			var $t1 = ss.getEnumerator(this.$layers.get_values());
			try {
				while ($t1.moveNext()) {
					var layer = $t1.current();
					defaultDestinationValue = layer.GetValue(defaultDestinationValue);
				}
			}
			finally {
				$t1.dispose();
			}
			return this.$defaultLayer.GetValue(defaultDestinationValue);
		},
		SetClocks: function(newClocks, defaultDestinationValue, key) {
			if (Enumerable.from(newClocks).any() || ss.referenceEquals(key, $System_Windows_Media_Animation_AnimationLayerKey.Default)) {
				this.$GetAnimationLayer(key).SetClocks(newClocks, defaultDestinationValue);
			}
			else {
				this.$RemoveAnimationLayer(key);
			}
			Granular.Extensions.EventHandlerExtensions.Raise(this.$1$LayerInvalidatedField, this);
		},
		AddClocks: function(newClocks, key) {
			this.$GetAnimationLayer(key).AddClocks(newClocks);
			Granular.Extensions.EventHandlerExtensions.Raise(this.$1$LayerInvalidatedField, this);
		},
		RemoveClocks: function(newClocks, key) {
			var animationLayer = this.$GetAnimationLayer(key);
			animationLayer.RemoveClocks(newClocks);
			if (!ss.referenceEquals(key, $System_Windows_Media_Animation_AnimationLayerKey.Default) && animationLayer.get_IsEmpty()) {
				this.$RemoveAnimationLayer(key);
			}
			Granular.Extensions.EventHandlerExtensions.Raise(this.$1$LayerInvalidatedField, this);
		},
		$GetAnimationLayer: function(key) {
			if (ss.referenceEquals(key, $System_Windows_Media_Animation_AnimationLayerKey.Default)) {
				return this.$defaultLayer;
			}
			var layer = {};
			if (!this.$layers.tryGetValue(key, layer)) {
				layer.$ = new $System_Windows_Media_Animation_AnimationLayer();
				layer.$.add_ClockInvalidated(ss.mkdel(this, this.$OnAnimationLayerClockInvalidated));
				this.$layers.add(key, layer.$);
			}
			return layer.$;
		},
		$RemoveAnimationLayer: function(key) {
			var layer = {};
			if (ss.referenceEquals(key, $System_Windows_Media_Animation_AnimationLayerKey.Default)) {
				throw new Granular.Exception("Can't remove default animation layer", []);
			}
			if (this.$layers.tryGetValue(key, layer)) {
				layer.$.remove_ClockInvalidated(ss.mkdel(this, this.$OnAnimationLayerClockInvalidated));
				layer.$.dispose();
				this.$layers.remove(key);
			}
		},
		$OnAnimationLayerClockInvalidated: function(sender, e) {
			Granular.Extensions.EventHandlerExtensions.Raise(this.$1$LayerInvalidatedField, this);
		}
	});
	ss.initClass($System_Windows_Media_Animation_AnimationLayerKey, $asm, {
		equals: function(obj) {
			var other = ss.safeCast(obj, $System_Windows_Media_Animation_AnimationLayerKey);
			return ss.referenceEquals(this, other) || !ss.referenceEquals(other, null) && ss.staticEquals(this.$layerOwner, other.$layerOwner);
		},
		getHashCode: function() {
			return (ss.isNullOrUndefined(this.$layerOwner) ? 0 : ss.getHashCode(this.$layerOwner));
		}
	});
	ss.initClass($System_Windows_Media_Animation_Timeline, $asm, {
		get_BeginTime: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Media_Animation_Timeline.BeginTimeProperty), ss.TimeSpan));
		},
		set_BeginTime: function(value) {
			this.SetValue($System_Windows_Media_Animation_Timeline.BeginTimeProperty, value, 11);
		},
		get_Duration: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_Timeline.DurationProperty), $System_Windows_Duration);
		},
		set_Duration: function(value) {
			this.SetValue($System_Windows_Media_Animation_Timeline.DurationProperty, value, 11);
		},
		get_FillBehavior: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_Timeline.FillBehaviorProperty), ss.Int32);
		},
		set_FillBehavior: function(value) {
			this.SetValue($System_Windows_Media_Animation_Timeline.FillBehaviorProperty, value, 11);
		},
		get_RepeatBehavior: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_Timeline.RepeatBehaviorProperty), $System_Windows_Media_Animation_RepeatBehavior);
		},
		set_RepeatBehavior: function(value) {
			this.SetValue($System_Windows_Media_Animation_Timeline.RepeatBehaviorProperty, value, 11);
		},
		get_AutoReverse: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Media_Animation_Timeline.AutoReverseProperty), Boolean));
		},
		set_AutoReverse: function(value) {
			this.SetValue($System_Windows_Media_Animation_Timeline.AutoReverseProperty, value, 11);
		},
		get_Parent: function() {
			return this.$parent;
		},
		set_Parent: function(value) {
			if (ss.referenceEquals(this.$parent, value)) {
				return;
			}
			this.$parent = value;
			this.SetInheritanceParent(value);
		},
		CreateClock: null
	}, $System_Windows_Freezable, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_AnimationTimeline, $asm, {
		get_IsAdditive: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Media_Animation_AnimationTimeline.IsAdditiveProperty), Boolean));
		},
		set_IsAdditive: function(value) {
			this.SetValue($System_Windows_Media_Animation_AnimationTimeline.IsAdditiveProperty, value, 11);
		},
		get_IsCumulative: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Media_Animation_AnimationTimeline.IsCumulativeProperty), Boolean));
		},
		set_IsCumulative: function(value) {
			this.SetValue($System_Windows_Media_Animation_AnimationTimeline.IsCumulativeProperty, value, 11);
		},
		GetCurrentValue: null,
		CreateClock: function() {
			return new $System_Windows_Media_Animation_AnimationTimelineClock(this);
		}
	}, $System_Windows_Media_Animation_Timeline, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_TimelineClock, $asm, {
		add_Invalidated: function(value) {
			this.$1$InvalidatedField = ss.delegateCombine(this.$1$InvalidatedField, value);
		},
		remove_Invalidated: function(value) {
			this.$1$InvalidatedField = ss.delegateRemove(this.$1$InvalidatedField, value);
		},
		get_Timeline: function() {
			return this.$1$TimelineField;
		},
		set_Timeline: function(value) {
			this.$1$TimelineField = value;
		},
		get_FirstTick: function() {
			return new ss.TimeSpan(this.$beginTime.ticks + this.$clock.get_FirstTick().ticks);
		},
		get_LastTick: function() {
			return ((this.$clock.get_LastTick().ticks === Granular.Compatibility.TimeSpan.MaxValue.ticks) ? Granular.Compatibility.TimeSpan.MaxValue : new ss.TimeSpan(this.$beginTime.ticks + this.$clock.get_LastTick().ticks));
		},
		get_Duration: function() {
			return this.$clock.get_Duration();
		},
		get_CurrentState: function() {
			return this.$1$CurrentStateField;
		},
		set_CurrentState: function(value) {
			this.$1$CurrentStateField = value;
		},
		get_IsFilling: function() {
			return this.get_CurrentState().get_ProgressState() === 2 && this.$currentFillBehavior === 0;
		},
		Tick: function(time) {
			var state = this.$clock.Tick(new ss.TimeSpan(time.ticks - this.$beginTime.ticks));
			var previousTick = ((state.get_PreviousTick().ticks === Granular.Compatibility.TimeSpan.MinValue.ticks) ? Granular.Compatibility.TimeSpan.MinValue : new ss.TimeSpan(this.$beginTime.ticks + state.get_PreviousTick().ticks));
			var nextTick = ((state.get_NextTick().ticks === Granular.Compatibility.TimeSpan.MaxValue.ticks) ? Granular.Compatibility.TimeSpan.MaxValue : new ss.TimeSpan(this.$beginTime.ticks + state.get_NextTick().ticks));
			this.set_CurrentState(new $System_Windows_Media_Animation_ClockState(state.get_ProgressState(), state.get_Progress(), state.get_Iteration(), previousTick, nextTick));
			Granular.Extensions.EventHandlerExtensions.Raise(this.$1$InvalidatedField, this);
			return this.get_CurrentState();
		},
		Begin: function(rootClock) {
			this.$rootClock = rootClock;
			this.$VerifyRootClock();
			this.$beginTime = rootClock.get_Time();
			this.$currentFillBehavior = this.get_Timeline().get_FillBehavior();
			rootClock.AddClock(this);
			this.Tick(rootClock.get_Time());
		},
		Pause: function() {
			this.$VerifyRootClock();
			this.$pauseOffset = new ss.TimeSpan(this.$rootClock.get_Time().ticks - this.$beginTime.ticks);
			this.$rootClock.RemoveClock(this);
			this.Tick(this.$rootClock.get_Time());
		},
		Remove: function() {
			this.$VerifyRootClock();
			this.$rootClock.RemoveClock(this);
		},
		Resume: function() {
			this.$VerifyRootClock();
			this.$beginTime = new ss.TimeSpan(this.$rootClock.get_Time().ticks - this.$pauseOffset.ticks);
			this.$rootClock.AddClock(this);
			this.Tick(this.$rootClock.get_Time());
		},
		Seek: function(time) {
			this.$VerifyRootClock();
			this.$beginTime = new ss.TimeSpan(this.$rootClock.get_Time().ticks - time.ticks);
			this.Tick(this.$rootClock.get_Time());
		},
		SeekOffset: function(offset) {
			this.$VerifyRootClock();
			this.$beginTime = new ss.TimeSpan(this.$beginTime.ticks + offset.ticks);
			this.Tick(this.$rootClock.get_Time());
		},
		SkipToFill: function() {
			this.$VerifyRootClock();
			this.$beginTime = new ss.TimeSpan(this.$rootClock.get_Time().ticks - this.$clock.get_Duration().ticks);
			this.$currentFillBehavior = 0;
			this.Tick(this.$rootClock.get_Time());
		},
		Stop: function() {
			this.$VerifyRootClock();
			this.$beginTime = ((this.$clock.get_Duration().ticks === Granular.Compatibility.TimeSpan.MaxValue.ticks) ? new ss.TimeSpan(0) : new ss.TimeSpan(this.$rootClock.get_Time().ticks - this.$clock.get_Duration().ticks));
			this.$currentFillBehavior = 1;
			this.$rootClock.RemoveClock(this);
			this.Tick(this.$rootClock.get_Time());
		},
		$VerifyRootClock: function() {
			if (ss.isNullOrUndefined(this.$rootClock)) {
				throw new Granular.Exception('RootClock was not provided', []);
			}
		}
	}, null, [$System_Windows_Media_Animation_IClock]);
	ss.initClass($System_Windows_Media_Animation_AnimationTimelineClock, $asm, {
		GetValue: function(defaultOriginValue, defaultDestinationValue) {
			return this.$timeline.GetCurrentValue(defaultOriginValue, defaultDestinationValue, this);
		}
	}, $System_Windows_Media_Animation_TimelineClock, [$System_Windows_Media_Animation_IClock]);
	ss.initInterface($System_Windows_Media_Animation_IEasingFunction, $asm, { Ease: null });
	ss.initClass($System_Windows_Media_Animation_EasingFunctionBase, $asm, {
		get_EasingMode: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_EasingFunctionBase.EasingModeProperty), ss.Int32);
		},
		set_EasingMode: function(value) {
			this.SetValue($System_Windows_Media_Animation_EasingFunctionBase.EasingModeProperty, value, 11);
		},
		Ease: function(normalizedTime) {
			switch (this.get_EasingMode()) {
				case 0: {
					return this.EaseOverride(normalizedTime);
				}
				case 1: {
					return 1 - this.EaseOverride(1 - normalizedTime);
				}
				case 2: {
					return ((normalizedTime < 0.5) ? (this.EaseOverride(normalizedTime * 2) / 2) : ((2 - this.EaseOverride((1 - normalizedTime) * 2)) / 2));
				}
			}
			throw new Granular.Exception('Unexpected EasingMode "{0}"', [this.get_EasingMode()]);
		},
		EaseOverride: null
	}, $System_Windows_Freezable, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_Media_Animation_IEasingFunction]);
	ss.initClass($System_Windows_Media_Animation_BackEase, $asm, {
		get_Amplitude: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Media_Animation_BackEase.AmplitudeProperty), Number));
		},
		set_Amplitude: function(value) {
			this.SetValue($System_Windows_Media_Animation_BackEase.AmplitudeProperty, value, 11);
		},
		EaseOverride: function(normalizedTime) {
			return Math.pow(normalizedTime, 3) - normalizedTime * Granular.Extensions.DoubleExtensions.Max(this.get_Amplitude(), 0) * Math.sin(Math.PI * normalizedTime);
		}
	}, $System_Windows_Media_Animation_EasingFunctionBase, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_Media_Animation_IEasingFunction]);
	ss.initClass($System_Windows_Media_Animation_BeginStoryboard, $asm, {
		get_Storyboard: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_BeginStoryboard.StoryboardProperty), $System_Windows_Media_Animation_Storyboard);
		},
		set_Storyboard: function(value) {
			this.SetValue($System_Windows_Media_Animation_BeginStoryboard.StoryboardProperty, value, 11);
		},
		get_HandoffBehavior: function() {
			return this.$3$HandoffBehaviorField;
		},
		set_HandoffBehavior: function(value) {
			this.$3$HandoffBehaviorField = value;
		},
		get_Name: function() {
			return this.$3$NameField;
		},
		set_Name: function(value) {
			this.$3$NameField = value;
		},
		Apply: function(target, valueSource) {
			var nameScope = ((valueSource === 11) ? $System_Windows_Markup_NameScope.GetContainingNameScope(target) : $System_Windows_Markup_NameScope.GetTemplateNameScope(target));
			var layerOwner = ((valueSource === 11) ? null : target.get_TemplatedParent());
			this.$Begin(target, nameScope, layerOwner);
		},
		Clean: function(target, valueSource) {
			//
		},
		IsActionOverlaps: function(action) {
			return false;
		},
		$Begin: function(target, nameScope, layerOwner) {
			if (ss.isValue(this.get_Storyboard())) {
				this.get_Storyboard().Begin(target, nameScope, this.get_HandoffBehavior(), layerOwner);
			}
		},
		Remove: function(target, nameScope, layerOwner) {
			if (ss.isValue(this.get_Storyboard())) {
				this.get_Storyboard().Remove(target, nameScope, layerOwner);
			}
		},
		Stop: function(target) {
			if (ss.isValue(this.get_Storyboard())) {
				this.get_Storyboard().Stop(target);
			}
		},
		Pause: function(target) {
			if (ss.isValue(this.get_Storyboard())) {
				this.get_Storyboard().Pause(target);
			}
		},
		Resume: function(target) {
			if (ss.isValue(this.get_Storyboard())) {
				this.get_Storyboard().Pause(target);
			}
		},
		SkipToFill: function(target) {
			if (ss.isValue(this.get_Storyboard())) {
				this.get_Storyboard().SkipToFill(target);
			}
		}
	}, $System_Windows_Freezable, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_ITriggerAction]);
	ss.initClass($System_Windows_Media_Animation_CircleEase, $asm, {
		EaseOverride: function(normalizedTime) {
			normalizedTime = Granular.Extensions.DoubleExtensions.Bounds(normalizedTime, 0, 1);
			return 1 - Math.sqrt(1 - normalizedTime * normalizedTime);
		}
	}, $System_Windows_Media_Animation_EasingFunctionBase, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_Media_Animation_IEasingFunction]);
	ss.initEnum($System_Windows_Media_Animation_ClockProgressState, $asm, { BeforeStarted: 0, Active: 1, AfterEnded: 2 });
	ss.initClass($System_Windows_Media_Animation_ClockState, $asm, {
		get_ProgressState: function() {
			return this.$1$ProgressStateField;
		},
		set_ProgressState: function(value) {
			this.$1$ProgressStateField = value;
		},
		get_Progress: function() {
			return this.$1$ProgressField;
		},
		set_Progress: function(value) {
			this.$1$ProgressField = value;
		},
		get_Iteration: function() {
			return this.$1$IterationField;
		},
		set_Iteration: function(value) {
			this.$1$IterationField = value;
		},
		get_PreviousTick: function() {
			return this.$1$PreviousTickField;
		},
		set_PreviousTick: function(value) {
			this.$1$PreviousTickField = value;
		},
		get_NextTick: function() {
			return this.$1$NextTickField;
		},
		set_NextTick: function(value) {
			this.$1$NextTickField = value;
		}
	});
	ss.initClass($System_Windows_Media_Animation_ColorAnimation, $asm, {
		get_To: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_ColorAnimation.ToProperty), $System_Windows_Media_Color);
		},
		set_To: function(value) {
			this.SetValue($System_Windows_Media_Animation_ColorAnimation.ToProperty, value, 11);
		},
		get_From: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_ColorAnimation.FromProperty), $System_Windows_Media_Color);
		},
		set_From: function(value) {
			this.SetValue($System_Windows_Media_Animation_ColorAnimation.FromProperty, value, 11);
		},
		get_By: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_ColorAnimation.ByProperty), $System_Windows_Media_Color);
		},
		set_By: function(value) {
			this.SetValue($System_Windows_Media_Animation_ColorAnimation.ByProperty, value, 11);
		},
		get_EasingFunction: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_ColorAnimation.EasingFunctionProperty), $System_Windows_Media_Animation_IEasingFunction);
		},
		set_EasingFunction: function(value) {
			this.SetValue($System_Windows_Media_Animation_ColorAnimation.EasingFunctionProperty, value, 11);
		},
		GetCurrentValue: function(defaultOriginValue, defaultDestinationValue, animationClock) {
			var progress = (ss.isValue(this.get_EasingFunction()) ? this.get_EasingFunction().Ease(animationClock.get_CurrentState().get_Progress()) : animationClock.get_CurrentState().get_Progress());
			var baseValue = this.$animationOperations.get_Zero();
			var from;
			var to;
			if ($System_Windows_Media_Color.op_Inequality(this.get_From(), null)) {
				if ($System_Windows_Media_Color.op_Inequality(this.get_To(), null)) {
					if (this.get_IsAdditive() && this.$isAccumulable) {
						baseValue = ss.cast(defaultOriginValue, $System_Windows_Media_Color);
					}
					from = this.get_From();
					to = this.get_To();
				}
				else if ($System_Windows_Media_Color.op_Inequality(this.get_By(), null)) {
					if (this.get_IsAdditive() && this.$isAccumulable) {
						baseValue = ss.cast(defaultOriginValue, $System_Windows_Media_Color);
					}
					from = this.get_From();
					to = this.$animationOperations.Add(this.get_From(), this.get_By());
				}
				else {
					from = this.get_From();
					to = ss.cast(defaultDestinationValue, $System_Windows_Media_Color);
				}
			}
			else if ($System_Windows_Media_Color.op_Inequality(this.get_To(), null)) {
				from = ss.cast(defaultOriginValue, $System_Windows_Media_Color);
				to = this.get_To();
			}
			else if ($System_Windows_Media_Color.op_Inequality(this.get_By(), null)) {
				if (this.$isAccumulable) {
					baseValue = ss.cast(defaultOriginValue, $System_Windows_Media_Color);
				}
				from = this.$animationOperations.get_Zero();
				to = this.get_By();
			}
			else {
				from = ss.cast(defaultOriginValue, $System_Windows_Media_Color);
				to = ss.cast(defaultDestinationValue, $System_Windows_Media_Color);
			}
			if (this.get_IsCumulative() && this.$isAccumulable) {
				baseValue = this.$animationOperations.Add(baseValue, this.$animationOperations.Scale(this.$animationOperations.Subtract(to, from), Math.floor(animationClock.get_CurrentState().get_Iteration())));
			}
			return this.$animationOperations.Add(baseValue, this.$animationOperations.Interpolate(from, to, progress));
		}
	}, $System_Windows_Media_Animation_AnimationTimeline, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_ColorAnimationUsingKeyFrames, $asm, {
		get_KeyFrames: function() {
			return this.$5$KeyFramesField;
		},
		set_KeyFrames: function(value) {
			this.$5$KeyFramesField = value;
		},
		GetCurrentValue: function(defaultOriginValue, defaultDestinationValue, animationClock) {
			if (this.get_KeyFrames().get_count() === 0) {
				return defaultDestinationValue;
			}
			var duration = (this.get_Duration().get_HasTimeSpan() ? this.get_Duration().get_TimeSpan() : this.$GetKeyFramesDuration());
			var time = Granular.Extensions.TimeSpanExtensions.Scale(duration, animationClock.get_CurrentState().get_Progress());
			var index = this.$GetKeyFrameIndexAtTime(time, duration);
			var value;
			if (index === this.get_KeyFrames().get_count()) {
				value = this.get_KeyFrames().get_item(this.get_KeyFrames().get_count() - 1).get_Value();
			}
			else {
				var baseValue;
				if (index === 0) {
					baseValue = ((this.get_IsAdditive() && this.$isAccumulable) ? this.$animationOperations.get_Zero() : ss.cast(defaultOriginValue, $System_Windows_Media_Color));
				}
				else {
					baseValue = this.get_KeyFrames().get_item(index - 1).get_Value();
				}
				var segmentStart = ((index === 0) ? new ss.TimeSpan(0) : this.$GetKeyFrameTime(this.get_KeyFrames().get_item(index - 1), duration));
				var segmentEnd = this.$GetKeyFrameTime(this.get_KeyFrames().get_item(index), duration);
				var progress = ((segmentEnd.ticks === segmentStart.ticks) ? 1 : ((new ss.TimeSpan(time.ticks - segmentStart.ticks)).ticks / (new ss.TimeSpan(segmentEnd.ticks - segmentStart.ticks)).ticks));
				value = this.get_KeyFrames().get_item(index).InterpolateValue(baseValue, progress);
			}
			if (this.get_IsAdditive() && this.$isAccumulable) {
				value = this.$animationOperations.Add(value, ss.cast(defaultOriginValue, $System_Windows_Media_Color));
			}
			if (this.get_IsCumulative() && this.$isAccumulable) {
				value = this.$animationOperations.Add(value, this.$animationOperations.Scale(this.get_KeyFrames().get_item(this.get_KeyFrames().get_count() - 1).get_Value(), Math.floor(animationClock.get_CurrentState().get_Iteration())));
			}
			return value;
		},
		$GetKeyFrameTime: function(keyFrame, keyFramesDuration) {
			if (keyFrame.get_KeyTime().get_HasTimeSpan()) {
				return keyFrame.get_KeyTime().get_TimeSpan();
			}
			if (keyFrame.get_KeyTime().get_HasPercent()) {
				return Granular.Extensions.TimeSpanExtensions.Scale(keyFramesDuration, keyFrame.get_KeyTime().get_Percent());
			}
			throw new Granular.Exception('KeyTime of type "{0}" is not supported', [keyFrame.get_KeyTime().get_Type()]);
		},
		$GetKeyFrameIndexAtTime: function(time, keyFramesDuration) {
			return this.get_KeyFrames().indexOf(Enumerable.from(this.get_KeyFrames()).lastOrDefault(ss.mkdel(this, function(keyFrame) {
				return this.$GetKeyFrameTime(keyFrame, keyFramesDuration).ticks < time.ticks;
			}), ss.getDefaultValue($System_Windows_Media_Animation_ColorKeyFrame))) + 1;
		},
		$GetKeyFramesDuration: function() {
			return System.Linq.EnumerableExtensions.Max(ss.TimeSpan).call(null, Enumerable.from(this.get_KeyFrames()).where(function(keyFrame) {
				return keyFrame.get_KeyTime().get_HasTimeSpan();
			}).select(function(keyFrame1) {
				return keyFrame1.get_KeyTime().get_TimeSpan();
			}).defaultIfEmpty(new ss.TimeSpan(1 * 10000000)));
		}
	}, $System_Windows_Media_Animation_AnimationTimeline, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_ColorKeyFrame, $asm, {
		get_Value: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_ColorKeyFrame.ValueProperty), $System_Windows_Media_Color);
		},
		set_Value: function(value) {
			this.SetValue($System_Windows_Media_Animation_ColorKeyFrame.ValueProperty, value, 11);
		},
		get_KeyTime: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_ColorKeyFrame.KeyTimeProperty), $System_Windows_Media_Animation_KeyTime);
		},
		set_KeyTime: function(value) {
			this.SetValue($System_Windows_Media_Animation_ColorKeyFrame.KeyTimeProperty, value, 11);
		},
		InterpolateValue: null
	}, $System_Windows_Freezable, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_CubicEase, $asm, {
		EaseOverride: function(normalizedTime) {
			return normalizedTime * normalizedTime * normalizedTime;
		}
	}, $System_Windows_Media_Animation_EasingFunctionBase, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_Media_Animation_IEasingFunction]);
	ss.initClass($System_Windows_Media_Animation_DiscreteColorKeyFrame, $asm, {
		InterpolateValue: function(baseValue, keyFrameProgress) {
			return ((keyFrameProgress < 1) ? baseValue : this.get_Value());
		}
	}, $System_Windows_Media_Animation_ColorKeyFrame, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_DoubleKeyFrame, $asm, {
		get_Value: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_DoubleKeyFrame.ValueProperty), Number);
		},
		set_Value: function(value) {
			this.SetValue($System_Windows_Media_Animation_DoubleKeyFrame.ValueProperty, value, 11);
		},
		get_KeyTime: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_DoubleKeyFrame.KeyTimeProperty), $System_Windows_Media_Animation_KeyTime);
		},
		set_KeyTime: function(value) {
			this.SetValue($System_Windows_Media_Animation_DoubleKeyFrame.KeyTimeProperty, value, 11);
		},
		InterpolateValue: null
	}, $System_Windows_Freezable, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_DiscreteDoubleKeyFrame, $asm, {
		InterpolateValue: function(baseValue, keyFrameProgress) {
			return ((keyFrameProgress < 1) ? baseValue : this.get_Value());
		}
	}, $System_Windows_Media_Animation_DoubleKeyFrame, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_RectKeyFrame, $asm, {
		get_Value: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_RectKeyFrame.ValueProperty), $System_Windows_Rect);
		},
		set_Value: function(value) {
			this.SetValue($System_Windows_Media_Animation_RectKeyFrame.ValueProperty, value, 11);
		},
		get_KeyTime: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_RectKeyFrame.KeyTimeProperty), $System_Windows_Media_Animation_KeyTime);
		},
		set_KeyTime: function(value) {
			this.SetValue($System_Windows_Media_Animation_RectKeyFrame.KeyTimeProperty, value, 11);
		},
		InterpolateValue: null
	}, $System_Windows_Freezable, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_DiscreteRectKeyFrame, $asm, {
		InterpolateValue: function(baseValue, keyFrameProgress) {
			return ((keyFrameProgress < 1) ? baseValue : this.get_Value());
		}
	}, $System_Windows_Media_Animation_RectKeyFrame, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_ThicknessKeyFrame, $asm, {
		get_Value: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_ThicknessKeyFrame.ValueProperty), $System_Windows_Thickness);
		},
		set_Value: function(value) {
			this.SetValue($System_Windows_Media_Animation_ThicknessKeyFrame.ValueProperty, value, 11);
		},
		get_KeyTime: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_ThicknessKeyFrame.KeyTimeProperty), $System_Windows_Media_Animation_KeyTime);
		},
		set_KeyTime: function(value) {
			this.SetValue($System_Windows_Media_Animation_ThicknessKeyFrame.KeyTimeProperty, value, 11);
		},
		InterpolateValue: null
	}, $System_Windows_Freezable, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_DiscreteThicknessKeyFrame, $asm, {
		InterpolateValue: function(baseValue, keyFrameProgress) {
			return ((keyFrameProgress < 1) ? baseValue : this.get_Value());
		}
	}, $System_Windows_Media_Animation_ThicknessKeyFrame, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_DoubleAnimation, $asm, {
		get_To: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_DoubleAnimation.ToProperty), Number);
		},
		set_To: function(value) {
			this.SetValue($System_Windows_Media_Animation_DoubleAnimation.ToProperty, value, 11);
		},
		get_From: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_DoubleAnimation.FromProperty), Number);
		},
		set_From: function(value) {
			this.SetValue($System_Windows_Media_Animation_DoubleAnimation.FromProperty, value, 11);
		},
		get_By: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_DoubleAnimation.ByProperty), Number);
		},
		set_By: function(value) {
			this.SetValue($System_Windows_Media_Animation_DoubleAnimation.ByProperty, value, 11);
		},
		get_EasingFunction: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_DoubleAnimation.EasingFunctionProperty), $System_Windows_Media_Animation_IEasingFunction);
		},
		set_EasingFunction: function(value) {
			this.SetValue($System_Windows_Media_Animation_DoubleAnimation.EasingFunctionProperty, value, 11);
		},
		GetCurrentValue: function(defaultOriginValue, defaultDestinationValue, animationClock) {
			var progress = (ss.isValue(this.get_EasingFunction()) ? this.get_EasingFunction().Ease(animationClock.get_CurrentState().get_Progress()) : animationClock.get_CurrentState().get_Progress());
			var baseValue = this.$animationOperations.get_Zero();
			var from;
			var to;
			if (ss.isValue(this.get_From())) {
				if (ss.isValue(this.get_To())) {
					if (this.get_IsAdditive() && this.$isAccumulable) {
						baseValue = ss.cast(defaultOriginValue, Number);
					}
					from = this.get_From();
					to = this.get_To();
				}
				else if (ss.isValue(this.get_By())) {
					if (this.get_IsAdditive() && this.$isAccumulable) {
						baseValue = ss.cast(defaultOriginValue, Number);
					}
					from = this.get_From();
					to = this.$animationOperations.Add(this.get_From(), this.get_By());
				}
				else {
					from = this.get_From();
					to = ss.cast(defaultDestinationValue, Number);
				}
			}
			else if (ss.isValue(this.get_To())) {
				from = ss.cast(defaultOriginValue, Number);
				to = this.get_To();
			}
			else if (ss.isValue(this.get_By())) {
				if (this.$isAccumulable) {
					baseValue = ss.cast(defaultOriginValue, Number);
				}
				from = this.$animationOperations.get_Zero();
				to = this.get_By();
			}
			else {
				from = ss.cast(defaultOriginValue, Number);
				to = ss.cast(defaultDestinationValue, Number);
			}
			if (this.get_IsCumulative() && this.$isAccumulable) {
				baseValue = this.$animationOperations.Add(baseValue, this.$animationOperations.Scale(this.$animationOperations.Subtract(to, from), Math.floor(animationClock.get_CurrentState().get_Iteration())));
			}
			return this.$animationOperations.Add(baseValue, this.$animationOperations.Interpolate(from, to, progress));
		}
	}, $System_Windows_Media_Animation_AnimationTimeline, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_DoubleAnimationUsingKeyFrames, $asm, {
		get_KeyFrames: function() {
			return this.$5$KeyFramesField;
		},
		set_KeyFrames: function(value) {
			this.$5$KeyFramesField = value;
		},
		GetCurrentValue: function(defaultOriginValue, defaultDestinationValue, animationClock) {
			if (this.get_KeyFrames().get_count() === 0) {
				return defaultDestinationValue;
			}
			var duration = (this.get_Duration().get_HasTimeSpan() ? this.get_Duration().get_TimeSpan() : this.$GetKeyFramesDuration());
			var time = Granular.Extensions.TimeSpanExtensions.Scale(duration, animationClock.get_CurrentState().get_Progress());
			var index = this.$GetKeyFrameIndexAtTime(time, duration);
			var value;
			if (index === this.get_KeyFrames().get_count()) {
				value = this.get_KeyFrames().get_item(this.get_KeyFrames().get_count() - 1).get_Value();
			}
			else {
				var baseValue;
				if (index === 0) {
					baseValue = ((this.get_IsAdditive() && this.$isAccumulable) ? this.$animationOperations.get_Zero() : ss.cast(defaultOriginValue, Number));
				}
				else {
					baseValue = this.get_KeyFrames().get_item(index - 1).get_Value();
				}
				var segmentStart = ((index === 0) ? new ss.TimeSpan(0) : this.$GetKeyFrameTime(this.get_KeyFrames().get_item(index - 1), duration));
				var segmentEnd = this.$GetKeyFrameTime(this.get_KeyFrames().get_item(index), duration);
				var progress = ((segmentEnd.ticks === segmentStart.ticks) ? 1 : ((new ss.TimeSpan(time.ticks - segmentStart.ticks)).ticks / (new ss.TimeSpan(segmentEnd.ticks - segmentStart.ticks)).ticks));
				value = this.get_KeyFrames().get_item(index).InterpolateValue(baseValue, progress);
			}
			if (this.get_IsAdditive() && this.$isAccumulable) {
				value = this.$animationOperations.Add(value, ss.cast(defaultOriginValue, Number));
			}
			if (this.get_IsCumulative() && this.$isAccumulable) {
				value = this.$animationOperations.Add(value, this.$animationOperations.Scale(this.get_KeyFrames().get_item(this.get_KeyFrames().get_count() - 1).get_Value(), Math.floor(animationClock.get_CurrentState().get_Iteration())));
			}
			return value;
		},
		$GetKeyFrameTime: function(keyFrame, keyFramesDuration) {
			if (keyFrame.get_KeyTime().get_HasTimeSpan()) {
				return keyFrame.get_KeyTime().get_TimeSpan();
			}
			if (keyFrame.get_KeyTime().get_HasPercent()) {
				return Granular.Extensions.TimeSpanExtensions.Scale(keyFramesDuration, keyFrame.get_KeyTime().get_Percent());
			}
			throw new Granular.Exception('KeyTime of type "{0}" is not supported', [keyFrame.get_KeyTime().get_Type()]);
		},
		$GetKeyFrameIndexAtTime: function(time, keyFramesDuration) {
			return this.get_KeyFrames().indexOf(Enumerable.from(this.get_KeyFrames()).lastOrDefault(ss.mkdel(this, function(keyFrame) {
				return this.$GetKeyFrameTime(keyFrame, keyFramesDuration).ticks < time.ticks;
			}), ss.getDefaultValue($System_Windows_Media_Animation_DoubleKeyFrame))) + 1;
		},
		$GetKeyFramesDuration: function() {
			return System.Linq.EnumerableExtensions.Max(ss.TimeSpan).call(null, Enumerable.from(this.get_KeyFrames()).where(function(keyFrame) {
				return keyFrame.get_KeyTime().get_HasTimeSpan();
			}).select(function(keyFrame1) {
				return keyFrame1.get_KeyTime().get_TimeSpan();
			}).defaultIfEmpty(new ss.TimeSpan(1 * 10000000)));
		}
	}, $System_Windows_Media_Animation_AnimationTimeline, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_DurationClock, $asm, {
		get_FirstTick: function() {
			return this.$1$FirstTickField;
		},
		set_FirstTick: function(value) {
			this.$1$FirstTickField = value;
		},
		get_LastTick: function() {
			return this.$1$LastTickField;
		},
		set_LastTick: function(value) {
			this.$1$LastTickField = value;
		},
		get_Duration: function() {
			return this.$1$DurationField;
		},
		set_Duration: function(value) {
			this.$1$DurationField = value;
		},
		$SetTickBounds: function() {
			if (this.get_Duration().ticks < this.$clock.get_FirstTick().ticks) {
				this.set_FirstTick(new ss.TimeSpan(0));
				this.set_LastTick(this.get_Duration());
			}
			else {
				this.set_FirstTick(this.$clock.get_FirstTick());
				this.set_LastTick(Granular.Extensions.TimeSpanExtensions.Min(this.get_Duration(), this.$clock.get_LastTick()));
			}
		},
		Tick: function(time) {
			if (time.ticks < (new ss.TimeSpan(0)).ticks) {
				var state = this.$clock.Tick(new ss.TimeSpan(0));
				var previousTick = Granular.Compatibility.TimeSpan.MinValue;
				var nextTick = new ss.TimeSpan(0);
				return new $System_Windows_Media_Animation_ClockState(0, state.get_Progress(), state.get_Iteration(), previousTick, nextTick);
			}
			if (time.ticks >= this.get_Duration().ticks) {
				var state1 = this.$clock.Tick(this.get_Duration());
				var previousTick1 = this.get_Duration();
				var nextTick1 = Granular.Compatibility.TimeSpan.MaxValue;
				return new $System_Windows_Media_Animation_ClockState(2, state1.get_Progress(), state1.get_Iteration(), previousTick1, nextTick1);
			}
			return this.$clock.Tick(time);
		}
	}, null, [$System_Windows_Media_Animation_IClock]);
	ss.initClass($System_Windows_Media_Animation_EasingColorKeyFrame, $asm, {
		get_EasingFunction: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_EasingColorKeyFrame.EasingFunctionProperty), $System_Windows_Media_Animation_IEasingFunction);
		},
		set_EasingFunction: function(value) {
			this.SetValue($System_Windows_Media_Animation_EasingColorKeyFrame.EasingFunctionProperty, value, 11);
		},
		InterpolateValue: function(baseValue, keyFrameProgress) {
			if (ss.isValue(this.get_EasingFunction())) {
				keyFrameProgress = this.get_EasingFunction().Ease(keyFrameProgress);
			}
			return $System_Windows_Media_Animation_$ColorAnimationOperations.$Default.Interpolate(baseValue, this.get_Value(), keyFrameProgress);
		}
	}, $System_Windows_Media_Animation_ColorKeyFrame, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_EasingDoubleKeyFrame, $asm, {
		get_EasingFunction: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_EasingDoubleKeyFrame.EasingFunctionProperty), $System_Windows_Media_Animation_IEasingFunction);
		},
		set_EasingFunction: function(value) {
			this.SetValue($System_Windows_Media_Animation_EasingDoubleKeyFrame.EasingFunctionProperty, value, 11);
		},
		InterpolateValue: function(baseValue, keyFrameProgress) {
			if (ss.isValue(this.get_EasingFunction())) {
				keyFrameProgress = this.get_EasingFunction().Ease(keyFrameProgress);
			}
			return $System_Windows_Media_Animation_$DoubleAnimationOperations.$Default.Interpolate(baseValue, this.get_Value(), keyFrameProgress);
		}
	}, $System_Windows_Media_Animation_DoubleKeyFrame, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initEnum($System_Windows_Media_Animation_EasingMode, $asm, { EaseIn: 0, EaseOut: 1, EaseInOut: 2 });
	ss.initClass($System_Windows_Media_Animation_EasingRectKeyFrame, $asm, {
		get_EasingFunction: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_EasingRectKeyFrame.EasingFunctionProperty), $System_Windows_Media_Animation_IEasingFunction);
		},
		set_EasingFunction: function(value) {
			this.SetValue($System_Windows_Media_Animation_EasingRectKeyFrame.EasingFunctionProperty, value, 11);
		},
		InterpolateValue: function(baseValue, keyFrameProgress) {
			if (ss.isValue(this.get_EasingFunction())) {
				keyFrameProgress = this.get_EasingFunction().Ease(keyFrameProgress);
			}
			return $System_Windows_Media_Animation_$RectAnimationOperations.$Default.Interpolate(baseValue, this.get_Value(), keyFrameProgress);
		}
	}, $System_Windows_Media_Animation_RectKeyFrame, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_EasingThicknessKeyFrame, $asm, {
		get_EasingFunction: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_EasingThicknessKeyFrame.EasingFunctionProperty), $System_Windows_Media_Animation_IEasingFunction);
		},
		set_EasingFunction: function(value) {
			this.SetValue($System_Windows_Media_Animation_EasingThicknessKeyFrame.EasingFunctionProperty, value, 11);
		},
		InterpolateValue: function(baseValue, keyFrameProgress) {
			if (ss.isValue(this.get_EasingFunction())) {
				keyFrameProgress = this.get_EasingFunction().Ease(keyFrameProgress);
			}
			return $System_Windows_Media_Animation_$ThicknessAnimationOperations.$Default.Interpolate(baseValue, this.get_Value(), keyFrameProgress);
		}
	}, $System_Windows_Media_Animation_ThicknessKeyFrame, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_ElasticEase, $asm, {
		get_Oscillations: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Media_Animation_ElasticEase.OscillationsProperty), Number));
		},
		set_Oscillations: function(value) {
			this.SetValue($System_Windows_Media_Animation_ElasticEase.OscillationsProperty, value, 11);
		},
		get_Springiness: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Media_Animation_ElasticEase.SpringinessProperty), Number));
		},
		set_Springiness: function(value) {
			this.SetValue($System_Windows_Media_Animation_ElasticEase.SpringinessProperty, value, 11);
		},
		EaseOverride: function(normalizedTime) {
			var springiness = Granular.Extensions.DoubleExtensions.Max(this.get_Springiness(), 0);
			return (Granular.Extensions.DoubleExtensions.IsClose(springiness, 0) ? normalizedTime : ((Math.exp(springiness * normalizedTime) - 1) / (Math.exp(springiness) - 1))) * Math.sin((Math.PI * 2 * Granular.Extensions.DoubleExtensions.Max(this.get_Oscillations(), 0) + Math.PI * 0.5) * normalizedTime);
		}
	}, $System_Windows_Media_Animation_EasingFunctionBase, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_Media_Animation_IEasingFunction]);
	ss.initClass($System_Windows_Media_Animation_ExponentialEase, $asm, {
		get_Exponent: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Media_Animation_ExponentialEase.ExponentProperty), Number));
		},
		set_Exponent: function(value) {
			this.SetValue($System_Windows_Media_Animation_ExponentialEase.ExponentProperty, value, 11);
		},
		EaseOverride: function(normalizedTime) {
			return (Granular.Extensions.DoubleExtensions.IsClose(this.get_Exponent(), 0) ? normalizedTime : ((Math.exp(this.get_Exponent() * normalizedTime) - 1) / (Math.exp(this.get_Exponent()) - 1)));
		}
	}, $System_Windows_Media_Animation_EasingFunctionBase, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_Media_Animation_IEasingFunction]);
	ss.initEnum($System_Windows_Media_Animation_FillBehavior, $asm, { HoldEnd: 0, Stop: 1 });
	ss.initEnum($System_Windows_Media_Animation_HandoffBehavior, $asm, { SnapshotAndReplace: 0, Compose: 1 });
	ss.initClass($System_Windows_Media_Animation_KeyTime, $asm, {
		get_Type: function() {
			return this.$1$TypeField;
		},
		set_Type: function(value) {
			this.$1$TypeField = value;
		},
		get_TimeSpan: function() {
			return this.$1$TimeSpanField;
		},
		set_TimeSpan: function(value) {
			this.$1$TimeSpanField = value;
		},
		get_Percent: function() {
			return this.$1$PercentField;
		},
		set_Percent: function(value) {
			this.$1$PercentField = value;
		},
		get_HasTimeSpan: function() {
			return this.get_Type() === 2;
		},
		get_HasPercent: function() {
			return this.get_Type() === 1;
		},
		get_IsPaced: function() {
			return this.get_Type() === 3;
		},
		get_IsUniform: function() {
			return this.get_Type() === 0;
		},
		equals: function(obj) {
			var other = ss.safeCast(obj, $System_Windows_Media_Animation_KeyTime);
			return ss.referenceEquals(this, other) || !ss.referenceEquals(other, null) && ss.staticEquals(this.get_Type(), other.get_Type()) && ss.staticEquals(this.get_TimeSpan(), other.get_TimeSpan()) && ss.staticEquals(this.get_Percent(), other.get_Percent());
		},
		getHashCode: function() {
			return ss.getHashCode(this.get_Type()) ^ ss.getHashCode(this.get_TimeSpan()) ^ ss.getHashCode(this.get_Percent());
		}
	});
	ss.initEnum($System_Windows_Media_Animation_KeyTimeType, $asm, { Uniform: 0, Percent: 1, TimeSpan: 2, Paced: 3 });
	ss.initClass($System_Windows_Media_Animation_LinearColorKeyFrame, $asm, {
		InterpolateValue: function(baseValue, keyFrameProgress) {
			return $System_Windows_Media_Animation_$ColorAnimationOperations.$Default.Interpolate(baseValue, this.get_Value(), keyFrameProgress);
		}
	}, $System_Windows_Media_Animation_ColorKeyFrame, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_LinearDoubleKeyFrame, $asm, {
		InterpolateValue: function(baseValue, keyFrameProgress) {
			return $System_Windows_Media_Animation_$DoubleAnimationOperations.$Default.Interpolate(baseValue, this.get_Value(), keyFrameProgress);
		}
	}, $System_Windows_Media_Animation_DoubleKeyFrame, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_LinearRectKeyFrame, $asm, {
		InterpolateValue: function(baseValue, keyFrameProgress) {
			return $System_Windows_Media_Animation_$RectAnimationOperations.$Default.Interpolate(baseValue, this.get_Value(), keyFrameProgress);
		}
	}, $System_Windows_Media_Animation_RectKeyFrame, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_LinearThicknessKeyFrame, $asm, {
		InterpolateValue: function(baseValue, keyFrameProgress) {
			return $System_Windows_Media_Animation_$ThicknessAnimationOperations.$Default.Interpolate(baseValue, this.get_Value(), keyFrameProgress);
		}
	}, $System_Windows_Media_Animation_ThicknessKeyFrame, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_OffsetClock, $asm, {
		get_FirstTick: function() {
			return new ss.TimeSpan(this.$offset.ticks + this.$clock.get_FirstTick().ticks);
		},
		get_LastTick: function() {
			return ((this.$clock.get_LastTick().ticks === Granular.Compatibility.TimeSpan.MaxValue.ticks) ? Granular.Compatibility.TimeSpan.MaxValue : new ss.TimeSpan(this.$offset.ticks + this.$clock.get_LastTick().ticks));
		},
		get_Duration: function() {
			return ((this.$clock.get_Duration().ticks === Granular.Compatibility.TimeSpan.MaxValue.ticks) ? Granular.Compatibility.TimeSpan.MaxValue : new ss.TimeSpan(this.$offset.ticks + this.$clock.get_Duration().ticks));
		},
		Tick: function(time) {
			var state = this.$clock.Tick(new ss.TimeSpan(time.ticks - this.$offset.ticks));
			var previousTick = ((state.get_PreviousTick().ticks === Granular.Compatibility.TimeSpan.MinValue.ticks) ? Granular.Compatibility.TimeSpan.MinValue : new ss.TimeSpan(this.$offset.ticks + state.get_PreviousTick().ticks));
			var nextTick = ((state.get_NextTick().ticks === Granular.Compatibility.TimeSpan.MaxValue.ticks) ? Granular.Compatibility.TimeSpan.MaxValue : new ss.TimeSpan(this.$offset.ticks + state.get_NextTick().ticks));
			return new $System_Windows_Media_Animation_ClockState(state.get_ProgressState(), state.get_Progress(), state.get_Iteration(), previousTick, nextTick);
		}
	}, null, [$System_Windows_Media_Animation_IClock]);
	ss.initClass($System_Windows_Media_Animation_ParallelClock, $asm, {
		get_FirstTick: function() {
			return this.$1$FirstTickField;
		},
		set_FirstTick: function(value) {
			this.$1$FirstTickField = value;
		},
		get_LastTick: function() {
			return this.$1$LastTickField;
		},
		set_LastTick: function(value) {
			this.$1$LastTickField = value;
		},
		get_Duration: function() {
			return this.$1$DurationField;
		},
		set_Duration: function(value) {
			this.$1$DurationField = value;
		},
		Tick: function(time) {
			var states = Enumerable.from(this.$clocks).select(function(clock) {
				return clock.Tick(time);
			}).toArray();
			var nextTick;
			var previousTick;
			var progressState;
			nextTick = System.Linq.EnumerableExtensions.Min(ss.TimeSpan).call(null, Enumerable.from(states).select(function(state) {
				return state.get_NextTick();
			}).defaultIfEmpty(new ss.TimeSpan(0)));
			previousTick = System.Linq.EnumerableExtensions.Max(ss.TimeSpan).call(null, Enumerable.from(states).select(function(state1) {
				return state1.get_PreviousTick();
			}).defaultIfEmpty(new ss.TimeSpan(0)));
			if (Enumerable.from(states).all(function(state2) {
				return state2.get_ProgressState() === 0;
			})) {
				progressState = 0;
			}
			else if (Enumerable.from(states).all(function(state3) {
				return state3.get_ProgressState() === 2;
			})) {
				progressState = 2;
			}
			else {
				progressState = 1;
			}
			return new $System_Windows_Media_Animation_ClockState(progressState, 0, 0, previousTick, nextTick);
		}
	}, null, [$System_Windows_Media_Animation_IClock]);
	ss.initClass($System_Windows_Media_Animation_TimelineGroup, $asm, {
		get_Children: function() {
			return this.$4$ChildrenField;
		},
		set_Children: function(value) {
			this.$4$ChildrenField = value;
		},
		CreateClock: function() {
			return this.CreateGroupClock(Enumerable.from(this.get_Children()).select(function(child) {
				return child.CreateClock();
			}).toArray());
		},
		CreateGroupClock: null,
		$OnChildrenCollectionChanged: function(sender, e) {
			var $t1 = ss.getEnumerator(e.get_OldItems());
			try {
				while ($t1.moveNext()) {
					var timeline = $t1.current();
					timeline.set_Parent(null);
				}
			}
			finally {
				$t1.dispose();
			}
			var $t2 = ss.getEnumerator(e.get_NewItems());
			try {
				while ($t2.moveNext()) {
					var timeline1 = $t2.current();
					timeline1.set_Parent(this);
				}
			}
			finally {
				$t2.dispose();
			}
		}
	}, $System_Windows_Media_Animation_Timeline, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_ParallelTimeline, $asm, {
		CreateGroupClock: function(children) {
			return new $System_Windows_Media_Animation_ParallelTimelineClock(this, children);
		}
	}, $System_Windows_Media_Animation_TimelineGroup, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_TimelineGroupClock, $asm, {
		get_Children: function() {
			return this.$2$ChildrenField;
		},
		set_Children: function(value) {
			this.$2$ChildrenField = value;
		}
	}, $System_Windows_Media_Animation_TimelineClock, [$System_Windows_Media_Animation_IClock]);
	ss.initClass($System_Windows_Media_Animation_ParallelTimelineClock, $asm, {}, $System_Windows_Media_Animation_TimelineGroupClock, [$System_Windows_Media_Animation_IClock]);
	ss.initClass($System_Windows_Media_Animation_StoryboardAction, $asm, {
		get_BeginStoryboardName: function() {
			return this.$3$BeginStoryboardNameField;
		},
		set_BeginStoryboardName: function(value) {
			this.$3$BeginStoryboardNameField = value;
		},
		Apply: null,
		Clean: function(target, valueSource) {
			//
		},
		IsActionOverlaps: function(action) {
			return false;
		},
		GetBeginStoryboard: function(target) {
			var nameScope = $System_Windows_Markup_NameScope.GetContainingNameScope(target);
			return (ss.isValue(nameScope) ? ss.safeCast(nameScope.FindName(this.get_BeginStoryboardName()), $System_Windows_Media_Animation_BeginStoryboard) : null);
		}
	}, $System_Windows_Freezable, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_ITriggerAction]);
	ss.initClass($System_Windows_Media_Animation_PauseStoryboard, $asm, {
		Apply: function(target, valueSource) {
			var beginStoryboard = this.GetBeginStoryboard(target);
			if (ss.isValue(beginStoryboard)) {
				beginStoryboard.Pause(target);
			}
		}
	}, $System_Windows_Media_Animation_StoryboardAction, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_ITriggerAction]);
	ss.initClass($System_Windows_Media_Animation_PowerEase, $asm, {
		get_Power: function() {
			return ss.unbox(ss.cast(this.GetValue($System_Windows_Media_Animation_PowerEase.PowerProperty), Number));
		},
		set_Power: function(value) {
			this.SetValue($System_Windows_Media_Animation_PowerEase.PowerProperty, value, 11);
		},
		EaseOverride: function(normalizedTime) {
			return Math.pow(normalizedTime, Granular.Extensions.DoubleExtensions.Max(this.get_Power(), 0));
		}
	}, $System_Windows_Media_Animation_EasingFunctionBase, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_Media_Animation_IEasingFunction]);
	ss.initClass($System_Windows_Media_Animation_QuadraticEase, $asm, {
		EaseOverride: function(normalizedTime) {
			return normalizedTime * normalizedTime;
		}
	}, $System_Windows_Media_Animation_EasingFunctionBase, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_Media_Animation_IEasingFunction]);
	ss.initClass($System_Windows_Media_Animation_QuarticEase, $asm, {
		EaseOverride: function(normalizedTime) {
			return normalizedTime * normalizedTime * normalizedTime * normalizedTime;
		}
	}, $System_Windows_Media_Animation_EasingFunctionBase, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_Media_Animation_IEasingFunction]);
	ss.initClass($System_Windows_Media_Animation_QuinticEase, $asm, {
		EaseOverride: function(normalizedTime) {
			return normalizedTime * normalizedTime * normalizedTime * normalizedTime * normalizedTime;
		}
	}, $System_Windows_Media_Animation_EasingFunctionBase, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_Media_Animation_IEasingFunction]);
	ss.initClass($System_Windows_Media_Animation_RectAnimation, $asm, {
		get_To: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_RectAnimation.ToProperty), $System_Windows_Rect);
		},
		set_To: function(value) {
			this.SetValue($System_Windows_Media_Animation_RectAnimation.ToProperty, value, 11);
		},
		get_From: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_RectAnimation.FromProperty), $System_Windows_Rect);
		},
		set_From: function(value) {
			this.SetValue($System_Windows_Media_Animation_RectAnimation.FromProperty, value, 11);
		},
		get_By: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_RectAnimation.ByProperty), $System_Windows_Rect);
		},
		set_By: function(value) {
			this.SetValue($System_Windows_Media_Animation_RectAnimation.ByProperty, value, 11);
		},
		get_EasingFunction: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_RectAnimation.EasingFunctionProperty), $System_Windows_Media_Animation_IEasingFunction);
		},
		set_EasingFunction: function(value) {
			this.SetValue($System_Windows_Media_Animation_RectAnimation.EasingFunctionProperty, value, 11);
		},
		GetCurrentValue: function(defaultOriginValue, defaultDestinationValue, animationClock) {
			var progress = (ss.isValue(this.get_EasingFunction()) ? this.get_EasingFunction().Ease(animationClock.get_CurrentState().get_Progress()) : animationClock.get_CurrentState().get_Progress());
			var baseValue = this.$animationOperations.get_Zero();
			var from;
			var to;
			if ($System_Windows_Rect.op_Inequality(this.get_From(), null)) {
				if ($System_Windows_Rect.op_Inequality(this.get_To(), null)) {
					if (this.get_IsAdditive() && this.$isAccumulable) {
						baseValue = ss.cast(defaultOriginValue, $System_Windows_Rect);
					}
					from = this.get_From();
					to = this.get_To();
				}
				else if ($System_Windows_Rect.op_Inequality(this.get_By(), null)) {
					if (this.get_IsAdditive() && this.$isAccumulable) {
						baseValue = ss.cast(defaultOriginValue, $System_Windows_Rect);
					}
					from = this.get_From();
					to = this.$animationOperations.Add(this.get_From(), this.get_By());
				}
				else {
					from = this.get_From();
					to = ss.cast(defaultDestinationValue, $System_Windows_Rect);
				}
			}
			else if ($System_Windows_Rect.op_Inequality(this.get_To(), null)) {
				from = ss.cast(defaultOriginValue, $System_Windows_Rect);
				to = this.get_To();
			}
			else if ($System_Windows_Rect.op_Inequality(this.get_By(), null)) {
				if (this.$isAccumulable) {
					baseValue = ss.cast(defaultOriginValue, $System_Windows_Rect);
				}
				from = this.$animationOperations.get_Zero();
				to = this.get_By();
			}
			else {
				from = ss.cast(defaultOriginValue, $System_Windows_Rect);
				to = ss.cast(defaultDestinationValue, $System_Windows_Rect);
			}
			if (this.get_IsCumulative() && this.$isAccumulable) {
				baseValue = this.$animationOperations.Add(baseValue, this.$animationOperations.Scale(this.$animationOperations.Subtract(to, from), Math.floor(animationClock.get_CurrentState().get_Iteration())));
			}
			return this.$animationOperations.Add(baseValue, this.$animationOperations.Interpolate(from, to, progress));
		}
	}, $System_Windows_Media_Animation_AnimationTimeline, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_RectAnimationUsingKeyFrames, $asm, {
		get_KeyFrames: function() {
			return this.$5$KeyFramesField;
		},
		set_KeyFrames: function(value) {
			this.$5$KeyFramesField = value;
		},
		GetCurrentValue: function(defaultOriginValue, defaultDestinationValue, animationClock) {
			if (this.get_KeyFrames().get_count() === 0) {
				return defaultDestinationValue;
			}
			var duration = (this.get_Duration().get_HasTimeSpan() ? this.get_Duration().get_TimeSpan() : this.$GetKeyFramesDuration());
			var time = Granular.Extensions.TimeSpanExtensions.Scale(duration, animationClock.get_CurrentState().get_Progress());
			var index = this.$GetKeyFrameIndexAtTime(time, duration);
			var value;
			if (index === this.get_KeyFrames().get_count()) {
				value = this.get_KeyFrames().get_item(this.get_KeyFrames().get_count() - 1).get_Value();
			}
			else {
				var baseValue;
				if (index === 0) {
					baseValue = ((this.get_IsAdditive() && this.$isAccumulable) ? this.$animationOperations.get_Zero() : ss.cast(defaultOriginValue, $System_Windows_Rect));
				}
				else {
					baseValue = this.get_KeyFrames().get_item(index - 1).get_Value();
				}
				var segmentStart = ((index === 0) ? new ss.TimeSpan(0) : this.$GetKeyFrameTime(this.get_KeyFrames().get_item(index - 1), duration));
				var segmentEnd = this.$GetKeyFrameTime(this.get_KeyFrames().get_item(index), duration);
				var progress = ((segmentEnd.ticks === segmentStart.ticks) ? 1 : ((new ss.TimeSpan(time.ticks - segmentStart.ticks)).ticks / (new ss.TimeSpan(segmentEnd.ticks - segmentStart.ticks)).ticks));
				value = this.get_KeyFrames().get_item(index).InterpolateValue(baseValue, progress);
			}
			if (this.get_IsAdditive() && this.$isAccumulable) {
				value = this.$animationOperations.Add(value, ss.cast(defaultOriginValue, $System_Windows_Rect));
			}
			if (this.get_IsCumulative() && this.$isAccumulable) {
				value = this.$animationOperations.Add(value, this.$animationOperations.Scale(this.get_KeyFrames().get_item(this.get_KeyFrames().get_count() - 1).get_Value(), Math.floor(animationClock.get_CurrentState().get_Iteration())));
			}
			return value;
		},
		$GetKeyFrameTime: function(keyFrame, keyFramesDuration) {
			if (keyFrame.get_KeyTime().get_HasTimeSpan()) {
				return keyFrame.get_KeyTime().get_TimeSpan();
			}
			if (keyFrame.get_KeyTime().get_HasPercent()) {
				return Granular.Extensions.TimeSpanExtensions.Scale(keyFramesDuration, keyFrame.get_KeyTime().get_Percent());
			}
			throw new Granular.Exception('KeyTime of type "{0}" is not supported', [keyFrame.get_KeyTime().get_Type()]);
		},
		$GetKeyFrameIndexAtTime: function(time, keyFramesDuration) {
			return this.get_KeyFrames().indexOf(Enumerable.from(this.get_KeyFrames()).lastOrDefault(ss.mkdel(this, function(keyFrame) {
				return this.$GetKeyFrameTime(keyFrame, keyFramesDuration).ticks < time.ticks;
			}), ss.getDefaultValue($System_Windows_Media_Animation_RectKeyFrame))) + 1;
		},
		$GetKeyFramesDuration: function() {
			return System.Linq.EnumerableExtensions.Max(ss.TimeSpan).call(null, Enumerable.from(this.get_KeyFrames()).where(function(keyFrame) {
				return keyFrame.get_KeyTime().get_HasTimeSpan();
			}).select(function(keyFrame1) {
				return keyFrame1.get_KeyTime().get_TimeSpan();
			}).defaultIfEmpty(new ss.TimeSpan(1 * 10000000)));
		}
	}, $System_Windows_Media_Animation_AnimationTimeline, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_RemoveStoryboard, $asm, {
		Apply: function(target, valueSource) {
			var beginStoryboard = this.GetBeginStoryboard(target);
			if (ss.isValue(beginStoryboard)) {
				var nameScope = ((valueSource === 11) ? $System_Windows_Markup_NameScope.GetContainingNameScope(target) : $System_Windows_Markup_NameScope.GetTemplateNameScope(target));
				var layerOwner = ((valueSource === 11) ? null : target.get_TemplatedParent());
				beginStoryboard.Remove(target, nameScope, layerOwner);
			}
		}
	}, $System_Windows_Media_Animation_StoryboardAction, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_ITriggerAction]);
	ss.initClass($System_Windows_Media_Animation_RepeatBehavior, $asm, {
		get_Count: function() {
			return this.$1$CountField;
		},
		set_Count: function(value) {
			this.$1$CountField = value;
		},
		get_Duration: function() {
			return this.$1$DurationField;
		},
		set_Duration: function(value) {
			this.$1$DurationField = value;
		}
	});
	ss.initClass($System_Windows_Media_Animation_RepeatClock, $asm, {
		get_FirstTick: function() {
			return this.$1$FirstTickField;
		},
		set_FirstTick: function(value) {
			this.$1$FirstTickField = value;
		},
		get_LastTick: function() {
			return this.$1$LastTickField;
		},
		set_LastTick: function(value) {
			this.$1$LastTickField = value;
		},
		get_Duration: function() {
			return this.$1$DurationField;
		},
		set_Duration: function(value) {
			this.$1$DurationField = value;
		},
		$SetTickBounds: function() {
			if (Granular.Compatibility.Double.IsInfinity(this.$iterationsCount)) {
				this.set_FirstTick(new ss.TimeSpan(0));
				this.set_LastTick(Granular.Compatibility.TimeSpan.MaxValue);
				return;
			}
			var totalIterationsTime = Granular.Extensions.TimeSpanExtensions.Scale(this.$iterationDuration, this.$iterationsCount);
			if (totalIterationsTime.ticks < this.$clock.get_FirstTick().ticks) {
				this.set_FirstTick(new ss.TimeSpan(0));
				this.set_LastTick(totalIterationsTime);
			}
			else {
				this.set_FirstTick(this.$clock.get_FirstTick());
				if (totalIterationsTime.ticks < this.$clock.get_LastTick().ticks) {
					this.set_LastTick(totalIterationsTime);
				}
				else if (totalIterationsTime.ticks < this.$iterationDuration.ticks) {
					this.set_LastTick(this.$clock.get_LastTick());
				}
				else {
					var lastIterationRemainder = this.$iterationsCount - Math.floor(this.$iterationsCount);
					var lastIterationDuration = Granular.Extensions.TimeSpanExtensions.Scale(this.$iterationDuration, lastIterationRemainder);
					if (lastIterationDuration.ticks < this.$clock.get_FirstTick().ticks) {
						this.set_LastTick(new ss.TimeSpan(this.$clock.get_LastTick().ticks + Granular.Extensions.TimeSpanExtensions.Scale(this.$iterationDuration, Math.floor(this.$iterationsCount - 1)).ticks));
					}
					else if (lastIterationDuration.ticks < this.$clock.get_LastTick().ticks) {
						this.set_LastTick(totalIterationsTime);
					}
					else {
						this.set_LastTick(new ss.TimeSpan(this.$clock.get_LastTick().ticks + Granular.Extensions.TimeSpanExtensions.Scale(this.$iterationDuration, Math.floor(this.$iterationsCount)).ticks));
					}
				}
			}
		},
		Tick: function(time) {
			var iteration = Granular.Extensions.TimeSpanExtensions.Divide(time, this.$iterationDuration);
			var progressState = ((time.ticks < this.get_FirstTick().ticks) ? 0 : ((time.ticks >= this.get_LastTick().ticks) ? 2 : 1));
			iteration = Math.min(Math.max(iteration, 0), this.$iterationsCount);
			var iterationRemainder = iteration - Math.floor(iteration);
			var currentIterationStart;
			var currentIterationTime;
			if (progressState === 2 && iterationRemainder === 0) {
				currentIterationStart = Granular.Extensions.TimeSpanExtensions.Scale(this.$iterationDuration, iteration - 1);
				currentIterationTime = this.$iterationDuration;
			}
			else {
				currentIterationStart = Granular.Extensions.TimeSpanExtensions.Scale(this.$iterationDuration, iteration - iterationRemainder);
				currentIterationTime = Granular.Extensions.TimeSpanExtensions.Scale(this.$iterationDuration, iterationRemainder);
			}
			var state = this.$clock.Tick(currentIterationTime);
			var previousTick;
			var nextTick;
			if (time.ticks < this.get_FirstTick().ticks) {
				previousTick = Granular.Compatibility.TimeSpan.MinValue;
				nextTick = this.get_FirstTick();
			}
			else if (time.ticks >= this.get_LastTick().ticks) {
				previousTick = this.get_LastTick();
				nextTick = Granular.Compatibility.TimeSpan.MaxValue;
			}
			else {
				if (currentIterationTime.ticks > this.$clock.get_FirstTick().ticks || Math.floor(iteration) === 0) {
					previousTick = Granular.Extensions.TimeSpanExtensions.Max(new ss.TimeSpan(currentIterationStart.ticks + state.get_PreviousTick().ticks), this.get_FirstTick());
				}
				else {
					previousTick = Granular.Extensions.TimeSpanExtensions.Max(new ss.TimeSpan((new ss.TimeSpan(currentIterationStart.ticks - this.$iterationDuration.ticks)).ticks + this.$clock.get_LastTick().ticks), this.get_FirstTick());
				}
				if (currentIterationTime.ticks < this.$clock.get_LastTick().ticks || Math.floor(iteration) === Math.floor(this.$iterationsCount)) {
					nextTick = Granular.Extensions.TimeSpanExtensions.Min(new ss.TimeSpan(currentIterationStart.ticks + state.get_NextTick().ticks), this.get_LastTick());
				}
				else {
					nextTick = Granular.Extensions.TimeSpanExtensions.Min(new ss.TimeSpan((new ss.TimeSpan(currentIterationStart.ticks + this.$iterationDuration.ticks)).ticks + this.$clock.get_FirstTick().ticks), this.get_LastTick());
				}
			}
			if (progressState === 1) {
				progressState = state.get_ProgressState();
			}
			return new $System_Windows_Media_Animation_ClockState(progressState, state.get_Progress(), iteration, previousTick, nextTick);
		}
	}, null, [$System_Windows_Media_Animation_IClock]);
	ss.initClass($System_Windows_Media_Animation_ResumeStoryboard, $asm, {
		Apply: function(target, valueSource) {
			var beginStoryboard = this.GetBeginStoryboard(target);
			if (ss.isValue(beginStoryboard)) {
				beginStoryboard.Resume(target);
			}
		}
	}, $System_Windows_Media_Animation_StoryboardAction, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_ITriggerAction]);
	ss.initClass($System_Windows_Media_Animation_ReverseClock, $asm, {
		get_FirstTick: function() {
			return this.$clock.get_FirstTick();
		},
		get_LastTick: function() {
			return this.$1$LastTickField;
		},
		set_LastTick: function(value) {
			this.$1$LastTickField = value;
		},
		get_Duration: function() {
			return this.$1$DurationField;
		},
		set_Duration: function(value) {
			this.$1$DurationField = value;
		},
		Tick: function(time) {
			var isReversed = time.ticks > this.$clock.get_Duration().ticks;
			var reversedTime = new ss.TimeSpan(this.get_Duration().ticks - time.ticks);
			var previousTick;
			var nextTick;
			var state;
			if (!isReversed) {
				state = this.$clock.Tick(time);
				previousTick = state.get_PreviousTick();
				nextTick = ((time.ticks >= this.$clock.get_LastTick().ticks) ? new ss.TimeSpan(this.get_Duration().ticks - this.$clock.get_LastTick().ticks) : state.get_NextTick());
			}
			else {
				state = this.$clock.Tick(reversedTime);
				previousTick = ((reversedTime.ticks >= this.$clock.get_LastTick().ticks) ? this.$clock.get_LastTick() : new ss.TimeSpan(this.get_Duration().ticks - state.get_NextTick().ticks));
				nextTick = ((state.get_PreviousTick().ticks === Granular.Compatibility.TimeSpan.MinValue.ticks) ? Granular.Compatibility.TimeSpan.MaxValue : new ss.TimeSpan(this.get_Duration().ticks - state.get_PreviousTick().ticks));
			}
			return new $System_Windows_Media_Animation_ClockState(state.get_ProgressState(), state.get_Progress(), state.get_Iteration(), previousTick, nextTick);
		}
	}, null, [$System_Windows_Media_Animation_IClock]);
	ss.initClass($System_Windows_Media_Animation_RootClock, $asm, {
		get_Time: function() {
			return Granular.Compatibility.TimeSpan.Subtract(new Date(), this.$startTime);
		},
		AddClock: function(clock) {
			if (Enumerable.from(this.$clocksSchedule).any(function(clockSchedule) {
				return ss.referenceEquals(clockSchedule.get_$Clock(), clock);
			}) || clock.get_FirstTick().ticks === Granular.Compatibility.TimeSpan.MaxValue.ticks) {
				return;
			}
			this.$clocksSchedule.push(new $System_$Windows_Media_Animation_RootClock$ClockSchedule(clock));
			this.$ScheduleTick(clock.get_FirstTick());
		},
		$ScheduleTick: function(tickTime) {
			// keep TickFrequency interval between ticks
			tickTime = Granular.Extensions.TimeSpanExtensions.Max(tickTime, new ss.TimeSpan(this.$lastTickTime.ticks + $System_Windows_Media_Animation_RootClock.$TickFrequency.ticks));
			if (ss.isValue(this.$scheduledTick)) {
				if (this.$scheduledTickTime.ticks <= tickTime.ticks) {
					// earlier tick is already scheduled
					return;
				}
				this.$scheduledTick.dispose();
			}
			this.$scheduledTick = $System_Windows_ApplicationHost.get_Current().get_TaskScheduler().ScheduleTask(Granular.Extensions.TimeSpanExtensions.Max(new ss.TimeSpan(tickTime.ticks - this.get_Time().ticks), new ss.TimeSpan(0)), ss.mkdel(this, function() {
				$System_Windows_Threading_Dispatcher.CurrentDispatcher.BeginInvoke$4(7, ss.mkdel(this, function() {
					return this.Tick();
				}));
			}));
			this.$scheduledTickTime = tickTime;
		},
		RemoveClock: function(clock) {
			ss.remove(this.$clocksSchedule, Enumerable.from(this.$clocksSchedule).firstOrDefault(function(clockSchedule) {
				return ss.referenceEquals(clockSchedule.get_$Clock(), clock);
			}, ss.getDefaultValue($System_$Windows_Media_Animation_RootClock$ClockSchedule)));
		},
		Tick: function() {
			var tickTime = this.get_Time();
			this.$lastTickTime = tickTime;
			this.$scheduledTick = null;
			var nextTick = Granular.Compatibility.TimeSpan.MaxValue;
			for (var $t1 = 0; $t1 < this.$clocksSchedule.length; $t1++) {
				var clockSchedule = this.$clocksSchedule[$t1];
				if (clockSchedule.get_$NextTick().ticks <= tickTime.ticks) {
					clockSchedule.$Tick(tickTime);
					nextTick = Granular.Extensions.TimeSpanExtensions.Min(nextTick, clockSchedule.get_$NextTick());
				}
			}
			this.$CleanClocks();
			if (nextTick.ticks < Granular.Compatibility.TimeSpan.MaxValue.ticks) {
				this.$ScheduleTick(nextTick);
			}
		},
		$CleanClocks: function() {
			var i = 0;
			while (i < this.$clocksSchedule.length) {
				if (this.$clocksSchedule[i].get_$NextTick().ticks === Granular.Compatibility.TimeSpan.MaxValue.ticks) {
					ss.removeAt(this.$clocksSchedule, i);
				}
				else {
					i++;
				}
			}
		}
	}, null, [$System_Windows_Media_Animation_IRootClock]);
	ss.initClass($System_Windows_Media_Animation_SequentialClock, $asm, {
		get_FirstTick: function() {
			return this.$1$FirstTickField;
		},
		set_FirstTick: function(value) {
			this.$1$FirstTickField = value;
		},
		get_LastTick: function() {
			return this.$1$LastTickField;
		},
		set_LastTick: function(value) {
			this.$1$LastTickField = value;
		},
		get_Duration: function() {
			return this.$1$DurationField;
		},
		set_Duration: function(value) {
			this.$1$DurationField = value;
		},
		Tick: function(time) {
			var progressState;
			if (time.ticks < this.get_FirstTick().ticks) {
				progressState = 0;
			}
			else if (time.ticks < this.get_LastTick().ticks) {
				progressState = 1;
			}
			else {
				progressState = 2;
			}
			var previousTick = Granular.Compatibility.TimeSpan.MinValue;
			var nextTick = Granular.Compatibility.TimeSpan.MaxValue;
			var totalDuration = new ss.TimeSpan(0);
			var $t1 = ss.getEnumerator(this.$clocks);
			try {
				while ($t1.moveNext()) {
					var clock = $t1.current();
					var state = clock.Tick(new ss.TimeSpan(time.ticks - totalDuration.ticks));
					if (state.get_PreviousTick().ticks !== Granular.Compatibility.TimeSpan.MinValue.ticks) {
						previousTick = Granular.Extensions.TimeSpanExtensions.Max(previousTick, new ss.TimeSpan(state.get_PreviousTick().ticks + totalDuration.ticks));
					}
					if (state.get_NextTick().ticks !== Granular.Compatibility.TimeSpan.MaxValue.ticks) {
						nextTick = Granular.Extensions.TimeSpanExtensions.Min(nextTick, new ss.TimeSpan(state.get_NextTick().ticks + totalDuration.ticks));
					}
					totalDuration = new ss.TimeSpan(totalDuration.ticks + clock.get_Duration().ticks);
				}
			}
			finally {
				$t1.dispose();
			}
			return new $System_Windows_Media_Animation_ClockState(progressState, 0, 0, previousTick, nextTick);
		}
	}, null, [$System_Windows_Media_Animation_IClock]);
	ss.initClass($System_Windows_Media_Animation_SequentialTimeline, $asm, {
		CreateGroupClock: function(children) {
			return new $System_Windows_Media_Animation_SequentialTimelineClock(this, children);
		}
	}, $System_Windows_Media_Animation_TimelineGroup, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_SequentialTimelineClock, $asm, {}, $System_Windows_Media_Animation_TimelineGroupClock, [$System_Windows_Media_Animation_IClock]);
	ss.initClass($System_Windows_Media_Animation_SineEase, $asm, {
		EaseOverride: function(normalizedTime) {
			return 1 - Math.sin(Math.PI * 0.5 * (1 - normalizedTime));
		}
	}, $System_Windows_Media_Animation_EasingFunctionBase, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_Media_Animation_IEasingFunction]);
	ss.initClass($System_Windows_Media_Animation_SkipToFillStoryboard, $asm, {
		Apply: function(target, valueSource) {
			var beginStoryboard = this.GetBeginStoryboard(target);
			if (ss.isValue(beginStoryboard)) {
				beginStoryboard.SkipToFill(target);
			}
		}
	}, $System_Windows_Media_Animation_StoryboardAction, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_ITriggerAction]);
	ss.initClass($System_Windows_Media_Animation_StopStoryboard, $asm, {
		Apply: function(target, valueSource) {
			var beginStoryboard = this.GetBeginStoryboard(target);
			if (ss.isValue(beginStoryboard)) {
				beginStoryboard.Stop(target);
			}
		}
	}, $System_Windows_Media_Animation_StoryboardAction, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_ITriggerAction]);
	ss.initClass($System_Windows_Media_Animation_Storyboard, $asm, {
		Begin: function(containingObject, nameScope, handoffBehavior, layerOwner) {
			this.Stop(containingObject);
			var clock = this.CreateClock();
			clock.Begin(containingObject.get_RootClock());
			this.$clocks.set_item(containingObject, clock);
			var targets = this.$GetAnimationClocksTargets(clock, containingObject, nameScope || $System_Windows_Markup_NameScope.GetContainingNameScope(containingObject));
			var $t1 = ss.getEnumerator(Granular.Collections.IListDictionaryExtensions.GetKeys($System_$Windows_Media_Animation_Storyboard$TargetKey, $System_Windows_Media_Animation_AnimationTimelineClock).call(null, targets));
			try {
				while ($t1.moveNext()) {
					var target = $t1.current();
					$System_Windows_Media_Animation_AnimatableExtensions.ApplyAnimationClocks(target.get_$Target(), target.get_$TargetProperty(), targets.GetValues(target), handoffBehavior, layerOwner);
				}
			}
			finally {
				$t1.dispose();
			}
		},
		Remove: function(containingObject, nameScope, layerOwner) {
			this.Stop(containingObject);
			var clock = {};
			if (this.$clocks.tryGetValue(containingObject, clock)) {
				var targets = this.$GetAnimationClocksTargets(clock.$, containingObject, nameScope || $System_Windows_Markup_NameScope.GetContainingNameScope(containingObject));
				var $t1 = ss.getEnumerator(Granular.Collections.IListDictionaryExtensions.GetKeys($System_$Windows_Media_Animation_Storyboard$TargetKey, $System_Windows_Media_Animation_AnimationTimelineClock).call(null, targets));
				try {
					while ($t1.moveNext()) {
						var target = $t1.current();
						target.get_$Target().RemoveAnimationClocks(target.get_$TargetProperty(), targets.GetValues(target), layerOwner);
					}
				}
				finally {
					$t1.dispose();
				}
				this.$clocks.remove(containingObject);
			}
		},
		Pause: function(containingObject) {
			var clock = {};
			if (this.$clocks.tryGetValue(containingObject, clock)) {
				clock.$.Pause();
			}
		},
		Resume: function(containingObject) {
			var clock = {};
			if (this.$clocks.tryGetValue(containingObject, clock)) {
				clock.$.Resume();
			}
		},
		Seek: function(containingObject, time) {
			var clock = {};
			if (this.$clocks.tryGetValue(containingObject, clock)) {
				clock.$.Seek(time);
			}
		},
		SeekOffset: function(containingObject, offset) {
			var clock = {};
			if (this.$clocks.tryGetValue(containingObject, clock)) {
				clock.$.SeekOffset(offset);
			}
		},
		SkipToFill: function(containingObject) {
			var clock = {};
			if (this.$clocks.tryGetValue(containingObject, clock)) {
				clock.$.SkipToFill();
			}
		},
		Stop: function(containingObject) {
			var clock = {};
			if (this.$clocks.tryGetValue(containingObject, clock)) {
				clock.$.Stop();
			}
		},
		$GetAnimationClocksTargets: function(clock, containingObject, nameScope) {
			var targets = { $: new (ss.makeGenericType(Granular.Collections.ListDictionary$2, [$System_$Windows_Media_Animation_Storyboard$TargetKey, $System_Windows_Media_Animation_AnimationTimelineClock]))() };
			this.$GetAnimationClocksTargets$1(clock, containingObject, nameScope, targets);
			return targets.$;
		},
		$GetAnimationClocksTargets$1: function(clock, containingObject, nameScope, targets) {
			var animationClock = ss.safeCast(clock, $System_Windows_Media_Animation_AnimationTimelineClock);
			if (ss.isValue(animationClock)) {
				var target = this.$GetClockTarget(animationClock, containingObject, nameScope);
				if (ss.isValue(target)) {
					targets.$.Add(target, animationClock);
				}
			}
			var clockGroup = ss.safeCast(clock, $System_Windows_Media_Animation_TimelineGroupClock);
			if (ss.isValue(clockGroup)) {
				var $t1 = ss.getEnumerator(clockGroup.get_Children());
				try {
					while ($t1.moveNext()) {
						var child = $t1.current();
						this.$GetAnimationClocksTargets$1(child, containingObject, nameScope, targets);
					}
				}
				finally {
					$t1.dispose();
				}
			}
		},
		$GetClockTarget: function(clock, containingObject, nameScope) {
			var root = $System_Windows_Media_Animation_Storyboard.GetTarget(clock.get_Timeline());
			if (ss.isNullOrUndefined(root)) {
				var targetName = $System_Windows_Media_Animation_Storyboard.GetTargetName(clock.get_Timeline());
				if (Granular.Extensions.StringExtensions.IsNullOrEmpty(targetName)) {
					root = containingObject;
				}
				else {
					root = ss.safeCast(nameScope.FindName(targetName), $System_Windows_DependencyObject);
					if (ss.isNullOrUndefined(root)) {
						throw new Granular.Exception('Can\'t find Storyboard.TargetName "{0}" for element "{1}"', [targetName, containingObject]);
					}
				}
			}
			var propertyPath = $System_Windows_Media_Animation_Storyboard.GetTargetProperty(clock.get_Timeline());
			var target = {};
			var targetProperty = {};
			return (($System_Windows_Media_Animation_Storyboard.$TryGetPropertyPathTarget(root, propertyPath, target, targetProperty) && ss.isInstanceOfType(target.$, $System_Windows_Media_Animation_IAnimatable)) ? new $System_$Windows_Media_Animation_Storyboard$TargetKey(ss.cast(target.$, $System_Windows_Media_Animation_IAnimatable), targetProperty.$) : null);
		}
	}, $System_Windows_Media_Animation_ParallelTimeline, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_ThicknessAnimation, $asm, {
		get_To: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_ThicknessAnimation.ToProperty), $System_Windows_Thickness);
		},
		set_To: function(value) {
			this.SetValue($System_Windows_Media_Animation_ThicknessAnimation.ToProperty, value, 11);
		},
		get_From: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_ThicknessAnimation.FromProperty), $System_Windows_Thickness);
		},
		set_From: function(value) {
			this.SetValue($System_Windows_Media_Animation_ThicknessAnimation.FromProperty, value, 11);
		},
		get_By: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_ThicknessAnimation.ByProperty), $System_Windows_Thickness);
		},
		set_By: function(value) {
			this.SetValue($System_Windows_Media_Animation_ThicknessAnimation.ByProperty, value, 11);
		},
		get_EasingFunction: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Animation_ThicknessAnimation.EasingFunctionProperty), $System_Windows_Media_Animation_IEasingFunction);
		},
		set_EasingFunction: function(value) {
			this.SetValue($System_Windows_Media_Animation_ThicknessAnimation.EasingFunctionProperty, value, 11);
		},
		GetCurrentValue: function(defaultOriginValue, defaultDestinationValue, animationClock) {
			var progress = (ss.isValue(this.get_EasingFunction()) ? this.get_EasingFunction().Ease(animationClock.get_CurrentState().get_Progress()) : animationClock.get_CurrentState().get_Progress());
			var baseValue = this.$animationOperations.get_Zero();
			var from;
			var to;
			if (ss.isValue(this.get_From())) {
				if (ss.isValue(this.get_To())) {
					if (this.get_IsAdditive() && this.$isAccumulable) {
						baseValue = ss.cast(defaultOriginValue, $System_Windows_Thickness);
					}
					from = this.get_From();
					to = this.get_To();
				}
				else if (ss.isValue(this.get_By())) {
					if (this.get_IsAdditive() && this.$isAccumulable) {
						baseValue = ss.cast(defaultOriginValue, $System_Windows_Thickness);
					}
					from = this.get_From();
					to = this.$animationOperations.Add(this.get_From(), this.get_By());
				}
				else {
					from = this.get_From();
					to = ss.cast(defaultDestinationValue, $System_Windows_Thickness);
				}
			}
			else if (ss.isValue(this.get_To())) {
				from = ss.cast(defaultOriginValue, $System_Windows_Thickness);
				to = this.get_To();
			}
			else if (ss.isValue(this.get_By())) {
				if (this.$isAccumulable) {
					baseValue = ss.cast(defaultOriginValue, $System_Windows_Thickness);
				}
				from = this.$animationOperations.get_Zero();
				to = this.get_By();
			}
			else {
				from = ss.cast(defaultOriginValue, $System_Windows_Thickness);
				to = ss.cast(defaultDestinationValue, $System_Windows_Thickness);
			}
			if (this.get_IsCumulative() && this.$isAccumulable) {
				baseValue = this.$animationOperations.Add(baseValue, this.$animationOperations.Scale(this.$animationOperations.Subtract(to, from), Math.floor(animationClock.get_CurrentState().get_Iteration())));
			}
			return this.$animationOperations.Add(baseValue, this.$animationOperations.Interpolate(from, to, progress));
		}
	}, $System_Windows_Media_Animation_AnimationTimeline, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initClass($System_Windows_Media_Animation_ThicknessAnimationUsingKeyFrames, $asm, {
		get_KeyFrames: function() {
			return this.$5$KeyFramesField;
		},
		set_KeyFrames: function(value) {
			this.$5$KeyFramesField = value;
		},
		GetCurrentValue: function(defaultOriginValue, defaultDestinationValue, animationClock) {
			if (this.get_KeyFrames().get_count() === 0) {
				return defaultDestinationValue;
			}
			var duration = (this.get_Duration().get_HasTimeSpan() ? this.get_Duration().get_TimeSpan() : this.$GetKeyFramesDuration());
			var time = Granular.Extensions.TimeSpanExtensions.Scale(duration, animationClock.get_CurrentState().get_Progress());
			var index = this.$GetKeyFrameIndexAtTime(time, duration);
			var value;
			if (index === this.get_KeyFrames().get_count()) {
				value = this.get_KeyFrames().get_item(this.get_KeyFrames().get_count() - 1).get_Value();
			}
			else {
				var baseValue;
				if (index === 0) {
					baseValue = ((this.get_IsAdditive() && this.$isAccumulable) ? this.$animationOperations.get_Zero() : ss.cast(defaultOriginValue, $System_Windows_Thickness));
				}
				else {
					baseValue = this.get_KeyFrames().get_item(index - 1).get_Value();
				}
				var segmentStart = ((index === 0) ? new ss.TimeSpan(0) : this.$GetKeyFrameTime(this.get_KeyFrames().get_item(index - 1), duration));
				var segmentEnd = this.$GetKeyFrameTime(this.get_KeyFrames().get_item(index), duration);
				var progress = ((segmentEnd.ticks === segmentStart.ticks) ? 1 : ((new ss.TimeSpan(time.ticks - segmentStart.ticks)).ticks / (new ss.TimeSpan(segmentEnd.ticks - segmentStart.ticks)).ticks));
				value = this.get_KeyFrames().get_item(index).InterpolateValue(baseValue, progress);
			}
			if (this.get_IsAdditive() && this.$isAccumulable) {
				value = this.$animationOperations.Add(value, ss.cast(defaultOriginValue, $System_Windows_Thickness));
			}
			if (this.get_IsCumulative() && this.$isAccumulable) {
				value = this.$animationOperations.Add(value, this.$animationOperations.Scale(this.get_KeyFrames().get_item(this.get_KeyFrames().get_count() - 1).get_Value(), Math.floor(animationClock.get_CurrentState().get_Iteration())));
			}
			return value;
		},
		$GetKeyFrameTime: function(keyFrame, keyFramesDuration) {
			if (keyFrame.get_KeyTime().get_HasTimeSpan()) {
				return keyFrame.get_KeyTime().get_TimeSpan();
			}
			if (keyFrame.get_KeyTime().get_HasPercent()) {
				return Granular.Extensions.TimeSpanExtensions.Scale(keyFramesDuration, keyFrame.get_KeyTime().get_Percent());
			}
			throw new Granular.Exception('KeyTime of type "{0}" is not supported', [keyFrame.get_KeyTime().get_Type()]);
		},
		$GetKeyFrameIndexAtTime: function(time, keyFramesDuration) {
			return this.get_KeyFrames().indexOf(Enumerable.from(this.get_KeyFrames()).lastOrDefault(ss.mkdel(this, function(keyFrame) {
				return this.$GetKeyFrameTime(keyFrame, keyFramesDuration).ticks < time.ticks;
			}), ss.getDefaultValue($System_Windows_Media_Animation_ThicknessKeyFrame))) + 1;
		},
		$GetKeyFramesDuration: function() {
			return System.Linq.EnumerableExtensions.Max(ss.TimeSpan).call(null, Enumerable.from(this.get_KeyFrames()).where(function(keyFrame) {
				return keyFrame.get_KeyTime().get_HasTimeSpan();
			}).select(function(keyFrame1) {
				return keyFrame1.get_KeyTime().get_TimeSpan();
			}).defaultIfEmpty(new ss.TimeSpan(1 * 10000000)));
		}
	}, $System_Windows_Media_Animation_AnimationTimeline, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject]);
	ss.initEnum($System_Windows_Media_Imaging_BitmapCacheOption, $asm, { OnDemand: 0, Default: 0, OnLoad: 1 });
	ss.initClass($System_Windows_Media_Imaging_BitmapSource, $asm, {
		add_DownloadProgress: function(value) {
			this.$5$DownloadProgressField = ss.delegateCombine(this.$5$DownloadProgressField, value);
		},
		remove_DownloadProgress: function(value) {
			this.$5$DownloadProgressField = ss.delegateRemove(this.$5$DownloadProgressField, value);
		},
		add_DownloadCompleted: function(value) {
			this.$5$DownloadCompletedField = ss.delegateCombine(this.$5$DownloadCompletedField, value);
		},
		remove_DownloadCompleted: function(value) {
			this.$5$DownloadCompletedField = ss.delegateRemove(this.$5$DownloadCompletedField, value);
		},
		add_DownloadFailed: function(value) {
			this.$5$DownloadFailedField = ss.delegateCombine(this.$5$DownloadFailedField, value);
		},
		remove_DownloadFailed: function(value) {
			this.$5$DownloadFailedField = ss.delegateRemove(this.$5$DownloadFailedField, value);
		},
		get_IsDownloading: function() {
			return this.$5$IsDownloadingField;
		},
		set_IsDownloading: function(value) {
			this.$5$IsDownloadingField = value;
		},
		get_RenderImageSource: function() {
			return this.$renderImageSource;
		},
		SetRenderImageState: function(renderImageState) {
			if (this.$renderImageState === renderImageState) {
				return;
			}
			var oldRenderImageState = this.$renderImageState;
			this.$renderImageState = renderImageState;
			if (oldRenderImageState !== 0 && oldRenderImageState !== 1 || renderImageState === 0) {
				throw new Granular.Exception('Can\'t change BitmapSource.RenderImageState from "{0}" to "{1}"', [oldRenderImageState, renderImageState]);
			}
			switch (renderImageState) {
				case 1: {
					this.set_IsDownloading(true);
					Granular.Extensions.EventHandlerExtensions.Raise(this.$5$DownloadProgressField, this);
					break;
				}
				case 2: {
					this.set_IsDownloading(false);
					Granular.Extensions.EventHandlerExtensions.Raise(this.$5$DownloadCompletedField, this);
					break;
				}
				case 3: {
					this.set_IsDownloading(false);
					Granular.Extensions.EventHandlerExtensions.Raise(this.$5$DownloadFailedField, this);
					break;
				}
				default: {
					throw new Granular.Exception('Unexpected DownloadState "{0}"', [renderImageState]);
				}
			}
		}
	}, $System_Windows_Media_ImageSource, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_Media_Animation_IAnimatable]);
	$System_Windows_Media_Imaging_BitmapSource.$ctor1.prototype = $System_Windows_Media_Imaging_BitmapSource.prototype;
	ss.initClass($System_Windows_Media_Imaging_BitmapImage, $asm, {
		get_UriSource: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Imaging_BitmapImage.UriSourceProperty), String);
		},
		set_UriSource: function(value) {
			this.SetValue($System_Windows_Media_Imaging_BitmapImage.UriSourceProperty, value, 11);
		},
		get_CacheOption: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Imaging_BitmapImage.CacheOptionProperty), ss.Int32);
		},
		set_CacheOption: function(value) {
			this.SetValue($System_Windows_Media_Imaging_BitmapImage.CacheOptionProperty, value, 11);
		},
		get_SourceRect: function() {
			return ss.cast(this.GetValue($System_Windows_Media_Imaging_BitmapImage.SourceRectProperty), $System_Windows_Rect);
		},
		set_SourceRect: function(value) {
			this.SetValue($System_Windows_Media_Imaging_BitmapImage.SourceRectProperty, value, 11);
		},
		get_RenderImageSource: function() {
			if (ss.isNullOrUndefined(this.$renderImageSource$1)) {
				this.$CreateRenderImageSource();
			}
			return this.$renderImageSource$1;
		},
		BeginInit: function() {
			if (this.$isInitializing) {
				throw new Granular.Exception('BitmapImage is already initializing', []);
			}
			this.$isInitializing = true;
		},
		EndInit: function() {
			if (!this.$isInitializing) {
				return;
			}
			if (this.get_CacheOption() === 1) {
				this.$CreateRenderImageSource();
			}
			this.$isInitializing = false;
		},
		$OnUriSourceChanged: function(e) {
			if (ss.isValue(this.$renderImageSource$1)) {
				throw new Granular.Exception('UriSource cannot be changed after BitmapImage was initialized', []);
			}
			if (!this.$isInitializing && this.get_CacheOption() === 1) {
				this.$CreateRenderImageSource();
			}
		},
		$OnSourceRectChanged: function(e) {
			if (ss.isValue(this.$renderImageSource$1)) {
				throw new Granular.Exception('UriSource cannot be changed after BitmapImage was initialized', []);
			}
		},
		$CreateRenderImageSource: function() {
			if (ss.isValue(this.$renderImageSource$1)) {
				return;
			}
			if (!Granular.Extensions.StringExtensions.IsNullOrEmpty(this.get_UriSource())) {
				this.$renderImageSource$1 = $System_Windows_ApplicationHost.get_Current().get_RenderImageSourceFactory().CreateRenderImageSource(this.get_UriSource(), this.get_SourceRect());
				this.$renderImageSource$1.add_StateChanged(ss.mkdel(this, function(sender, e) {
					this.SetRenderImageState(this.$renderImageSource$1.get_State());
				}));
				this.SetRenderImageState(this.$renderImageSource$1.get_State());
			}
		}
	}, $System_Windows_Media_Imaging_BitmapSource, [$System_Windows_IResourceContainer, $System_Windows_IInheritableObject, $System_Windows_Media_Animation_IAnimatable, $System_Windows_Markup_ISupportInitialize]);
	$System_Windows_Media_Imaging_BitmapImage.$ctor1.prototype = $System_Windows_Media_Imaging_BitmapImage.prototype;
	ss.initClass($System_Windows_Threading_Dispatcher, $asm, {
		BeginInvoke: function(action) {
			return this.BeginInvoke$3(4, action);
		},
		BeginInvoke$1: function(action) {
			return this.BeginInvoke$4(4, action);
		},
		BeginInvoke$4: function(priority, action) {
			var operation = new $System_Windows_Threading_DispatcherOperation.$ctor3(priority, action);
			this.BeginInvoke$2(operation);
			return operation;
		},
		BeginInvoke$3: function(priority, action) {
			var operation = new $System_Windows_Threading_DispatcherOperation.$ctor2(priority, action);
			this.BeginInvoke$2(operation);
			return operation;
		},
		BeginInvoke$2: function(operation) {
			this.$queue.Enqueue(operation.get_Priority(), operation);
			this.ProcessQueue();
		},
		ProcessQueue: function() {
			var operation = {};
			while (this.$disableProcessingRequests === 0 && this.$queue.TryPeek(operation) && operation.$.get_Priority() !== 0) {
				this.$queue.Dequeue();
				if (operation.$.get_Status() !== 0) {
					continue;
				}
				var token = { $: $System_Windows_Threading_TaskSchedulerExtensions.ScheduleTask($System_Windows_ApplicationHost.get_Current().get_TaskScheduler(), ss.mkdel(operation.$, operation.$.Invoke)) };
				if (operation.$.get_Status() === 0) {
					operation.$.add_Completed(ss.mkdel(this, function(sender, e) {
						this.ProcessQueue();
					}));
					operation.$.add_Aborted(ss.mkdel({ token: token, $this: this }, function(sender1, e1) {
						this.token.$.dispose();
						this.$this.ProcessQueue();
					}));
					return;
				}
			}
		},
		DisableProcessing: function() {
			this.$disableProcessingRequests++;
			return new $System_Windows_Disposable(ss.mkdel(this, function() {
				this.$disableProcessingRequests--;
				this.ProcessQueue();
			}));
		}
	});
	ss.initClass($System_Windows_Threading_DispatcherOperation, $asm, {
		add_Completed: function(value) {
			this.$1$CompletedField = ss.delegateCombine(this.$1$CompletedField, value);
		},
		remove_Completed: function(value) {
			this.$1$CompletedField = ss.delegateRemove(this.$1$CompletedField, value);
		},
		add_Aborted: function(value) {
			this.$1$AbortedField = ss.delegateCombine(this.$1$AbortedField, value);
		},
		remove_Aborted: function(value) {
			this.$1$AbortedField = ss.delegateRemove(this.$1$AbortedField, value);
		},
		get_Priority: function() {
			return this.$1$PriorityField;
		},
		set_Priority: function(value) {
			this.$1$PriorityField = value;
		},
		get_Status: function() {
			return this.$1$StatusField;
		},
		set_Status: function(value) {
			this.$1$StatusField = value;
		},
		get_Result: function() {
			return this.$1$ResultField;
		},
		set_Result: function(value) {
			this.$1$ResultField = value;
		},
		Abort: function() {
			if (this.get_Status() !== 0) {
				throw new Granular.Exception('Operation is "{0}" and cannot be aborted', [this.get_Status()]);
			}
			this.set_Status(1);
			Granular.Extensions.EventHandlerExtensions.Raise(this.$1$AbortedField, this);
		},
		Invoke: function() {
			if (this.get_Status() !== 0) {
				throw new Granular.Exception('Operation is "{0}" and cannot be invoked', [this.get_Status()]);
			}
			this.set_Status(3);
			this.set_Result(this.$action());
			this.set_Status(2);
			Granular.Extensions.EventHandlerExtensions.Raise(this.$1$CompletedField, this);
		}
	});
	$System_Windows_Threading_DispatcherOperation.$ctor1.prototype = $System_Windows_Threading_DispatcherOperation.$ctor2.prototype = $System_Windows_Threading_DispatcherOperation.$ctor3.prototype = $System_Windows_Threading_DispatcherOperation.prototype;
	ss.initEnum($System_Windows_Threading_DispatcherOperationStatus, $asm, { Pending: 0, Aborted: 1, Completed: 2, Executing: 3 });
	ss.initEnum($System_Windows_Threading_DispatcherPriority, $asm, { Invalid: -1, Inactive: 0, SystemIdle: 1, ApplicationIdle: 2, ContextIdle: 3, Background: 4, Input: 5, Loaded: 6, Render: 7, DataBind: 8, Normal: 9, Send: 10 });
	ss.initClass($System_Windows_Threading_DispatcherTimer, $asm, {
		add_Tick: function(value) {
			this.$1$TickField = ss.delegateCombine(this.$1$TickField, value);
		},
		remove_Tick: function(value) {
			this.$1$TickField = ss.delegateRemove(this.$1$TickField, value);
		},
		get_Priority: function() {
			return this.$priority;
		},
		set_Priority: function(value) {
			if (this.get_IsEnabled()) {
				throw new Granular.Exception("Can't change an active DispatcherTimer priority", []);
			}
			this.$priority = value;
		},
		get_Interval: function() {
			return this.$interval;
		},
		set_Interval: function(value) {
			if (this.get_IsEnabled()) {
				throw new Granular.Exception("Can't change an active DispatcherTimer interval", []);
			}
			this.$interval = value;
		},
		get_IsEnabled: function() {
			return this.$isEnabled;
		},
		set_IsEnabled: function(value) {
			if (this.$isEnabled === value) {
				return;
			}
			this.$isEnabled = value;
			if (this.$isEnabled) {
				this.$ScheduleTask();
			}
			else {
				this.$CancelTask();
			}
		},
		Start: function() {
			this.set_IsEnabled(true);
		},
		Stop: function() {
			this.set_IsEnabled(false);
		},
		$ScheduleTask: function() {
			if (!this.get_IsEnabled()) {
				return;
			}
			this.$scheduledTask = this.$scheduler.ScheduleTask(this.get_Interval(), ss.mkdel(this, function() {
				this.$dispatcher.BeginInvoke$4(this.get_Priority(), ss.mkdel(this, function() {
					return Granular.Extensions.EventHandlerExtensions.Raise(this.$1$TickField, this);
				}));
				this.$ScheduleTask();
			}));
		},
		$CancelTask: function() {
			if (ss.isValue(this.$scheduledTask)) {
				this.$scheduledTask.dispose();
				this.$scheduledTask = null;
			}
		}
	});
	$System_Windows_Threading_DispatcherTimer.$ctor1.prototype = $System_Windows_Threading_DispatcherTimer.prototype;
	ss.initInterface($System_Windows_Threading_ITaskScheduler, $asm, { ScheduleTask: null });
	ss.initClass($System_Windows_Threading_TaskSchedulerExtensions, $asm, {});
	ss.setMetadata($System_$Windows_DependencyProperty$DependencyPropertyHashKey, { members: [{ name: '.ctor', type: 1, params: [Function, String] }, { name: 'Equals', type: 8, sname: 'equals', returnType: Boolean, params: [Object] }, { name: 'GetHashCode', type: 8, sname: 'getHashCode', returnType: ss.Int32, params: [] }, { name: 'ToString', type: 8, sname: 'toString', returnType: String, params: [] }, { name: 'Name', type: 16, returnType: String, getter: { name: 'get_Name', type: 8, sname: 'get_$Name', returnType: String, params: [] }, setter: { name: 'set_Name', type: 8, sname: 'set_$Name', returnType: Object, params: [String] } }, { name: 'Owner', type: 16, returnType: Function, getter: { name: 'get_Owner', type: 8, sname: 'get_$Owner', returnType: Function, params: [] }, setter: { name: 'set_Owner', type: 8, sname: 'set_$Owner', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_$Windows_DependencyProperty$TypeComparer, { members: [{ name: 'Compare', type: 8, sname: 'compare', returnType: ss.Int32, params: [Function, Function] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_$Windows_DependencyProperty$TypeComparer, sname: '$Default' }] });
	ss.setMetadata($System_$Windows_Disposable$EmptyDisposable, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Dispose', type: 8, sname: 'dispose', returnType: Object, params: [] }] });
	ss.setMetadata($System_$Windows_EmbeddedResourceLoader$EmbeddedResourceKey, { members: [{ name: '.ctor', type: 1, params: [String, String] }, { name: 'Equals', type: 8, sname: 'equals', returnType: Boolean, params: [Object] }, { name: 'GetHashCode', type: 8, sname: 'getHashCode', returnType: ss.Int32, params: [] }, { name: 'AssemblyName', type: 16, returnType: String, getter: { name: 'get_AssemblyName', type: 8, sname: 'get_$AssemblyName', returnType: String, params: [] }, setter: { name: 'set_AssemblyName', type: 8, sname: 'set_$AssemblyName', returnType: Object, params: [String] } }, { name: 'ResourcePath', type: 16, returnType: String, getter: { name: 'get_ResourcePath', type: 8, sname: 'get_$ResourcePath', returnType: String, params: [] }, setter: { name: 'set_ResourcePath', type: 8, sname: 'set_$ResourcePath', returnType: Object, params: [String] } }] });
	ss.setMetadata($System_$Windows_EventManager$ClassHandlerKey, { members: [{ name: '.ctor', type: 1, params: [Function, $System_Windows_RoutedEvent] }, { name: 'Equals', type: 8, sname: 'equals', returnType: Boolean, params: [Object] }, { name: 'GetHashCode', type: 8, sname: 'getHashCode', returnType: ss.Int32, params: [] }, { name: 'ClassType', type: 16, returnType: Function, getter: { name: 'get_ClassType', type: 8, sname: 'get_$ClassType', returnType: Function, params: [] }, setter: { name: 'set_ClassType', type: 8, sname: 'set_$ClassType', returnType: Object, params: [Function] } }, { name: 'RoutedEvent', type: 16, returnType: $System_Windows_RoutedEvent, getter: { name: 'get_RoutedEvent', type: 8, sname: 'get_$RoutedEvent', returnType: $System_Windows_RoutedEvent, params: [] }, setter: { name: 'set_RoutedEvent', type: 8, sname: 'set_$RoutedEvent', returnType: Object, params: [$System_Windows_RoutedEvent] } }] });
	ss.setMetadata($System_$Windows_EventManager$RoutedEventKey, { members: [{ name: '.ctor', type: 1, params: [Function, String] }, { name: 'Equals', type: 8, sname: 'equals', returnType: Boolean, params: [Object] }, { name: 'GetHashCode', type: 8, sname: 'getHashCode', returnType: ss.Int32, params: [] }, { name: 'ToString', type: 8, sname: 'toString', returnType: String, params: [] }, { name: 'Name', type: 16, returnType: String, getter: { name: 'get_Name', type: 8, sname: 'get_$Name', returnType: String, params: [] }, setter: { name: 'set_Name', type: 8, sname: 'set_$Name', returnType: Object, params: [String] } }, { name: 'Owner', type: 16, returnType: Function, getter: { name: 'get_Owner', type: 8, sname: 'get_$Owner', returnType: Function, params: [] }, setter: { name: 'set_Owner', type: 8, sname: 'set_$Owner', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_$Windows_EventTrigger$EventTriggerCondition, { members: [{ name: 'Dispose', type: 8, sname: 'dispose', returnType: Object, params: [] }, { name: 'Register', isStatic: true, type: 8, sname: '$Register', returnType: $System_$Windows_EventTrigger$EventTriggerCondition, params: [$System_Windows_FrameworkElement, $System_Windows_RoutedEvent] }, { name: 'EventRaised', type: 2, adder: { name: 'add_EventRaised', type: 8, sname: 'add_EventRaised', returnType: Object, params: [Function] }, remover: { name: 'remove_EventRaised', type: 8, sname: 'remove_EventRaised', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_$Windows_FrameworkTemplate$EmptyFrameworkTemplate, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Attach', type: 8, sname: 'Attach', returnType: Object, params: [$System_Windows_FrameworkElement] }, { name: 'Detach', type: 8, sname: 'Detach', returnType: Object, params: [$System_Windows_FrameworkElement] }] });
	ss.setMetadata($System_$Windows_MultiDataTrigger$MultiDataTriggerConditionProvider, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Condition] }, { name: 'CreateDataTriggerCondition', type: 8, sname: 'CreateDataTriggerCondition', returnType: $System_Windows_IDataTriggerCondition, params: [$System_Windows_FrameworkElement] }] });
	ss.setMetadata($System_$Windows_MultiTrigger$TriggerConditionProvider, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Condition] }, { name: 'CreateDataTriggerCondition', type: 8, sname: 'CreateDataTriggerCondition', returnType: $System_Windows_IDataTriggerCondition, params: [$System_Windows_FrameworkElement] }] });
	ss.setMetadata($System_$Windows_Setter$ValueOverlapExpression, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ClearValue', type: 8, sname: '$ClearValue', returnType: Object, params: [Object] }, { name: 'CreateExpression', type: 8, sname: 'CreateExpression', returnType: $System_Windows_IExpression, params: [$System_Windows_DependencyObject, $System_Windows_DependencyProperty] }, { name: 'SetValue', type: 8, sname: 'SetValue', returnType: Boolean, params: [Object] }, { name: 'SetValue', type: 8, sname: '$SetValue', returnType: Object, params: [Object, Object] }, { name: 'Value', type: 16, returnType: Object, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: Object, params: [] } }, { name: 'ValueChanged', type: 2, adder: { name: 'add_ValueChanged', type: 8, sname: 'add_ValueChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_ValueChanged', type: 8, sname: 'remove_ValueChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_$Windows_Controls_ContentPresenter$DefaultContentTemplate, { members: [{ name: 'Attach', type: 8, sname: 'Attach', returnType: Object, params: [$System_Windows_FrameworkElement] }, { name: 'Detach', type: 8, sname: 'Detach', returnType: Object, params: [$System_Windows_FrameworkElement] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_Windows_IFrameworkTemplate, sname: '$Default' }] });
	ss.setMetadata($System_$Windows_Controls_ContentPresenter$DefaultContentTemplate$ToStringConverter, { members: [{ name: 'Convert', type: 8, sname: 'Convert', returnType: Object, params: [Object, Function, Object] }, { name: 'ConvertBack', type: 8, sname: 'ConvertBack', returnType: Object, params: [Object, Function, Object] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_$Windows_Controls_ContentPresenter$DefaultContentTemplate$ToStringConverter, sname: '$Default' }] });
	ss.setMetadata($System_$Windows_Controls_ContentPresenter$UIElementTemplate, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_UIElement] }, { name: 'Attach', type: 8, sname: 'Attach', returnType: Object, params: [$System_Windows_FrameworkElement] }, { name: 'Detach', type: 8, sname: 'Detach', returnType: Object, params: [$System_Windows_FrameworkElement] }] });
	ss.setMetadata($System_$Windows_Controls_ItemContainerGenerator$GeneratedItemContainer, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_FrameworkElement, Object, ss.Int32] }, { name: 'Container', type: 16, returnType: $System_Windows_FrameworkElement, getter: { name: 'get_Container', type: 8, sname: 'get_$Container', returnType: $System_Windows_FrameworkElement, params: [] }, setter: { name: 'set_Container', type: 8, sname: 'set_$Container', returnType: Object, params: [$System_Windows_FrameworkElement] } }, { name: 'Index', type: 16, returnType: ss.Int32, getter: { name: 'get_Index', type: 8, sname: 'get_$Index', returnType: ss.Int32, params: [] }, setter: { name: 'set_Index', type: 8, sname: 'set_$Index', returnType: Object, params: [ss.Int32] } }, { name: 'Item', type: 16, returnType: Object, getter: { name: 'get_Item', type: 8, sname: 'get_$Item', returnType: Object, params: [] }, setter: { name: 'set_Item', type: 8, sname: 'set_$Item', returnType: Object, params: [Object] } }] });
	ss.setMetadata($System_$Windows_Controls_ItemsControl$DefaultItemsPanelTemplate, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Attach', type: 8, sname: 'Attach', returnType: Object, params: [$System_Windows_FrameworkElement] }, { name: 'Detach', type: 8, sname: 'Detach', returnType: Object, params: [$System_Windows_FrameworkElement] }] });
	ss.setMetadata($System_$Windows_Controls_ListBox$ExtendedSelectionBehavior, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Controls_ListBox] }, { name: 'SetClickSelection', type: 8, sname: '$SetClickSelection', returnType: Object, params: [$System_Windows_Controls_ListBoxItem, $System_Windows_Input_ModifierKeys] }, { name: 'SetFocusChangeSelection', type: 8, sname: '$SetFocusChangeSelection', returnType: Object, params: [$System_Windows_Controls_ListBoxItem, $System_Windows_Input_ModifierKeys] }] });
	ss.setMetadata($System_$Windows_Controls_ListBox$ISelectionBehavior, { members: [{ name: 'SetClickSelection', type: 8, sname: '$SetClickSelection', returnType: Object, params: [$System_Windows_Controls_ListBoxItem, $System_Windows_Input_ModifierKeys] }, { name: 'SetFocusChangeSelection', type: 8, sname: '$SetFocusChangeSelection', returnType: Object, params: [$System_Windows_Controls_ListBoxItem, $System_Windows_Input_ModifierKeys] }] });
	ss.setMetadata($System_$Windows_Controls_ListBox$MultipleSelectionBehavior, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Controls_ListBox] }, { name: 'SetClickSelection', type: 8, sname: '$SetClickSelection', returnType: Object, params: [$System_Windows_Controls_ListBoxItem, $System_Windows_Input_ModifierKeys] }, { name: 'SetFocusChangeSelection', type: 8, sname: '$SetFocusChangeSelection', returnType: Object, params: [$System_Windows_Controls_ListBoxItem, $System_Windows_Input_ModifierKeys] }] });
	ss.setMetadata($System_$Windows_Controls_ListBox$SingleSelectionBehavior, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Controls_ListBox] }, { name: 'SetClickSelection', type: 8, sname: '$SetClickSelection', returnType: Object, params: [$System_Windows_Controls_ListBoxItem, $System_Windows_Input_ModifierKeys] }, { name: 'SetFocusChangeSelection', type: 8, sname: '$SetFocusChangeSelection', returnType: Object, params: [$System_Windows_Controls_ListBoxItem, $System_Windows_Input_ModifierKeys] }] });
	ss.setMetadata($System_$Windows_Controls_ScrollContentPresenter$InnerScrollInfo, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'CanHorizontallyScroll', type: 16, returnType: Boolean, getter: { name: 'get_CanHorizontallyScroll', type: 8, sname: 'get_CanHorizontallyScroll', returnType: Boolean, params: [] }, setter: { name: 'set_CanHorizontallyScroll', type: 8, sname: 'set_CanHorizontallyScroll', returnType: Object, params: [Boolean] } }, { name: 'CanVerticallyScroll', type: 16, returnType: Boolean, getter: { name: 'get_CanVerticallyScroll', type: 8, sname: 'get_CanVerticallyScroll', returnType: Boolean, params: [] }, setter: { name: 'set_CanVerticallyScroll', type: 8, sname: 'set_CanVerticallyScroll', returnType: Object, params: [Boolean] } }, { name: 'ExtentSize', type: 16, returnType: $System_Windows_Size, getter: { name: 'get_ExtentSize', type: 8, sname: 'get_ExtentSize', returnType: $System_Windows_Size, params: [] }, setter: { name: 'set_ExtentSize', type: 8, sname: 'set_$ExtentSize', returnType: Object, params: [$System_Windows_Size] } }, { name: 'Offset', type: 16, returnType: $System_Windows_Point, getter: { name: 'get_Offset', type: 8, sname: 'get_Offset', returnType: $System_Windows_Point, params: [] }, setter: { name: 'set_Offset', type: 8, sname: 'set_Offset', returnType: Object, params: [$System_Windows_Point] } }, { name: 'ViewportSize', type: 16, returnType: $System_Windows_Size, getter: { name: 'get_ViewportSize', type: 8, sname: 'get_ViewportSize', returnType: $System_Windows_Size, params: [] }, setter: { name: 'set_ViewportSize', type: 8, sname: 'set_$ViewportSize', returnType: Object, params: [$System_Windows_Size] } }] });
	ss.setMetadata($System_$Windows_Controls_Primitives_Placement$AbsolutePlacement, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GetTargetArea', type: 8, sname: '$GetTargetArea', returnType: $System_Windows_Rect, params: [$System_Windows_Rect, $System_Windows_Rect, $System_Windows_Rect, $System_Windows_Rect] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_$Windows_Controls_Primitives_Placement$AbsolutePlacement, sname: '$Default' }] });
	ss.setMetadata($System_$Windows_Controls_Primitives_Placement$AbsolutePointPlacement, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GetBottomEdgePopupAlignmentPoint', type: 8, sname: '$GetBottomEdgePopupAlignmentPoint', returnType: $System_Windows_Point, params: [$System_Windows_Size, $System_Windows_Point] }, { name: 'GetRightEdgePopupAlignmentPoint', type: 8, sname: '$GetRightEdgePopupAlignmentPoint', returnType: $System_Windows_Point, params: [$System_Windows_Size, $System_Windows_Point] }, { name: 'GetTargetArea', type: 8, sname: '$GetTargetArea', returnType: $System_Windows_Rect, params: [$System_Windows_Rect, $System_Windows_Rect, $System_Windows_Rect, $System_Windows_Rect] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_$Windows_Controls_Primitives_Placement$AbsolutePointPlacement, sname: '$Default' }] });
	ss.setMetadata($System_$Windows_Controls_Primitives_Placement$BottomPlacement, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GetBottomEdgePopupAlignmentPoint', type: 8, sname: '$GetBottomEdgePopupAlignmentPoint', returnType: $System_Windows_Point, params: [$System_Windows_Size, $System_Windows_Point] }, { name: 'GetBottomEdgeTargetOrigin', type: 8, sname: '$GetBottomEdgeTargetOrigin', returnType: $System_Windows_Point, params: [$System_Windows_Rect, $System_Windows_Point] }, { name: 'GetTargetOrigin', type: 8, sname: '$GetTargetOrigin', returnType: $System_Windows_Point, params: [$System_Windows_Rect] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_$Windows_Controls_Primitives_Placement$BottomPlacement, sname: '$Default' }] });
	ss.setMetadata($System_$Windows_Controls_Primitives_Placement$CenterPlacement, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GetPopupAlignmentPoint', type: 8, sname: '$GetPopupAlignmentPoint', returnType: $System_Windows_Point, params: [$System_Windows_Size] }, { name: 'GetTargetOrigin', type: 8, sname: '$GetTargetOrigin', returnType: $System_Windows_Point, params: [$System_Windows_Rect] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_$Windows_Controls_Primitives_Placement$CenterPlacement, sname: '$Default' }] });
	ss.setMetadata($System_$Windows_Controls_Primitives_Placement$LeftPlacement, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GetLeftEdgePopupAlignmentPoint', type: 8, sname: '$GetLeftEdgePopupAlignmentPoint', returnType: $System_Windows_Point, params: [$System_Windows_Size, $System_Windows_Point] }, { name: 'GetLeftEdgeTargetOrigin', type: 8, sname: '$GetLeftEdgeTargetOrigin', returnType: $System_Windows_Point, params: [$System_Windows_Rect, $System_Windows_Point] }, { name: 'GetPopupAlignmentPoint', type: 8, sname: '$GetPopupAlignmentPoint', returnType: $System_Windows_Point, params: [$System_Windows_Size] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_$Windows_Controls_Primitives_Placement$LeftPlacement, sname: '$Default' }] });
	ss.setMetadata($System_$Windows_Controls_Primitives_Placement$MousePlacement, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GetBottomEdgePopupAlignmentPoint', type: 8, sname: '$GetBottomEdgePopupAlignmentPoint', returnType: $System_Windows_Point, params: [$System_Windows_Size, $System_Windows_Point] }, { name: 'GetBottomEdgeTargetOrigin', type: 8, sname: '$GetBottomEdgeTargetOrigin', returnType: $System_Windows_Point, params: [$System_Windows_Rect, $System_Windows_Point] }, { name: 'GetTargetArea', type: 8, sname: '$GetTargetArea', returnType: $System_Windows_Rect, params: [$System_Windows_Rect, $System_Windows_Rect, $System_Windows_Rect, $System_Windows_Rect] }, { name: 'GetTargetOrigin', type: 8, sname: '$GetTargetOrigin', returnType: $System_Windows_Point, params: [$System_Windows_Rect] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_$Windows_Controls_Primitives_Placement$MousePlacement, sname: '$Default' }] });
	ss.setMetadata($System_$Windows_Controls_Primitives_Placement$MousePointPlacement, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GetBottomEdgePopupAlignmentPoint', type: 8, sname: '$GetBottomEdgePopupAlignmentPoint', returnType: $System_Windows_Point, params: [$System_Windows_Size, $System_Windows_Point] }, { name: 'GetRightEdgePopupAlignmentPoint', type: 8, sname: '$GetRightEdgePopupAlignmentPoint', returnType: $System_Windows_Point, params: [$System_Windows_Size, $System_Windows_Point] }, { name: 'GetTargetArea', type: 8, sname: '$GetTargetArea', returnType: $System_Windows_Rect, params: [$System_Windows_Rect, $System_Windows_Rect, $System_Windows_Rect, $System_Windows_Rect] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_$Windows_Controls_Primitives_Placement$MousePointPlacement, sname: '$Default' }] });
	ss.setMetadata($System_$Windows_Controls_Primitives_Placement$PlacementBase, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GetBottomEdgePopupAlignmentPoint', type: 8, sname: '$GetBottomEdgePopupAlignmentPoint', returnType: $System_Windows_Point, params: [$System_Windows_Size, $System_Windows_Point] }, { name: 'GetBottomEdgeTargetOrigin', type: 8, sname: '$GetBottomEdgeTargetOrigin', returnType: $System_Windows_Point, params: [$System_Windows_Rect, $System_Windows_Point] }, { name: 'GetLeftEdgePopupAlignmentPoint', type: 8, sname: '$GetLeftEdgePopupAlignmentPoint', returnType: $System_Windows_Point, params: [$System_Windows_Size, $System_Windows_Point] }, { name: 'GetLeftEdgeTargetOrigin', type: 8, sname: '$GetLeftEdgeTargetOrigin', returnType: $System_Windows_Point, params: [$System_Windows_Rect, $System_Windows_Point] }, { name: 'GetPopupAlignmentPoint', type: 8, sname: '$GetPopupAlignmentPoint', returnType: $System_Windows_Point, params: [$System_Windows_Size] }, { name: 'GetPosition', type: 8, sname: '$GetPosition', returnType: $System_Windows_Point, params: [$System_Windows_Rect, $System_Windows_Rect, $System_Windows_Rect, $System_Windows_Point, $System_Windows_Size, $System_Windows_Rect] }, { name: 'GetRightEdgePopupAlignmentPoint', type: 8, sname: '$GetRightEdgePopupAlignmentPoint', returnType: $System_Windows_Point, params: [$System_Windows_Size, $System_Windows_Point] }, { name: 'GetRightEdgeTargetOrigin', type: 8, sname: '$GetRightEdgeTargetOrigin', returnType: $System_Windows_Point, params: [$System_Windows_Rect, $System_Windows_Point] }, { name: 'GetTargetArea', type: 8, sname: '$GetTargetArea', returnType: $System_Windows_Rect, params: [$System_Windows_Rect, $System_Windows_Rect, $System_Windows_Rect, $System_Windows_Rect] }, { name: 'GetTargetOrigin', type: 8, sname: '$GetTargetOrigin', returnType: $System_Windows_Point, params: [$System_Windows_Rect] }, { name: 'GetTopEdgePopupAlignmentPoint', type: 8, sname: '$GetTopEdgePopupAlignmentPoint', returnType: $System_Windows_Point, params: [$System_Windows_Size, $System_Windows_Point] }, { name: 'GetTopEdgeTargetOrigin', type: 8, sname: '$GetTopEdgeTargetOrigin', returnType: $System_Windows_Point, params: [$System_Windows_Rect, $System_Windows_Point] }] });
	ss.setMetadata($System_$Windows_Controls_Primitives_Placement$RelativePlacement, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_$Windows_Controls_Primitives_Placement$RelativePlacement, sname: '$Default' }] });
	ss.setMetadata($System_$Windows_Controls_Primitives_Placement$RelativePointPlacement, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GetBottomEdgePopupAlignmentPoint', type: 8, sname: '$GetBottomEdgePopupAlignmentPoint', returnType: $System_Windows_Point, params: [$System_Windows_Size, $System_Windows_Point] }, { name: 'GetRightEdgePopupAlignmentPoint', type: 8, sname: '$GetRightEdgePopupAlignmentPoint', returnType: $System_Windows_Point, params: [$System_Windows_Size, $System_Windows_Point] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_$Windows_Controls_Primitives_Placement$RelativePointPlacement, sname: '$Default' }] });
	ss.setMetadata($System_$Windows_Controls_Primitives_Placement$RightPlacement, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GetRightEdgePopupAlignmentPoint', type: 8, sname: '$GetRightEdgePopupAlignmentPoint', returnType: $System_Windows_Point, params: [$System_Windows_Size, $System_Windows_Point] }, { name: 'GetRightEdgeTargetOrigin', type: 8, sname: '$GetRightEdgeTargetOrigin', returnType: $System_Windows_Point, params: [$System_Windows_Rect, $System_Windows_Point] }, { name: 'GetTargetOrigin', type: 8, sname: '$GetTargetOrigin', returnType: $System_Windows_Point, params: [$System_Windows_Rect] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_$Windows_Controls_Primitives_Placement$RightPlacement, sname: '$Default' }] });
	ss.setMetadata($System_$Windows_Controls_Primitives_Placement$TopPlacement, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GetPopupAlignmentPoint', type: 8, sname: '$GetPopupAlignmentPoint', returnType: $System_Windows_Point, params: [$System_Windows_Size] }, { name: 'GetTopEdgePopupAlignmentPoint', type: 8, sname: '$GetTopEdgePopupAlignmentPoint', returnType: $System_Windows_Point, params: [$System_Windows_Size, $System_Windows_Point] }, { name: 'GetTopEdgeTargetOrigin', type: 8, sname: '$GetTopEdgeTargetOrigin', returnType: $System_Windows_Point, params: [$System_Windows_Rect, $System_Windows_Point] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_$Windows_Controls_Primitives_Placement$TopPlacement, sname: '$Default' }] });
	ss.setMetadata($System_$Windows_Controls_Primitives_Popup$PopupContainer, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ArrangeOverride', type: 8, sname: 'ArrangeOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'MeasureOverride', type: 8, sname: 'MeasureOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'AdornerLayer', type: 16, returnType: $System_Windows_Controls_AdornerLayer, getter: { name: 'get_AdornerLayer', type: 8, sname: 'get_AdornerLayer', returnType: $System_Windows_Controls_AdornerLayer, params: [] }, setter: { name: 'set_AdornerLayer', type: 8, sname: 'set_$AdornerLayer', returnType: Object, params: [$System_Windows_Controls_AdornerLayer] } }, { name: 'Child', type: 16, returnType: $System_Windows_UIElement, getter: { name: 'get_Child', type: 8, sname: 'get_$Child', returnType: $System_Windows_UIElement, params: [] }, setter: { name: 'set_Child', type: 8, sname: 'set_$Child', returnType: Object, params: [$System_Windows_UIElement] } }, { name: 'IsOpen', type: 16, returnType: Boolean, getter: { name: 'get_IsOpen', type: 8, sname: 'get_$IsOpen', returnType: Boolean, params: [] }, setter: { name: 'set_IsOpen', type: 8, sname: 'set_$IsOpen', returnType: Object, params: [Boolean] } }, { name: 'Position', type: 16, returnType: $System_Windows_Point, getter: { name: 'get_Position', type: 8, sname: 'get_$Position', returnType: $System_Windows_Point, params: [] }, setter: { name: 'set_Position', type: 8, sname: 'set_$Position', returnType: Object, params: [$System_Windows_Point] } }] });
	ss.setMetadata($System_$Windows_Data_Binding$StringFormatConverter, { members: [{ name: '.ctor', type: 1, params: [String] }, { name: 'Convert', type: 8, sname: 'Convert', returnType: Object, params: [Object, Function, Object] }, { name: 'ConvertBack', type: 8, sname: 'ConvertBack', returnType: Object, params: [Object, Function, Object] }] });
	ss.setMetadata($System_$Windows_Data_CollectionView$EmptyCollectionView, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GetEnumerator', type: 8, sname: 'getEnumerator', returnType: ss.IEnumerator, params: [] }, { name: 'CanFilter', type: 16, returnType: Boolean, getter: { name: 'get_CanFilter', type: 8, sname: 'get_CanFilter', returnType: Boolean, params: [] } }, { name: 'CanSort', type: 16, returnType: Boolean, getter: { name: 'get_CanSort', type: 8, sname: 'get_CanSort', returnType: Boolean, params: [] } }, { name: 'CurrentItem', type: 16, returnType: Object, getter: { name: 'get_CurrentItem', type: 8, sname: 'get_CurrentItem', returnType: Object, params: [] }, setter: { name: 'set_CurrentItem', type: 8, sname: 'set_CurrentItem', returnType: Object, params: [Object] } }, { name: 'CurrentItemIndex', type: 16, returnType: ss.Int32, getter: { name: 'get_CurrentItemIndex', type: 8, sname: 'get_CurrentItemIndex', returnType: ss.Int32, params: [] }, setter: { name: 'set_CurrentItemIndex', type: 8, sname: 'set_CurrentItemIndex', returnType: Object, params: [ss.Int32] } }, { name: 'FilterPredicate', type: 16, returnType: Function, getter: { name: 'get_FilterPredicate', type: 8, sname: 'get_FilterPredicate', returnType: Function, params: [] }, setter: { name: 'set_FilterPredicate', type: 8, sname: 'set_FilterPredicate', returnType: Object, params: [Function] } }, { name: 'SortDirection', type: 16, returnType: $System_Windows_Data_ListSortDirection, getter: { name: 'get_SortDirection', type: 8, sname: 'get_SortDirection', returnType: $System_Windows_Data_ListSortDirection, params: [] }, setter: { name: 'set_SortDirection', type: 8, sname: 'set_SortDirection', returnType: Object, params: [$System_Windows_Data_ListSortDirection] } }, { name: 'SortKeySelector', type: 16, returnType: Function, getter: { name: 'get_SortKeySelector', type: 8, sname: 'get_SortKeySelector', returnType: Function, params: [] }, setter: { name: 'set_SortKeySelector', type: 8, sname: 'set_SortKeySelector', returnType: Object, params: [Function] } }, { name: 'SourceCollection', type: 16, returnType: ss.IEnumerable, getter: { name: 'get_SourceCollection', type: 8, sname: 'get_SourceCollection', returnType: ss.IEnumerable, params: [] } }, { name: 'CollectionChanged', type: 2, adder: { name: 'add_CollectionChanged', type: 8, sname: 'add_CollectionChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_CollectionChanged', type: 8, sname: 'remove_CollectionChanged', returnType: Object, params: [Function] } }, { name: 'CurrentChanged', type: 2, adder: { name: 'add_CurrentChanged', type: 8, sname: 'add_CurrentChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_CurrentChanged', type: 8, sname: 'remove_CurrentChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_$Windows_Input_KeyboardNavigation$FocusVisualAdorner, { members: [{ name: 'Attach', isStatic: true, type: 8, sname: '$Attach', returnType: $System_$Windows_Input_KeyboardNavigation$FocusVisualAdorner, params: [$System_Windows_FrameworkElement] }, { name: 'Dispose', type: 8, sname: 'dispose', returnType: Object, params: [] }] });
	ss.setMetadata($System_$Windows_Input_KeyboardNavigationTarget$BaseNavigation, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'FindFirstTarget', type: 8, sname: '$FindFirstTarget', returnType: $System_Windows_Media_Visual, params: [$System_Windows_Media_Visual, $System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_Windows_DependencyProperty, $System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider] }, { name: 'FindLastTarget', type: 8, sname: '$FindLastTarget', returnType: $System_Windows_Media_Visual, params: [$System_Windows_Media_Visual, $System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_Windows_DependencyProperty, $System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider] }, { name: 'FindNextTarget', type: 8, sname: '$FindNextTarget', returnType: $System_Windows_Media_Visual, params: [$System_Windows_Media_Visual, $System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_Windows_DependencyProperty, $System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider] }, { name: 'FindPreviousTarget', type: 8, sname: '$FindPreviousTarget', returnType: $System_Windows_Media_Visual, params: [$System_Windows_Media_Visual, $System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_Windows_DependencyProperty, $System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider] }, { name: 'GetGlobalStops', type: 8, sname: '$GetGlobalStops', returnType: ss.IEnumerable, params: [$System_Windows_Media_Visual, $System_Windows_Media_Visual, $System_Windows_DependencyProperty] }] });
	ss.setMetadata($System_$Windows_Input_KeyboardNavigationTarget$BottomBoundStopComparer, { members: [{ name: '.ctor', type: 1, params: [$System_$Windows_Input_KeyboardNavigationTarget$Stop] }, { name: 'Compare', type: 8, sname: 'compare', returnType: ss.Int32, params: [$System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_$Windows_Input_KeyboardNavigationTarget$Stop] }] });
	ss.setMetadata($System_$Windows_Input_KeyboardNavigationTarget$ContainedNavigation, { members: [{ name: 'FindFirstTarget', type: 8, sname: '$FindFirstTarget', returnType: $System_Windows_Media_Visual, params: [$System_Windows_Media_Visual, $System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_Windows_DependencyProperty, $System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider] }, { name: 'FindLastTarget', type: 8, sname: '$FindLastTarget', returnType: $System_Windows_Media_Visual, params: [$System_Windows_Media_Visual, $System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_Windows_DependencyProperty, $System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider] }, { name: 'FindNextTarget', type: 8, sname: '$FindNextTarget', returnType: $System_Windows_Media_Visual, params: [$System_Windows_Media_Visual, $System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_Windows_DependencyProperty, $System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider] }, { name: 'FindPreviousTarget', type: 8, sname: '$FindPreviousTarget', returnType: $System_Windows_Media_Visual, params: [$System_Windows_Media_Visual, $System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_Windows_DependencyProperty, $System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_$Windows_Input_KeyboardNavigationTarget$ContainedNavigation, sname: '$Default' }] });
	ss.setMetadata($System_$Windows_Input_KeyboardNavigationTarget$ContinueNavigation, { members: [{ name: 'Default', isStatic: true, type: 4, returnType: $System_$Windows_Input_KeyboardNavigationTarget$ContinueNavigation, sname: '$Default' }] });
	ss.setMetadata($System_$Windows_Input_KeyboardNavigationTarget$CycleNavigation, { members: [{ name: 'FindFirstTarget', type: 8, sname: '$FindFirstTarget', returnType: $System_Windows_Media_Visual, params: [$System_Windows_Media_Visual, $System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_Windows_DependencyProperty, $System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider] }, { name: 'FindLastTarget', type: 8, sname: '$FindLastTarget', returnType: $System_Windows_Media_Visual, params: [$System_Windows_Media_Visual, $System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_Windows_DependencyProperty, $System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider] }, { name: 'FindNextTarget', type: 8, sname: '$FindNextTarget', returnType: $System_Windows_Media_Visual, params: [$System_Windows_Media_Visual, $System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_Windows_DependencyProperty, $System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider] }, { name: 'FindPreviousTarget', type: 8, sname: '$FindPreviousTarget', returnType: $System_Windows_Media_Visual, params: [$System_Windows_Media_Visual, $System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_Windows_DependencyProperty, $System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_$Windows_Input_KeyboardNavigationTarget$CycleNavigation, sname: '$Default' }] });
	ss.setMetadata($System_$Windows_Input_KeyboardNavigationTarget$INavigation, { members: [{ name: 'FindFirstTarget', type: 8, sname: '$FindFirstTarget', returnType: $System_Windows_Media_Visual, params: [$System_Windows_Media_Visual, $System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_Windows_DependencyProperty, $System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider] }, { name: 'FindLastTarget', type: 8, sname: '$FindLastTarget', returnType: $System_Windows_Media_Visual, params: [$System_Windows_Media_Visual, $System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_Windows_DependencyProperty, $System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider] }, { name: 'FindNextTarget', type: 8, sname: '$FindNextTarget', returnType: $System_Windows_Media_Visual, params: [$System_Windows_Media_Visual, $System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_Windows_DependencyProperty, $System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider] }, { name: 'FindPreviousTarget', type: 8, sname: '$FindPreviousTarget', returnType: $System_Windows_Media_Visual, params: [$System_Windows_Media_Visual, $System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_Windows_DependencyProperty, $System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider] }, { name: 'GetGlobalStops', type: 8, sname: '$GetGlobalStops', returnType: ss.IEnumerable, params: [$System_Windows_Media_Visual, $System_Windows_Media_Visual, $System_Windows_DependencyProperty] }] });
	ss.setMetadata($System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider, { members: [{ name: 'CreateComparer', type: 8, sname: '$CreateComparer', returnType: ss.IComparer, params: [$System_$Windows_Input_KeyboardNavigationTarget$Stop] }] });
	ss.setMetadata($System_$Windows_Input_KeyboardNavigationTarget$LeftBoundStopComparer, { members: [{ name: '.ctor', type: 1, params: [$System_$Windows_Input_KeyboardNavigationTarget$Stop] }, { name: 'Compare', type: 8, sname: 'compare', returnType: ss.Int32, params: [$System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_$Windows_Input_KeyboardNavigationTarget$Stop] }] });
	ss.setMetadata($System_$Windows_Input_KeyboardNavigationTarget$LocalNavigation, { members: [{ name: 'FindNextTarget', type: 8, sname: '$FindNextTarget', returnType: $System_Windows_Media_Visual, params: [$System_Windows_Media_Visual, $System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_Windows_DependencyProperty, $System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider] }, { name: 'FindPreviousTarget', type: 8, sname: '$FindPreviousTarget', returnType: $System_Windows_Media_Visual, params: [$System_Windows_Media_Visual, $System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_Windows_DependencyProperty, $System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider] }, { name: 'GetGlobalStops', type: 8, sname: '$GetGlobalStops', returnType: ss.IEnumerable, params: [$System_Windows_Media_Visual, $System_Windows_Media_Visual, $System_Windows_DependencyProperty] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_$Windows_Input_KeyboardNavigationTarget$LocalNavigation, sname: '$Default' }] });
	ss.setMetadata($System_$Windows_Input_KeyboardNavigationTarget$NoneNavigation, { members: [{ name: 'FindNextTarget', type: 8, sname: '$FindNextTarget', returnType: $System_Windows_Media_Visual, params: [$System_Windows_Media_Visual, $System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_Windows_DependencyProperty, $System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider] }, { name: 'FindPreviousTarget', type: 8, sname: '$FindPreviousTarget', returnType: $System_Windows_Media_Visual, params: [$System_Windows_Media_Visual, $System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_Windows_DependencyProperty, $System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider] }, { name: 'GetGlobalStops', type: 8, sname: '$GetGlobalStops', returnType: ss.IEnumerable, params: [$System_Windows_Media_Visual, $System_Windows_Media_Visual, $System_Windows_DependencyProperty] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_$Windows_Input_KeyboardNavigationTarget$NoneNavigation, sname: '$Default' }] });
	ss.setMetadata($System_$Windows_Input_KeyboardNavigationTarget$OnceNavigation, { members: [{ name: 'FindNextTarget', type: 8, sname: '$FindNextTarget', returnType: $System_Windows_Media_Visual, params: [$System_Windows_Media_Visual, $System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_Windows_DependencyProperty, $System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider] }, { name: 'FindPreviousTarget', type: 8, sname: '$FindPreviousTarget', returnType: $System_Windows_Media_Visual, params: [$System_Windows_Media_Visual, $System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_Windows_DependencyProperty, $System_$Windows_Input_KeyboardNavigationTarget$IStopComparerProvider] }, { name: 'GetGlobalStops', type: 8, sname: '$GetGlobalStops', returnType: ss.IEnumerable, params: [$System_Windows_Media_Visual, $System_Windows_Media_Visual, $System_Windows_DependencyProperty] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_$Windows_Input_KeyboardNavigationTarget$OnceNavigation, sname: '$Default' }] });
	ss.setMetadata($System_$Windows_Input_KeyboardNavigationTarget$RightBoundStopComparer, { members: [{ name: '.ctor', type: 1, params: [$System_$Windows_Input_KeyboardNavigationTarget$Stop] }, { name: 'Compare', type: 8, sname: 'compare', returnType: ss.Int32, params: [$System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_$Windows_Input_KeyboardNavigationTarget$Stop] }] });
	ss.setMetadata($System_$Windows_Input_KeyboardNavigationTarget$Stop, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Media_Visual] }, { name: '.ctor', type: 1, params: [$System_Windows_Media_Visual, ss.Int32], sname: '$ctor1' }, { name: 'ToString', type: 8, sname: 'toString', returnType: String, params: [] }, { name: 'Element', type: 16, returnType: $System_Windows_Media_Visual, getter: { name: 'get_Element', type: 8, sname: 'get_$Element', returnType: $System_Windows_Media_Visual, params: [] }, setter: { name: 'set_Element', type: 8, sname: 'set_$Element', returnType: Object, params: [$System_Windows_Media_Visual] } }, { name: 'TabIndex', type: 16, returnType: ss.Int32, getter: { name: 'get_TabIndex', type: 8, sname: 'get_$TabIndex', returnType: ss.Int32, params: [] }, setter: { name: 'set_TabIndex', type: 8, sname: 'set_$TabIndex', returnType: Object, params: [ss.Int32] } }] });
	ss.setMetadata($System_$Windows_Input_KeyboardNavigationTarget$StopComparerProvider, { members: [{ name: '.ctor', type: 1, params: [Function] }, { name: 'CreateComparer', type: 8, sname: '$CreateComparer', returnType: ss.IComparer, params: [$System_$Windows_Input_KeyboardNavigationTarget$Stop] }] });
	ss.setMetadata($System_$Windows_Input_KeyboardNavigationTarget$TabStopComparer, { members: [{ name: 'Compare', type: 8, sname: 'compare', returnType: ss.Int32, params: [$System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_$Windows_Input_KeyboardNavigationTarget$Stop] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_$Windows_Input_KeyboardNavigationTarget$TabStopComparer, sname: '$Default' }] });
	ss.setMetadata($System_$Windows_Input_KeyboardNavigationTarget$TopBoundStopComparer, { members: [{ name: '.ctor', type: 1, params: [$System_$Windows_Input_KeyboardNavigationTarget$Stop] }, { name: 'Compare', type: 8, sname: 'compare', returnType: ss.Int32, params: [$System_$Windows_Input_KeyboardNavigationTarget$Stop, $System_$Windows_Input_KeyboardNavigationTarget$Stop] }] });
	ss.setMetadata($System_$Windows_Markup_ElementDictionaryContentInitializer$KeyValueElementFactory, { members: [{ name: '.ctor', type: 1, params: [Function, $System_Windows_Markup_IElementFactory, System.Xaml.XamlElement] }, { name: 'CreateElement', type: 8, sname: '$CreateElement', returnType: Object, params: [$System_Windows_Markup_InitializeContext] }] });
	ss.setMetadata($System_$Windows_Markup_ElementDictionaryContentInitializer$ValueProviderFactory, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Markup_IElementFactory] }, { name: 'CreateElement', type: 8, sname: 'CreateElement', returnType: Object, params: [$System_Windows_Markup_InitializeContext] }, { name: 'ElementType', type: 16, returnType: Function, getter: { name: 'get_ElementType', type: 8, sname: 'get_ElementType', returnType: Function, params: [] } }] });
	ss.setMetadata($System_$Windows_Markup_ElementInitializer$EmptyElementInitializer, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'InitializeElement', type: 8, sname: 'InitializeElement', returnType: Object, params: [Object, $System_Windows_Markup_InitializeContext] }] });
	ss.setMetadata($System_$Windows_Markup_ElementPropertyMemberInitializer$ElementPropertyMemberFactoryInitializer, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Markup_IPropertyAdapter, $System_Windows_Markup_IElementInitializer] }, { name: 'InitializeElement', type: 8, sname: 'InitializeElement', returnType: Object, params: [Object, $System_Windows_Markup_InitializeContext] }] });
	ss.setMetadata($System_$Windows_Markup_XamlTypes$NullProvider, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ProvideValue', type: 8, sname: 'ProvideValue', returnType: Object, params: [$System_Windows_Markup_InitializeContext] }] });
	ss.setMetadata($System_$Windows_Markup_XamlTypes$TypeProvider, { attr: [new $System_Windows_Markup_MarkupExtensionParameterAttribute('Type', 0)], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ProvideValue', type: 8, sname: 'ProvideValue', returnType: Object, params: [$System_Windows_Markup_InitializeContext] }, { name: 'Type', type: 16, returnType: Function, getter: { name: 'get_Type', type: 8, sname: 'get_$Type', returnType: Function, params: [] }, setter: { name: 'set_Type', type: 8, sname: 'set_$Type', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_$Windows_Media_Transform$IdentityTransfrom, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Value', type: 16, returnType: $System_Windows_Media_Matrix, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: $System_Windows_Media_Matrix, params: [] } }] });
	ss.setMetadata($System_$Windows_Media_Animation_RootClock$ClockSchedule, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Media_Animation_IClock] }, { name: 'Tick', type: 8, sname: '$Tick', returnType: Object, params: [ss.TimeSpan] }, { name: 'Clock', type: 16, returnType: $System_Windows_Media_Animation_IClock, getter: { name: 'get_Clock', type: 8, sname: 'get_$Clock', returnType: $System_Windows_Media_Animation_IClock, params: [] }, setter: { name: 'set_Clock', type: 8, sname: 'set_$Clock', returnType: Object, params: [$System_Windows_Media_Animation_IClock] } }, { name: 'NextTick', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_NextTick', type: 8, sname: 'get_$NextTick', returnType: ss.TimeSpan, params: [] }, setter: { name: 'set_NextTick', type: 8, sname: 'set_$NextTick', returnType: Object, params: [ss.TimeSpan] } }] });
	ss.setMetadata($System_$Windows_Media_Animation_Storyboard$TargetKey, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Media_Animation_IAnimatable, $System_Windows_DependencyProperty] }, { name: 'Equals', type: 8, sname: 'equals', returnType: Boolean, params: [Object] }, { name: 'GetHashCode', type: 8, sname: 'getHashCode', returnType: ss.Int32, params: [] }, { name: 'Target', type: 16, returnType: $System_Windows_Media_Animation_IAnimatable, getter: { name: 'get_Target', type: 8, sname: 'get_$Target', returnType: $System_Windows_Media_Animation_IAnimatable, params: [] }, setter: { name: 'set_Target', type: 8, sname: 'set_$Target', returnType: Object, params: [$System_Windows_Media_Animation_IAnimatable] } }, { name: 'TargetProperty', type: 16, returnType: $System_Windows_DependencyProperty, getter: { name: 'get_TargetProperty', type: 8, sname: 'get_$TargetProperty', returnType: $System_Windows_DependencyProperty, params: [] }, setter: { name: 'set_TargetProperty', type: 8, sname: 'set_$TargetProperty', returnType: Object, params: [$System_Windows_DependencyProperty] } }] });
	ss.setMetadata($System_Windows_$DataTriggerCondition, { members: [{ name: 'Dispose', type: 8, sname: 'dispose', returnType: Object, params: [] }, { name: 'Register', isStatic: true, type: 8, sname: '$Register', returnType: $System_Windows_$DataTriggerCondition, params: [$System_Windows_FrameworkElement, $System_Windows_IExpressionProvider, Object] }, { name: 'IsMatched', type: 16, returnType: Boolean, getter: { name: 'get_IsMatched', type: 8, sname: 'get_IsMatched', returnType: Boolean, params: [] }, setter: { name: 'set_IsMatched', type: 8, sname: 'set_$IsMatched', returnType: Object, params: [Boolean] } }, { name: 'IsMatchedChanged', type: 2, adder: { name: 'add_IsMatchedChanged', type: 8, sname: 'add_IsMatchedChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_IsMatchedChanged', type: 8, sname: 'remove_IsMatchedChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_$MultiDataTriggerCondition, { members: [{ name: 'Dispose', type: 8, sname: 'dispose', returnType: Object, params: [] }, { name: 'Register', isStatic: true, type: 8, sname: '$Register', returnType: $System_Windows_$MultiDataTriggerCondition, params: [$System_Windows_FrameworkElement, ss.IEnumerable] }, { name: 'IsMatched', type: 16, returnType: Boolean, getter: { name: 'get_IsMatched', type: 8, sname: 'get_IsMatched', returnType: Boolean, params: [] }, setter: { name: 'set_IsMatched', type: 8, sname: 'set_$IsMatched', returnType: Object, params: [Boolean] } }, { name: 'IsMatchedChanged', type: 2, adder: { name: 'add_IsMatchedChanged', type: 8, sname: 'add_IsMatchedChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_IsMatchedChanged', type: 8, sname: 'remove_IsMatchedChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_$TriggerCondition, { members: [{ name: 'Dispose', type: 8, sname: 'dispose', returnType: Object, params: [] }, { name: 'Register', isStatic: true, type: 8, sname: '$Register', returnType: $System_Windows_$TriggerCondition, params: [$System_Windows_FrameworkElement, $System_Windows_DependencyProperty, Object] }, { name: 'IsMatched', type: 16, returnType: Boolean, getter: { name: 'get_IsMatched', type: 8, sname: 'get_IsMatched', returnType: Boolean, params: [] }, setter: { name: 'set_IsMatched', type: 8, sname: 'set_$IsMatched', returnType: Object, params: [Boolean] } }, { name: 'IsMatchedChanged', type: 2, adder: { name: 'add_IsMatchedChanged', type: 8, sname: 'add_IsMatchedChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_IsMatchedChanged', type: 8, sname: 'remove_IsMatchedChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Application, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'LoadComponent', isStatic: true, type: 8, sname: 'LoadComponent', returnType: Object, params: [String] }, { name: 'LoadComponent', isStatic: true, type: 8, sname: 'LoadComponent$1', returnType: Object, params: [Object, String] }, { name: 'OnLoadCompleted', type: 8, sname: 'OnLoadCompleted', returnType: Object, params: [] }, { name: 'OnStartup', type: 8, sname: 'OnStartup', returnType: Object, params: [] }, { name: 'Run', type: 8, sname: 'Run', returnType: Object, params: [] }, { name: 'Current', isStatic: true, type: 16, returnType: $System_Windows_Application, getter: { name: 'get_Current', isStatic: true, type: 8, sname: 'get_Current', returnType: $System_Windows_Application, params: [] }, setter: { name: 'set_Current', isStatic: true, type: 8, sname: 'set_Current', returnType: Object, params: [$System_Windows_Application] } }, { name: 'MainWindow', type: 16, returnType: $System_Windows_Window, getter: { name: 'get_MainWindow', type: 8, sname: 'get_MainWindow', returnType: $System_Windows_Window, params: [] }, setter: { name: 'set_MainWindow', type: 8, sname: 'set_MainWindow', returnType: Object, params: [$System_Windows_Window] } }, { name: 'Resources', type: 16, returnType: $System_Windows_ResourceDictionary, getter: { name: 'get_Resources', type: 8, sname: 'get_Resources', returnType: $System_Windows_ResourceDictionary, params: [] }, setter: { name: 'set_Resources', type: 8, sname: 'set_Resources', returnType: Object, params: [$System_Windows_ResourceDictionary] } }, { name: 'StartupUri', type: 16, returnType: String, getter: { name: 'get_StartupUri', type: 8, sname: 'get_StartupUri', returnType: String, params: [] }, setter: { name: 'set_StartupUri', type: 8, sname: 'set_StartupUri', returnType: Object, params: [String] } }, { name: 'SystemResources', isStatic: true, type: 4, returnType: $System_Windows_SystemResources, sname: 'SystemResources' }, { name: 'LoadCompleted', type: 2, adder: { name: 'add_LoadCompleted', type: 8, sname: 'add_LoadCompleted', returnType: Object, params: [Function] }, remover: { name: 'remove_LoadCompleted', type: 8, sname: 'remove_LoadCompleted', returnType: Object, params: [Function] } }, { name: 'ResourcesChanged', type: 2, adder: { name: 'add_ResourcesChanged', type: 8, sname: 'add_ResourcesChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_ResourcesChanged', type: 8, sname: 'remove_ResourcesChanged', returnType: Object, params: [Function] } }, { name: 'Startup', type: 2, adder: { name: 'add_Startup', type: 8, sname: 'add_Startup', returnType: Object, params: [Function] }, remover: { name: 'remove_Startup', type: 8, sname: 'remove_Startup', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_ApplicationHost, { members: [{ name: 'Initialize', isStatic: true, type: 8, sname: 'Initialize', returnType: Object, params: [$System_Windows_IApplicationHost] }, { name: 'Current', isStatic: true, type: 16, returnType: $System_Windows_IApplicationHost, getter: { name: 'get_Current', isStatic: true, type: 8, sname: 'get_Current', returnType: $System_Windows_IApplicationHost, params: [] } }] });
	ss.setMetadata($System_Windows_ApplicationHostAttribute, { members: [{ name: '.ctor', type: 1, params: [Function] }, { name: 'Type', type: 16, returnType: Function, getter: { name: 'get_Type', type: 8, sname: 'get_Type', returnType: Function, params: [] }, setter: { name: 'set_Type', type: 8, sname: 'set_Type', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_ApplicationHostExtensions, { members: [{ name: 'GetKeyboardDeviceFromElement', isStatic: true, type: 8, sname: 'GetKeyboardDeviceFromElement', returnType: $System_Windows_Input_KeyboardDevice, params: [$System_Windows_IApplicationHost, $System_Windows_FrameworkElement] }, { name: 'GetMouseDeviceFromElement', isStatic: true, type: 8, sname: 'GetMouseDeviceFromElement', returnType: $System_Windows_Input_MouseDevice, params: [$System_Windows_IApplicationHost, $System_Windows_FrameworkElement] }] });
	ss.setMetadata($System_Windows_CoercedDependencyPropertyValueEntry, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_IDependencyPropertyValueEntry, $System_Windows_DependencyObject, Function] }, { name: 'ClearAnimationValue', type: 8, sname: 'ClearAnimationValue', returnType: Object, params: [] }, { name: 'ClearBaseValue', type: 8, sname: 'ClearBaseValue', returnType: Object, params: [ss.Int32] }, { name: 'ClearCurrentValue', type: 8, sname: 'ClearCurrentValue', returnType: Object, params: [] }, { name: 'CoerceValue', type: 8, sname: 'CoerceValue', returnType: Object, params: [] }, { name: 'GetAnimationValue', type: 8, sname: 'GetAnimationValue', returnType: Object, params: [Boolean] }, { name: 'GetBaseValue', type: 8, sname: 'GetBaseValue', returnType: Object, params: [Boolean] }, { name: 'GetBaseValue', type: 8, sname: 'GetBaseValue$1', returnType: Object, params: [ss.Int32, Boolean] }, { name: 'GetBaseValuePriority', type: 8, sname: 'GetBaseValuePriority', returnType: ss.Int32, params: [] }, { name: 'GetCurrentValue', type: 8, sname: 'GetCurrentValue', returnType: Object, params: [Boolean] }, { name: 'SetAnimationValue', type: 8, sname: 'SetAnimationValue', returnType: Object, params: [Object] }, { name: 'SetBaseValue', type: 8, sname: 'SetBaseValue', returnType: Object, params: [ss.Int32, Object] }, { name: 'SetCurrentValue', type: 8, sname: 'SetCurrentValue', returnType: Object, params: [Object] }, { name: 'IsCoerced', type: 16, returnType: Boolean, getter: { name: 'get_IsCoerced', type: 8, sname: 'get_IsCoerced', returnType: Boolean, params: [] } }, { name: 'Value', type: 16, returnType: Object, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: Object, params: [] } }, { name: 'ValueChanged', type: 2, adder: { name: 'add_ValueChanged', type: 8, sname: 'add_ValueChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_ValueChanged', type: 8, sname: 'remove_ValueChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_ComponentResourceKey, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Equals', type: 8, sname: 'equals', returnType: Boolean, params: [Object] }, { name: 'GetHashCode', type: 8, sname: 'getHashCode', returnType: ss.Int32, params: [] }, { name: 'ProvideValue', type: 8, sname: 'ProvideValue', returnType: Object, params: [$System_Windows_Markup_InitializeContext] }, { name: 'ToString', type: 8, sname: 'toString', returnType: String, params: [] }, { name: 'Assembly', type: 16, returnType: Object, getter: { name: 'get_Assembly', type: 8, sname: 'get_Assembly', returnType: Object, params: [] } }, { name: 'ResourceId', type: 16, returnType: Object, getter: { name: 'get_ResourceId', type: 8, sname: 'get_ResourceId', returnType: Object, params: [] }, setter: { name: 'set_ResourceId', type: 8, sname: 'set_ResourceId', returnType: Object, params: [Object] } }, { name: 'TypeInTargetAssembly', type: 16, returnType: Function, getter: { name: 'get_TypeInTargetAssembly', type: 8, sname: 'get_TypeInTargetAssembly', returnType: Function, params: [] }, setter: { name: 'set_TypeInTargetAssembly', type: 8, sname: 'set_TypeInTargetAssembly', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Condition, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'CreateDataTriggerCondition', type: 8, sname: 'CreateDataTriggerCondition', returnType: $System_Windows_IDataTriggerCondition, params: [$System_Windows_FrameworkElement] }, { name: 'CreateTriggerCondition', type: 8, sname: 'CreateTriggerCondition', returnType: $System_Windows_IDataTriggerCondition, params: [$System_Windows_FrameworkElement] }, { name: 'Binding', type: 16, returnType: $System_Windows_Data_Binding, getter: { name: 'get_Binding', type: 8, sname: 'get_Binding', returnType: $System_Windows_Data_Binding, params: [] }, setter: { name: 'set_Binding', type: 8, sname: 'set_Binding', returnType: Object, params: [$System_Windows_Data_Binding] } }, { name: 'Property', type: 16, returnType: $System_Windows_IPropertyPathElement, getter: { name: 'get_Property', type: 8, sname: 'get_Property', returnType: $System_Windows_IPropertyPathElement, params: [] }, setter: { name: 'set_Property', type: 8, sname: 'set_Property', returnType: Object, params: [$System_Windows_IPropertyPathElement] } }, { name: 'SourceName', type: 16, returnType: String, getter: { name: 'get_SourceName', type: 8, sname: 'get_SourceName', returnType: String, params: [] }, setter: { name: 'set_SourceName', type: 8, sname: 'set_SourceName', returnType: Object, params: [String] } }, { name: 'Value', type: 16, returnType: Object, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: Object, params: [] }, setter: { name: 'set_Value', type: 8, sname: 'set_Value', returnType: Object, params: [Object] } }] });
	ss.setMetadata($System_Windows_CornerRadius, { members: [{ name: '.ctor', type: 1, params: [Number] }, { name: '.ctor', type: 1, params: [Number, Number, Number, Number], sname: '$ctor1' }, { name: 'Equals', type: 8, sname: 'equals', returnType: Boolean, params: [Object] }, { name: 'GetHashCode', type: 8, sname: 'getHashCode', returnType: ss.Int32, params: [] }, { name: 'Parse', isStatic: true, type: 8, sname: 'Parse', returnType: $System_Windows_CornerRadius, params: [String] }, { name: 'ToString', type: 8, sname: 'toString', returnType: String, params: [] }, { name: 'op_Equality', isStatic: true, type: 8, sname: 'op_Equality', returnType: Boolean, params: [$System_Windows_CornerRadius, $System_Windows_CornerRadius] }, { name: 'op_Inequality', isStatic: true, type: 8, sname: 'op_Inequality', returnType: Boolean, params: [$System_Windows_CornerRadius, $System_Windows_CornerRadius] }, { name: 'BottomLeft', type: 16, returnType: Number, getter: { name: 'get_BottomLeft', type: 8, sname: 'get_BottomLeft', returnType: Number, params: [] }, setter: { name: 'set_BottomLeft', type: 8, sname: 'set_BottomLeft', returnType: Object, params: [Number] } }, { name: 'BottomRight', type: 16, returnType: Number, getter: { name: 'get_BottomRight', type: 8, sname: 'get_BottomRight', returnType: Number, params: [] }, setter: { name: 'set_BottomRight', type: 8, sname: 'set_BottomRight', returnType: Object, params: [Number] } }, { name: 'IsUniform', type: 16, returnType: Boolean, getter: { name: 'get_IsUniform', type: 8, sname: 'get_IsUniform', returnType: Boolean, params: [] }, setter: { name: 'set_IsUniform', type: 8, sname: 'set_IsUniform', returnType: Object, params: [Boolean] } }, { name: 'TopLeft', type: 16, returnType: Number, getter: { name: 'get_TopLeft', type: 8, sname: 'get_TopLeft', returnType: Number, params: [] }, setter: { name: 'set_TopLeft', type: 8, sname: 'set_TopLeft', returnType: Object, params: [Number] } }, { name: 'TopRight', type: 16, returnType: Number, getter: { name: 'get_TopRight', type: 8, sname: 'get_TopRight', returnType: Number, params: [] }, setter: { name: 'set_TopRight', type: 8, sname: 'set_TopRight', returnType: Object, params: [Number] } }, { name: 'Zero', isStatic: true, type: 4, returnType: $System_Windows_CornerRadius, sname: 'Zero' }] });
	ss.setMetadata($System_Windows_CornerRadiusExtensions, { members: [{ name: 'DefaultIfNull', isStatic: true, type: 8, sname: 'DefaultIfNull', returnType: $System_Windows_CornerRadius, params: [$System_Windows_CornerRadius, $System_Windows_CornerRadius] }] });
	ss.setMetadata($System_Windows_DataTemplate, { attr: [new $System_Windows_Markup_DictionaryKeyPropertyAttribute('Key')], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'DataType', type: 16, returnType: Function, getter: { name: 'get_DataType', type: 8, sname: 'get_DataType', returnType: Function, params: [] }, setter: { name: 'set_DataType', type: 8, sname: 'set_DataType', returnType: Object, params: [Function] } }, { name: 'Key', type: 16, returnType: Object, getter: { name: 'get_Key', type: 8, sname: 'get_Key', returnType: Object, params: [] }, setter: { name: 'set_Key', type: 8, sname: 'set_Key', returnType: Object, params: [Object] } }] });
	ss.setMetadata($System_Windows_DataTrigger, { attr: [new $System_Windows_Markup_ContentPropertyAttribute('Setters')], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'CreateDataTriggerCondition', type: 8, sname: 'CreateDataTriggerCondition', returnType: $System_Windows_IDataTriggerCondition, params: [$System_Windows_FrameworkElement] }, { name: 'Binding', type: 16, returnType: $System_Windows_Data_Binding, getter: { name: 'get_Binding', type: 8, sname: 'get_Binding', returnType: $System_Windows_Data_Binding, params: [] }, setter: { name: 'set_Binding', type: 8, sname: 'set_Binding', returnType: Object, params: [$System_Windows_Data_Binding] } }, { name: 'Setters', type: 16, returnType: ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITriggerAction]), getter: { name: 'get_Setters', type: 8, sname: 'get_Setters', returnType: ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITriggerAction]), params: [] }, setter: { name: 'set_Setters', type: 8, sname: 'set_Setters', returnType: Object, params: [ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITriggerAction])] } }, { name: 'TriggerActions', type: 16, returnType: ss.IEnumerable, getter: { name: 'get_TriggerActions', type: 8, sname: 'get_TriggerActions', returnType: ss.IEnumerable, params: [] } }, { name: 'Value', type: 16, returnType: Object, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: Object, params: [] }, setter: { name: 'set_Value', type: 8, sname: 'set_Value', returnType: Object, params: [Object] } }] });
	ss.setMetadata($System_Windows_DataTriggerBase, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Attach', type: 8, sname: 'Attach', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_BaseValueSource] }, { name: 'CreateDataTriggerCondition', type: 8, sname: 'CreateDataTriggerCondition', returnType: $System_Windows_IDataTriggerCondition, params: [$System_Windows_FrameworkElement] }, { name: 'Detach', type: 8, sname: 'Detach', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_BaseValueSource] }] });
	ss.setMetadata($System_Windows_DependencyObject, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ClearValue', type: 8, sname: 'ClearValue', returnType: Object, params: [$System_Windows_DependencyProperty, $System_Windows_BaseValueSource] }, { name: 'ClearValue', type: 8, sname: 'ClearValue$1', returnType: Object, params: [$System_Windows_DependencyPropertyKey, $System_Windows_BaseValueSource] }, { name: 'CoerceValue', type: 8, sname: 'CoerceValue', returnType: Object, params: [$System_Windows_DependencyProperty] }, { name: 'ContainsValue', type: 8, sname: 'ContainsValue', returnType: Boolean, params: [$System_Windows_DependencyProperty] }, { name: 'ContainsValue', type: 8, sname: 'ContainsValue$1', returnType: Boolean, params: [$System_Windows_DependencyPropertyKey] }, { name: 'GetBaseValueSource', type: 8, sname: 'GetBaseValueSource', returnType: $System_Windows_BaseValueSource, params: [$System_Windows_DependencyProperty] }, { name: 'GetValue', type: 8, sname: 'GetValue', returnType: Object, params: [$System_Windows_DependencyProperty] }, { name: 'GetValue', type: 8, sname: 'GetValue$1', returnType: Object, params: [$System_Windows_DependencyPropertyKey] }, { name: 'GetValueEntry', type: 8, sname: 'GetValueEntry', returnType: $System_Windows_IDependencyPropertyValueEntry, params: [$System_Windows_DependencyProperty] }, { name: 'GetValueEntry', type: 8, sname: 'GetValueEntry$1', returnType: $System_Windows_IDependencyPropertyValueEntry, params: [$System_Windows_DependencyPropertyKey] }, { name: 'GetValueSource', type: 8, sname: 'GetValueSource', returnType: $System_Windows_ValueSource, params: [$System_Windows_DependencyProperty] }, { name: 'OnInheritanceParentChanged', type: 8, sname: 'OnInheritanceParentChanged', returnType: Object, params: [$System_Windows_DependencyObject, $System_Windows_DependencyObject] }, { name: 'OnPropertyChanged', type: 8, sname: 'OnPropertyChanged', returnType: Object, params: [$System_Windows_DependencyPropertyChangedEventArgs] }, { name: 'SetCurrentValue', type: 8, sname: 'SetCurrentValue', returnType: Object, params: [$System_Windows_DependencyProperty, Object] }, { name: 'SetCurrentValue', type: 8, sname: 'SetCurrentValue$1', returnType: Object, params: [$System_Windows_DependencyPropertyKey, Object] }, { name: 'SetInheritanceParent', type: 8, sname: 'SetInheritanceParent', returnType: Object, params: [$System_Windows_DependencyObject] }, { name: 'SetValue', type: 8, sname: 'SetValue', returnType: Object, params: [$System_Windows_DependencyProperty, Object, $System_Windows_BaseValueSource] }, { name: 'SetValue', type: 8, sname: 'SetValue$1', returnType: Object, params: [$System_Windows_DependencyPropertyKey, Object, $System_Windows_BaseValueSource] }, { name: 'PropertyChanged', type: 2, adder: { name: 'add_PropertyChanged', type: 8, sname: 'add_PropertyChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_PropertyChanged', type: 8, sname: 'remove_PropertyChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_DependencyProperty, { attr: [new $System_Windows_Markup_TypeConverterAttribute($System_Windows_DependencyPropertyTypeConverter)], members: [{ name: 'AddOwner', type: 8, sname: 'AddOwner', returnType: $System_Windows_DependencyProperty, params: [Function, $System_Windows_PropertyMetadata] }, { name: 'GetFlattenedProperties', isStatic: true, type: 8, sname: 'GetFlattenedProperties', returnType: ss.IEnumerable, params: [Function] }, { name: 'GetHashCode', type: 8, sname: 'getHashCode', returnType: ss.Int32, params: [] }, { name: 'GetMetadata', type: 8, sname: 'GetMetadata', returnType: $System_Windows_PropertyMetadata, params: [Function] }, { name: 'GetOwnedProperty', isStatic: true, type: 8, sname: 'GetOwnedProperty', returnType: $System_Windows_DependencyProperty, params: [Function, String] }, { name: 'GetProperties', isStatic: true, type: 8, sname: 'GetProperties', returnType: ss.IEnumerable, params: [Function] }, { name: 'GetProperty', isStatic: true, type: 8, sname: 'GetProperty', returnType: $System_Windows_DependencyProperty, params: [Function, System.Xaml.XamlName] }, { name: 'GetSingleProperty', isStatic: true, type: 8, sname: 'GetSingleProperty', returnType: $System_Windows_DependencyProperty, params: [Function, String] }, { name: 'IsValidReadOnlyKey', isStatic: true, type: 8, sname: 'IsValidReadOnlyKey', returnType: Boolean, params: [$System_Windows_DependencyPropertyKey] }, { name: 'IsValidValue', type: 8, sname: 'IsValidValue', returnType: Boolean, params: [Object] }, { name: 'OverrideMetadata', type: 8, sname: 'OverrideMetadata', returnType: Object, params: [Function, $System_Windows_PropertyMetadata] }, { name: 'Register', isStatic: true, type: 8, sname: 'Register', returnType: $System_Windows_DependencyProperty, params: [String, Function, Function, $System_Windows_PropertyMetadata, Function] }, { name: 'RegisterAttached', isStatic: true, type: 8, sname: 'RegisterAttached', returnType: $System_Windows_DependencyProperty, params: [String, Function, Function, $System_Windows_PropertyMetadata, Function] }, { name: 'RegisterAttachedReadOnly', isStatic: true, type: 8, sname: 'RegisterAttachedReadOnly', returnType: $System_Windows_DependencyPropertyKey, params: [String, Function, Function, $System_Windows_PropertyMetadata, Function] }, { name: 'RegisterReadOnly', isStatic: true, type: 8, sname: 'RegisterReadOnly', returnType: $System_Windows_DependencyPropertyKey, params: [String, Function, Function, $System_Windows_PropertyMetadata, Function] }, { name: 'ToString', type: 8, sname: 'toString', returnType: String, params: [] }, { name: 'Inherits', type: 16, returnType: Boolean, getter: { name: 'get_Inherits', type: 8, sname: 'get_Inherits', returnType: Boolean, params: [] }, setter: { name: 'set_Inherits', type: 8, sname: 'set_Inherits', returnType: Object, params: [Boolean] } }, { name: 'IsReadOnly', type: 16, returnType: Boolean, getter: { name: 'get_IsReadOnly', type: 8, sname: 'get_IsReadOnly', returnType: Boolean, params: [] }, setter: { name: 'set_IsReadOnly', type: 8, sname: 'set_IsReadOnly', returnType: Object, params: [Boolean] } }, { name: 'Name', type: 16, returnType: String, getter: { name: 'get_Name', type: 8, sname: 'get_Name', returnType: String, params: [] }, setter: { name: 'set_Name', type: 8, sname: 'set_Name', returnType: Object, params: [String] } }, { name: 'OwnerType', type: 16, returnType: Function, getter: { name: 'get_OwnerType', type: 8, sname: 'get_OwnerType', returnType: Function, params: [] }, setter: { name: 'set_OwnerType', type: 8, sname: 'set_OwnerType', returnType: Object, params: [Function] } }, { name: 'PropertyType', type: 16, returnType: Function, getter: { name: 'get_PropertyType', type: 8, sname: 'get_PropertyType', returnType: Function, params: [] }, setter: { name: 'set_PropertyType', type: 8, sname: 'set_PropertyType', returnType: Object, params: [Function] } }, { name: 'ValidateValueCallback', type: 16, returnType: Function, getter: { name: 'get_ValidateValueCallback', type: 8, sname: 'get_ValidateValueCallback', returnType: Function, params: [] }, setter: { name: 'set_ValidateValueCallback', type: 8, sname: 'set_ValidateValueCallback', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_DependencyPropertyChangedEventArgs, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_DependencyProperty, Object, Object] }, { name: 'NewValue', type: 16, returnType: Object, getter: { name: 'get_NewValue', type: 8, sname: 'get_NewValue', returnType: Object, params: [] }, setter: { name: 'set_NewValue', type: 8, sname: 'set_NewValue', returnType: Object, params: [Object] } }, { name: 'OldValue', type: 16, returnType: Object, getter: { name: 'get_OldValue', type: 8, sname: 'get_OldValue', returnType: Object, params: [] }, setter: { name: 'set_OldValue', type: 8, sname: 'set_OldValue', returnType: Object, params: [Object] } }, { name: 'Property', type: 16, returnType: $System_Windows_DependencyProperty, getter: { name: 'get_Property', type: 8, sname: 'get_Property', returnType: $System_Windows_DependencyProperty, params: [] }, setter: { name: 'set_Property', type: 8, sname: 'set_Property', returnType: Object, params: [$System_Windows_DependencyProperty] } }] });
	ss.setMetadata($System_Windows_DependencyPropertyChangedEventHandlerExtensions, { members: [{ name: 'Raise', isStatic: true, type: 8, sname: 'Raise', returnType: Object, params: [Function, Object, $System_Windows_DependencyPropertyChangedEventArgs] }] });
	ss.setMetadata($System_Windows_DependencyPropertyKey, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_DependencyProperty] }, { name: 'DependencyProperty', type: 16, returnType: $System_Windows_DependencyProperty, getter: { name: 'get_DependencyProperty', type: 8, sname: 'get_DependencyProperty', returnType: $System_Windows_DependencyProperty, params: [] }, setter: { name: 'set_DependencyProperty', type: 8, sname: 'set_DependencyProperty', returnType: Object, params: [$System_Windows_DependencyProperty] } }] });
	ss.setMetadata($System_Windows_DependencyPropertyPathElement, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_DependencyProperty] }, { name: 'CreatePropertyObserver', type: 8, sname: 'CreatePropertyObserver', returnType: $System_Windows_Data_IPropertyObserver, params: [Function] }, { name: 'Equals', type: 8, sname: 'equals', returnType: Boolean, params: [Object] }, { name: 'GetHashCode', type: 8, sname: 'getHashCode', returnType: ss.Int32, params: [] }, { name: 'ToString', type: 8, sname: 'toString', returnType: String, params: [] }, { name: 'DependencyProperty', type: 16, returnType: $System_Windows_DependencyProperty, getter: { name: 'get_DependencyProperty', type: 8, sname: 'get_DependencyProperty', returnType: $System_Windows_DependencyProperty, params: [] }, setter: { name: 'set_DependencyProperty', type: 8, sname: 'set_DependencyProperty', returnType: Object, params: [$System_Windows_DependencyProperty] } }] });
	ss.setMetadata($System_Windows_DependencyPropertyTypeConverter, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ConvertFrom', type: 8, sname: 'ConvertFrom', returnType: Object, params: [System.Xaml.XamlNamespaces, Object] }] });
	ss.setMetadata($System_Windows_DependencyPropertyValueEntry, { attr: [new System.Diagnostics.DebuggerNonUserCodeAttribute()], members: [{ name: '.ctor', type: 1, params: [$System_Windows_DependencyObject, $System_Windows_DependencyProperty] }, { name: 'ClearAnimationValue', type: 8, sname: 'ClearAnimationValue', returnType: Object, params: [] }, { name: 'ClearBaseValue', type: 8, sname: 'ClearBaseValue', returnType: Object, params: [ss.Int32] }, { name: 'ClearCurrentValue', type: 8, sname: 'ClearCurrentValue', returnType: Object, params: [] }, { name: 'GetAnimationValue', type: 8, sname: 'GetAnimationValue', returnType: Object, params: [Boolean] }, { name: 'GetBaseValue', type: 8, sname: 'GetBaseValue', returnType: Object, params: [Boolean] }, { name: 'GetBaseValue', type: 8, sname: 'GetBaseValue$1', returnType: Object, params: [ss.Int32, Boolean] }, { name: 'GetBaseValuePriority', type: 8, sname: 'GetBaseValuePriority', returnType: ss.Int32, params: [] }, { name: 'GetCurrentValue', type: 8, sname: 'GetCurrentValue', returnType: Object, params: [Boolean] }, { name: 'SetAnimationValue', type: 8, sname: 'SetAnimationValue', returnType: Object, params: [Object] }, { name: 'SetBaseValue', type: 8, sname: 'SetBaseValue', returnType: Object, params: [ss.Int32, Object] }, { name: 'SetCurrentValue', type: 8, sname: 'SetCurrentValue', returnType: Object, params: [Object] }, { name: 'Value', type: 16, returnType: Object, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: Object, params: [] } }, { name: 'ValueChanged', type: 2, adder: { name: 'add_ValueChanged', type: 8, sname: 'add_ValueChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_ValueChanged', type: 8, sname: 'remove_ValueChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Disposable, { members: [{ name: '.ctor', type: 1, params: [Function] }, { name: 'Combine', isStatic: true, type: 8, sname: 'Combine', returnType: ss.IDisposable, params: [ss.IDisposable, ss.IDisposable] }, { name: 'Dispose', type: 8, sname: 'dispose', returnType: Object, params: [] }, { name: 'Empty', isStatic: true, type: 4, returnType: ss.IDisposable, sname: 'Empty' }] });
	ss.setMetadata($System_Windows_Duration, { members: [{ name: '.ctor', type: 1, params: [ss.TimeSpan] }, { name: 'Equals', type: 8, sname: 'equals', returnType: Boolean, params: [Object] }, { name: 'GetHashCode', type: 8, sname: 'getHashCode', returnType: ss.Int32, params: [] }, { name: 'Parse', isStatic: true, type: 8, sname: 'Parse', returnType: $System_Windows_Duration, params: [String] }, { name: 'ToString', type: 8, sname: 'toString', returnType: String, params: [] }, { name: 'HasTimeSpan', type: 16, returnType: Boolean, getter: { name: 'get_HasTimeSpan', type: 8, sname: 'get_HasTimeSpan', returnType: Boolean, params: [] } }, { name: 'IsAutomatic', type: 16, returnType: Boolean, getter: { name: 'get_IsAutomatic', type: 8, sname: 'get_IsAutomatic', returnType: Boolean, params: [] } }, { name: 'IsForever', type: 16, returnType: Boolean, getter: { name: 'get_IsForever', type: 8, sname: 'get_IsForever', returnType: Boolean, params: [] } }, { name: 'TimeSpan', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_TimeSpan', type: 8, sname: 'get_TimeSpan', returnType: ss.TimeSpan, params: [] }, setter: { name: 'set_TimeSpan', type: 8, sname: 'set_TimeSpan', returnType: Object, params: [ss.TimeSpan] } }, { name: 'Automatic', isStatic: true, type: 4, returnType: $System_Windows_Duration, sname: 'Automatic' }, { name: 'Forever', isStatic: true, type: 4, returnType: $System_Windows_Duration, sname: 'Forever' }] });
	ss.setMetadata($System_Windows_DynamicResourceExtension, { attr: [new $System_Windows_Markup_MarkupExtensionParameterAttribute('ResourceKey', 0)], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ProvideValue', type: 8, sname: 'ProvideValue', returnType: Object, params: [$System_Windows_Markup_InitializeContext] }, { name: 'ResourceKey', type: 16, returnType: Object, getter: { name: 'get_ResourceKey', type: 8, sname: 'get_ResourceKey', returnType: Object, params: [] }, setter: { name: 'set_ResourceKey', type: 8, sname: 'set_ResourceKey', returnType: Object, params: [Object] } }] });
	ss.setMetadata($System_Windows_EmbeddedResourceLoader, { members: [{ name: 'LoadResourceData', isStatic: true, type: 8, sname: 'LoadResourceData', returnType: Array, params: [String] }, { name: 'LoadResourceData', isStatic: true, type: 8, sname: 'LoadResourceData$1', returnType: Array, params: [String, String] }, { name: 'LoadResourceElement', isStatic: true, type: 8, sname: 'LoadResourceElement', returnType: Object, params: [String] }, { name: 'LoadResourceElement', isStatic: true, type: 8, sname: 'LoadResourceElement$1', returnType: Object, params: [String, String] }] });
	ss.setMetadata($System_Windows_EventManager, { members: [{ name: 'AddOwner', isStatic: true, type: 8, sname: 'AddOwner', returnType: Object, params: [$System_Windows_RoutedEvent, Function] }, { name: 'FindRoutedEvent', isStatic: true, type: 8, sname: 'FindRoutedEvent', returnType: $System_Windows_RoutedEvent, params: [Function, String] }, { name: 'GetClassHandlers', isStatic: true, type: 8, sname: 'GetClassHandlers', returnType: ss.IEnumerable, params: [Function, $System_Windows_RoutedEvent] }, { name: 'GetFlattenedClassHandlers', isStatic: true, type: 8, sname: 'GetFlattenedClassHandlers', returnType: ss.IEnumerable, params: [Function, $System_Windows_RoutedEvent] }, { name: 'GetOwnedRoutedEvent', isStatic: true, type: 8, sname: 'GetOwnedRoutedEvent', returnType: $System_Windows_RoutedEvent, params: [Function, String] }, { name: 'GetRoutedEvent', isStatic: true, type: 8, sname: 'GetRoutedEvent', returnType: $System_Windows_RoutedEvent, params: [System.Xaml.XamlName] }, { name: 'GetRoutedEvents', isStatic: true, type: 8, sname: 'GetRoutedEvents', returnType: ss.IEnumerable, params: [Function, Boolean] }, { name: 'GetRoutedEvents', isStatic: true, type: 8, sname: 'GetRoutedEvents$1', returnType: ss.IEnumerable, params: [Function, String, Boolean] }, { name: 'RegisterClassHandler', isStatic: true, type: 8, sname: 'RegisterClassHandler', returnType: Object, params: [Function, $System_Windows_RoutedEvent, Function, Boolean] }, { name: 'RegisterRoutedEvent', isStatic: true, type: 8, sname: 'RegisterRoutedEvent', returnType: $System_Windows_RoutedEvent, params: [String, $System_Windows_RoutingStrategy, Function, Function] }] });
	ss.setMetadata($System_Windows_EventRoute, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_RoutedEvent, ss.IEnumerable] }, { name: 'InvokeHandlers', type: 8, sname: 'InvokeHandlers', returnType: Object, params: [$System_Windows_RoutedEventArgs] }] });
	ss.setMetadata($System_Windows_EventRouteItem, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_RoutedEventHandlerItem, Object, Object, Object] }, { name: 'InvokeHandler', type: 8, sname: 'InvokeHandler', returnType: Object, params: [$System_Windows_RoutedEventArgs] }, { name: 'handler', type: 4, returnType: $System_Windows_RoutedEventHandlerItem, sname: 'handler' }, { name: 'originalSource', type: 4, returnType: Object, sname: 'originalSource' }, { name: 'source', type: 4, returnType: Object, sname: 'source' }, { name: 'target', type: 4, returnType: Object, sname: 'target' }] });
	ss.setMetadata($System_Windows_EventSetter, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Apply', type: 8, sname: 'Apply', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_BaseValueSource] }, { name: 'Clean', type: 8, sname: 'Clean', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_BaseValueSource] }, { name: 'IsActionOverlaps', type: 8, sname: 'IsActionOverlaps', returnType: Boolean, params: [$System_Windows_ITriggerAction] }, { name: 'Event', type: 16, returnType: $System_Windows_RoutedEvent, getter: { name: 'get_Event', type: 8, sname: 'get_Event', returnType: $System_Windows_RoutedEvent, params: [] }, setter: { name: 'set_Event', type: 8, sname: 'set_Event', returnType: Object, params: [$System_Windows_RoutedEvent] } }, { name: 'HandledEventsToo', type: 16, returnType: Boolean, getter: { name: 'get_HandledEventsToo', type: 8, sname: 'get_HandledEventsToo', returnType: Boolean, params: [] }, setter: { name: 'set_HandledEventsToo', type: 8, sname: 'set_HandledEventsToo', returnType: Object, params: [Boolean] } }, { name: 'Handler', type: 16, returnType: Function, getter: { name: 'get_Handler', type: 8, sname: 'get_Handler', returnType: Function, params: [] }, setter: { name: 'set_Handler', type: 8, sname: 'set_Handler', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_EventTrigger, { attr: [new $System_Windows_Markup_ContentPropertyAttribute('Actions')], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'CreateEventTriggerCondition', type: 8, sname: 'CreateEventTriggerCondition', returnType: $System_Windows_IEventTriggerCondition, params: [$System_Windows_FrameworkElement] }, { name: 'Actions', type: 16, returnType: ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITriggerAction]), getter: { name: 'get_Actions', type: 8, sname: 'get_Actions', returnType: ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITriggerAction]), params: [] }, setter: { name: 'set_Actions', type: 8, sname: 'set_Actions', returnType: Object, params: [ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITriggerAction])] } }, { name: 'RoutedEvent', type: 16, returnType: $System_Windows_RoutedEvent, getter: { name: 'get_RoutedEvent', type: 8, sname: 'get_RoutedEvent', returnType: $System_Windows_RoutedEvent, params: [] }, setter: { name: 'set_RoutedEvent', type: 8, sname: 'set_RoutedEvent', returnType: Object, params: [$System_Windows_RoutedEvent] } }, { name: 'SourceName', type: 16, returnType: String, getter: { name: 'get_SourceName', type: 8, sname: 'get_SourceName', returnType: String, params: [] }, setter: { name: 'set_SourceName', type: 8, sname: 'set_SourceName', returnType: Object, params: [String] } }, { name: 'TriggerActions', type: 16, returnType: ss.IEnumerable, getter: { name: 'get_TriggerActions', type: 8, sname: 'get_TriggerActions', returnType: ss.IEnumerable, params: [] } }] });
	ss.setMetadata($System_Windows_EventTriggerBase, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Attach', type: 8, sname: 'Attach', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_BaseValueSource] }, { name: 'CreateEventTriggerCondition', type: 8, sname: 'CreateEventTriggerCondition', returnType: $System_Windows_IEventTriggerCondition, params: [$System_Windows_FrameworkElement] }, { name: 'Detach', type: 8, sname: 'Detach', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_BaseValueSource] }] });
	ss.setMetadata($System_Windows_FontFamily, { members: [{ name: '.ctor', type: 1, params: [ss.IEnumerable] }, { name: '.ctor', type: 1, params: [String], sname: '$ctor1' }, { name: 'Parse', isStatic: true, type: 8, sname: 'Parse', returnType: $System_Windows_FontFamily, params: [String] }, { name: 'FamilyName', type: 16, returnType: String, getter: { name: 'get_FamilyName', type: 8, sname: 'get_FamilyName', returnType: String, params: [] } }, { name: 'FamilyNames', type: 16, returnType: ss.IEnumerable, getter: { name: 'get_FamilyNames', type: 8, sname: 'get_FamilyNames', returnType: ss.IEnumerable, params: [] }, setter: { name: 'set_FamilyNames', type: 8, sname: 'set_FamilyNames', returnType: Object, params: [ss.IEnumerable] } }, { name: 'Default', isStatic: true, type: 4, returnType: $System_Windows_FontFamily, sname: 'Default' }] });
	ss.setMetadata($System_Windows_FrameworkElement, { attr: [new $System_Windows_Markup_RuntimeNamePropertyAttribute('Name')], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ApplyTemplate', type: 8, sname: 'ApplyTemplate', returnType: Boolean, params: [] }, { name: 'ArrangeCore', type: 8, sname: 'ArrangeCore', returnType: Object, params: [$System_Windows_Rect] }, { name: 'ArrangeOverride', type: 8, sname: 'ArrangeOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'GetTemplate', type: 8, sname: 'GetTemplate', returnType: $System_Windows_IFrameworkTemplate, params: [] }, { name: 'MeasureCore', type: 8, sname: 'MeasureCore', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'MeasureOverride', type: 8, sname: 'MeasureOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'OnApplyTemplate', type: 8, sname: 'OnApplyTemplate', returnType: Object, params: [] }, { name: 'OnInitialized', type: 8, sname: 'OnInitialized', returnType: Object, params: [] }, { name: 'OnLogicalParentChanged', type: 8, sname: 'OnLogicalParentChanged', returnType: Object, params: [$System_Windows_UIElement, $System_Windows_UIElement] }, { name: 'OnPropertyChanged', type: 8, sname: 'OnPropertyChanged', returnType: Object, params: [$System_Windows_DependencyPropertyChangedEventArgs] }, { name: 'OnQueryCursor', type: 8, sname: 'OnQueryCursor', returnType: Object, params: [$System_Windows_Input_QueryCursorEventArgs] }, { name: 'OnResourcesChanged', type: 8, sname: 'OnResourcesChanged', returnType: Object, params: [$System_Windows_ResourcesChangedEventArgs] }, { name: 'OnTemplateChildChanged', type: 8, sname: 'OnTemplateChildChanged', returnType: Object, params: [] }, { name: 'OnVisualParentChanged', type: 8, sname: 'OnVisualParentChanged', returnType: Object, params: [$System_Windows_Media_Visual, $System_Windows_Media_Visual] }, { name: 'SetResourceInheritanceParent', type: 8, sname: 'SetResourceInheritanceParent', returnType: Object, params: [$System_Windows_IResourceContainer] }, { name: 'ToString', type: 8, sname: 'toString', returnType: String, params: [] }, { name: 'ActualHeight', type: 16, returnType: Number, getter: { name: 'get_ActualHeight', type: 8, sname: 'get_ActualHeight', returnType: Number, params: [] }, setter: { name: 'set_ActualHeight', type: 8, sname: 'set_ActualHeight', returnType: Object, params: [Number] } }, { name: 'ActualSize', type: 16, returnType: $System_Windows_Size, getter: { name: 'get_ActualSize', type: 8, sname: 'get_ActualSize', returnType: $System_Windows_Size, params: [] }, setter: { name: 'set_ActualSize', type: 8, sname: 'set_ActualSize', returnType: Object, params: [$System_Windows_Size] } }, { name: 'ActualWidth', type: 16, returnType: Number, getter: { name: 'get_ActualWidth', type: 8, sname: 'get_ActualWidth', returnType: Number, params: [] }, setter: { name: 'set_ActualWidth', type: 8, sname: 'set_ActualWidth', returnType: Object, params: [Number] } }, { name: 'Cursor', type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_Cursor', type: 8, sname: 'get_Cursor', returnType: $System_Windows_Input_Cursor, params: [] }, setter: { name: 'set_Cursor', type: 8, sname: 'set_Cursor', returnType: Object, params: [$System_Windows_Input_Cursor] } }, { name: 'DataContext', type: 16, returnType: Object, getter: { name: 'get_DataContext', type: 8, sname: 'get_DataContext', returnType: Object, params: [] }, setter: { name: 'set_DataContext', type: 8, sname: 'set_DataContext', returnType: Object, params: [Object] } }, { name: 'FocusVisualStyle', type: 16, returnType: $System_Windows_Style, getter: { name: 'get_FocusVisualStyle', type: 8, sname: 'get_FocusVisualStyle', returnType: $System_Windows_Style, params: [] }, setter: { name: 'set_FocusVisualStyle', type: 8, sname: 'set_FocusVisualStyle', returnType: Object, params: [$System_Windows_Style] } }, { name: 'ForceCursor', type: 16, returnType: Boolean, getter: { name: 'get_ForceCursor', type: 8, sname: 'get_ForceCursor', returnType: Boolean, params: [] }, setter: { name: 'set_ForceCursor', type: 8, sname: 'set_ForceCursor', returnType: Object, params: [Boolean] } }, { name: 'Height', type: 16, returnType: Number, getter: { name: 'get_Height', type: 8, sname: 'get_Height', returnType: Number, params: [] }, setter: { name: 'set_Height', type: 8, sname: 'set_Height', returnType: Object, params: [Number] } }, { name: 'HorizontalAlignment', type: 16, returnType: $System_Windows_HorizontalAlignment, getter: { name: 'get_HorizontalAlignment', type: 8, sname: 'get_HorizontalAlignment', returnType: $System_Windows_HorizontalAlignment, params: [] }, setter: { name: 'set_HorizontalAlignment', type: 8, sname: 'set_HorizontalAlignment', returnType: Object, params: [$System_Windows_HorizontalAlignment] } }, { name: 'IsInitialized', type: 16, returnType: Boolean, getter: { name: 'get_IsInitialized', type: 8, sname: 'get_IsInitialized', returnType: Boolean, params: [] }, setter: { name: 'set_IsInitialized', type: 8, sname: 'set_IsInitialized', returnType: Object, params: [Boolean] } }, { name: 'Margin', type: 16, returnType: $System_Windows_Thickness, getter: { name: 'get_Margin', type: 8, sname: 'get_Margin', returnType: $System_Windows_Thickness, params: [] }, setter: { name: 'set_Margin', type: 8, sname: 'set_Margin', returnType: Object, params: [$System_Windows_Thickness] } }, { name: 'MaxHeight', type: 16, returnType: Number, getter: { name: 'get_MaxHeight', type: 8, sname: 'get_MaxHeight', returnType: Number, params: [] }, setter: { name: 'set_MaxHeight', type: 8, sname: 'set_MaxHeight', returnType: Object, params: [Number] } }, { name: 'MaxSize', type: 16, returnType: $System_Windows_Size, getter: { name: 'get_MaxSize', type: 8, sname: 'get_MaxSize', returnType: $System_Windows_Size, params: [] }, setter: { name: 'set_MaxSize', type: 8, sname: 'set_MaxSize', returnType: Object, params: [$System_Windows_Size] } }, { name: 'MaxWidth', type: 16, returnType: Number, getter: { name: 'get_MaxWidth', type: 8, sname: 'get_MaxWidth', returnType: Number, params: [] }, setter: { name: 'set_MaxWidth', type: 8, sname: 'set_MaxWidth', returnType: Object, params: [Number] } }, { name: 'MinHeight', type: 16, returnType: Number, getter: { name: 'get_MinHeight', type: 8, sname: 'get_MinHeight', returnType: Number, params: [] }, setter: { name: 'set_MinHeight', type: 8, sname: 'set_MinHeight', returnType: Object, params: [Number] } }, { name: 'MinSize', type: 16, returnType: $System_Windows_Size, getter: { name: 'get_MinSize', type: 8, sname: 'get_MinSize', returnType: $System_Windows_Size, params: [] }, setter: { name: 'set_MinSize', type: 8, sname: 'set_MinSize', returnType: Object, params: [$System_Windows_Size] } }, { name: 'MinWidth', type: 16, returnType: Number, getter: { name: 'get_MinWidth', type: 8, sname: 'get_MinWidth', returnType: Number, params: [] }, setter: { name: 'set_MinWidth', type: 8, sname: 'set_MinWidth', returnType: Object, params: [Number] } }, { name: 'Name', type: 16, returnType: String, getter: { name: 'get_Name', type: 8, sname: 'get_Name', returnType: String, params: [] }, setter: { name: 'set_Name', type: 8, sname: 'set_Name', returnType: Object, params: [String] } }, { name: 'Resources', type: 16, returnType: $System_Windows_ResourceDictionary, getter: { name: 'get_Resources', type: 8, sname: 'get_Resources', returnType: $System_Windows_ResourceDictionary, params: [] }, setter: { name: 'set_Resources', type: 8, sname: 'set_Resources', returnType: Object, params: [$System_Windows_ResourceDictionary] } }, { name: 'Size', type: 16, returnType: $System_Windows_Size, getter: { name: 'get_Size', type: 8, sname: 'get_Size', returnType: $System_Windows_Size, params: [] }, setter: { name: 'set_Size', type: 8, sname: 'set_Size', returnType: Object, params: [$System_Windows_Size] } }, { name: 'Style', type: 16, returnType: $System_Windows_Style, getter: { name: 'get_Style', type: 8, sname: 'get_Style', returnType: $System_Windows_Style, params: [] }, setter: { name: 'set_Style', type: 8, sname: 'set_Style', returnType: Object, params: [$System_Windows_Style] } }, { name: 'TemplateChild', type: 16, returnType: $System_Windows_UIElement, getter: { name: 'get_TemplateChild', type: 8, sname: 'get_TemplateChild', returnType: $System_Windows_UIElement, params: [] }, setter: { name: 'set_TemplateChild', type: 8, sname: 'set_TemplateChild', returnType: Object, params: [$System_Windows_UIElement] } }, { name: 'TemplatedParent', type: 16, returnType: $System_Windows_FrameworkElement, getter: { name: 'get_TemplatedParent', type: 8, sname: 'get_TemplatedParent', returnType: $System_Windows_FrameworkElement, params: [] }, setter: { name: 'set_TemplatedParent', type: 8, sname: 'set_TemplatedParent', returnType: Object, params: [$System_Windows_FrameworkElement] } }, { name: 'Triggers', type: 16, returnType: ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITrigger]), getter: { name: 'get_Triggers', type: 8, sname: 'get_Triggers', returnType: ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITrigger]), params: [] }, setter: { name: 'set_Triggers', type: 8, sname: 'set_Triggers', returnType: Object, params: [ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITrigger])] } }, { name: 'VerticalAlignment', type: 16, returnType: $System_Windows_VerticalAlignment, getter: { name: 'get_VerticalAlignment', type: 8, sname: 'get_VerticalAlignment', returnType: $System_Windows_VerticalAlignment, params: [] }, setter: { name: 'set_VerticalAlignment', type: 8, sname: 'set_VerticalAlignment', returnType: Object, params: [$System_Windows_VerticalAlignment] } }, { name: 'Width', type: 16, returnType: Number, getter: { name: 'get_Width', type: 8, sname: 'get_Width', returnType: Number, params: [] }, setter: { name: 'set_Width', type: 8, sname: 'set_Width', returnType: Object, params: [Number] } }, { name: 'ActualHeightProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ActualHeightProperty' }, { name: 'ActualWidthProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ActualWidthProperty' }, { name: 'CursorProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'CursorProperty' }, { name: 'DataContextProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'DataContextProperty' }, { name: 'FocusVisualStyleProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'FocusVisualStyleProperty' }, { name: 'ForceCursorProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ForceCursorProperty' }, { name: 'HeightProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'HeightProperty' }, { name: 'HorizontalAlignmentProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'HorizontalAlignmentProperty' }, { name: 'InitializedEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'InitializedEvent' }, { name: 'MarginProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'MarginProperty' }, { name: 'MaxHeightProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'MaxHeightProperty' }, { name: 'MaxWidthProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'MaxWidthProperty' }, { name: 'MinHeightProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'MinHeightProperty' }, { name: 'MinWidthProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'MinWidthProperty' }, { name: 'StyleProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'StyleProperty' }, { name: 'VerticalAlignmentProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'VerticalAlignmentProperty' }, { name: 'WidthProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'WidthProperty' }, { name: 'DataContextChanged', type: 2, adder: { name: 'add_DataContextChanged', type: 8, sname: 'add_DataContextChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_DataContextChanged', type: 8, sname: 'remove_DataContextChanged', returnType: Object, params: [Function] } }, { name: 'Initialized', type: 2, adder: { name: 'add_Initialized', type: 8, sname: 'add_Initialized', returnType: Object, params: [Function] }, remover: { name: 'remove_Initialized', type: 8, sname: 'remove_Initialized', returnType: Object, params: [Function] } }, { name: 'ResourcesChanged', type: 2, adder: { name: 'add_ResourcesChanged', type: 8, sname: 'add_ResourcesChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_ResourcesChanged', type: 8, sname: 'remove_ResourcesChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_FrameworkElementFactory, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Markup_IElementFactory, $System_Windows_Markup_InitializeContext] }, { name: 'CreateElement', type: 8, sname: 'CreateElement', returnType: $System_Windows_FrameworkElement, params: [$System_Windows_FrameworkElement] }] });
	ss.setMetadata($System_Windows_FrameworkPropertyMetadata, { members: [{ name: '.ctor', type: 1, params: [Object, Function, Function, Boolean, Boolean, Boolean, Boolean, $System_Windows_Data_UpdateSourceTrigger] }, { name: 'AffectsArrange', type: 16, returnType: Boolean, getter: { name: 'get_AffectsArrange', type: 8, sname: 'get_AffectsArrange', returnType: Boolean, params: [] }, setter: { name: 'set_AffectsArrange', type: 8, sname: 'set_AffectsArrange', returnType: Object, params: [Boolean] } }, { name: 'AffectsMeasure', type: 16, returnType: Boolean, getter: { name: 'get_AffectsMeasure', type: 8, sname: 'get_AffectsMeasure', returnType: Boolean, params: [] }, setter: { name: 'set_AffectsMeasure', type: 8, sname: 'set_AffectsMeasure', returnType: Object, params: [Boolean] } }, { name: 'BindsTwoWayByDefault', type: 16, returnType: Boolean, getter: { name: 'get_BindsTwoWayByDefault', type: 8, sname: 'get_BindsTwoWayByDefault', returnType: Boolean, params: [] }, setter: { name: 'set_BindsTwoWayByDefault', type: 8, sname: 'set_BindsTwoWayByDefault', returnType: Object, params: [Boolean] } }, { name: 'DefaultUpdateSourceTrigger', type: 16, returnType: $System_Windows_Data_UpdateSourceTrigger, getter: { name: 'get_DefaultUpdateSourceTrigger', type: 8, sname: 'get_DefaultUpdateSourceTrigger', returnType: $System_Windows_Data_UpdateSourceTrigger, params: [] }, setter: { name: 'set_DefaultUpdateSourceTrigger', type: 8, sname: 'set_DefaultUpdateSourceTrigger', returnType: Object, params: [$System_Windows_Data_UpdateSourceTrigger] } }] });
	ss.setMetadata($System_Windows_FrameworkTemplate, { attr: [new $System_Windows_Markup_ContentPropertyAttribute('FrameworkElementFactory')], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Attach', type: 8, sname: 'Attach', returnType: Object, params: [$System_Windows_FrameworkElement] }, { name: 'Detach', type: 8, sname: 'Detach', returnType: Object, params: [$System_Windows_FrameworkElement] }, { name: 'FrameworkElementFactory', type: 16, returnType: $System_Windows_IFrameworkElementFactory, getter: { name: 'get_FrameworkElementFactory', type: 8, sname: 'get_FrameworkElementFactory', returnType: $System_Windows_IFrameworkElementFactory, params: [] }, setter: { name: 'set_FrameworkElementFactory', type: 8, sname: 'set_FrameworkElementFactory', returnType: Object, params: [$System_Windows_IFrameworkElementFactory] } }, { name: 'Triggers', type: 16, returnType: ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITrigger]), getter: { name: 'get_Triggers', type: 8, sname: 'get_Triggers', returnType: ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITrigger]), params: [] }, setter: { name: 'set_Triggers', type: 8, sname: 'set_Triggers', returnType: Object, params: [ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITrigger])] } }, { name: 'Empty', isStatic: true, type: 4, returnType: $System_Windows_IFrameworkTemplate, sname: 'Empty' }] });
	ss.setMetadata($System_Windows_FrameworkTemplateExtensions, { members: [{ name: 'FindName', isStatic: true, type: 8, sname: 'FindName', returnType: Object, params: [$System_Windows_FrameworkTemplate, String, $System_Windows_FrameworkElement] }] });
	ss.setMetadata($System_Windows_Freezable, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Freeze', type: 8, sname: 'Freeze', returnType: Object, params: [] }, { name: 'OnInheritanceParentChanged', type: 8, sname: 'OnInheritanceParentChanged', returnType: Object, params: [$System_Windows_DependencyObject, $System_Windows_DependencyObject] }, { name: 'OnPropertyChanged', type: 8, sname: 'OnPropertyChanged', returnType: Object, params: [$System_Windows_DependencyPropertyChangedEventArgs] }, { name: 'RaiseChanged', type: 8, sname: 'RaiseChanged', returnType: Object, params: [] }, { name: 'SetInheritanceContext', type: 8, sname: 'SetInheritanceContext', returnType: Object, params: [$System_Windows_DependencyObject] }, { name: 'DataContext', type: 16, returnType: Object, getter: { name: 'get_DataContext', type: 8, sname: 'get_DataContext', returnType: Object, params: [] }, setter: { name: 'set_DataContext', type: 8, sname: 'set_DataContext', returnType: Object, params: [Object] } }, { name: 'IsFrozen', type: 16, returnType: Boolean, getter: { name: 'get_IsFrozen', type: 8, sname: 'get_IsFrozen', returnType: Boolean, params: [] }, setter: { name: 'set_IsFrozen', type: 8, sname: 'set_IsFrozen', returnType: Object, params: [Boolean] } }, { name: 'DataContextProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'DataContextProperty' }, { name: 'Changed', type: 2, adder: { name: 'add_Changed', type: 8, sname: 'add_Changed', returnType: Object, params: [Function] }, remover: { name: 'remove_Changed', type: 8, sname: 'remove_Changed', returnType: Object, params: [Function] } }, { name: 'ResourcesChanged', type: 2, adder: { name: 'add_ResourcesChanged', type: 8, sname: 'add_ResourcesChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_ResourcesChanged', type: 8, sname: 'remove_ResourcesChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_FreezableCollection$1, { members: [{ name: '.ctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [ss.IEnumerable], sname: '$ctor1' }, { name: 'Add', type: 8, sname: 'add', returnType: Object, params: [Object] }, { name: 'Clear', type: 8, sname: 'clear', returnType: Object, params: [] }, { name: 'Contains', type: 8, sname: 'contains', returnType: Boolean, params: [Object] }, { name: 'CopyTo', type: 8, sname: 'CopyTo', returnType: Object, params: [Array, ss.Int32] }, { name: 'GetEnumerator', type: 8, sname: 'getEnumerator', returnType: ss.IEnumerator, params: [] }, { name: 'IndexOf', type: 8, sname: 'indexOf', returnType: ss.Int32, params: [Object] }, { name: 'Insert', type: 8, sname: 'insert', returnType: Object, params: [ss.Int32, Object] }, { name: 'OnInheritanceParentChanged', type: 8, sname: 'OnInheritanceParentChanged', returnType: Object, params: [$System_Windows_DependencyObject, $System_Windows_DependencyObject] }, { name: 'Remove', type: 8, sname: 'remove', returnType: Boolean, params: [Object] }, { name: 'RemoveAt', type: 8, sname: 'removeAt', returnType: Object, params: [ss.Int32] }, { name: 'Count', type: 16, returnType: ss.Int32, getter: { name: 'get_Count', type: 8, sname: 'get_count', returnType: ss.Int32, params: [] } }, { name: 'IsReadOnly', type: 16, returnType: Boolean, getter: { name: 'get_IsReadOnly', type: 8, sname: 'get_IsReadOnly', returnType: Boolean, params: [] } }, { name: 'Item', type: 16, returnType: Object, params: [ss.Int32], getter: { name: 'get_Item', type: 8, sname: 'get_item', returnType: Object, params: [ss.Int32] }, setter: { name: 'set_Item', type: 8, sname: 'set_item', returnType: Object, params: [ss.Int32, Object] } }, { name: 'CollectionChanged', type: 2, adder: { name: 'add_CollectionChanged', type: 8, sname: 'add_CollectionChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_CollectionChanged', type: 8, sname: 'remove_CollectionChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_IApplicationHost, { members: [{ name: 'Run', type: 8, sname: 'Run', returnType: Object, params: [Function] }, { name: 'PresentationSourceFactory', type: 16, returnType: $System_Windows_IPresentationSourceFactory, getter: { name: 'get_PresentationSourceFactory', type: 8, sname: 'get_PresentationSourceFactory', returnType: $System_Windows_IPresentationSourceFactory, params: [] } }, { name: 'RenderImageSourceFactory', type: 16, returnType: $System_Windows_IRenderImageSourceFactory, getter: { name: 'get_RenderImageSourceFactory', type: 8, sname: 'get_RenderImageSourceFactory', returnType: $System_Windows_IRenderImageSourceFactory, params: [] } }, { name: 'TaskScheduler', type: 16, returnType: $System_Windows_Threading_ITaskScheduler, getter: { name: 'get_TaskScheduler', type: 8, sname: 'get_TaskScheduler', returnType: $System_Windows_Threading_ITaskScheduler, params: [] } }, { name: 'TextMeasurementService', type: 16, returnType: $System_Windows_ITextMeasurementService, getter: { name: 'get_TextMeasurementService', type: 8, sname: 'get_TextMeasurementService', returnType: $System_Windows_ITextMeasurementService, params: [] } }] });
	ss.setMetadata($System_Windows_IDataTriggerCondition, { members: [{ name: 'IsMatched', type: 16, returnType: Boolean, getter: { name: 'get_IsMatched', type: 8, sname: 'get_IsMatched', returnType: Boolean, params: [] } }, { name: 'IsMatchedChanged', type: 2, adder: { name: 'add_IsMatchedChanged', type: 8, sname: 'add_IsMatchedChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_IsMatchedChanged', type: 8, sname: 'remove_IsMatchedChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_IDataTriggerConditionProvider, { members: [{ name: 'CreateDataTriggerCondition', type: 8, sname: 'CreateDataTriggerCondition', returnType: $System_Windows_IDataTriggerCondition, params: [$System_Windows_FrameworkElement] }] });
	ss.setMetadata($System_Windows_IDependencyPropertyValueEntry, { members: [{ name: 'ClearAnimationValue', type: 8, sname: 'ClearAnimationValue', returnType: Object, params: [] }, { name: 'ClearBaseValue', type: 8, sname: 'ClearBaseValue', returnType: Object, params: [ss.Int32] }, { name: 'ClearCurrentValue', type: 8, sname: 'ClearCurrentValue', returnType: Object, params: [] }, { name: 'GetAnimationValue', type: 8, sname: 'GetAnimationValue', returnType: Object, params: [Boolean] }, { name: 'GetBaseValue', type: 8, sname: 'GetBaseValue', returnType: Object, params: [Boolean] }, { name: 'GetBaseValue', type: 8, sname: 'GetBaseValue$1', returnType: Object, params: [ss.Int32, Boolean] }, { name: 'GetBaseValuePriority', type: 8, sname: 'GetBaseValuePriority', returnType: ss.Int32, params: [] }, { name: 'GetCurrentValue', type: 8, sname: 'GetCurrentValue', returnType: Object, params: [Boolean] }, { name: 'SetAnimationValue', type: 8, sname: 'SetAnimationValue', returnType: Object, params: [Object] }, { name: 'SetBaseValue', type: 8, sname: 'SetBaseValue', returnType: Object, params: [ss.Int32, Object] }, { name: 'SetCurrentValue', type: 8, sname: 'SetCurrentValue', returnType: Object, params: [Object] }] });
	ss.setMetadata($System_Windows_IEventTriggerCondition, { members: [{ name: 'EventRaised', type: 2, adder: { name: 'add_EventRaised', type: 8, sname: 'add_EventRaised', returnType: Object, params: [Function] }, remover: { name: 'remove_EventRaised', type: 8, sname: 'remove_EventRaised', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_IExpression, { members: [{ name: 'SetValue', type: 8, sname: 'SetValue', returnType: Boolean, params: [Object] }] });
	ss.setMetadata($System_Windows_IExpressionProvider, { members: [{ name: 'CreateExpression', type: 8, sname: 'CreateExpression', returnType: $System_Windows_IExpression, params: [$System_Windows_DependencyObject, $System_Windows_DependencyProperty] }] });
	ss.setMetadata($System_Windows_IFrameworkElementFactory, { members: [{ name: 'CreateElement', type: 8, sname: 'CreateElement', returnType: $System_Windows_FrameworkElement, params: [$System_Windows_FrameworkElement] }] });
	ss.setMetadata($System_Windows_IFrameworkTemplate, { members: [{ name: 'Attach', type: 8, sname: 'Attach', returnType: Object, params: [$System_Windows_FrameworkElement] }, { name: 'Detach', type: 8, sname: 'Detach', returnType: Object, params: [$System_Windows_FrameworkElement] }] });
	ss.setMetadata($System_Windows_IInheritableObject, { members: [{ name: 'SetInheritanceContext', type: 8, sname: 'SetInheritanceContext', returnType: Object, params: [$System_Windows_DependencyObject] }] });
	ss.setMetadata($System_Windows_IInputElement, { members: [{ name: 'GetPathFromRoot', type: 8, sname: 'GetPathFromRoot', returnType: ss.IEnumerable, params: [] }, { name: 'GetRelativePosition', type: 8, sname: 'GetRelativePosition', returnType: $System_Windows_Point, params: [$System_Windows_Point] }, { name: 'RaiseEvent', type: 8, sname: 'RaiseEvent', returnType: Object, params: [$System_Windows_RoutedEventArgs] }] });
	ss.setMetadata($System_Windows_IInputElementExtensions, { members: [{ name: 'RaiseEvents', isStatic: true, type: 8, sname: 'RaiseEvents', returnType: Boolean, params: [$System_Windows_IInputElement, $System_Windows_RoutedEventArgs, $System_Windows_RoutedEventArgs] }] });
	ss.setMetadata($System_Windows_IndexPropertyPathElement, { members: [{ name: '.ctor', type: 1, params: [System.Xaml.XamlName, ss.IEnumerable, System.Xaml.XamlNamespaces] }, { name: 'CreatePropertyObserver', type: 8, sname: 'CreatePropertyObserver', returnType: $System_Windows_Data_IPropertyObserver, params: [Function] }, { name: 'Equals', type: 8, sname: 'equals', returnType: Boolean, params: [Object] }, { name: 'GetHashCode', type: 8, sname: 'getHashCode', returnType: ss.Int32, params: [] }, { name: 'ParseIndexValues', type: 8, sname: 'ParseIndexValues', returnType: ss.IEnumerable, params: [Object] }, { name: 'ToString', type: 8, sname: 'toString', returnType: String, params: [] }, { name: 'IndexRawValues', type: 16, returnType: ss.IEnumerable, getter: { name: 'get_IndexRawValues', type: 8, sname: 'get_IndexRawValues', returnType: ss.IEnumerable, params: [] }, setter: { name: 'set_IndexRawValues', type: 8, sname: 'set_IndexRawValues', returnType: Object, params: [ss.IEnumerable] } }, { name: 'PropertyName', type: 16, returnType: System.Xaml.XamlName, getter: { name: 'get_PropertyName', type: 8, sname: 'get_PropertyName', returnType: System.Xaml.XamlName, params: [] }, setter: { name: 'set_PropertyName', type: 8, sname: 'set_PropertyName', returnType: Object, params: [System.Xaml.XamlName] } }] });
	ss.setMetadata($System_Windows_IPresentationSource, { members: [{ name: 'GetTimestamp', type: 8, sname: 'GetTimestamp', returnType: ss.Int32, params: [] }, { name: 'HitTest', type: 8, sname: 'HitTest', returnType: $System_Windows_IInputElement, params: [$System_Windows_Point] }, { name: 'KeyboardDevice', type: 16, returnType: $System_Windows_Input_KeyboardDevice, getter: { name: 'get_KeyboardDevice', type: 8, sname: 'get_KeyboardDevice', returnType: $System_Windows_Input_KeyboardDevice, params: [] } }, { name: 'MouseDevice', type: 16, returnType: $System_Windows_Input_MouseDevice, getter: { name: 'get_MouseDevice', type: 8, sname: 'get_MouseDevice', returnType: $System_Windows_Input_MouseDevice, params: [] } }, { name: 'RootElement', type: 16, returnType: $System_Windows_UIElement, getter: { name: 'get_RootElement', type: 8, sname: 'get_RootElement', returnType: $System_Windows_UIElement, params: [] } }, { name: 'Title', type: 16, returnType: String, getter: { name: 'get_Title', type: 8, sname: 'get_Title', returnType: String, params: [] }, setter: { name: 'set_Title', type: 8, sname: 'set_Title', returnType: Object, params: [String] } }, { name: 'HitTestInvalidated', type: 2, adder: { name: 'add_HitTestInvalidated', type: 8, sname: 'add_HitTestInvalidated', returnType: Object, params: [Function] }, remover: { name: 'remove_HitTestInvalidated', type: 8, sname: 'remove_HitTestInvalidated', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_IPresentationSourceFactory, { members: [{ name: 'CreatePresentationSource', type: 8, sname: 'CreatePresentationSource', returnType: $System_Windows_IPresentationSource, params: [$System_Windows_UIElement] }, { name: 'GetPresentationSourceFromElement', type: 8, sname: 'GetPresentationSourceFromElement', returnType: $System_Windows_IPresentationSource, params: [$System_Windows_UIElement] }] });
	ss.setMetadata($System_Windows_IPropertyPathElement, { attr: [new $System_Windows_Markup_TypeConverterAttribute($System_Windows_PropertyPathElementTypeConverter)], members: [{ name: 'CreatePropertyObserver', type: 8, sname: 'CreatePropertyObserver', returnType: $System_Windows_Data_IPropertyObserver, params: [Function] }] });
	ss.setMetadata($System_Windows_IRenderImageSourceFactory, { members: [{ name: 'CreateRenderImageSource', type: 8, sname: 'CreateRenderImageSource', returnType: $System_Windows_Media_IRenderImageSource, params: [String, $System_Windows_Rect] }, { name: 'CreateRenderImageSource', type: 8, sname: 'CreateRenderImageSource$1', returnType: $System_Windows_Media_IRenderImageSource, params: [$System_Windows_Media_RenderImageType, Array, $System_Windows_Rect] }] });
	ss.setMetadata($System_Windows_IResourceContainer, { members: [{ name: 'ResourcesChanged', type: 2, adder: { name: 'add_ResourcesChanged', type: 8, sname: 'add_ResourcesChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_ResourcesChanged', type: 8, sname: 'remove_ResourcesChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_IResourceKey, { members: [{ name: 'Assembly', type: 16, returnType: Object, getter: { name: 'get_Assembly', type: 8, sname: 'get_Assembly', returnType: Object, params: [] } }] });
	ss.setMetadata($System_Windows_ITextMeasurementService, { members: [{ name: 'Measure', type: 8, sname: 'Measure', returnType: $System_Windows_Size, params: [String, Number, $System_Windows_Media_Typeface, Number] }] });
	ss.setMetadata($System_Windows_ITrigger, { members: [{ name: 'Attach', type: 8, sname: 'Attach', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_BaseValueSource] }, { name: 'Detach', type: 8, sname: 'Detach', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_BaseValueSource] }] });
	ss.setMetadata($System_Windows_ITriggerAction, { members: [{ name: 'Apply', type: 8, sname: 'Apply', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_BaseValueSource] }, { name: 'Clean', type: 8, sname: 'Clean', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_BaseValueSource] }, { name: 'IsActionOverlaps', type: 8, sname: 'IsActionOverlaps', returnType: Boolean, params: [$System_Windows_ITriggerAction] }] });
	ss.setMetadata($System_Windows_LayoutManager, { members: [{ name: 'AddArrange', type: 8, sname: 'AddArrange', returnType: Object, params: [$System_Windows_UIElement] }, { name: 'AddMeasure', type: 8, sname: 'AddMeasure', returnType: Object, params: [$System_Windows_UIElement] }, { name: 'AddUpdatedElement', type: 8, sname: 'AddUpdatedElement', returnType: Object, params: [$System_Windows_UIElement] }, { name: 'BeginUpdateLayout', type: 8, sname: 'BeginUpdateLayout', returnType: Object, params: [] }, { name: 'RemoveArrange', type: 8, sname: 'RemoveArrange', returnType: Object, params: [$System_Windows_UIElement] }, { name: 'RemoveMeasure', type: 8, sname: 'RemoveMeasure', returnType: Object, params: [$System_Windows_UIElement] }, { name: 'UpdateLayout', type: 8, sname: 'UpdateLayout', returnType: Object, params: [] }, { name: 'Current', isStatic: true, type: 4, returnType: $System_Windows_LayoutManager, sname: 'Current' }] });
	ss.setMetadata($System_Windows_MultiDataTrigger, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'CreateDataTriggerCondition', type: 8, sname: 'CreateDataTriggerCondition', returnType: $System_Windows_IDataTriggerCondition, params: [$System_Windows_FrameworkElement] }] });
	ss.setMetadata($System_Windows_MultiDataTriggerBase, { attr: [new $System_Windows_Markup_ContentPropertyAttribute('Setters')], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Conditions', type: 16, returnType: ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_Condition]), getter: { name: 'get_Conditions', type: 8, sname: 'get_Conditions', returnType: ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_Condition]), params: [] }, setter: { name: 'set_Conditions', type: 8, sname: 'set_Conditions', returnType: Object, params: [ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_Condition])] } }, { name: 'Setters', type: 16, returnType: ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITriggerAction]), getter: { name: 'get_Setters', type: 8, sname: 'get_Setters', returnType: ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITriggerAction]), params: [] }, setter: { name: 'set_Setters', type: 8, sname: 'set_Setters', returnType: Object, params: [ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITriggerAction])] } }, { name: 'TriggerActions', type: 16, returnType: ss.IEnumerable, getter: { name: 'get_TriggerActions', type: 8, sname: 'get_TriggerActions', returnType: ss.IEnumerable, params: [] } }] });
	ss.setMetadata($System_Windows_MultiTrigger, { attr: [new $System_Windows_Markup_ContentPropertyAttribute('Setters')], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'CreateDataTriggerCondition', type: 8, sname: 'CreateDataTriggerCondition', returnType: $System_Windows_IDataTriggerCondition, params: [$System_Windows_FrameworkElement] }] });
	ss.setMetadata($System_Windows_Point, { members: [{ name: '.ctor', type: 1, params: [Number, Number], sname: '$ctor1' }, { name: 'Equals', type: 8, sname: 'equals', returnType: Boolean, params: [Object] }, { name: 'GetHashCode', type: 8, sname: 'getHashCode', returnType: ss.Int32, params: [] }, { name: 'IsNullOrEmpty', isStatic: true, type: 8, sname: 'IsNullOrEmpty', returnType: Boolean, params: [$System_Windows_Point] }, { name: 'Parse', isStatic: true, type: 8, sname: 'Parse', returnType: $System_Windows_Point, params: [String] }, { name: 'ToString', type: 8, sname: 'toString', returnType: String, params: [] }, { name: 'op_Addition', isStatic: true, type: 8, sname: 'op_Addition', returnType: $System_Windows_Point, params: [$System_Windows_Point, $System_Windows_Point] }, { name: 'op_Division', isStatic: true, type: 8, sname: 'op_Division', returnType: $System_Windows_Point, params: [$System_Windows_Point, Number] }, { name: 'op_Equality', isStatic: true, type: 8, sname: 'op_Equality', returnType: Boolean, params: [$System_Windows_Point, $System_Windows_Point] }, { name: 'op_Inequality', isStatic: true, type: 8, sname: 'op_Inequality', returnType: Boolean, params: [$System_Windows_Point, $System_Windows_Point] }, { name: 'op_Multiply', isStatic: true, type: 8, sname: 'op_Multiply', returnType: $System_Windows_Point, params: [Number, $System_Windows_Point] }, { name: 'op_Multiply', isStatic: true, type: 8, sname: 'op_Multiply$1', returnType: $System_Windows_Point, params: [$System_Windows_Point, Number] }, { name: 'op_Subtraction', isStatic: true, type: 8, sname: 'op_Subtraction', returnType: $System_Windows_Point, params: [$System_Windows_Point, $System_Windows_Point] }, { name: 'op_UnaryNegation', isStatic: true, type: 8, sname: 'op_UnaryNegation', returnType: $System_Windows_Point, params: [$System_Windows_Point] }, { name: 'IsEmpty', type: 16, returnType: Boolean, getter: { name: 'get_IsEmpty', type: 8, sname: 'get_IsEmpty', returnType: Boolean, params: [] }, setter: { name: 'set_IsEmpty', type: 8, sname: 'set_IsEmpty', returnType: Object, params: [Boolean] } }, { name: 'X', type: 16, returnType: Number, getter: { name: 'get_X', type: 8, sname: 'get_X', returnType: Number, params: [] }, setter: { name: 'set_X', type: 8, sname: 'set_X', returnType: Object, params: [Number] } }, { name: 'Y', type: 16, returnType: Number, getter: { name: 'get_Y', type: 8, sname: 'get_Y', returnType: Number, params: [] }, setter: { name: 'set_Y', type: 8, sname: 'set_Y', returnType: Object, params: [Number] } }, { name: 'Empty', isStatic: true, type: 4, returnType: $System_Windows_Point, sname: 'Empty' }, { name: 'Zero', isStatic: true, type: 4, returnType: $System_Windows_Point, sname: 'Zero' }] });
	ss.setMetadata($System_Windows_PointExtensions, { members: [{ name: 'Bounds', isStatic: true, type: 8, sname: 'Bounds', returnType: $System_Windows_Point, params: [$System_Windows_Point, $System_Windows_Point, $System_Windows_Point] }, { name: 'DefaultIfNullOrEmpty', isStatic: true, type: 8, sname: 'DefaultIfNullOrEmpty', returnType: $System_Windows_Point, params: [$System_Windows_Point, $System_Windows_Point] }, { name: 'GetLength', isStatic: true, type: 8, sname: 'GetLength', returnType: Number, params: [$System_Windows_Point] }, { name: 'GetLengthSqr', isStatic: true, type: 8, sname: 'GetLengthSqr', returnType: Number, params: [$System_Windows_Point] }, { name: 'IsClose', isStatic: true, type: 8, sname: 'IsClose', returnType: Boolean, params: [$System_Windows_Point, $System_Windows_Point] }, { name: 'IsNullOrEmpty', isStatic: true, type: 8, sname: 'IsNullOrEmpty', returnType: Boolean, params: [$System_Windows_Point] }, { name: 'Max', isStatic: true, type: 8, sname: 'Max', returnType: $System_Windows_Point, params: [$System_Windows_Point, $System_Windows_Point] }, { name: 'Min', isStatic: true, type: 8, sname: 'Min', returnType: $System_Windows_Point, params: [$System_Windows_Point, $System_Windows_Point] }] });
	ss.setMetadata($System_Windows_PropertyMetadata, { members: [{ name: '.ctor', type: 1, params: [Object, Function, Function, Boolean] }, { name: 'CoerceValueCallback', type: 16, returnType: Function, getter: { name: 'get_CoerceValueCallback', type: 8, sname: 'get_CoerceValueCallback', returnType: Function, params: [] }, setter: { name: 'set_CoerceValueCallback', type: 8, sname: 'set_CoerceValueCallback', returnType: Object, params: [Function] } }, { name: 'DefaultValue', type: 16, returnType: Object, getter: { name: 'get_DefaultValue', type: 8, sname: 'get_DefaultValue', returnType: Object, params: [] }, setter: { name: 'set_DefaultValue', type: 8, sname: 'set_DefaultValue', returnType: Object, params: [Object] } }, { name: 'Inherits', type: 16, returnType: Boolean, getter: { name: 'get_Inherits', type: 8, sname: 'get_Inherits', returnType: Boolean, params: [] }, setter: { name: 'set_Inherits', type: 8, sname: 'set_Inherits', returnType: Object, params: [Boolean] } }, { name: 'PropertyChangedCallback', type: 16, returnType: Function, getter: { name: 'get_PropertyChangedCallback', type: 8, sname: 'get_PropertyChangedCallback', returnType: Function, params: [] }, setter: { name: 'set_PropertyChangedCallback', type: 8, sname: 'set_PropertyChangedCallback', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_PropertyPath, { attr: [new $System_Windows_Markup_TypeConverterAttribute($System_Windows_PropertyPathTypeConverter)], members: [{ name: '.ctor', type: 1, params: [ss.IEnumerable] }, { name: 'FromDependencyProperty', isStatic: true, type: 8, sname: 'FromDependencyProperty', returnType: $System_Windows_PropertyPath, params: [$System_Windows_DependencyProperty] }, { name: 'Parse', isStatic: true, type: 8, sname: 'Parse', returnType: $System_Windows_PropertyPath, params: [String, System.Xaml.XamlNamespaces] }, { name: 'ToString', type: 8, sname: 'toString', returnType: String, params: [] }, { name: 'Elements', type: 16, returnType: ss.IEnumerable, getter: { name: 'get_Elements', type: 8, sname: 'get_Elements', returnType: ss.IEnumerable, params: [] }, setter: { name: 'set_Elements', type: 8, sname: 'set_Elements', returnType: Object, params: [ss.IEnumerable] } }, { name: 'IsEmpty', type: 16, returnType: Boolean, getter: { name: 'get_IsEmpty', type: 8, sname: 'get_IsEmpty', returnType: Boolean, params: [] } }, { name: 'Empty', isStatic: true, type: 4, returnType: $System_Windows_PropertyPath, sname: 'Empty' }] });
	ss.setMetadata($System_Windows_PropertyPathElement, { members: [{ name: '.ctor', type: 1, params: [System.Xaml.XamlName] }, { name: 'CreatePropertyObserver', type: 8, sname: 'CreatePropertyObserver', returnType: $System_Windows_Data_IPropertyObserver, params: [Function] }, { name: 'Equals', type: 8, sname: 'equals', returnType: Boolean, params: [Object] }, { name: 'GetHashCode', type: 8, sname: 'getHashCode', returnType: ss.Int32, params: [] }, { name: 'ToString', type: 8, sname: 'toString', returnType: String, params: [] }, { name: 'PropertyName', type: 16, returnType: System.Xaml.XamlName, getter: { name: 'get_PropertyName', type: 8, sname: 'get_PropertyName', returnType: System.Xaml.XamlName, params: [] }, setter: { name: 'set_PropertyName', type: 8, sname: 'set_PropertyName', returnType: Object, params: [System.Xaml.XamlName] } }] });
	ss.setMetadata($System_Windows_PropertyPathElementExtensions, { members: [{ name: 'GetDependencyProperty', isStatic: true, type: 8, sname: 'GetDependencyProperty', returnType: $System_Windows_DependencyProperty, params: [$System_Windows_IPropertyPathElement, Function] }] });
	ss.setMetadata($System_Windows_PropertyPathElementTypeConverter, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ConvertFrom', type: 8, sname: 'ConvertFrom', returnType: Object, params: [System.Xaml.XamlNamespaces, Object] }] });
	ss.setMetadata($System_Windows_PropertyPathExtensions, { members: [{ name: 'GetBasePropertyPath', isStatic: true, type: 8, sname: 'GetBasePropertyPath', returnType: $System_Windows_PropertyPath, params: [$System_Windows_PropertyPath] }, { name: 'Insert', isStatic: true, type: 8, sname: 'Insert', returnType: $System_Windows_PropertyPath, params: [$System_Windows_PropertyPath, ss.Int32, $System_Windows_IPropertyPathElement] }] });
	ss.setMetadata($System_Windows_PropertyPathTypeConverter, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ConvertFrom', type: 8, sname: 'ConvertFrom', returnType: Object, params: [System.Xaml.XamlNamespaces, Object] }] });
	ss.setMetadata($System_Windows_ReadOnlyDependencyPropertyValueEntry, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_IDependencyPropertyValueEntry] }, { name: 'ClearAnimationValue', type: 8, sname: 'ClearAnimationValue', returnType: Object, params: [] }, { name: 'ClearBaseValue', type: 8, sname: 'ClearBaseValue', returnType: Object, params: [ss.Int32] }, { name: 'ClearCurrentValue', type: 8, sname: 'ClearCurrentValue', returnType: Object, params: [] }, { name: 'GetAnimationValue', type: 8, sname: 'GetAnimationValue', returnType: Object, params: [Boolean] }, { name: 'GetBaseValue', type: 8, sname: 'GetBaseValue', returnType: Object, params: [Boolean] }, { name: 'GetBaseValue', type: 8, sname: 'GetBaseValue$1', returnType: Object, params: [ss.Int32, Boolean] }, { name: 'GetBaseValuePriority', type: 8, sname: 'GetBaseValuePriority', returnType: ss.Int32, params: [] }, { name: 'GetCurrentValue', type: 8, sname: 'GetCurrentValue', returnType: Object, params: [Boolean] }, { name: 'SetAnimationValue', type: 8, sname: 'SetAnimationValue', returnType: Object, params: [Object] }, { name: 'SetBaseValue', type: 8, sname: 'SetBaseValue', returnType: Object, params: [ss.Int32, Object] }, { name: 'SetCurrentValue', type: 8, sname: 'SetCurrentValue', returnType: Object, params: [Object] }, { name: 'Value', type: 16, returnType: Object, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: Object, params: [] } }, { name: 'ValueChanged', type: 2, adder: { name: 'add_ValueChanged', type: 8, sname: 'add_ValueChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_ValueChanged', type: 8, sname: 'remove_ValueChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Rect, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Size] }, { name: '.ctor', type: 1, params: [Number, Number], sname: '$ctor1' }, { name: '.ctor', type: 1, params: [$System_Windows_Point, $System_Windows_Size], sname: '$ctor2' }, { name: '.ctor', type: 1, params: [Number, Number, Number, Number], sname: '$ctor3' }, { name: 'Equals', type: 8, sname: 'equals', returnType: Boolean, params: [Object] }, { name: 'GetHashCode', type: 8, sname: 'getHashCode', returnType: ss.Int32, params: [] }, { name: 'IsNullOrEmpty', isStatic: true, type: 8, sname: 'IsNullOrEmpty', returnType: Boolean, params: [$System_Windows_Rect] }, { name: 'Parse', isStatic: true, type: 8, sname: 'Parse', returnType: $System_Windows_Rect, params: [String] }, { name: 'ToString', type: 8, sname: 'toString', returnType: String, params: [] }, { name: 'op_Equality', isStatic: true, type: 8, sname: 'op_Equality', returnType: Boolean, params: [$System_Windows_Rect, $System_Windows_Rect] }, { name: 'op_Inequality', isStatic: true, type: 8, sname: 'op_Inequality', returnType: Boolean, params: [$System_Windows_Rect, $System_Windows_Rect] }, { name: 'Bottom', type: 16, returnType: Number, getter: { name: 'get_Bottom', type: 8, sname: 'get_Bottom', returnType: Number, params: [] }, setter: { name: 'set_Bottom', type: 8, sname: 'set_Bottom', returnType: Object, params: [Number] } }, { name: 'Height', type: 16, returnType: Number, getter: { name: 'get_Height', type: 8, sname: 'get_Height', returnType: Number, params: [] }, setter: { name: 'set_Height', type: 8, sname: 'set_Height', returnType: Object, params: [Number] } }, { name: 'IsEmpty', type: 16, returnType: Boolean, getter: { name: 'get_IsEmpty', type: 8, sname: 'get_IsEmpty', returnType: Boolean, params: [] }, setter: { name: 'set_IsEmpty', type: 8, sname: 'set_IsEmpty', returnType: Object, params: [Boolean] } }, { name: 'Left', type: 16, returnType: Number, getter: { name: 'get_Left', type: 8, sname: 'get_Left', returnType: Number, params: [] }, setter: { name: 'set_Left', type: 8, sname: 'set_Left', returnType: Object, params: [Number] } }, { name: 'Location', type: 16, returnType: $System_Windows_Point, getter: { name: 'get_Location', type: 8, sname: 'get_Location', returnType: $System_Windows_Point, params: [] }, setter: { name: 'set_Location', type: 8, sname: 'set_Location', returnType: Object, params: [$System_Windows_Point] } }, { name: 'Right', type: 16, returnType: Number, getter: { name: 'get_Right', type: 8, sname: 'get_Right', returnType: Number, params: [] }, setter: { name: 'set_Right', type: 8, sname: 'set_Right', returnType: Object, params: [Number] } }, { name: 'Size', type: 16, returnType: $System_Windows_Size, getter: { name: 'get_Size', type: 8, sname: 'get_Size', returnType: $System_Windows_Size, params: [] }, setter: { name: 'set_Size', type: 8, sname: 'set_Size', returnType: Object, params: [$System_Windows_Size] } }, { name: 'Top', type: 16, returnType: Number, getter: { name: 'get_Top', type: 8, sname: 'get_Top', returnType: Number, params: [] }, setter: { name: 'set_Top', type: 8, sname: 'set_Top', returnType: Object, params: [Number] } }, { name: 'Width', type: 16, returnType: Number, getter: { name: 'get_Width', type: 8, sname: 'get_Width', returnType: Number, params: [] }, setter: { name: 'set_Width', type: 8, sname: 'set_Width', returnType: Object, params: [Number] } }, { name: 'Empty', isStatic: true, type: 4, returnType: $System_Windows_Rect, sname: 'Empty' }, { name: 'Zero', isStatic: true, type: 4, returnType: $System_Windows_Rect, sname: 'Zero' }] });
	ss.setMetadata($System_Windows_RectExtensions, { members: [{ name: 'AddMargin', isStatic: true, type: 8, sname: 'AddMargin', returnType: $System_Windows_Rect, params: [$System_Windows_Rect, $System_Windows_Thickness] }, { name: 'AddOffset', isStatic: true, type: 8, sname: 'AddOffset', returnType: $System_Windows_Rect, params: [$System_Windows_Rect, $System_Windows_Point] }, { name: 'Contains', isStatic: true, type: 8, sname: 'Contains', returnType: Boolean, params: [$System_Windows_Rect, $System_Windows_Point] }, { name: 'DefaultIfNullOrEmpty', isStatic: true, type: 8, sname: 'DefaultIfNullOrEmpty', returnType: $System_Windows_Rect, params: [$System_Windows_Rect, $System_Windows_Rect] }, { name: 'GetBottomLeft', isStatic: true, type: 8, sname: 'GetBottomLeft', returnType: $System_Windows_Point, params: [$System_Windows_Rect] }, { name: 'GetBottomRight', isStatic: true, type: 8, sname: 'GetBottomRight', returnType: $System_Windows_Point, params: [$System_Windows_Rect] }, { name: 'GetTopLeft', isStatic: true, type: 8, sname: 'GetTopLeft', returnType: $System_Windows_Point, params: [$System_Windows_Rect] }, { name: 'GetTopRight', isStatic: true, type: 8, sname: 'GetTopRight', returnType: $System_Windows_Point, params: [$System_Windows_Rect] }, { name: 'IsClose', isStatic: true, type: 8, sname: 'IsClose', returnType: Boolean, params: [$System_Windows_Rect, $System_Windows_Rect] }, { name: 'IsNullOrEmpty', isStatic: true, type: 8, sname: 'IsNullOrEmpty', returnType: Boolean, params: [$System_Windows_Rect] }, { name: 'Transform', isStatic: true, type: 8, sname: 'Transform', returnType: $System_Windows_Rect, params: [$System_Windows_Rect, $System_Windows_Media_Matrix] }] });
	ss.setMetadata($System_Windows_ReentrancyLock, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Enter', type: 8, sname: 'Enter', returnType: ss.IDisposable, params: [] }, { name: 'op_Implicit', isStatic: true, type: 8, sname: 'op_Implicit', returnType: Boolean, params: [$System_Windows_ReentrancyLock] }, { name: 'IsEntered', type: 16, returnType: Boolean, getter: { name: 'get_IsEntered', type: 8, sname: 'get_IsEntered', returnType: Boolean, params: [] }, setter: { name: 'set_IsEntered', type: 8, sname: 'set_IsEntered', returnType: Object, params: [Boolean] } }] });
	ss.setMetadata($System_Windows_ResourceContainerExtensions, { members: [{ name: 'FindResource', isStatic: true, type: 8, sname: 'FindResource', returnType: Object, params: [$System_Windows_IResourceContainer, Object] }] });
	ss.setMetadata($System_Windows_ResourceDictionary, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Add', type: 8, sname: 'Add', returnType: Object, params: [Object] }, { name: 'Add', type: 8, sname: 'add', returnType: Object, params: [Object, Object] }, { name: 'Clear', type: 8, sname: 'Clear', returnType: Object, params: [] }, { name: 'Contains', type: 8, sname: 'Contains', returnType: Boolean, params: [Object] }, { name: 'Contains', type: 8, sname: 'Contains$1', returnType: Boolean, params: [Object] }, { name: 'ContainsKey', type: 8, sname: 'containsKey', returnType: Boolean, params: [Object] }, { name: 'CopyTo', type: 8, sname: 'CopyTo', returnType: Object, params: [Array, ss.Int32] }, { name: 'GetEnumerator', type: 8, sname: 'getEnumerator', returnType: ss.IEnumerator, params: [] }, { name: 'GetValue', type: 8, sname: 'GetValue', returnType: Object, params: [Object] }, { name: 'Remove', type: 8, sname: 'Remove', returnType: Boolean, params: [Object] }, { name: 'Remove', type: 8, sname: 'Remove$1', returnType: Boolean, params: [Object] }, { name: 'Remove', type: 8, sname: 'remove', returnType: Boolean, params: [Object] }, { name: 'Count', type: 16, returnType: ss.Int32, getter: { name: 'get_Count', type: 8, sname: 'get_count', returnType: ss.Int32, params: [] } }, { name: 'IsReadOnly', type: 16, returnType: Boolean, getter: { name: 'get_IsReadOnly', type: 8, sname: 'get_IsReadOnly', returnType: Boolean, params: [] } }, { name: 'Item', type: 16, returnType: Object, params: [Object], getter: { name: 'get_Item', type: 8, sname: 'get_item', returnType: Object, params: [Object] }, setter: { name: 'set_Item', type: 8, sname: 'set_item', returnType: Object, params: [Object, Object] } }, { name: 'Keys', type: 16, returnType: ss.ICollection, getter: { name: 'get_Keys', type: 8, sname: 'get_keys', returnType: ss.ICollection, params: [] } }, { name: 'MergedDictionaries', type: 16, returnType: ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ResourceDictionary]), getter: { name: 'get_MergedDictionaries', type: 8, sname: 'get_MergedDictionaries', returnType: ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ResourceDictionary]), params: [] }, setter: { name: 'set_MergedDictionaries', type: 8, sname: 'set_MergedDictionaries', returnType: Object, params: [ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ResourceDictionary])] } }, { name: 'Source', type: 16, returnType: String, getter: { name: 'get_Source', type: 8, sname: 'get_Source', returnType: String, params: [] }, setter: { name: 'set_Source', type: 8, sname: 'set_Source', returnType: Object, params: [String] } }, { name: 'Values', type: 16, returnType: ss.ICollection, getter: { name: 'get_Values', type: 8, sname: 'get_values', returnType: ss.ICollection, params: [] } }, { name: 'ResourcesChanged', type: 2, adder: { name: 'add_ResourcesChanged', type: 8, sname: 'add_ResourcesChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_ResourcesChanged', type: 8, sname: 'remove_ResourcesChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_ResourceReferenceExpression, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_IResourceContainer, Object] }, { name: 'Dispose', type: 8, sname: 'dispose', returnType: Object, params: [] }, { name: 'SetValue', type: 8, sname: 'SetValue', returnType: Boolean, params: [Object] }, { name: 'Value', type: 16, returnType: Object, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: Object, params: [] } }, { name: 'ValueChanged', type: 2, adder: { name: 'add_ValueChanged', type: 8, sname: 'add_ValueChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_ValueChanged', type: 8, sname: 'remove_ValueChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_ResourceReferenceExpressionProvider, { members: [{ name: '.ctor', type: 1, params: [Object] }, { name: 'CreateExpression', type: 8, sname: 'CreateExpression', returnType: $System_Windows_IExpression, params: [$System_Windows_DependencyObject, $System_Windows_DependencyProperty] }] });
	ss.setMetadata($System_Windows_ResourcesChangedEventArgs, { members: [{ name: 'Contains', type: 8, sname: 'Contains', returnType: Boolean, params: [Object] }, { name: 'FromKey', isStatic: true, type: 8, sname: 'FromKey', returnType: $System_Windows_ResourcesChangedEventArgs, params: [Object] }, { name: 'FromKeyCollection', isStatic: true, type: 8, sname: 'FromKeyCollection', returnType: $System_Windows_ResourcesChangedEventArgs, params: [ss.IEnumerable] }, { name: 'Reset', isStatic: true, type: 4, returnType: $System_Windows_ResourcesChangedEventArgs, sname: 'Reset' }] });
	ss.setMetadata($System_Windows_RoutedEvent, { attr: [new $System_Windows_Markup_TypeConverterAttribute($System_Windows_RoutedEventTypeConverter)], members: [{ name: '.ctor', type: 1, params: [String, $System_Windows_RoutingStrategy, Function, Function] }, { name: 'AddOwner', type: 8, sname: 'AddOwner', returnType: $System_Windows_RoutedEvent, params: [Function] }, { name: 'GetHashCode', type: 8, sname: 'getHashCode', returnType: ss.Int32, params: [] }, { name: 'ToString', type: 8, sname: 'toString', returnType: String, params: [] }, { name: 'HandlerType', type: 16, returnType: Function, getter: { name: 'get_HandlerType', type: 8, sname: 'get_HandlerType', returnType: Function, params: [] }, setter: { name: 'set_HandlerType', type: 8, sname: 'set_HandlerType', returnType: Object, params: [Function] } }, { name: 'Name', type: 16, returnType: String, getter: { name: 'get_Name', type: 8, sname: 'get_Name', returnType: String, params: [] }, setter: { name: 'set_Name', type: 8, sname: 'set_Name', returnType: Object, params: [String] } }, { name: 'OwnerType', type: 16, returnType: Function, getter: { name: 'get_OwnerType', type: 8, sname: 'get_OwnerType', returnType: Function, params: [] }, setter: { name: 'set_OwnerType', type: 8, sname: 'set_OwnerType', returnType: Object, params: [Function] } }, { name: 'RoutingStrategy', type: 16, returnType: $System_Windows_RoutingStrategy, getter: { name: 'get_RoutingStrategy', type: 8, sname: 'get_RoutingStrategy', returnType: $System_Windows_RoutingStrategy, params: [] }, setter: { name: 'set_RoutingStrategy', type: 8, sname: 'set_RoutingStrategy', returnType: Object, params: [$System_Windows_RoutingStrategy] } }] });
	ss.setMetadata($System_Windows_RoutedEventArgs, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_RoutedEvent, Object] }, { name: 'InvokeEventHandler', type: 8, sname: 'InvokeEventHandler', returnType: Object, params: [Function, Object] }, { name: 'Handled', type: 16, returnType: Boolean, getter: { name: 'get_Handled', type: 8, sname: 'get_Handled', returnType: Boolean, params: [] }, setter: { name: 'set_Handled', type: 8, sname: 'set_Handled', returnType: Object, params: [Boolean] } }, { name: 'OriginalSource', type: 16, returnType: Object, getter: { name: 'get_OriginalSource', type: 8, sname: 'get_OriginalSource', returnType: Object, params: [] }, setter: { name: 'set_OriginalSource', type: 8, sname: 'set_OriginalSource', returnType: Object, params: [Object] } }, { name: 'RoutedEvent', type: 16, returnType: $System_Windows_RoutedEvent, getter: { name: 'get_RoutedEvent', type: 8, sname: 'get_RoutedEvent', returnType: $System_Windows_RoutedEvent, params: [] }, setter: { name: 'set_RoutedEvent', type: 8, sname: 'set_RoutedEvent', returnType: Object, params: [$System_Windows_RoutedEvent] } }, { name: 'Source', type: 16, returnType: Object, getter: { name: 'get_Source', type: 8, sname: 'get_Source', returnType: Object, params: [] }, setter: { name: 'set_Source', type: 8, sname: 'set_Source', returnType: Object, params: [Object] } }] });
	ss.setMetadata($System_Windows_RoutedEventHandlerItem, { members: [{ name: '.ctor', type: 1, params: [Function, Boolean] }, { name: 'HandledEventsToo', type: 16, returnType: Boolean, getter: { name: 'get_HandledEventsToo', type: 8, sname: 'get_HandledEventsToo', returnType: Boolean, params: [] }, setter: { name: 'set_HandledEventsToo', type: 8, sname: 'set_HandledEventsToo', returnType: Object, params: [Boolean] } }, { name: 'Handler', type: 16, returnType: Function, getter: { name: 'get_Handler', type: 8, sname: 'get_Handler', returnType: Function, params: [] }, setter: { name: 'set_Handler', type: 8, sname: 'set_Handler', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_RoutedEventTypeConverter, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ConvertFrom', type: 8, sname: 'ConvertFrom', returnType: Object, params: [System.Xaml.XamlNamespaces, Object] }] });
	ss.setMetadata($System_Windows_RoutedPropertyChangedEventArgs$1, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_RoutedEvent, Object, Object, Object] }, { name: 'InvokeEventHandler', type: 8, sname: 'InvokeEventHandler', returnType: Object, params: [Function, Object] }, { name: 'NewValue', type: 16, returnType: Object, getter: { name: 'get_NewValue', type: 8, sname: 'get_NewValue', returnType: Object, params: [] }, setter: { name: 'set_NewValue', type: 8, sname: 'set_NewValue', returnType: Object, params: [Object] } }, { name: 'OldValue', type: 16, returnType: Object, getter: { name: 'get_OldValue', type: 8, sname: 'get_OldValue', returnType: Object, params: [] }, setter: { name: 'set_OldValue', type: 8, sname: 'set_OldValue', returnType: Object, params: [Object] } }] });
	ss.setMetadata($System_Windows_Setter, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Apply', type: 8, sname: 'Apply', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_BaseValueSource] }, { name: 'Clean', type: 8, sname: 'Clean', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_BaseValueSource] }, { name: 'IsActionOverlaps', type: 8, sname: 'IsActionOverlaps', returnType: Boolean, params: [$System_Windows_ITriggerAction] }, { name: 'Property', type: 16, returnType: $System_Windows_IPropertyPathElement, getter: { name: 'get_Property', type: 8, sname: 'get_Property', returnType: $System_Windows_IPropertyPathElement, params: [] }, setter: { name: 'set_Property', type: 8, sname: 'set_Property', returnType: Object, params: [$System_Windows_IPropertyPathElement] } }, { name: 'TargetName', type: 16, returnType: String, getter: { name: 'get_TargetName', type: 8, sname: 'get_TargetName', returnType: String, params: [] }, setter: { name: 'set_TargetName', type: 8, sname: 'set_TargetName', returnType: Object, params: [String] } }, { name: 'Value', type: 16, returnType: Object, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: Object, params: [] }, setter: { name: 'set_Value', type: 8, sname: 'set_Value', returnType: Object, params: [Object] } }] });
	ss.setMetadata($System_Windows_Size, { members: [{ name: '.ctor', type: 1, params: [Number, Number] }, { name: 'Equals', type: 8, sname: 'equals', returnType: Boolean, params: [Object] }, { name: 'FromHeight', isStatic: true, type: 8, sname: 'FromHeight', returnType: $System_Windows_Size, params: [Number] }, { name: 'FromWidth', isStatic: true, type: 8, sname: 'FromWidth', returnType: $System_Windows_Size, params: [Number] }, { name: 'GetHashCode', type: 8, sname: 'getHashCode', returnType: ss.Int32, params: [] }, { name: 'IsNullOrEmpty', isStatic: true, type: 8, sname: 'IsNullOrEmpty', returnType: Boolean, params: [$System_Windows_Size] }, { name: 'Parse', isStatic: true, type: 8, sname: 'Parse', returnType: $System_Windows_Size, params: [String] }, { name: 'ToString', type: 8, sname: 'toString', returnType: String, params: [] }, { name: 'op_Addition', isStatic: true, type: 8, sname: 'op_Addition', returnType: $System_Windows_Size, params: [$System_Windows_Size, $System_Windows_Size] }, { name: 'op_Division', isStatic: true, type: 8, sname: 'op_Division', returnType: $System_Windows_Size, params: [$System_Windows_Size, Number] }, { name: 'op_Equality', isStatic: true, type: 8, sname: 'op_Equality', returnType: Boolean, params: [$System_Windows_Size, $System_Windows_Size] }, { name: 'op_Inequality', isStatic: true, type: 8, sname: 'op_Inequality', returnType: Boolean, params: [$System_Windows_Size, $System_Windows_Size] }, { name: 'op_Multiply', isStatic: true, type: 8, sname: 'op_Multiply', returnType: $System_Windows_Size, params: [Number, $System_Windows_Size] }, { name: 'op_Multiply', isStatic: true, type: 8, sname: 'op_Multiply$1', returnType: $System_Windows_Size, params: [$System_Windows_Size, Number] }, { name: 'op_Subtraction', isStatic: true, type: 8, sname: 'op_Subtraction', returnType: $System_Windows_Size, params: [$System_Windows_Size, $System_Windows_Size] }, { name: 'op_UnaryNegation', isStatic: true, type: 8, sname: 'op_UnaryNegation', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'Height', type: 16, returnType: Number, getter: { name: 'get_Height', type: 8, sname: 'get_Height', returnType: Number, params: [] }, setter: { name: 'set_Height', type: 8, sname: 'set_Height', returnType: Object, params: [Number] } }, { name: 'IsEmpty', type: 16, returnType: Boolean, getter: { name: 'get_IsEmpty', type: 8, sname: 'get_IsEmpty', returnType: Boolean, params: [] }, setter: { name: 'set_IsEmpty', type: 8, sname: 'set_IsEmpty', returnType: Object, params: [Boolean] } }, { name: 'IsHeightEmpty', type: 16, returnType: Boolean, getter: { name: 'get_IsHeightEmpty', type: 8, sname: 'get_IsHeightEmpty', returnType: Boolean, params: [] }, setter: { name: 'set_IsHeightEmpty', type: 8, sname: 'set_IsHeightEmpty', returnType: Object, params: [Boolean] } }, { name: 'IsPartiallyEmpty', type: 16, returnType: Boolean, getter: { name: 'get_IsPartiallyEmpty', type: 8, sname: 'get_IsPartiallyEmpty', returnType: Boolean, params: [] }, setter: { name: 'set_IsPartiallyEmpty', type: 8, sname: 'set_IsPartiallyEmpty', returnType: Object, params: [Boolean] } }, { name: 'IsWidthEmpty', type: 16, returnType: Boolean, getter: { name: 'get_IsWidthEmpty', type: 8, sname: 'get_IsWidthEmpty', returnType: Boolean, params: [] }, setter: { name: 'set_IsWidthEmpty', type: 8, sname: 'set_IsWidthEmpty', returnType: Object, params: [Boolean] } }, { name: 'Width', type: 16, returnType: Number, getter: { name: 'get_Width', type: 8, sname: 'get_Width', returnType: Number, params: [] }, setter: { name: 'set_Width', type: 8, sname: 'set_Width', returnType: Object, params: [Number] } }, { name: 'Empty', isStatic: true, type: 4, returnType: $System_Windows_Size, sname: 'Empty' }, { name: 'Infinity', isStatic: true, type: 4, returnType: $System_Windows_Size, sname: 'Infinity' }, { name: 'Zero', isStatic: true, type: 4, returnType: $System_Windows_Size, sname: 'Zero' }] });
	ss.setMetadata($System_Windows_SizeExtensions, { members: [{ name: 'Bounds', isStatic: true, type: 8, sname: 'Bounds', returnType: $System_Windows_Size, params: [$System_Windows_Size, $System_Windows_Size, $System_Windows_Size] }, { name: 'Combine', isStatic: true, type: 8, sname: 'Combine', returnType: $System_Windows_Size, params: [$System_Windows_Size, $System_Windows_Size] }, { name: 'Contains', isStatic: true, type: 8, sname: 'Contains', returnType: Boolean, params: [$System_Windows_Size, $System_Windows_Point] }, { name: 'DefaultIfNullOrEmpty', isStatic: true, type: 8, sname: 'DefaultIfNullOrEmpty', returnType: $System_Windows_Size, params: [$System_Windows_Size, $System_Windows_Size] }, { name: 'IsClose', isStatic: true, type: 8, sname: 'IsClose', returnType: Boolean, params: [$System_Windows_Size, $System_Windows_Size] }, { name: 'IsNullOrEmpty', isStatic: true, type: 8, sname: 'IsNullOrEmpty', returnType: Boolean, params: [$System_Windows_Size] }, { name: 'Max', isStatic: true, type: 8, sname: 'Max', returnType: $System_Windows_Size, params: [$System_Windows_Size, $System_Windows_Size] }, { name: 'Min', isStatic: true, type: 8, sname: 'Min', returnType: $System_Windows_Size, params: [$System_Windows_Size, $System_Windows_Size] }, { name: 'ToPoint', isStatic: true, type: 8, sname: 'ToPoint', returnType: $System_Windows_Point, params: [$System_Windows_Size] }] });
	ss.setMetadata($System_Windows_StartupEventArgs, { members: [{ name: 'Empty', isStatic: true, type: 4, returnType: $System_Windows_StartupEventArgs, sname: 'Empty' }] });
	ss.setMetadata($System_Windows_StaticResourceExtension, { attr: [new $System_Windows_Markup_MarkupExtensionParameterAttribute('ResourceKey', 0)], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ProvideValue', type: 8, sname: 'ProvideValue', returnType: Object, params: [$System_Windows_Markup_InitializeContext] }, { name: 'ResourceKey', type: 16, returnType: Object, getter: { name: 'get_ResourceKey', type: 8, sname: 'get_ResourceKey', returnType: Object, params: [] }, setter: { name: 'set_ResourceKey', type: 8, sname: 'set_ResourceKey', returnType: Object, params: [Object] } }] });
	ss.setMetadata($System_Windows_Style, { attr: [new $System_Windows_Markup_ContentPropertyAttribute('Setters'), new $System_Windows_Markup_DictionaryKeyPropertyAttribute('Key')], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Attach', type: 8, sname: 'Attach', returnType: Object, params: [$System_Windows_FrameworkElement] }, { name: 'Attach', type: 8, sname: 'Attach$1', returnType: Object, params: [$System_Windows_FrameworkElement, Function] }, { name: 'Detach', type: 8, sname: 'Detach', returnType: Object, params: [$System_Windows_FrameworkElement] }, { name: 'Detach', type: 8, sname: 'Detach$1', returnType: Object, params: [$System_Windows_FrameworkElement, Function] }, { name: 'BasedOn', type: 16, returnType: $System_Windows_Style, getter: { name: 'get_BasedOn', type: 8, sname: 'get_BasedOn', returnType: $System_Windows_Style, params: [] }, setter: { name: 'set_BasedOn', type: 8, sname: 'set_BasedOn', returnType: Object, params: [$System_Windows_Style] } }, { name: 'Key', type: 16, returnType: Object, getter: { name: 'get_Key', type: 8, sname: 'get_Key', returnType: Object, params: [] }, setter: { name: 'set_Key', type: 8, sname: 'set_Key', returnType: Object, params: [Object] } }, { name: 'Setters', type: 16, returnType: ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITriggerAction]), getter: { name: 'get_Setters', type: 8, sname: 'get_Setters', returnType: ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITriggerAction]), params: [] }, setter: { name: 'set_Setters', type: 8, sname: 'set_Setters', returnType: Object, params: [ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITriggerAction])] } }, { name: 'TargetType', type: 16, returnType: Function, getter: { name: 'get_TargetType', type: 8, sname: 'get_TargetType', returnType: Function, params: [] }, setter: { name: 'set_TargetType', type: 8, sname: 'set_TargetType', returnType: Object, params: [Function] } }, { name: 'Triggers', type: 16, returnType: ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITrigger]), getter: { name: 'get_Triggers', type: 8, sname: 'get_Triggers', returnType: ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITrigger]), params: [] }, setter: { name: 'set_Triggers', type: 8, sname: 'set_Triggers', returnType: Object, params: [ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITrigger])] } }] });
	ss.setMetadata($System_Windows_StyleKey, { members: [{ name: '.ctor', type: 1, params: [Function] }, { name: 'Equals', type: 8, sname: 'equals', returnType: Boolean, params: [Object] }, { name: 'GetHashCode', type: 8, sname: 'getHashCode', returnType: ss.Int32, params: [] }, { name: 'ToString', type: 8, sname: 'toString', returnType: String, params: [] }, { name: 'Assembly', type: 16, returnType: Object, getter: { name: 'get_Assembly', type: 8, sname: 'get_Assembly', returnType: Object, params: [] } }, { name: 'TargetType', type: 16, returnType: Function, getter: { name: 'get_TargetType', type: 8, sname: 'get_TargetType', returnType: Function, params: [] }, setter: { name: 'set_TargetType', type: 8, sname: 'set_TargetType', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_SystemResources, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ResourcesChanged', type: 2, adder: { name: 'add_ResourcesChanged', type: 8, sname: 'add_ResourcesChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_ResourcesChanged', type: 8, sname: 'remove_ResourcesChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_TemplateKey, { members: [{ name: '.ctor', type: 1, params: [Function] }, { name: 'Equals', type: 8, sname: 'equals', returnType: Boolean, params: [Object] }, { name: 'GetHashCode', type: 8, sname: 'getHashCode', returnType: ss.Int32, params: [] }, { name: 'ToString', type: 8, sname: 'toString', returnType: String, params: [] }, { name: 'Assembly', type: 16, returnType: Object, getter: { name: 'get_Assembly', type: 8, sname: 'get_Assembly', returnType: Object, params: [] } }, { name: 'TargetType', type: 16, returnType: Function, getter: { name: 'get_TargetType', type: 8, sname: 'get_TargetType', returnType: Function, params: [] }, setter: { name: 'set_TargetType', type: 8, sname: 'set_TargetType', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_TemplatePartAttribute, { members: [{ name: '.ctor', type: 1, params: [String, Function] }, { name: 'Name', type: 16, returnType: String, getter: { name: 'get_Name', type: 8, sname: 'get_Name', returnType: String, params: [] }, setter: { name: 'set_Name', type: 8, sname: 'set_Name', returnType: Object, params: [String] } }, { name: 'Type', type: 16, returnType: Function, getter: { name: 'get_Type', type: 8, sname: 'get_Type', returnType: Function, params: [] }, setter: { name: 'set_Type', type: 8, sname: 'set_Type', returnType: Object, params: [Function] } }], attrAllowMultiple: true });
	ss.setMetadata($System_Windows_TemplateVisualStateAttribute, { members: [{ name: '.ctor', type: 1, params: [String, String] }, { name: 'GroupName', type: 16, returnType: String, getter: { name: 'get_GroupName', type: 8, sname: 'get_GroupName', returnType: String, params: [] }, setter: { name: 'set_GroupName', type: 8, sname: 'set_GroupName', returnType: Object, params: [String] } }, { name: 'Name', type: 16, returnType: String, getter: { name: 'get_Name', type: 8, sname: 'get_Name', returnType: String, params: [] }, setter: { name: 'set_Name', type: 8, sname: 'set_Name', returnType: Object, params: [String] } }], attrAllowMultiple: true });
	ss.setMetadata($System_Windows_ThemeInfoAttribute, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_ResourceDictionaryLocation] }, { name: '.ctor', type: 1, params: [$System_Windows_ResourceDictionaryLocation, $System_Windows_ResourceDictionaryLocation], sname: '$ctor1' }, { name: 'GenericDictionaryLocation', type: 16, returnType: $System_Windows_ResourceDictionaryLocation, getter: { name: 'get_GenericDictionaryLocation', type: 8, sname: 'get_GenericDictionaryLocation', returnType: $System_Windows_ResourceDictionaryLocation, params: [] }, setter: { name: 'set_GenericDictionaryLocation', type: 8, sname: 'set_GenericDictionaryLocation', returnType: Object, params: [$System_Windows_ResourceDictionaryLocation] } }] });
	ss.setMetadata($System_Windows_Thickness, { members: [{ name: '.ctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [Number], sname: '$ctor1' }, { name: '.ctor', type: 1, params: [Number, Number], sname: '$ctor2' }, { name: '.ctor', type: 1, params: [Number, Number, Number, Number], sname: '$ctor3' }, { name: 'Equals', type: 8, sname: 'equals', returnType: Boolean, params: [Object] }, { name: 'GetHashCode', type: 8, sname: 'getHashCode', returnType: ss.Int32, params: [] }, { name: 'Parse', isStatic: true, type: 8, sname: 'Parse', returnType: $System_Windows_Thickness, params: [String] }, { name: 'ToString', type: 8, sname: 'toString', returnType: String, params: [] }, { name: 'op_Addition', isStatic: true, type: 8, sname: 'op_Addition', returnType: $System_Windows_Thickness, params: [$System_Windows_Thickness, $System_Windows_Thickness] }, { name: 'op_Implicit', isStatic: true, type: 8, sname: 'op_Implicit', returnType: $System_Windows_Thickness, params: [Number] }, { name: 'op_Multiply', isStatic: true, type: 8, sname: 'op_Multiply', returnType: $System_Windows_Thickness, params: [Number, $System_Windows_Thickness] }, { name: 'op_Multiply', isStatic: true, type: 8, sname: 'op_Multiply$1', returnType: $System_Windows_Thickness, params: [$System_Windows_Thickness, Number] }, { name: 'op_Subtraction', isStatic: true, type: 8, sname: 'op_Subtraction', returnType: $System_Windows_Thickness, params: [$System_Windows_Thickness, $System_Windows_Thickness] }, { name: 'op_UnaryNegation', isStatic: true, type: 8, sname: 'op_UnaryNegation', returnType: $System_Windows_Thickness, params: [$System_Windows_Thickness] }, { name: 'Bottom', type: 16, returnType: Number, getter: { name: 'get_Bottom', type: 8, sname: 'get_Bottom', returnType: Number, params: [] }, setter: { name: 'set_Bottom', type: 8, sname: 'set_Bottom', returnType: Object, params: [Number] } }, { name: 'IsUniform', type: 16, returnType: Boolean, getter: { name: 'get_IsUniform', type: 8, sname: 'get_IsUniform', returnType: Boolean, params: [] }, setter: { name: 'set_IsUniform', type: 8, sname: 'set_IsUniform', returnType: Object, params: [Boolean] } }, { name: 'Left', type: 16, returnType: Number, getter: { name: 'get_Left', type: 8, sname: 'get_Left', returnType: Number, params: [] }, setter: { name: 'set_Left', type: 8, sname: 'set_Left', returnType: Object, params: [Number] } }, { name: 'Location', type: 16, returnType: $System_Windows_Point, getter: { name: 'get_Location', type: 8, sname: 'get_Location', returnType: $System_Windows_Point, params: [] }, setter: { name: 'set_Location', type: 8, sname: 'set_Location', returnType: Object, params: [$System_Windows_Point] } }, { name: 'Right', type: 16, returnType: Number, getter: { name: 'get_Right', type: 8, sname: 'get_Right', returnType: Number, params: [] }, setter: { name: 'set_Right', type: 8, sname: 'set_Right', returnType: Object, params: [Number] } }, { name: 'Size', type: 16, returnType: $System_Windows_Size, getter: { name: 'get_Size', type: 8, sname: 'get_Size', returnType: $System_Windows_Size, params: [] }, setter: { name: 'set_Size', type: 8, sname: 'set_Size', returnType: Object, params: [$System_Windows_Size] } }, { name: 'Top', type: 16, returnType: Number, getter: { name: 'get_Top', type: 8, sname: 'get_Top', returnType: Number, params: [] }, setter: { name: 'set_Top', type: 8, sname: 'set_Top', returnType: Object, params: [Number] } }, { name: 'Zero', isStatic: true, type: 4, returnType: $System_Windows_Thickness, sname: 'Zero' }] });
	ss.setMetadata($System_Windows_ThicknessExtensions, { members: [{ name: 'DefaultIfNull', isStatic: true, type: 8, sname: 'DefaultIfNull', returnType: $System_Windows_Thickness, params: [$System_Windows_Thickness, $System_Windows_Thickness] }] });
	ss.setMetadata($System_Windows_Trigger, { attr: [new $System_Windows_Markup_ContentPropertyAttribute('Setters')], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'CreateDataTriggerCondition', type: 8, sname: 'CreateDataTriggerCondition', returnType: $System_Windows_IDataTriggerCondition, params: [$System_Windows_FrameworkElement] }, { name: 'Property', type: 16, returnType: $System_Windows_IPropertyPathElement, getter: { name: 'get_Property', type: 8, sname: 'get_Property', returnType: $System_Windows_IPropertyPathElement, params: [] }, setter: { name: 'set_Property', type: 8, sname: 'set_Property', returnType: Object, params: [$System_Windows_IPropertyPathElement] } }, { name: 'Setters', type: 16, returnType: ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITriggerAction]), getter: { name: 'get_Setters', type: 8, sname: 'get_Setters', returnType: ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITriggerAction]), params: [] }, setter: { name: 'set_Setters', type: 8, sname: 'set_Setters', returnType: Object, params: [ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_ITriggerAction])] } }, { name: 'SourceName', type: 16, returnType: String, getter: { name: 'get_SourceName', type: 8, sname: 'get_SourceName', returnType: String, params: [] }, setter: { name: 'set_SourceName', type: 8, sname: 'set_SourceName', returnType: Object, params: [String] } }, { name: 'TriggerActions', type: 16, returnType: ss.IEnumerable, getter: { name: 'get_TriggerActions', type: 8, sname: 'get_TriggerActions', returnType: ss.IEnumerable, params: [] } }, { name: 'Value', type: 16, returnType: Object, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: Object, params: [] }, setter: { name: 'set_Value', type: 8, sname: 'set_Value', returnType: Object, params: [Object] } }] });
	ss.setMetadata($System_Windows_TriggerBase, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Attach', type: 8, sname: 'Attach', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_BaseValueSource] }, { name: 'Detach', type: 8, sname: 'Detach', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_BaseValueSource] }, { name: 'TriggerActions', type: 16, returnType: ss.IEnumerable, getter: { name: 'get_TriggerActions', type: 8, sname: 'get_TriggerActions', returnType: ss.IEnumerable, params: [] } }] });
	ss.setMetadata($System_Windows_UIElement, { members: [{ name: '.cctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [] }, { name: 'AddAnimationClocks', type: 8, sname: 'AddAnimationClocks', returnType: Object, params: [$System_Windows_DependencyProperty, ss.IEnumerable, Object] }, { name: 'AddHandler', type: 8, sname: 'AddHandler', returnType: Object, params: [$System_Windows_RoutedEvent, Function, Boolean] }, { name: 'AddHandler', isStatic: true, type: 8, sname: 'AddHandler', returnType: Object, params: [$System_Windows_DependencyObject, $System_Windows_RoutedEvent, Function, Boolean] }, { name: 'AddLogicalChild', type: 8, sname: 'AddLogicalChild', returnType: Object, params: [Object] }, { name: 'Arrange', type: 8, sname: 'Arrange', returnType: Object, params: [$System_Windows_Rect] }, { name: 'ArrangeCore', type: 8, sname: 'ArrangeCore', returnType: Object, params: [$System_Windows_Rect] }, { name: 'ClearFocus', type: 8, sname: 'ClearFocus', returnType: Object, params: [] }, { name: 'Focus', type: 8, sname: 'Focus', returnType: Object, params: [] }, { name: 'GetPathFromRoot', type: 8, sname: 'GetPathFromRoot', returnType: ss.IEnumerable, params: [] }, { name: 'GetRelativePosition', type: 8, sname: 'GetRelativePosition', returnType: $System_Windows_Point, params: [$System_Windows_Point] }, { name: 'GetRoutedEventHandlersOverride', type: 8, sname: 'GetRoutedEventHandlersOverride', returnType: ss.IEnumerable, params: [$System_Windows_RoutedEvent] }, { name: 'HitTest', type: 8, sname: 'HitTest', returnType: $System_Windows_Media_Visual, params: [$System_Windows_Point] }, { name: 'HitTestOverride', type: 8, sname: 'HitTestOverride', returnType: Boolean, params: [$System_Windows_Point] }, { name: 'InvalidateArrange', type: 8, sname: 'InvalidateArrange', returnType: Object, params: [] }, { name: 'InvalidateMeasure', type: 8, sname: 'InvalidateMeasure', returnType: Object, params: [] }, { name: 'Measure', type: 8, sname: 'Measure', returnType: Object, params: [$System_Windows_Size] }, { name: 'MeasureCore', type: 8, sname: 'MeasureCore', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'OnGotFocus', type: 8, sname: 'OnGotFocus', returnType: Object, params: [$System_Windows_RoutedEventArgs] }, { name: 'OnGotKeyboardFocus', type: 8, sname: 'OnGotKeyboardFocus', returnType: Object, params: [$System_Windows_Input_KeyboardFocusChangedEventArgs] }, { name: 'OnKeyDown', type: 8, sname: 'OnKeyDown', returnType: Object, params: [$System_Windows_Input_KeyEventArgs] }, { name: 'OnKeyUp', type: 8, sname: 'OnKeyUp', returnType: Object, params: [$System_Windows_Input_KeyEventArgs] }, { name: 'OnLayoutUpdated', type: 8, sname: 'OnLayoutUpdated', returnType: Object, params: [] }, { name: 'OnLogicalParentChanged', type: 8, sname: 'OnLogicalParentChanged', returnType: Object, params: [$System_Windows_UIElement, $System_Windows_UIElement] }, { name: 'OnLostFocus', type: 8, sname: 'OnLostFocus', returnType: Object, params: [$System_Windows_RoutedEventArgs] }, { name: 'OnLostKeyboardFocus', type: 8, sname: 'OnLostKeyboardFocus', returnType: Object, params: [$System_Windows_Input_KeyboardFocusChangedEventArgs] }, { name: 'OnMouseDown', type: 8, sname: 'OnMouseDown', returnType: Object, params: [$System_Windows_Input_MouseButtonEventArgs] }, { name: 'OnMouseEnter', type: 8, sname: 'OnMouseEnter', returnType: Object, params: [$System_Windows_Input_MouseEventArgs] }, { name: 'OnMouseLeave', type: 8, sname: 'OnMouseLeave', returnType: Object, params: [$System_Windows_Input_MouseEventArgs] }, { name: 'OnMouseMove', type: 8, sname: 'OnMouseMove', returnType: Object, params: [$System_Windows_Input_MouseEventArgs] }, { name: 'OnMouseUp', type: 8, sname: 'OnMouseUp', returnType: Object, params: [$System_Windows_Input_MouseButtonEventArgs] }, { name: 'OnMouseWheel', type: 8, sname: 'OnMouseWheel', returnType: Object, params: [$System_Windows_Input_MouseWheelEventArgs] }, { name: 'OnPreviewKeyDown', type: 8, sname: 'OnPreviewKeyDown', returnType: Object, params: [$System_Windows_Input_KeyEventArgs] }, { name: 'OnPreviewKeyUp', type: 8, sname: 'OnPreviewKeyUp', returnType: Object, params: [$System_Windows_Input_KeyEventArgs] }, { name: 'OnPreviewMouseDown', type: 8, sname: 'OnPreviewMouseDown', returnType: Object, params: [$System_Windows_Input_MouseButtonEventArgs] }, { name: 'OnPreviewMouseMove', type: 8, sname: 'OnPreviewMouseMove', returnType: Object, params: [$System_Windows_Input_MouseEventArgs] }, { name: 'OnPreviewMouseUp', type: 8, sname: 'OnPreviewMouseUp', returnType: Object, params: [$System_Windows_Input_MouseButtonEventArgs] }, { name: 'OnPreviewMouseWheel', type: 8, sname: 'OnPreviewMouseWheel', returnType: Object, params: [$System_Windows_Input_MouseWheelEventArgs] }, { name: 'OnQueryCursor', type: 8, sname: 'OnQueryCursor', returnType: Object, params: [$System_Windows_Input_QueryCursorEventArgs] }, { name: 'OnVisualParentChanged', type: 8, sname: 'OnVisualParentChanged', returnType: Object, params: [$System_Windows_Media_Visual, $System_Windows_Media_Visual] }, { name: 'RaiseEvent', type: 8, sname: 'RaiseEvent', returnType: Object, params: [$System_Windows_RoutedEventArgs] }, { name: 'RemoveAnimationClocks', type: 8, sname: 'RemoveAnimationClocks', returnType: Object, params: [$System_Windows_DependencyProperty, ss.IEnumerable, Object] }, { name: 'RemoveHandler', type: 8, sname: 'RemoveHandler', returnType: Object, params: [$System_Windows_RoutedEvent, Function] }, { name: 'RemoveHandler', isStatic: true, type: 8, sname: 'RemoveHandler', returnType: Object, params: [$System_Windows_DependencyObject, $System_Windows_RoutedEvent, Function] }, { name: 'RemoveLogicalChild', type: 8, sname: 'RemoveLogicalChild', returnType: Object, params: [Object] }, { name: 'SetAnimatableRootClock', type: 8, sname: 'SetAnimatableRootClock', returnType: Object, params: [$System_Windows_Media_Animation_AnimatableRootClock] }, { name: 'SetAnimationClocks', type: 8, sname: 'SetAnimationClocks', returnType: Object, params: [$System_Windows_DependencyProperty, ss.IEnumerable, Object] }, { name: 'UpdateLayout', type: 8, sname: 'UpdateLayout', returnType: Object, params: [] }, { name: 'ClipToBounds', type: 16, returnType: Boolean, getter: { name: 'get_ClipToBounds', type: 8, sname: 'get_ClipToBounds', returnType: Boolean, params: [] }, setter: { name: 'set_ClipToBounds', type: 8, sname: 'set_ClipToBounds', returnType: Object, params: [Boolean] } }, { name: 'DesiredSize', type: 16, returnType: $System_Windows_Size, getter: { name: 'get_DesiredSize', type: 8, sname: 'get_DesiredSize', returnType: $System_Windows_Size, params: [] }, setter: { name: 'set_DesiredSize', type: 8, sname: 'set_DesiredSize', returnType: Object, params: [$System_Windows_Size] } }, { name: 'Focusable', type: 16, returnType: Boolean, getter: { name: 'get_Focusable', type: 8, sname: 'get_Focusable', returnType: Boolean, params: [] }, setter: { name: 'set_Focusable', type: 8, sname: 'set_Focusable', returnType: Object, params: [Boolean] } }, { name: 'IsArrangeValid', type: 16, returnType: Boolean, getter: { name: 'get_IsArrangeValid', type: 8, sname: 'get_IsArrangeValid', returnType: Boolean, params: [] }, setter: { name: 'set_IsArrangeValid', type: 8, sname: 'set_IsArrangeValid', returnType: Object, params: [Boolean] } }, { name: 'IsEnabled', type: 16, returnType: Boolean, getter: { name: 'get_IsEnabled', type: 8, sname: 'get_IsEnabled', returnType: Boolean, params: [] }, setter: { name: 'set_IsEnabled', type: 8, sname: 'set_IsEnabled', returnType: Object, params: [Boolean] } }, { name: 'IsFocused', type: 16, returnType: Boolean, getter: { name: 'get_IsFocused', type: 8, sname: 'get_IsFocused', returnType: Boolean, params: [] }, setter: { name: 'set_IsFocused', type: 8, sname: 'set_IsFocused', returnType: Object, params: [Boolean] } }, { name: 'IsHitTestVisible', type: 16, returnType: Boolean, getter: { name: 'get_IsHitTestVisible', type: 8, sname: 'get_IsHitTestVisible', returnType: Boolean, params: [] }, setter: { name: 'set_IsHitTestVisible', type: 8, sname: 'set_IsHitTestVisible', returnType: Object, params: [Boolean] } }, { name: 'IsKeyboardFocusWithin', type: 16, returnType: Boolean, getter: { name: 'get_IsKeyboardFocusWithin', type: 8, sname: 'get_IsKeyboardFocusWithin', returnType: Boolean, params: [] }, setter: { name: 'set_IsKeyboardFocusWithin', type: 8, sname: 'set_IsKeyboardFocusWithin', returnType: Object, params: [Boolean] } }, { name: 'IsKeyboardFocused', type: 16, returnType: Boolean, getter: { name: 'get_IsKeyboardFocused', type: 8, sname: 'get_IsKeyboardFocused', returnType: Boolean, params: [] }, setter: { name: 'set_IsKeyboardFocused', type: 8, sname: 'set_IsKeyboardFocused', returnType: Object, params: [Boolean] } }, { name: 'IsMeasureValid', type: 16, returnType: Boolean, getter: { name: 'get_IsMeasureValid', type: 8, sname: 'get_IsMeasureValid', returnType: Boolean, params: [] }, setter: { name: 'set_IsMeasureValid', type: 8, sname: 'set_IsMeasureValid', returnType: Object, params: [Boolean] } }, { name: 'IsMouseOver', type: 16, returnType: Boolean, getter: { name: 'get_IsMouseOver', type: 8, sname: 'get_IsMouseOver', returnType: Boolean, params: [] }, setter: { name: 'set_IsMouseOver', type: 8, sname: 'set_IsMouseOver', returnType: Object, params: [Boolean] } }, { name: 'IsRootElement', type: 16, returnType: Boolean, getter: { name: 'get_IsRootElement', type: 8, sname: 'get_IsRootElement', returnType: Boolean, params: [] }, setter: { name: 'set_IsRootElement', type: 8, sname: 'set_IsRootElement', returnType: Object, params: [Boolean] } }, { name: 'IsVisible', type: 16, returnType: Boolean, getter: { name: 'get_IsVisible', type: 8, sname: 'get_IsVisible', returnType: Boolean, params: [] }, setter: { name: 'set_IsVisible', type: 8, sname: 'set_IsVisible', returnType: Object, params: [Boolean] } }, { name: 'LogicalChildren', type: 16, returnType: ss.IEnumerable, getter: { name: 'get_LogicalChildren', type: 8, sname: 'get_LogicalChildren', returnType: ss.IEnumerable, params: [] }, setter: { name: 'set_LogicalChildren', type: 8, sname: 'set_LogicalChildren', returnType: Object, params: [ss.IEnumerable] } }, { name: 'LogicalParent', type: 16, returnType: $System_Windows_UIElement, getter: { name: 'get_LogicalParent', type: 8, sname: 'get_LogicalParent', returnType: $System_Windows_UIElement, params: [] }, setter: { name: 'set_LogicalParent', type: 8, sname: 'set_LogicalParent', returnType: Object, params: [$System_Windows_UIElement] } }, { name: 'Opacity', type: 16, returnType: Number, getter: { name: 'get_Opacity', type: 8, sname: 'get_Opacity', returnType: Number, params: [] }, setter: { name: 'set_Opacity', type: 8, sname: 'set_Opacity', returnType: Object, params: [Number] } }, { name: 'PreviousAvailableSize', type: 16, returnType: $System_Windows_Size, getter: { name: 'get_PreviousAvailableSize', type: 8, sname: 'get_PreviousAvailableSize', returnType: $System_Windows_Size, params: [] }, setter: { name: 'set_PreviousAvailableSize', type: 8, sname: 'set_PreviousAvailableSize', returnType: Object, params: [$System_Windows_Size] } }, { name: 'PreviousFinalRect', type: 16, returnType: $System_Windows_Rect, getter: { name: 'get_PreviousFinalRect', type: 8, sname: 'get_PreviousFinalRect', returnType: $System_Windows_Rect, params: [] }, setter: { name: 'set_PreviousFinalRect', type: 8, sname: 'set_PreviousFinalRect', returnType: Object, params: [$System_Windows_Rect] } }, { name: 'RenderSize', type: 16, returnType: $System_Windows_Size, getter: { name: 'get_RenderSize', type: 8, sname: 'get_RenderSize', returnType: $System_Windows_Size, params: [] } }, { name: 'RootClock', type: 16, returnType: $System_Windows_Media_Animation_IRootClock, getter: { name: 'get_RootClock', type: 8, sname: 'get_RootClock', returnType: $System_Windows_Media_Animation_IRootClock, params: [] } }, { name: 'Visibility', type: 16, returnType: $System_Windows_Visibility, getter: { name: 'get_Visibility', type: 8, sname: 'get_Visibility', returnType: $System_Windows_Visibility, params: [] }, setter: { name: 'set_Visibility', type: 8, sname: 'set_Visibility', returnType: Object, params: [$System_Windows_Visibility] } }, { name: 'ClipToBoundsProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ClipToBoundsProperty' }, { name: 'FocusableProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'FocusableProperty' }, { name: 'GotFocusEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'GotFocusEvent' }, { name: 'GotKeyboardFocusEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'GotKeyboardFocusEvent' }, { name: 'IsEnabledProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsEnabledProperty' }, { name: 'IsFocusedProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsFocusedProperty' }, { name: 'IsHitTestVisibleProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsHitTestVisibleProperty' }, { name: 'IsKeyboardFocusWithinProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsKeyboardFocusWithinProperty' }, { name: 'IsKeyboardFocusedProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsKeyboardFocusedProperty' }, { name: 'IsMouseOverProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsMouseOverProperty' }, { name: 'IsVisibleProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsVisibleProperty' }, { name: 'KeyDownEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'KeyDownEvent' }, { name: 'KeyUpEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'KeyUpEvent' }, { name: 'LostFocusEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'LostFocusEvent' }, { name: 'LostKeyboardFocusEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'LostKeyboardFocusEvent' }, { name: 'MouseDownEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'MouseDownEvent' }, { name: 'MouseEnterEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'MouseEnterEvent' }, { name: 'MouseLeaveEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'MouseLeaveEvent' }, { name: 'MouseMoveEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'MouseMoveEvent' }, { name: 'MouseUpEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'MouseUpEvent' }, { name: 'MouseWheelEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'MouseWheelEvent' }, { name: 'OpacityProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'OpacityProperty' }, { name: 'PreviewGotKeyboardFocusEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'PreviewGotKeyboardFocusEvent' }, { name: 'PreviewKeyDownEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'PreviewKeyDownEvent' }, { name: 'PreviewKeyUpEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'PreviewKeyUpEvent' }, { name: 'PreviewLostKeyboardFocusEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'PreviewLostKeyboardFocusEvent' }, { name: 'PreviewMouseDownEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'PreviewMouseDownEvent' }, { name: 'PreviewMouseMoveEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'PreviewMouseMoveEvent' }, { name: 'PreviewMouseUpEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'PreviewMouseUpEvent' }, { name: 'PreviewMouseWheelEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'PreviewMouseWheelEvent' }, { name: 'QueryCursorEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'QueryCursorEvent' }, { name: 'VisibilityProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'VisibilityProperty' }, { name: 'GotFocus', type: 2, adder: { name: 'add_GotFocus', type: 8, sname: 'add_GotFocus', returnType: Object, params: [Function] }, remover: { name: 'remove_GotFocus', type: 8, sname: 'remove_GotFocus', returnType: Object, params: [Function] } }, { name: 'GotKeyboardFocus', type: 2, adder: { name: 'add_GotKeyboardFocus', type: 8, sname: 'add_GotKeyboardFocus', returnType: Object, params: [Function] }, remover: { name: 'remove_GotKeyboardFocus', type: 8, sname: 'remove_GotKeyboardFocus', returnType: Object, params: [Function] } }, { name: 'KeyDown', type: 2, adder: { name: 'add_KeyDown', type: 8, sname: 'add_KeyDown', returnType: Object, params: [Function] }, remover: { name: 'remove_KeyDown', type: 8, sname: 'remove_KeyDown', returnType: Object, params: [Function] } }, { name: 'KeyUp', type: 2, adder: { name: 'add_KeyUp', type: 8, sname: 'add_KeyUp', returnType: Object, params: [Function] }, remover: { name: 'remove_KeyUp', type: 8, sname: 'remove_KeyUp', returnType: Object, params: [Function] } }, { name: 'LayoutUpdated', type: 2, adder: { name: 'add_LayoutUpdated', type: 8, sname: 'add_LayoutUpdated', returnType: Object, params: [Function] }, remover: { name: 'remove_LayoutUpdated', type: 8, sname: 'remove_LayoutUpdated', returnType: Object, params: [Function] } }, { name: 'LostFocus', type: 2, adder: { name: 'add_LostFocus', type: 8, sname: 'add_LostFocus', returnType: Object, params: [Function] }, remover: { name: 'remove_LostFocus', type: 8, sname: 'remove_LostFocus', returnType: Object, params: [Function] } }, { name: 'LostKeyboardFocus', type: 2, adder: { name: 'add_LostKeyboardFocus', type: 8, sname: 'add_LostKeyboardFocus', returnType: Object, params: [Function] }, remover: { name: 'remove_LostKeyboardFocus', type: 8, sname: 'remove_LostKeyboardFocus', returnType: Object, params: [Function] } }, { name: 'MouseDown', type: 2, adder: { name: 'add_MouseDown', type: 8, sname: 'add_MouseDown', returnType: Object, params: [Function] }, remover: { name: 'remove_MouseDown', type: 8, sname: 'remove_MouseDown', returnType: Object, params: [Function] } }, { name: 'MouseEnter', type: 2, adder: { name: 'add_MouseEnter', type: 8, sname: 'add_MouseEnter', returnType: Object, params: [Function] }, remover: { name: 'remove_MouseEnter', type: 8, sname: 'remove_MouseEnter', returnType: Object, params: [Function] } }, { name: 'MouseLeave', type: 2, adder: { name: 'add_MouseLeave', type: 8, sname: 'add_MouseLeave', returnType: Object, params: [Function] }, remover: { name: 'remove_MouseLeave', type: 8, sname: 'remove_MouseLeave', returnType: Object, params: [Function] } }, { name: 'MouseMove', type: 2, adder: { name: 'add_MouseMove', type: 8, sname: 'add_MouseMove', returnType: Object, params: [Function] }, remover: { name: 'remove_MouseMove', type: 8, sname: 'remove_MouseMove', returnType: Object, params: [Function] } }, { name: 'MouseUp', type: 2, adder: { name: 'add_MouseUp', type: 8, sname: 'add_MouseUp', returnType: Object, params: [Function] }, remover: { name: 'remove_MouseUp', type: 8, sname: 'remove_MouseUp', returnType: Object, params: [Function] } }, { name: 'MouseWheel', type: 2, adder: { name: 'add_MouseWheel', type: 8, sname: 'add_MouseWheel', returnType: Object, params: [Function] }, remover: { name: 'remove_MouseWheel', type: 8, sname: 'remove_MouseWheel', returnType: Object, params: [Function] } }, { name: 'PreviewGotKeyboardFocus', type: 2, adder: { name: 'add_PreviewGotKeyboardFocus', type: 8, sname: 'add_PreviewGotKeyboardFocus', returnType: Object, params: [Function] }, remover: { name: 'remove_PreviewGotKeyboardFocus', type: 8, sname: 'remove_PreviewGotKeyboardFocus', returnType: Object, params: [Function] } }, { name: 'PreviewKeyDown', type: 2, adder: { name: 'add_PreviewKeyDown', type: 8, sname: 'add_PreviewKeyDown', returnType: Object, params: [Function] }, remover: { name: 'remove_PreviewKeyDown', type: 8, sname: 'remove_PreviewKeyDown', returnType: Object, params: [Function] } }, { name: 'PreviewKeyUp', type: 2, adder: { name: 'add_PreviewKeyUp', type: 8, sname: 'add_PreviewKeyUp', returnType: Object, params: [Function] }, remover: { name: 'remove_PreviewKeyUp', type: 8, sname: 'remove_PreviewKeyUp', returnType: Object, params: [Function] } }, { name: 'PreviewLostKeyboardFocus', type: 2, adder: { name: 'add_PreviewLostKeyboardFocus', type: 8, sname: 'add_PreviewLostKeyboardFocus', returnType: Object, params: [Function] }, remover: { name: 'remove_PreviewLostKeyboardFocus', type: 8, sname: 'remove_PreviewLostKeyboardFocus', returnType: Object, params: [Function] } }, { name: 'PreviewMouseDown', type: 2, adder: { name: 'add_PreviewMouseDown', type: 8, sname: 'add_PreviewMouseDown', returnType: Object, params: [Function] }, remover: { name: 'remove_PreviewMouseDown', type: 8, sname: 'remove_PreviewMouseDown', returnType: Object, params: [Function] } }, { name: 'PreviewMouseMove', type: 2, adder: { name: 'add_PreviewMouseMove', type: 8, sname: 'add_PreviewMouseMove', returnType: Object, params: [Function] }, remover: { name: 'remove_PreviewMouseMove', type: 8, sname: 'remove_PreviewMouseMove', returnType: Object, params: [Function] } }, { name: 'PreviewMouseUp', type: 2, adder: { name: 'add_PreviewMouseUp', type: 8, sname: 'add_PreviewMouseUp', returnType: Object, params: [Function] }, remover: { name: 'remove_PreviewMouseUp', type: 8, sname: 'remove_PreviewMouseUp', returnType: Object, params: [Function] } }, { name: 'PreviewMouseWheel', type: 2, adder: { name: 'add_PreviewMouseWheel', type: 8, sname: 'add_PreviewMouseWheel', returnType: Object, params: [Function] }, remover: { name: 'remove_PreviewMouseWheel', type: 8, sname: 'remove_PreviewMouseWheel', returnType: Object, params: [Function] } }, { name: 'QueryCursor', type: 2, adder: { name: 'add_QueryCursor', type: 8, sname: 'add_QueryCursor', returnType: Object, params: [Function] }, remover: { name: 'remove_QueryCursor', type: 8, sname: 'remove_QueryCursor', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_ValueSource, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_BaseValueSource, Boolean, Boolean, Boolean, Boolean] }, { name: 'BaseValueSource', type: 16, returnType: $System_Windows_BaseValueSource, getter: { name: 'get_BaseValueSource', type: 8, sname: 'get_BaseValueSource', returnType: $System_Windows_BaseValueSource, params: [] }, setter: { name: 'set_BaseValueSource', type: 8, sname: 'set_BaseValueSource', returnType: Object, params: [$System_Windows_BaseValueSource] } }, { name: 'IsAnimated', type: 16, returnType: Boolean, getter: { name: 'get_IsAnimated', type: 8, sname: 'get_IsAnimated', returnType: Boolean, params: [] }, setter: { name: 'set_IsAnimated', type: 8, sname: 'set_IsAnimated', returnType: Object, params: [Boolean] } }, { name: 'IsCoerced', type: 16, returnType: Boolean, getter: { name: 'get_IsCoerced', type: 8, sname: 'get_IsCoerced', returnType: Boolean, params: [] }, setter: { name: 'set_IsCoerced', type: 8, sname: 'set_IsCoerced', returnType: Object, params: [Boolean] } }, { name: 'IsCurrent', type: 16, returnType: Boolean, getter: { name: 'get_IsCurrent', type: 8, sname: 'get_IsCurrent', returnType: Boolean, params: [] }, setter: { name: 'set_IsCurrent', type: 8, sname: 'set_IsCurrent', returnType: Object, params: [Boolean] } }, { name: 'IsExpression', type: 16, returnType: Boolean, getter: { name: 'get_IsExpression', type: 8, sname: 'get_IsExpression', returnType: Boolean, params: [] }, setter: { name: 'set_IsExpression', type: 8, sname: 'set_IsExpression', returnType: Object, params: [Boolean] } }] });
	ss.setMetadata($System_Windows_VisualState, { attr: [new $System_Windows_Markup_RuntimeNamePropertyAttribute('Name'), new $System_Windows_Markup_ContentPropertyAttribute('Storyboard')], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Name', type: 16, returnType: String, getter: { name: 'get_Name', type: 8, sname: 'get_Name', returnType: String, params: [] }, setter: { name: 'set_Name', type: 8, sname: 'set_Name', returnType: Object, params: [String] } }, { name: 'Storyboard', type: 16, returnType: $System_Windows_Media_Animation_Storyboard, getter: { name: 'get_Storyboard', type: 8, sname: 'get_Storyboard', returnType: $System_Windows_Media_Animation_Storyboard, params: [] }, setter: { name: 'set_Storyboard', type: 8, sname: 'set_Storyboard', returnType: Object, params: [$System_Windows_Media_Animation_Storyboard] } }, { name: 'StoryboardProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'StoryboardProperty' }] });
	ss.setMetadata($System_Windows_VisualStateGroup, { attr: [new $System_Windows_Markup_ContentPropertyAttribute('States'), new $System_Windows_Markup_RuntimeNamePropertyAttribute('Name')], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GoToState', type: 8, sname: 'GoToState', returnType: Boolean, params: [$System_Windows_VisualState, Boolean] }, { name: 'SetContainer', type: 8, sname: 'SetContainer', returnType: Object, params: [$System_Windows_FrameworkElement] }, { name: 'CurrentState', type: 16, returnType: $System_Windows_VisualState, getter: { name: 'get_CurrentState', type: 8, sname: 'get_CurrentState', returnType: $System_Windows_VisualState, params: [] }, setter: { name: 'set_CurrentState', type: 8, sname: 'set_CurrentState', returnType: Object, params: [$System_Windows_VisualState] } }, { name: 'Name', type: 16, returnType: String, getter: { name: 'get_Name', type: 8, sname: 'get_Name', returnType: String, params: [] }, setter: { name: 'set_Name', type: 8, sname: 'set_Name', returnType: Object, params: [String] } }, { name: 'States', type: 16, returnType: ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_VisualState]), getter: { name: 'get_States', type: 8, sname: 'get_States', returnType: ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_VisualState]), params: [] }, setter: { name: 'set_States', type: 8, sname: 'set_States', returnType: Object, params: [ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_VisualState])] } }, { name: 'Transitions', type: 16, returnType: ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_VisualTransition]), getter: { name: 'get_Transitions', type: 8, sname: 'get_Transitions', returnType: ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_VisualTransition]), params: [] }, setter: { name: 'set_Transitions', type: 8, sname: 'set_Transitions', returnType: Object, params: [ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_VisualTransition])] } }] });
	ss.setMetadata($System_Windows_VisualStateManager, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GetVisualStateGroups', isStatic: true, type: 8, sname: 'GetVisualStateGroups', returnType: ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_VisualStateGroup]), params: [$System_Windows_DependencyObject] }, { name: 'GoToState', isStatic: true, type: 8, sname: 'GoToState', returnType: Boolean, params: [$System_Windows_Controls_Control, String, Boolean] }, { name: 'SetVisualStateGroups', isStatic: true, type: 8, sname: 'SetVisualStateGroups', returnType: Object, params: [$System_Windows_DependencyObject, ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_VisualStateGroup])] }, { name: 'VisualStateGroupsProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'VisualStateGroupsProperty' }] });
	ss.setMetadata($System_Windows_VisualStates, { members: [{ name: 'CheckStates', isStatic: true, type: 4, returnType: String, sname: 'CheckStates' }, { name: 'CheckedState', isStatic: true, type: 4, returnType: String, sname: 'CheckedState' }, { name: 'CollapsedState', isStatic: true, type: 4, returnType: String, sname: 'CollapsedState' }, { name: 'CommonStates', isStatic: true, type: 4, returnType: String, sname: 'CommonStates' }, { name: 'DisabledState', isStatic: true, type: 4, returnType: String, sname: 'DisabledState' }, { name: 'ExpandedState', isStatic: true, type: 4, returnType: String, sname: 'ExpandedState' }, { name: 'ExpansionStates', isStatic: true, type: 4, returnType: String, sname: 'ExpansionStates' }, { name: 'FocusStates', isStatic: true, type: 4, returnType: String, sname: 'FocusStates' }, { name: 'FocusedState', isStatic: true, type: 4, returnType: String, sname: 'FocusedState' }, { name: 'IndeterminateState', isStatic: true, type: 4, returnType: String, sname: 'IndeterminateState' }, { name: 'MouseOverState', isStatic: true, type: 4, returnType: String, sname: 'MouseOverState' }, { name: 'NormalState', isStatic: true, type: 4, returnType: String, sname: 'NormalState' }, { name: 'PressedState', isStatic: true, type: 4, returnType: String, sname: 'PressedState' }, { name: 'SelectedInactiveState', isStatic: true, type: 4, returnType: String, sname: 'SelectedInactiveState' }, { name: 'SelectedState', isStatic: true, type: 4, returnType: String, sname: 'SelectedState' }, { name: 'SelectedUnfocusedState', isStatic: true, type: 4, returnType: String, sname: 'SelectedUnfocusedState' }, { name: 'SelectionStates', isStatic: true, type: 4, returnType: String, sname: 'SelectionStates' }, { name: 'UncheckedState', isStatic: true, type: 4, returnType: String, sname: 'UncheckedState' }, { name: 'UnfocusedState', isStatic: true, type: 4, returnType: String, sname: 'UnfocusedState' }, { name: 'UnselectedState', isStatic: true, type: 4, returnType: String, sname: 'UnselectedState' }] });
	ss.setMetadata($System_Windows_VisualTransition, { attr: [new $System_Windows_Markup_ContentPropertyAttribute('Storyboard')], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'From', type: 16, returnType: String, getter: { name: 'get_From', type: 8, sname: 'get_From', returnType: String, params: [] }, setter: { name: 'set_From', type: 8, sname: 'set_From', returnType: Object, params: [String] } }, { name: 'Storyboard', type: 16, returnType: $System_Windows_Media_Animation_Storyboard, getter: { name: 'get_Storyboard', type: 8, sname: 'get_Storyboard', returnType: $System_Windows_Media_Animation_Storyboard, params: [] }, setter: { name: 'set_Storyboard', type: 8, sname: 'set_Storyboard', returnType: Object, params: [$System_Windows_Media_Animation_Storyboard] } }, { name: 'To', type: 16, returnType: String, getter: { name: 'get_To', type: 8, sname: 'get_To', returnType: String, params: [] }, setter: { name: 'set_To', type: 8, sname: 'set_To', returnType: Object, params: [String] } }, { name: 'StoryboardProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'StoryboardProperty' }] });
	ss.setMetadata($System_Windows_Window, { members: [{ name: '.cctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [] }, { name: 'ArrangeOverride', type: 8, sname: 'ArrangeOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'GetRadioButtonGroup', type: 8, sname: 'GetRadioButtonGroup', returnType: ss.makeGenericType($System_Windows_Controls_ISelectionGroup$1, [$System_Windows_Controls_RadioButton]), params: [String] }, { name: 'MeasureOverride', type: 8, sname: 'MeasureOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'OnTemplateChildChanged', type: 8, sname: 'OnTemplateChildChanged', returnType: Object, params: [] }, { name: 'Show', type: 8, sname: 'Show', returnType: Object, params: [] }, { name: 'AdornerLayer', type: 16, returnType: $System_Windows_Controls_AdornerLayer, getter: { name: 'get_AdornerLayer', type: 8, sname: 'get_AdornerLayer', returnType: $System_Windows_Controls_AdornerLayer, params: [] }, setter: { name: 'set_AdornerLayer', type: 8, sname: 'set_AdornerLayer', returnType: Object, params: [$System_Windows_Controls_AdornerLayer] } }, { name: 'PopupLayer', type: 16, returnType: $System_Windows_Controls_PopupLayer, getter: { name: 'get_PopupLayer', type: 8, sname: 'get_PopupLayer', returnType: $System_Windows_Controls_PopupLayer, params: [] }, setter: { name: 'set_PopupLayer', type: 8, sname: 'set_PopupLayer', returnType: Object, params: [$System_Windows_Controls_PopupLayer] } }, { name: 'Title', type: 16, returnType: String, getter: { name: 'get_Title', type: 8, sname: 'get_Title', returnType: String, params: [] }, setter: { name: 'set_Title', type: 8, sname: 'set_Title', returnType: Object, params: [String] } }, { name: 'TitleProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'TitleProperty' }] });
	ss.setMetadata($System_Windows_Controls_$GridLengthTypeConverter, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ConvertFrom', type: 8, sname: 'ConvertFrom', returnType: Object, params: [System.Xaml.XamlNamespaces, Object] }] });
	ss.setMetadata($System_Windows_Controls_$IDefinitionBase, { members: [{ name: 'ActualLength', type: 16, returnType: Number, getter: { name: 'get_ActualLength', type: 8, sname: 'get_$ActualLength', returnType: Number, params: [] }, setter: { name: 'set_ActualLength', type: 8, sname: 'set_$ActualLength', returnType: Object, params: [Number] } }, { name: 'Length', type: 16, returnType: $System_Windows_Controls_GridLength, getter: { name: 'get_Length', type: 8, sname: 'get_$Length', returnType: $System_Windows_Controls_GridLength, params: [] } }, { name: 'MaxLength', type: 16, returnType: Number, getter: { name: 'get_MaxLength', type: 8, sname: 'get_$MaxLength', returnType: Number, params: [] } }, { name: 'MinLength', type: 16, returnType: Number, getter: { name: 'get_MinLength', type: 8, sname: 'get_$MinLength', returnType: Number, params: [] } }] });
	ss.setMetadata($System_Windows_Controls_$MeasureCache, { members: [{ name: '.ctor', type: 1, params: [ss.Int32] }, { name: 'Clear', type: 8, sname: '$Clear', returnType: Object, params: [] }, { name: 'SetMeasure', type: 8, sname: '$SetMeasure', returnType: Object, params: [$System_Windows_Size, $System_Windows_Size] }] });
	ss.setMetadata($System_Windows_Controls_$TextBoxView, { members: [{ name: '.cctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [] }, { name: 'ArrangeOverride', type: 8, sname: 'ArrangeOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'ClearFocusRenderElement', type: 8, sname: '$ClearFocusRenderElement', returnType: Object, params: [] }, { name: 'CreateContentRenderElementOverride', type: 8, sname: 'CreateContentRenderElementOverride', returnType: Object, params: [$System_Windows_Media_IRenderElementFactory] }, { name: 'FocusRenderElement', type: 8, sname: '$FocusRenderElement', returnType: Object, params: [] }, { name: 'MeasureOverride', type: 8, sname: 'MeasureOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'ProcessRenderElementKeyEvent', type: 8, sname: '$ProcessRenderElementKeyEvent', returnType: Object, params: [$System_Windows_Input_KeyEventArgs] }, { name: 'AcceptsReturn', type: 16, returnType: Boolean, getter: { name: 'get_AcceptsReturn', type: 8, sname: 'get_$AcceptsReturn', returnType: Boolean, params: [] }, setter: { name: 'set_AcceptsReturn', type: 8, sname: 'set_$AcceptsReturn', returnType: Object, params: [Boolean] } }, { name: 'AcceptsTab', type: 16, returnType: Boolean, getter: { name: 'get_AcceptsTab', type: 8, sname: 'get_$AcceptsTab', returnType: Boolean, params: [] }, setter: { name: 'set_AcceptsTab', type: 8, sname: 'set_$AcceptsTab', returnType: Object, params: [Boolean] } }, { name: 'CaretIndex', type: 16, returnType: ss.Int32, getter: { name: 'get_CaretIndex', type: 8, sname: 'get_$CaretIndex', returnType: ss.Int32, params: [] }, setter: { name: 'set_CaretIndex', type: 8, sname: 'set_$CaretIndex', returnType: Object, params: [ss.Int32] } }, { name: 'HorizontalScrollBarVisibility', type: 16, returnType: $System_Windows_Controls_ScrollBarVisibility, getter: { name: 'get_HorizontalScrollBarVisibility', type: 8, sname: 'get_$HorizontalScrollBarVisibility', returnType: $System_Windows_Controls_ScrollBarVisibility, params: [] }, setter: { name: 'set_HorizontalScrollBarVisibility', type: 8, sname: 'set_$HorizontalScrollBarVisibility', returnType: Object, params: [$System_Windows_Controls_ScrollBarVisibility] } }, { name: 'IsPassword', type: 16, returnType: Boolean, getter: { name: 'get_IsPassword', type: 8, sname: 'get_$IsPassword', returnType: Boolean, params: [] }, setter: { name: 'set_IsPassword', type: 8, sname: 'set_$IsPassword', returnType: Object, params: [Boolean] } }, { name: 'IsReadOnly', type: 16, returnType: Boolean, getter: { name: 'get_IsReadOnly', type: 8, sname: 'get_$IsReadOnly', returnType: Boolean, params: [] }, setter: { name: 'set_IsReadOnly', type: 8, sname: 'set_$IsReadOnly', returnType: Object, params: [Boolean] } }, { name: 'MaxLength', type: 16, returnType: ss.Int32, getter: { name: 'get_MaxLength', type: 8, sname: 'get_$MaxLength', returnType: ss.Int32, params: [] }, setter: { name: 'set_MaxLength', type: 8, sname: 'set_$MaxLength', returnType: Object, params: [ss.Int32] } }, { name: 'SelectionLength', type: 16, returnType: ss.Int32, getter: { name: 'get_SelectionLength', type: 8, sname: 'get_$SelectionLength', returnType: ss.Int32, params: [] }, setter: { name: 'set_SelectionLength', type: 8, sname: 'set_$SelectionLength', returnType: Object, params: [ss.Int32] } }, { name: 'SelectionStart', type: 16, returnType: ss.Int32, getter: { name: 'get_SelectionStart', type: 8, sname: 'get_$SelectionStart', returnType: ss.Int32, params: [] }, setter: { name: 'set_SelectionStart', type: 8, sname: 'set_$SelectionStart', returnType: Object, params: [ss.Int32] } }, { name: 'SpellCheck', type: 16, returnType: Boolean, getter: { name: 'get_SpellCheck', type: 8, sname: 'get_$SpellCheck', returnType: Boolean, params: [] }, setter: { name: 'set_SpellCheck', type: 8, sname: 'set_$SpellCheck', returnType: Object, params: [Boolean] } }, { name: 'Text', type: 16, returnType: String, getter: { name: 'get_Text', type: 8, sname: 'get_$Text', returnType: String, params: [] }, setter: { name: 'set_Text', type: 8, sname: 'set_$Text', returnType: Object, params: [String] } }, { name: 'VerticalScrollBarVisibility', type: 16, returnType: $System_Windows_Controls_ScrollBarVisibility, getter: { name: 'get_VerticalScrollBarVisibility', type: 8, sname: 'get_$VerticalScrollBarVisibility', returnType: $System_Windows_Controls_ScrollBarVisibility, params: [] }, setter: { name: 'set_VerticalScrollBarVisibility', type: 8, sname: 'set_$VerticalScrollBarVisibility', returnType: Object, params: [$System_Windows_Controls_ScrollBarVisibility] } }, { name: 'CaretIndexChanged', type: 2, adder: { name: 'add_CaretIndexChanged', type: 8, sname: 'add_$CaretIndexChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_CaretIndexChanged', type: 8, sname: 'remove_$CaretIndexChanged', returnType: Object, params: [Function] } }, { name: 'SelectionLengthChanged', type: 2, adder: { name: 'add_SelectionLengthChanged', type: 8, sname: 'add_$SelectionLengthChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_SelectionLengthChanged', type: 8, sname: 'remove_$SelectionLengthChanged', returnType: Object, params: [Function] } }, { name: 'SelectionStartChanged', type: 2, adder: { name: 'add_SelectionStartChanged', type: 8, sname: 'add_$SelectionStartChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_SelectionStartChanged', type: 8, sname: 'remove_$SelectionStartChanged', returnType: Object, params: [Function] } }, { name: 'TextChanged', type: 2, adder: { name: 'add_TextChanged', type: 8, sname: 'add_$TextChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_TextChanged', type: 8, sname: 'remove_$TextChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Controls_Adorner, { members: [{ name: '.cctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [$System_Windows_UIElement] }, { name: 'ArrangeOverride', type: 8, sname: 'ArrangeOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'MeasureOverride', type: 8, sname: 'MeasureOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'AdornedElement', type: 16, returnType: $System_Windows_UIElement, getter: { name: 'get_AdornedElement', type: 8, sname: 'get_AdornedElement', returnType: $System_Windows_UIElement, params: [] }, setter: { name: 'set_AdornedElement', type: 8, sname: 'set_AdornedElement', returnType: Object, params: [$System_Windows_UIElement] } }, { name: 'Child', type: 16, returnType: $System_Windows_UIElement, getter: { name: 'get_Child', type: 8, sname: 'get_Child', returnType: $System_Windows_UIElement, params: [] }, setter: { name: 'set_Child', type: 8, sname: 'set_Child', returnType: Object, params: [$System_Windows_UIElement] } }] });
	ss.setMetadata($System_Windows_Controls_AdornerLayer, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Add', type: 8, sname: 'Add', returnType: Object, params: [$System_Windows_Controls_Adorner] }, { name: 'ArrangeOverride', type: 8, sname: 'ArrangeOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'GetAdornerLayer', isStatic: true, type: 8, sname: 'GetAdornerLayer', returnType: $System_Windows_Controls_AdornerLayer, params: [$System_Windows_Media_Visual] }, { name: 'MeasureOverride', type: 8, sname: 'MeasureOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'OnVisualParentChanged', type: 8, sname: 'OnVisualParentChanged', returnType: Object, params: [$System_Windows_Media_Visual, $System_Windows_Media_Visual] }, { name: 'Remove', type: 8, sname: 'Remove', returnType: Object, params: [$System_Windows_Controls_Adorner] }] });
	ss.setMetadata($System_Windows_Controls_Border, { members: [{ name: '.cctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [] }, { name: 'ArrangeOverride', type: 8, sname: 'ArrangeOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'CreateContentRenderElementOverride', type: 8, sname: 'CreateContentRenderElementOverride', returnType: Object, params: [$System_Windows_Media_IRenderElementFactory] }, { name: 'HitTestOverride', type: 8, sname: 'HitTestOverride', returnType: Boolean, params: [$System_Windows_Point] }, { name: 'MeasureOverride', type: 8, sname: 'MeasureOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'Background', type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Background', type: 8, sname: 'get_Background', returnType: $System_Windows_Media_Brush, params: [] }, setter: { name: 'set_Background', type: 8, sname: 'set_Background', returnType: Object, params: [$System_Windows_Media_Brush] } }, { name: 'BorderBrush', type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_BorderBrush', type: 8, sname: 'get_BorderBrush', returnType: $System_Windows_Media_Brush, params: [] }, setter: { name: 'set_BorderBrush', type: 8, sname: 'set_BorderBrush', returnType: Object, params: [$System_Windows_Media_Brush] } }, { name: 'BorderThickness', type: 16, returnType: $System_Windows_Thickness, getter: { name: 'get_BorderThickness', type: 8, sname: 'get_BorderThickness', returnType: $System_Windows_Thickness, params: [] }, setter: { name: 'set_BorderThickness', type: 8, sname: 'set_BorderThickness', returnType: Object, params: [$System_Windows_Thickness] } }, { name: 'CornerRadius', type: 16, returnType: $System_Windows_CornerRadius, getter: { name: 'get_CornerRadius', type: 8, sname: 'get_CornerRadius', returnType: $System_Windows_CornerRadius, params: [] }, setter: { name: 'set_CornerRadius', type: 8, sname: 'set_CornerRadius', returnType: Object, params: [$System_Windows_CornerRadius] } }, { name: 'Padding', type: 16, returnType: $System_Windows_Thickness, getter: { name: 'get_Padding', type: 8, sname: 'get_Padding', returnType: $System_Windows_Thickness, params: [] }, setter: { name: 'set_Padding', type: 8, sname: 'set_Padding', returnType: Object, params: [$System_Windows_Thickness] } }, { name: 'BackgroundProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'BackgroundProperty' }, { name: 'BorderBrushProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'BorderBrushProperty' }, { name: 'BorderThicknessProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'BorderThicknessProperty' }, { name: 'CornerRadiusProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'CornerRadiusProperty' }, { name: 'PaddingProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'PaddingProperty' }] });
	ss.setMetadata($System_Windows_Controls_Button, { members: [{ name: '.ctor', type: 1, params: [] }] });
	ss.setMetadata($System_Windows_Controls_Canvas, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ArrangeOverride', type: 8, sname: 'ArrangeOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'GetBottom', isStatic: true, type: 8, sname: 'GetBottom', returnType: Number, params: [$System_Windows_DependencyObject] }, { name: 'GetLeft', isStatic: true, type: 8, sname: 'GetLeft', returnType: Number, params: [$System_Windows_DependencyObject] }, { name: 'GetRight', isStatic: true, type: 8, sname: 'GetRight', returnType: Number, params: [$System_Windows_DependencyObject] }, { name: 'GetTop', isStatic: true, type: 8, sname: 'GetTop', returnType: Number, params: [$System_Windows_DependencyObject] }, { name: 'MeasureOverride', type: 8, sname: 'MeasureOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'SetBottom', isStatic: true, type: 8, sname: 'SetBottom', returnType: Object, params: [$System_Windows_DependencyObject, Number] }, { name: 'SetLeft', isStatic: true, type: 8, sname: 'SetLeft', returnType: Object, params: [$System_Windows_DependencyObject, Number] }, { name: 'SetRight', isStatic: true, type: 8, sname: 'SetRight', returnType: Object, params: [$System_Windows_DependencyObject, Number] }, { name: 'SetTop', isStatic: true, type: 8, sname: 'SetTop', returnType: Object, params: [$System_Windows_DependencyObject, Number] }, { name: 'BottomProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'BottomProperty' }, { name: 'LeftProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'LeftProperty' }, { name: 'RightProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'RightProperty' }, { name: 'TopProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'TopProperty' }] });
	ss.setMetadata($System_Windows_Controls_CheckBox, { members: [{ name: '.ctor', type: 1, params: [] }] });
	ss.setMetadata($System_Windows_Controls_ColumnDefinition, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ActualLength', type: 16, returnType: Number, getter: { name: 'get_ActualLength', type: 8, sname: 'get_$ActualLength', returnType: Number, params: [] }, setter: { name: 'set_ActualLength', type: 8, sname: 'set_$ActualLength', returnType: Object, params: [Number] } }, { name: 'ActualWidth', type: 16, returnType: Number, getter: { name: 'get_ActualWidth', type: 8, sname: 'get_ActualWidth', returnType: Number, params: [] }, setter: { name: 'set_ActualWidth', type: 8, sname: 'set_ActualWidth', returnType: Object, params: [Number] } }, { name: 'Length', type: 16, returnType: $System_Windows_Controls_GridLength, getter: { name: 'get_Length', type: 8, sname: 'get_$Length', returnType: $System_Windows_Controls_GridLength, params: [] } }, { name: 'MaxLength', type: 16, returnType: Number, getter: { name: 'get_MaxLength', type: 8, sname: 'get_$MaxLength', returnType: Number, params: [] } }, { name: 'MaxWidth', type: 16, returnType: Number, getter: { name: 'get_MaxWidth', type: 8, sname: 'get_MaxWidth', returnType: Number, params: [] }, setter: { name: 'set_MaxWidth', type: 8, sname: 'set_MaxWidth', returnType: Object, params: [Number] } }, { name: 'MinLength', type: 16, returnType: Number, getter: { name: 'get_MinLength', type: 8, sname: 'get_$MinLength', returnType: Number, params: [] } }, { name: 'MinWidth', type: 16, returnType: Number, getter: { name: 'get_MinWidth', type: 8, sname: 'get_MinWidth', returnType: Number, params: [] }, setter: { name: 'set_MinWidth', type: 8, sname: 'set_MinWidth', returnType: Object, params: [Number] } }, { name: 'Width', type: 16, returnType: $System_Windows_Controls_GridLength, getter: { name: 'get_Width', type: 8, sname: 'get_Width', returnType: $System_Windows_Controls_GridLength, params: [] }, setter: { name: 'set_Width', type: 8, sname: 'set_Width', returnType: Object, params: [$System_Windows_Controls_GridLength] } }, { name: 'ActualWidthProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ActualWidthProperty' }, { name: 'MaxWidthProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'MaxWidthProperty' }, { name: 'MinWidthProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'MinWidthProperty' }, { name: 'WidthProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'WidthProperty' }] });
	ss.setMetadata($System_Windows_Controls_ContentControl, { attr: [new $System_Windows_Markup_ContentPropertyAttribute('Content')], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ClearContainerForItem', type: 8, sname: 'ClearContainerForItem', returnType: Object, params: [Object] }, { name: 'PrepareContainerForItem', type: 8, sname: 'PrepareContainerForItem', returnType: Object, params: [Object, $System_Windows_DataTemplate, $System_Windows_Style] }, { name: 'Content', type: 16, returnType: Object, getter: { name: 'get_Content', type: 8, sname: 'get_Content', returnType: Object, params: [] }, setter: { name: 'set_Content', type: 8, sname: 'set_Content', returnType: Object, params: [Object] } }, { name: 'ContentTemplate', type: 16, returnType: $System_Windows_DataTemplate, getter: { name: 'get_ContentTemplate', type: 8, sname: 'get_ContentTemplate', returnType: $System_Windows_DataTemplate, params: [] }, setter: { name: 'set_ContentTemplate', type: 8, sname: 'set_ContentTemplate', returnType: Object, params: [$System_Windows_DataTemplate] } }, { name: 'ContentTemplateSelector', type: 16, returnType: $System_Windows_Controls_IDataTemplateSelector, getter: { name: 'get_ContentTemplateSelector', type: 8, sname: 'get_ContentTemplateSelector', returnType: $System_Windows_Controls_IDataTemplateSelector, params: [] }, setter: { name: 'set_ContentTemplateSelector', type: 8, sname: 'set_ContentTemplateSelector', returnType: Object, params: [$System_Windows_Controls_IDataTemplateSelector] } }, { name: 'HasContent', type: 16, returnType: Boolean, getter: { name: 'get_HasContent', type: 8, sname: 'get_HasContent', returnType: Boolean, params: [] }, setter: { name: 'set_HasContent', type: 8, sname: 'set_HasContent', returnType: Object, params: [Boolean] } }, { name: 'ContentProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ContentProperty' }, { name: 'ContentTemplateProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ContentTemplateProperty' }, { name: 'ContentTemplateSelectorProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ContentTemplateSelectorProperty' }, { name: 'HasContentProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'HasContentProperty' }] });
	ss.setMetadata($System_Windows_Controls_ContentPresenter, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ArrangeOverride', type: 8, sname: 'ArrangeOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'ClearContainerForItem', type: 8, sname: 'ClearContainerForItem', returnType: Object, params: [Object] }, { name: 'GetTemplate', type: 8, sname: 'GetTemplate', returnType: $System_Windows_IFrameworkTemplate, params: [] }, { name: 'MeasureOverride', type: 8, sname: 'MeasureOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'OnApplyTemplate', type: 8, sname: 'OnApplyTemplate', returnType: Object, params: [] }, { name: 'OnContentChanged', type: 8, sname: 'OnContentChanged', returnType: Object, params: [$System_Windows_DependencyPropertyChangedEventArgs] }, { name: 'OnResourcesChanged', type: 8, sname: 'OnResourcesChanged', returnType: Object, params: [$System_Windows_ResourcesChangedEventArgs] }, { name: 'PrepareContainerForItem', type: 8, sname: 'PrepareContainerForItem', returnType: Object, params: [Object, $System_Windows_DataTemplate, $System_Windows_Style] }, { name: 'Content', type: 16, returnType: Object, getter: { name: 'get_Content', type: 8, sname: 'get_Content', returnType: Object, params: [] }, setter: { name: 'set_Content', type: 8, sname: 'set_Content', returnType: Object, params: [Object] } }, { name: 'ContentTemplate', type: 16, returnType: $System_Windows_DataTemplate, getter: { name: 'get_ContentTemplate', type: 8, sname: 'get_ContentTemplate', returnType: $System_Windows_DataTemplate, params: [] }, setter: { name: 'set_ContentTemplate', type: 8, sname: 'set_ContentTemplate', returnType: Object, params: [$System_Windows_DataTemplate] } }, { name: 'ContentTemplateSelector', type: 16, returnType: $System_Windows_Controls_IDataTemplateSelector, getter: { name: 'get_ContentTemplateSelector', type: 8, sname: 'get_ContentTemplateSelector', returnType: $System_Windows_Controls_IDataTemplateSelector, params: [] }, setter: { name: 'set_ContentTemplateSelector', type: 8, sname: 'set_ContentTemplateSelector', returnType: Object, params: [$System_Windows_Controls_IDataTemplateSelector] } }, { name: 'ContentProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ContentProperty' }, { name: 'ContentTemplateProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ContentTemplateProperty' }, { name: 'ContentTemplateSelectorProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ContentTemplateSelectorProperty' }] });
	ss.setMetadata($System_Windows_Controls_Control, { members: [{ name: '.cctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [] }, { name: 'ArrangeOverride', type: 8, sname: 'ArrangeOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'GetTemplate', type: 8, sname: 'GetTemplate', returnType: $System_Windows_IFrameworkTemplate, params: [] }, { name: 'MeasureOverride', type: 8, sname: 'MeasureOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'OnApplyTemplate', type: 8, sname: 'OnApplyTemplate', returnType: Object, params: [] }, { name: 'OnPropertyChanged', type: 8, sname: 'OnPropertyChanged', returnType: Object, params: [$System_Windows_DependencyPropertyChangedEventArgs] }, { name: 'OnResourcesChanged', type: 8, sname: 'OnResourcesChanged', returnType: Object, params: [$System_Windows_ResourcesChangedEventArgs] }, { name: 'UpdateVisualState', type: 8, sname: 'UpdateVisualState', returnType: Object, params: [Boolean] }, { name: 'Background', type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Background', type: 8, sname: 'get_Background', returnType: $System_Windows_Media_Brush, params: [] }, setter: { name: 'set_Background', type: 8, sname: 'set_Background', returnType: Object, params: [$System_Windows_Media_Brush] } }, { name: 'BorderBrush', type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_BorderBrush', type: 8, sname: 'get_BorderBrush', returnType: $System_Windows_Media_Brush, params: [] }, setter: { name: 'set_BorderBrush', type: 8, sname: 'set_BorderBrush', returnType: Object, params: [$System_Windows_Media_Brush] } }, { name: 'BorderThickness', type: 16, returnType: $System_Windows_Thickness, getter: { name: 'get_BorderThickness', type: 8, sname: 'get_BorderThickness', returnType: $System_Windows_Thickness, params: [] }, setter: { name: 'set_BorderThickness', type: 8, sname: 'set_BorderThickness', returnType: Object, params: [$System_Windows_Thickness] } }, { name: 'FontFamily', type: 16, returnType: $System_Windows_FontFamily, getter: { name: 'get_FontFamily', type: 8, sname: 'get_FontFamily', returnType: $System_Windows_FontFamily, params: [] }, setter: { name: 'set_FontFamily', type: 8, sname: 'set_FontFamily', returnType: Object, params: [$System_Windows_FontFamily] } }, { name: 'FontSize', type: 16, returnType: Number, getter: { name: 'get_FontSize', type: 8, sname: 'get_FontSize', returnType: Number, params: [] }, setter: { name: 'set_FontSize', type: 8, sname: 'set_FontSize', returnType: Object, params: [Number] } }, { name: 'FontStretch', type: 16, returnType: $System_Windows_FontStretch, getter: { name: 'get_FontStretch', type: 8, sname: 'get_FontStretch', returnType: $System_Windows_FontStretch, params: [] }, setter: { name: 'set_FontStretch', type: 8, sname: 'set_FontStretch', returnType: Object, params: [$System_Windows_FontStretch] } }, { name: 'FontStyle', type: 16, returnType: $System_Windows_FontStyle, getter: { name: 'get_FontStyle', type: 8, sname: 'get_FontStyle', returnType: $System_Windows_FontStyle, params: [] }, setter: { name: 'set_FontStyle', type: 8, sname: 'set_FontStyle', returnType: Object, params: [$System_Windows_FontStyle] } }, { name: 'FontWeight', type: 16, returnType: $System_Windows_FontWeight, getter: { name: 'get_FontWeight', type: 8, sname: 'get_FontWeight', returnType: $System_Windows_FontWeight, params: [] }, setter: { name: 'set_FontWeight', type: 8, sname: 'set_FontWeight', returnType: Object, params: [$System_Windows_FontWeight] } }, { name: 'Foreground', type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Foreground', type: 8, sname: 'get_Foreground', returnType: $System_Windows_Media_Brush, params: [] }, setter: { name: 'set_Foreground', type: 8, sname: 'set_Foreground', returnType: Object, params: [$System_Windows_Media_Brush] } }, { name: 'HorizontalContentAlignment', type: 16, returnType: $System_Windows_HorizontalAlignment, getter: { name: 'get_HorizontalContentAlignment', type: 8, sname: 'get_HorizontalContentAlignment', returnType: $System_Windows_HorizontalAlignment, params: [] }, setter: { name: 'set_HorizontalContentAlignment', type: 8, sname: 'set_HorizontalContentAlignment', returnType: Object, params: [$System_Windows_HorizontalAlignment] } }, { name: 'IsTabStop', type: 16, returnType: Boolean, getter: { name: 'get_IsTabStop', type: 8, sname: 'get_IsTabStop', returnType: Boolean, params: [] }, setter: { name: 'set_IsTabStop', type: 8, sname: 'set_IsTabStop', returnType: Object, params: [Boolean] } }, { name: 'Padding', type: 16, returnType: $System_Windows_Thickness, getter: { name: 'get_Padding', type: 8, sname: 'get_Padding', returnType: $System_Windows_Thickness, params: [] }, setter: { name: 'set_Padding', type: 8, sname: 'set_Padding', returnType: Object, params: [$System_Windows_Thickness] } }, { name: 'TabIndex', type: 16, returnType: ss.Int32, getter: { name: 'get_TabIndex', type: 8, sname: 'get_TabIndex', returnType: ss.Int32, params: [] }, setter: { name: 'set_TabIndex', type: 8, sname: 'set_TabIndex', returnType: Object, params: [ss.Int32] } }, { name: 'Template', type: 16, returnType: $System_Windows_Controls_ControlTemplate, getter: { name: 'get_Template', type: 8, sname: 'get_Template', returnType: $System_Windows_Controls_ControlTemplate, params: [] }, setter: { name: 'set_Template', type: 8, sname: 'set_Template', returnType: Object, params: [$System_Windows_Controls_ControlTemplate] } }, { name: 'VerticalContentAlignment', type: 16, returnType: $System_Windows_VerticalAlignment, getter: { name: 'get_VerticalContentAlignment', type: 8, sname: 'get_VerticalContentAlignment', returnType: $System_Windows_VerticalAlignment, params: [] }, setter: { name: 'set_VerticalContentAlignment', type: 8, sname: 'set_VerticalContentAlignment', returnType: Object, params: [$System_Windows_VerticalAlignment] } }, { name: 'BackgroundProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'BackgroundProperty' }, { name: 'BorderBrushProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'BorderBrushProperty' }, { name: 'BorderThicknessProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'BorderThicknessProperty' }, { name: 'FontFamilyProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'FontFamilyProperty' }, { name: 'FontSizeProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'FontSizeProperty' }, { name: 'FontStretchProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'FontStretchProperty' }, { name: 'FontStyleProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'FontStyleProperty' }, { name: 'FontWeightProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'FontWeightProperty' }, { name: 'ForegroundProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ForegroundProperty' }, { name: 'HorizontalContentAlignmentProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'HorizontalContentAlignmentProperty' }, { name: 'IsTabStopProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsTabStopProperty' }, { name: 'MouseDoubleClickEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'MouseDoubleClickEvent' }, { name: 'PaddingProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'PaddingProperty' }, { name: 'PreviewMouseDoubleClickEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'PreviewMouseDoubleClickEvent' }, { name: 'TabIndexProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'TabIndexProperty' }, { name: 'TemplateProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'TemplateProperty' }, { name: 'VerticalContentAlignmentProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'VerticalContentAlignmentProperty' }, { name: 'MouseDoubleClick', type: 2, adder: { name: 'add_MouseDoubleClick', type: 8, sname: 'add_MouseDoubleClick', returnType: Object, params: [Function] }, remover: { name: 'remove_MouseDoubleClick', type: 8, sname: 'remove_MouseDoubleClick', returnType: Object, params: [Function] } }, { name: 'PreviewMouseDoubleClick', type: 2, adder: { name: 'add_PreviewMouseDoubleClick', type: 8, sname: 'add_PreviewMouseDoubleClick', returnType: Object, params: [Function] }, remover: { name: 'remove_PreviewMouseDoubleClick', type: 8, sname: 'remove_PreviewMouseDoubleClick', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Controls_ControlPropertyMetadata, { members: [{ name: '.ctor', type: 1, params: [Object, Function, Function, Boolean, Boolean, Boolean, Boolean, Boolean, $System_Windows_Data_UpdateSourceTrigger] }, { name: 'AffectsVisualState', type: 16, returnType: Boolean, getter: { name: 'get_AffectsVisualState', type: 8, sname: 'get_AffectsVisualState', returnType: Boolean, params: [] }, setter: { name: 'set_AffectsVisualState', type: 8, sname: 'set_AffectsVisualState', returnType: Object, params: [Boolean] } }] });
	ss.setMetadata($System_Windows_Controls_ControlTemplate, { attr: [new $System_Windows_Markup_DictionaryKeyPropertyAttribute('Key')], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Key', type: 16, returnType: Object, getter: { name: 'get_Key', type: 8, sname: 'get_Key', returnType: Object, params: [] }, setter: { name: 'set_Key', type: 8, sname: 'set_Key', returnType: Object, params: [Object] } }, { name: 'TargetType', type: 16, returnType: Function, getter: { name: 'get_TargetType', type: 8, sname: 'get_TargetType', returnType: Function, params: [] }, setter: { name: 'set_TargetType', type: 8, sname: 'set_TargetType', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Controls_Decorator, { attr: [new $System_Windows_Markup_ContentPropertyAttribute('Child')], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ArrangeOverride', type: 8, sname: 'ArrangeOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'MeasureOverride', type: 8, sname: 'MeasureOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'Child', type: 16, returnType: $System_Windows_UIElement, getter: { name: 'get_Child', type: 8, sname: 'get_Child', returnType: $System_Windows_UIElement, params: [] }, setter: { name: 'set_Child', type: 8, sname: 'set_Child', returnType: Object, params: [$System_Windows_UIElement] } }] });
	ss.setMetadata($System_Windows_Controls_DockPanel, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ArrangeOverride', type: 8, sname: 'ArrangeOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'GetDock', isStatic: true, type: 8, sname: 'GetDock', returnType: $System_Windows_Controls_Dock, params: [$System_Windows_DependencyObject] }, { name: 'MeasureOverride', type: 8, sname: 'MeasureOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'SetDock', isStatic: true, type: 8, sname: 'SetDock', returnType: Object, params: [$System_Windows_DependencyObject, $System_Windows_Controls_Dock] }, { name: 'LastChildFill', type: 16, returnType: Boolean, getter: { name: 'get_LastChildFill', type: 8, sname: 'get_LastChildFill', returnType: Boolean, params: [] }, setter: { name: 'set_LastChildFill', type: 8, sname: 'set_LastChildFill', returnType: Object, params: [Boolean] } }, { name: 'DockProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'DockProperty' }, { name: 'LastChildFillProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'LastChildFillProperty' }] });
	ss.setMetadata($System_Windows_Controls_Expander, { attr: [new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.CommonStates, $System_Windows_VisualStates.NormalState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.CommonStates, $System_Windows_VisualStates.MouseOverState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.CommonStates, $System_Windows_VisualStates.DisabledState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.ExpansionStates, $System_Windows_VisualStates.ExpandedState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.ExpansionStates, $System_Windows_VisualStates.CollapsedState)], members: [{ name: '.cctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [] }, { name: 'UpdateVisualState', type: 8, sname: 'UpdateVisualState', returnType: Object, params: [Boolean] }, { name: 'ExpandDirection', type: 16, returnType: $System_Windows_Controls_ExpandDirection, getter: { name: 'get_ExpandDirection', type: 8, sname: 'get_ExpandDirection', returnType: $System_Windows_Controls_ExpandDirection, params: [] }, setter: { name: 'set_ExpandDirection', type: 8, sname: 'set_ExpandDirection', returnType: Object, params: [$System_Windows_Controls_ExpandDirection] } }, { name: 'IsExpanded', type: 16, returnType: Boolean, getter: { name: 'get_IsExpanded', type: 8, sname: 'get_IsExpanded', returnType: Boolean, params: [] }, setter: { name: 'set_IsExpanded', type: 8, sname: 'set_IsExpanded', returnType: Object, params: [Boolean] } }, { name: 'CollapsedEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'CollapsedEvent' }, { name: 'ExpandDirectionProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ExpandDirectionProperty' }, { name: 'ExpandedEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'ExpandedEvent' }, { name: 'IsExpandedProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsExpandedProperty' }, { name: 'Collapsed', type: 2, adder: { name: 'add_Collapsed', type: 8, sname: 'add_Collapsed', returnType: Object, params: [Function] }, remover: { name: 'remove_Collapsed', type: 8, sname: 'remove_Collapsed', returnType: Object, params: [Function] } }, { name: 'Expanded', type: 2, adder: { name: 'add_Expanded', type: 8, sname: 'add_Expanded', returnType: Object, params: [Function] }, remover: { name: 'remove_Expanded', type: 8, sname: 'remove_Expanded', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Controls_Grid, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ArrangeOverride', type: 8, sname: 'ArrangeOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'GetColumn', isStatic: true, type: 8, sname: 'GetColumn', returnType: ss.Int32, params: [$System_Windows_DependencyObject] }, { name: 'GetColumnSpan', isStatic: true, type: 8, sname: 'GetColumnSpan', returnType: ss.Int32, params: [$System_Windows_DependencyObject] }, { name: 'GetRow', isStatic: true, type: 8, sname: 'GetRow', returnType: ss.Int32, params: [$System_Windows_DependencyObject] }, { name: 'GetRowSpan', isStatic: true, type: 8, sname: 'GetRowSpan', returnType: ss.Int32, params: [$System_Windows_DependencyObject] }, { name: 'MeasureOverride', type: 8, sname: 'MeasureOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'SetColumn', isStatic: true, type: 8, sname: 'SetColumn', returnType: Object, params: [$System_Windows_DependencyObject, ss.Int32] }, { name: 'SetColumnSpan', isStatic: true, type: 8, sname: 'SetColumnSpan', returnType: Object, params: [$System_Windows_DependencyObject, ss.Int32] }, { name: 'SetRow', isStatic: true, type: 8, sname: 'SetRow', returnType: Object, params: [$System_Windows_DependencyObject, ss.Int32] }, { name: 'SetRowSpan', isStatic: true, type: 8, sname: 'SetRowSpan', returnType: Object, params: [$System_Windows_DependencyObject, ss.Int32] }, { name: 'ColumnDefinitions', type: 16, returnType: ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Controls_ColumnDefinition]), getter: { name: 'get_ColumnDefinitions', type: 8, sname: 'get_ColumnDefinitions', returnType: ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Controls_ColumnDefinition]), params: [] }, setter: { name: 'set_ColumnDefinitions', type: 8, sname: 'set_ColumnDefinitions', returnType: Object, params: [ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Controls_ColumnDefinition])] } }, { name: 'RowDefinitions', type: 16, returnType: ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Controls_RowDefinition]), getter: { name: 'get_RowDefinitions', type: 8, sname: 'get_RowDefinitions', returnType: ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Controls_RowDefinition]), params: [] }, setter: { name: 'set_RowDefinitions', type: 8, sname: 'set_RowDefinitions', returnType: Object, params: [ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Controls_RowDefinition])] } }, { name: 'ColumnProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ColumnProperty' }, { name: 'ColumnSpanProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ColumnSpanProperty' }, { name: 'RowProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'RowProperty' }, { name: 'RowSpanProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'RowSpanProperty' }] });
	ss.setMetadata($System_Windows_Controls_GridLength, { attr: [new $System_Windows_Markup_TypeConverterAttribute($System_Windows_Controls_$GridLengthTypeConverter)], members: [{ name: 'Equals', type: 8, sname: 'equals', returnType: Boolean, params: [Object] }, { name: 'FromPixles', isStatic: true, type: 8, sname: 'FromPixles', returnType: $System_Windows_Controls_GridLength, params: [Number] }, { name: 'FromStars', isStatic: true, type: 8, sname: 'FromStars', returnType: $System_Windows_Controls_GridLength, params: [Number] }, { name: 'GetHashCode', type: 8, sname: 'getHashCode', returnType: ss.Int32, params: [] }, { name: 'ToString', type: 8, sname: 'toString', returnType: String, params: [] }, { name: 'GridUnitType', type: 16, returnType: $System_Windows_Controls_GridUnitType, getter: { name: 'get_GridUnitType', type: 8, sname: 'get_GridUnitType', returnType: $System_Windows_Controls_GridUnitType, params: [] }, setter: { name: 'set_GridUnitType', type: 8, sname: 'set_GridUnitType', returnType: Object, params: [$System_Windows_Controls_GridUnitType] } }, { name: 'IsAbsolute', type: 16, returnType: Boolean, getter: { name: 'get_IsAbsolute', type: 8, sname: 'get_IsAbsolute', returnType: Boolean, params: [] } }, { name: 'IsAuto', type: 16, returnType: Boolean, getter: { name: 'get_IsAuto', type: 8, sname: 'get_IsAuto', returnType: Boolean, params: [] } }, { name: 'IsStar', type: 16, returnType: Boolean, getter: { name: 'get_IsStar', type: 8, sname: 'get_IsStar', returnType: Boolean, params: [] } }, { name: 'Value', type: 16, returnType: Number, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: Number, params: [] }, setter: { name: 'set_Value', type: 8, sname: 'set_Value', returnType: Object, params: [Number] } }, { name: 'Auto', isStatic: true, type: 4, returnType: $System_Windows_Controls_GridLength, sname: 'Auto' }, { name: 'Star', isStatic: true, type: 4, returnType: $System_Windows_Controls_GridLength, sname: 'Star' }] });
	ss.setMetadata($System_Windows_Controls_HeaderedContentControl, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'HasHeader', type: 16, returnType: Boolean, getter: { name: 'get_HasHeader', type: 8, sname: 'get_HasHeader', returnType: Boolean, params: [] }, setter: { name: 'set_HasHeader', type: 8, sname: 'set_HasHeader', returnType: Object, params: [Boolean] } }, { name: 'Header', type: 16, returnType: Object, getter: { name: 'get_Header', type: 8, sname: 'get_Header', returnType: Object, params: [] }, setter: { name: 'set_Header', type: 8, sname: 'set_Header', returnType: Object, params: [Object] } }, { name: 'HeaderTemplate', type: 16, returnType: $System_Windows_DataTemplate, getter: { name: 'get_HeaderTemplate', type: 8, sname: 'get_HeaderTemplate', returnType: $System_Windows_DataTemplate, params: [] }, setter: { name: 'set_HeaderTemplate', type: 8, sname: 'set_HeaderTemplate', returnType: Object, params: [$System_Windows_DataTemplate] } }, { name: 'HeaderTemplateSelector', type: 16, returnType: $System_Windows_Controls_IDataTemplateSelector, getter: { name: 'get_HeaderTemplateSelector', type: 8, sname: 'get_HeaderTemplateSelector', returnType: $System_Windows_Controls_IDataTemplateSelector, params: [] }, setter: { name: 'set_HeaderTemplateSelector', type: 8, sname: 'set_HeaderTemplateSelector', returnType: Object, params: [$System_Windows_Controls_IDataTemplateSelector] } }, { name: 'HasHeaderProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'HasHeaderProperty' }, { name: 'HeaderProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'HeaderProperty' }, { name: 'HeaderTemplateProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'HeaderTemplateProperty' }, { name: 'HeaderTemplateSelectorProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'HeaderTemplateSelectorProperty' }] });
	ss.setMetadata($System_Windows_Controls_IAdornerLayerHost, { members: [{ name: 'AdornerLayer', type: 16, returnType: $System_Windows_Controls_AdornerLayer, getter: { name: 'get_AdornerLayer', type: 8, sname: 'get_AdornerLayer', returnType: $System_Windows_Controls_AdornerLayer, params: [] } }] });
	ss.setMetadata($System_Windows_Controls_IDataTemplateSelector, { members: [{ name: 'SelectTemplate', type: 8, sname: 'SelectTemplate', returnType: $System_Windows_DataTemplate, params: [Object, $System_Windows_DependencyObject] }] });
	ss.setMetadata($System_Windows_Controls_IGeneratorHost, { members: [{ name: 'ClearContainerForItem', type: 8, sname: 'ClearContainerForItem', returnType: Object, params: [Object, $System_Windows_FrameworkElement] }, { name: 'GetContainerForItem', type: 8, sname: 'GetContainerForItem', returnType: $System_Windows_FrameworkElement, params: [Object] }, { name: 'PrepareContainerForItem', type: 8, sname: 'PrepareContainerForItem', returnType: Object, params: [Object, $System_Windows_FrameworkElement] }, { name: 'View', type: 16, returnType: $System_Windows_Controls_ItemCollection, getter: { name: 'get_View', type: 8, sname: 'get_View', returnType: $System_Windows_Controls_ItemCollection, params: [] } }] });
	ss.setMetadata($System_Windows_Controls_IItemContainer, { members: [{ name: 'ClearContainerForItem', type: 8, sname: 'ClearContainerForItem', returnType: Object, params: [Object] }, { name: 'PrepareContainerForItem', type: 8, sname: 'PrepareContainerForItem', returnType: Object, params: [Object, $System_Windows_DataTemplate, $System_Windows_Style] }] });
	ss.setMetadata($System_Windows_Controls_IItemContainerGenerator, { members: [{ name: 'ContainerFromItem', type: 8, sname: 'ContainerFromItem', returnType: $System_Windows_DependencyObject, params: [Object] }, { name: 'Generate', type: 8, sname: 'Generate', returnType: $System_Windows_FrameworkElement, params: [ss.Int32] }, { name: 'IndexFromContainer', type: 8, sname: 'IndexFromContainer', returnType: ss.Int32, params: [$System_Windows_DependencyObject] }, { name: 'ItemFromContainer', type: 8, sname: 'ItemFromContainer', returnType: Object, params: [$System_Windows_DependencyObject] }, { name: 'RemoveRange', type: 8, sname: 'RemoveRange', returnType: Object, params: [ss.Int32, ss.Int32] }, { name: 'ItemsCount', type: 16, returnType: ss.Int32, getter: { name: 'get_ItemsCount', type: 8, sname: 'get_ItemsCount', returnType: ss.Int32, params: [] } }, { name: 'ItemsChanged', type: 2, adder: { name: 'add_ItemsChanged', type: 8, sname: 'add_ItemsChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_ItemsChanged', type: 8, sname: 'remove_ItemsChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Controls_Image, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ArrangeOverride', type: 8, sname: 'ArrangeOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'CreateContentRenderElementOverride', type: 8, sname: 'CreateContentRenderElementOverride', returnType: Object, params: [$System_Windows_Media_IRenderElementFactory] }, { name: 'MeasureOverride', type: 8, sname: 'MeasureOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'Source', type: 16, returnType: $System_Windows_Media_ImageSource, getter: { name: 'get_Source', type: 8, sname: 'get_Source', returnType: $System_Windows_Media_ImageSource, params: [] }, setter: { name: 'set_Source', type: 8, sname: 'set_Source', returnType: Object, params: [$System_Windows_Media_ImageSource] } }, { name: 'Stretch', type: 16, returnType: $System_Windows_Media_Stretch, getter: { name: 'get_Stretch', type: 8, sname: 'get_Stretch', returnType: $System_Windows_Media_Stretch, params: [] }, setter: { name: 'set_Stretch', type: 8, sname: 'set_Stretch', returnType: Object, params: [$System_Windows_Media_Stretch] } }, { name: 'StretchDirection', type: 16, returnType: $System_Windows_Media_StretchDirection, getter: { name: 'get_StretchDirection', type: 8, sname: 'get_StretchDirection', returnType: $System_Windows_Media_StretchDirection, params: [] }, setter: { name: 'set_StretchDirection', type: 8, sname: 'set_StretchDirection', returnType: Object, params: [$System_Windows_Media_StretchDirection] } }, { name: 'ImageFailedEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'ImageFailedEvent' }, { name: 'SourceProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'SourceProperty' }, { name: 'StretchDirectionProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'StretchDirectionProperty' }, { name: 'StretchProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'StretchProperty' }, { name: 'ImageFailed', type: 2, adder: { name: 'add_ImageFailed', type: 8, sname: 'add_ImageFailed', returnType: Object, params: [Function] }, remover: { name: 'remove_ImageFailed', type: 8, sname: 'remove_ImageFailed', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Controls_InnerCollectionView, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Add', type: 8, sname: 'add', returnType: Object, params: [Object] }, { name: 'Clear', type: 8, sname: 'clear', returnType: Object, params: [] }, { name: 'Contains', type: 8, sname: 'contains', returnType: Boolean, params: [Object] }, { name: 'CopyTo', type: 8, sname: 'CopyTo', returnType: Object, params: [Array, ss.Int32] }, { name: 'GetEnumerator', type: 8, sname: 'getEnumerator', returnType: ss.IEnumerator, params: [] }, { name: 'IndexOf', type: 8, sname: 'indexOf', returnType: ss.Int32, params: [Object] }, { name: 'Insert', type: 8, sname: 'insert', returnType: Object, params: [ss.Int32, Object] }, { name: 'Remove', type: 8, sname: 'remove', returnType: Boolean, params: [Object] }, { name: 'RemoveAt', type: 8, sname: 'removeAt', returnType: Object, params: [ss.Int32] }, { name: 'CanFilter', type: 16, returnType: Boolean, getter: { name: 'get_CanFilter', type: 8, sname: 'get_CanFilter', returnType: Boolean, params: [] } }, { name: 'CanSort', type: 16, returnType: Boolean, getter: { name: 'get_CanSort', type: 8, sname: 'get_CanSort', returnType: Boolean, params: [] } }, { name: 'Count', type: 16, returnType: ss.Int32, getter: { name: 'get_Count', type: 8, sname: 'get_count', returnType: ss.Int32, params: [] } }, { name: 'CurrentItem', type: 16, returnType: Object, getter: { name: 'get_CurrentItem', type: 8, sname: 'get_CurrentItem', returnType: Object, params: [] }, setter: { name: 'set_CurrentItem', type: 8, sname: 'set_CurrentItem', returnType: Object, params: [Object] } }, { name: 'CurrentItemIndex', type: 16, returnType: ss.Int32, getter: { name: 'get_CurrentItemIndex', type: 8, sname: 'get_CurrentItemIndex', returnType: ss.Int32, params: [] }, setter: { name: 'set_CurrentItemIndex', type: 8, sname: 'set_CurrentItemIndex', returnType: Object, params: [ss.Int32] } }, { name: 'FilterPredicate', type: 16, returnType: Function, getter: { name: 'get_FilterPredicate', type: 8, sname: 'get_FilterPredicate', returnType: Function, params: [] }, setter: { name: 'set_FilterPredicate', type: 8, sname: 'set_FilterPredicate', returnType: Object, params: [Function] } }, { name: 'IsReadOnly', type: 16, returnType: Boolean, getter: { name: 'get_IsReadOnly', type: 8, sname: 'get_IsReadOnly', returnType: Boolean, params: [] } }, { name: 'Item', type: 16, returnType: Object, params: [ss.Int32], getter: { name: 'get_Item', type: 8, sname: 'get_item', returnType: Object, params: [ss.Int32] }, setter: { name: 'set_Item', type: 8, sname: 'set_item', returnType: Object, params: [ss.Int32, Object] } }, { name: 'SortDirection', type: 16, returnType: $System_Windows_Data_ListSortDirection, getter: { name: 'get_SortDirection', type: 8, sname: 'get_SortDirection', returnType: $System_Windows_Data_ListSortDirection, params: [] }, setter: { name: 'set_SortDirection', type: 8, sname: 'set_SortDirection', returnType: Object, params: [$System_Windows_Data_ListSortDirection] } }, { name: 'SortKeySelector', type: 16, returnType: Function, getter: { name: 'get_SortKeySelector', type: 8, sname: 'get_SortKeySelector', returnType: Function, params: [] }, setter: { name: 'set_SortKeySelector', type: 8, sname: 'set_SortKeySelector', returnType: Object, params: [Function] } }, { name: 'SourceCollection', type: 16, returnType: ss.IEnumerable, getter: { name: 'get_SourceCollection', type: 8, sname: 'get_SourceCollection', returnType: ss.IEnumerable, params: [] } }, { name: 'CollectionChanged', type: 2, adder: { name: 'add_CollectionChanged', type: 8, sname: 'add_CollectionChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_CollectionChanged', type: 8, sname: 'remove_CollectionChanged', returnType: Object, params: [Function] } }, { name: 'CurrentChanged', type: 2, adder: { name: 'add_CurrentChanged', type: 8, sname: 'add_CurrentChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_CurrentChanged', type: 8, sname: 'remove_CurrentChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Controls_IPopupLayerHost, { members: [{ name: 'PopupLayer', type: 16, returnType: $System_Windows_Controls_PopupLayer, getter: { name: 'get_PopupLayer', type: 8, sname: 'get_PopupLayer', returnType: $System_Windows_Controls_PopupLayer, params: [] } }] });
	ss.setMetadata($System_Windows_Controls_IRadioButtonGroupScope, { members: [{ name: 'GetRadioButtonGroup', type: 8, sname: 'GetRadioButtonGroup', returnType: ss.makeGenericType($System_Windows_Controls_ISelectionGroup$1, [$System_Windows_Controls_RadioButton]), params: [String] }] });
	ss.setMetadata($System_Windows_Controls_ISelectionGroup$1, { members: [{ name: 'Selection', type: 16, returnType: Object, getter: { name: 'get_Selection', type: 8, sname: 'get_Selection', returnType: Object, params: [] }, setter: { name: 'set_Selection', type: 8, sname: 'set_Selection', returnType: Object, params: [Object] } }, { name: 'SelectionChanged', type: 2, adder: { name: 'add_SelectionChanged', type: 8, sname: 'add_SelectionChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_SelectionChanged', type: 8, sname: 'remove_SelectionChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Controls_ISelectionGroupScope$1, { members: [{ name: 'GetSelectionGroup', type: 8, sname: 'GetSelectionGroup', returnType: ss.makeGenericType($System_Windows_Controls_ISelectionGroup$1, [Object]), params: [String] }] });
	ss.setMetadata($System_Windows_Controls_IStyleSelector, { members: [{ name: 'SelectStyle', type: 8, sname: 'SelectStyle', returnType: $System_Windows_Style, params: [Object, $System_Windows_DependencyObject] }] });
	ss.setMetadata($System_Windows_Controls_ItemCollection, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Add', type: 8, sname: 'add', returnType: Object, params: [Object] }, { name: 'Clear', type: 8, sname: 'clear', returnType: Object, params: [] }, { name: 'ClearItemsSource', type: 8, sname: 'ClearItemsSource', returnType: Object, params: [] }, { name: 'Contains', type: 8, sname: 'contains', returnType: Boolean, params: [Object] }, { name: 'CopyTo', type: 8, sname: 'CopyTo', returnType: Object, params: [Array, ss.Int32] }, { name: 'GetEnumerator', type: 8, sname: 'getEnumerator', returnType: ss.IEnumerator, params: [] }, { name: 'IndexOf', type: 8, sname: 'indexOf', returnType: ss.Int32, params: [Object] }, { name: 'Insert', type: 8, sname: 'insert', returnType: Object, params: [ss.Int32, Object] }, { name: 'OnDelegateViewCollectionChanged', type: 8, sname: 'OnDelegateViewCollectionChanged', returnType: Object, params: [Object, Granular.Collections.NotifyCollectionChangedEventArgs] }, { name: 'OnDelegateViewCurrentChanged', type: 8, sname: 'OnDelegateViewCurrentChanged', returnType: Object, params: [Object, ss.EventArgs] }, { name: 'Remove', type: 8, sname: 'remove', returnType: Boolean, params: [Object] }, { name: 'RemoveAt', type: 8, sname: 'removeAt', returnType: Object, params: [ss.Int32] }, { name: 'SetItemsSource', type: 8, sname: 'SetItemsSource', returnType: Object, params: [ss.IEnumerable] }, { name: 'CanFilter', type: 16, returnType: Boolean, getter: { name: 'get_CanFilter', type: 8, sname: 'get_CanFilter', returnType: Boolean, params: [] } }, { name: 'CanSort', type: 16, returnType: Boolean, getter: { name: 'get_CanSort', type: 8, sname: 'get_CanSort', returnType: Boolean, params: [] } }, { name: 'Count', type: 16, returnType: ss.Int32, getter: { name: 'get_Count', type: 8, sname: 'get_count', returnType: ss.Int32, params: [] } }, { name: 'CurrentItem', type: 16, returnType: Object, getter: { name: 'get_CurrentItem', type: 8, sname: 'get_CurrentItem', returnType: Object, params: [] }, setter: { name: 'set_CurrentItem', type: 8, sname: 'set_CurrentItem', returnType: Object, params: [Object] } }, { name: 'CurrentItemIndex', type: 16, returnType: ss.Int32, getter: { name: 'get_CurrentItemIndex', type: 8, sname: 'get_CurrentItemIndex', returnType: ss.Int32, params: [] }, setter: { name: 'set_CurrentItemIndex', type: 8, sname: 'set_CurrentItemIndex', returnType: Object, params: [ss.Int32] } }, { name: 'FilterPredicate', type: 16, returnType: Function, getter: { name: 'get_FilterPredicate', type: 8, sname: 'get_FilterPredicate', returnType: Function, params: [] }, setter: { name: 'set_FilterPredicate', type: 8, sname: 'set_FilterPredicate', returnType: Object, params: [Function] } }, { name: 'IsReadOnly', type: 16, returnType: Boolean, getter: { name: 'get_IsReadOnly', type: 8, sname: 'get_IsReadOnly', returnType: Boolean, params: [] } }, { name: 'Item', type: 16, returnType: Object, params: [ss.Int32], getter: { name: 'get_Item', type: 8, sname: 'get_item', returnType: Object, params: [ss.Int32] }, setter: { name: 'set_Item', type: 8, sname: 'set_item', returnType: Object, params: [ss.Int32, Object] } }, { name: 'SortDirection', type: 16, returnType: $System_Windows_Data_ListSortDirection, getter: { name: 'get_SortDirection', type: 8, sname: 'get_SortDirection', returnType: $System_Windows_Data_ListSortDirection, params: [] }, setter: { name: 'set_SortDirection', type: 8, sname: 'set_SortDirection', returnType: Object, params: [$System_Windows_Data_ListSortDirection] } }, { name: 'SortKeySelector', type: 16, returnType: Function, getter: { name: 'get_SortKeySelector', type: 8, sname: 'get_SortKeySelector', returnType: Function, params: [] }, setter: { name: 'set_SortKeySelector', type: 8, sname: 'set_SortKeySelector', returnType: Object, params: [Function] } }, { name: 'SourceCollection', type: 16, returnType: ss.IEnumerable, getter: { name: 'get_SourceCollection', type: 8, sname: 'get_SourceCollection', returnType: ss.IEnumerable, params: [] } }, { name: 'CollectionChanged', type: 2, adder: { name: 'add_CollectionChanged', type: 8, sname: 'add_CollectionChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_CollectionChanged', type: 8, sname: 'remove_CollectionChanged', returnType: Object, params: [Function] } }, { name: 'CurrentChanged', type: 2, adder: { name: 'add_CurrentChanged', type: 8, sname: 'add_CurrentChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_CurrentChanged', type: 8, sname: 'remove_CurrentChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Controls_ItemContainerGenerator, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Controls_IGeneratorHost] }, { name: 'ContainerFromItem', type: 8, sname: 'ContainerFromItem', returnType: $System_Windows_DependencyObject, params: [Object] }, { name: 'Dispose', type: 8, sname: 'dispose', returnType: Object, params: [] }, { name: 'Generate', type: 8, sname: 'Generate', returnType: $System_Windows_FrameworkElement, params: [ss.Int32] }, { name: 'IndexFromContainer', type: 8, sname: 'IndexFromContainer', returnType: ss.Int32, params: [$System_Windows_DependencyObject] }, { name: 'ItemFromContainer', type: 8, sname: 'ItemFromContainer', returnType: Object, params: [$System_Windows_DependencyObject] }, { name: 'RemoveRange', type: 8, sname: 'RemoveRange', returnType: Object, params: [ss.Int32, ss.Int32] }, { name: 'ItemsCount', type: 16, returnType: ss.Int32, getter: { name: 'get_ItemsCount', type: 8, sname: 'get_ItemsCount', returnType: ss.Int32, params: [] } }, { name: 'ItemsChanged', type: 2, adder: { name: 'add_ItemsChanged', type: 8, sname: 'add_ItemsChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_ItemsChanged', type: 8, sname: 'remove_ItemsChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Controls_ItemContainerGeneratorExtensions, { members: [{ name: 'GenerateRange', isStatic: true, type: 8, sname: 'GenerateRange', returnType: Object, params: [$System_Windows_Controls_IItemContainerGenerator, ss.Int32, ss.Int32] }, { name: 'Remove', isStatic: true, type: 8, sname: 'Remove', returnType: Object, params: [$System_Windows_Controls_IItemContainerGenerator, ss.Int32] }] });
	ss.setMetadata($System_Windows_Controls_ItemsChangedEventArgs, { members: [{ name: '.ctor', type: 1, params: [Granular.Collections.NotifyCollectionChangedAction, ss.Int32, ss.Int32, ss.Int32, ss.Int32] }, { name: 'Action', type: 16, returnType: Granular.Collections.NotifyCollectionChangedAction, getter: { name: 'get_Action', type: 8, sname: 'get_Action', returnType: Granular.Collections.NotifyCollectionChangedAction, params: [] }, setter: { name: 'set_Action', type: 8, sname: 'set_Action', returnType: Object, params: [Granular.Collections.NotifyCollectionChangedAction] } }, { name: 'ContainersCount', type: 16, returnType: ss.Int32, getter: { name: 'get_ContainersCount', type: 8, sname: 'get_ContainersCount', returnType: ss.Int32, params: [] }, setter: { name: 'set_ContainersCount', type: 8, sname: 'set_ContainersCount', returnType: Object, params: [ss.Int32] } }, { name: 'ItemsCount', type: 16, returnType: ss.Int32, getter: { name: 'get_ItemsCount', type: 8, sname: 'get_ItemsCount', returnType: ss.Int32, params: [] }, setter: { name: 'set_ItemsCount', type: 8, sname: 'set_ItemsCount', returnType: Object, params: [ss.Int32] } }, { name: 'NewStartingIndex', type: 16, returnType: ss.Int32, getter: { name: 'get_NewStartingIndex', type: 8, sname: 'get_NewStartingIndex', returnType: ss.Int32, params: [] }, setter: { name: 'set_NewStartingIndex', type: 8, sname: 'set_NewStartingIndex', returnType: Object, params: [ss.Int32] } }, { name: 'OldStartingIndex', type: 16, returnType: ss.Int32, getter: { name: 'get_OldStartingIndex', type: 8, sname: 'get_OldStartingIndex', returnType: ss.Int32, params: [] }, setter: { name: 'set_OldStartingIndex', type: 8, sname: 'set_OldStartingIndex', returnType: Object, params: [ss.Int32] } }] });
	ss.setMetadata($System_Windows_Controls_ItemsControl, { attr: [new $System_Windows_Markup_ContentPropertyAttribute('Items')], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ClearContainerForItem', type: 8, sname: 'ClearContainerForItem', returnType: Object, params: [Object, $System_Windows_FrameworkElement] }, { name: 'ClearContainerForItemOverride', type: 8, sname: 'ClearContainerForItemOverride', returnType: Object, params: [Object, $System_Windows_FrameworkElement] }, { name: 'GetContainerForItem', type: 8, sname: 'GetContainerForItem', returnType: $System_Windows_FrameworkElement, params: [Object] }, { name: 'GetContainerForItemOverride', type: 8, sname: 'GetContainerForItemOverride', returnType: $System_Windows_FrameworkElement, params: [] }, { name: 'IsItemItsOwnContainer', type: 8, sname: 'IsItemItsOwnContainer', returnType: Boolean, params: [Object] }, { name: 'IsItemItsOwnContainerOverride', type: 8, sname: 'IsItemItsOwnContainerOverride', returnType: Boolean, params: [Object] }, { name: 'OnClearContainerForItem', type: 8, sname: 'OnClearContainerForItem', returnType: Object, params: [Object, $System_Windows_FrameworkElement] }, { name: 'OnPrepareContainerForItem', type: 8, sname: 'OnPrepareContainerForItem', returnType: Object, params: [Object, $System_Windows_FrameworkElement] }, { name: 'PrepareContainerForItem', type: 8, sname: 'PrepareContainerForItem', returnType: Object, params: [Object, $System_Windows_FrameworkElement] }, { name: 'PrepareContainerForItemOverride', type: 8, sname: 'PrepareContainerForItemOverride', returnType: Object, params: [Object, $System_Windows_FrameworkElement] }, { name: 'ItemContainerGenerator', type: 16, returnType: $System_Windows_Controls_IItemContainerGenerator, getter: { name: 'get_ItemContainerGenerator', type: 8, sname: 'get_ItemContainerGenerator', returnType: $System_Windows_Controls_IItemContainerGenerator, params: [] }, setter: { name: 'set_ItemContainerGenerator', type: 8, sname: 'set_ItemContainerGenerator', returnType: Object, params: [$System_Windows_Controls_IItemContainerGenerator] } }, { name: 'ItemContainerStyle', type: 16, returnType: $System_Windows_Style, getter: { name: 'get_ItemContainerStyle', type: 8, sname: 'get_ItemContainerStyle', returnType: $System_Windows_Style, params: [] }, setter: { name: 'set_ItemContainerStyle', type: 8, sname: 'set_ItemContainerStyle', returnType: Object, params: [$System_Windows_Style] } }, { name: 'ItemContainerStyleSelector', type: 16, returnType: $System_Windows_Controls_IStyleSelector, getter: { name: 'get_ItemContainerStyleSelector', type: 8, sname: 'get_ItemContainerStyleSelector', returnType: $System_Windows_Controls_IStyleSelector, params: [] }, setter: { name: 'set_ItemContainerStyleSelector', type: 8, sname: 'set_ItemContainerStyleSelector', returnType: Object, params: [$System_Windows_Controls_IStyleSelector] } }, { name: 'ItemTemplate', type: 16, returnType: $System_Windows_DataTemplate, getter: { name: 'get_ItemTemplate', type: 8, sname: 'get_ItemTemplate', returnType: $System_Windows_DataTemplate, params: [] }, setter: { name: 'set_ItemTemplate', type: 8, sname: 'set_ItemTemplate', returnType: Object, params: [$System_Windows_DataTemplate] } }, { name: 'ItemTemplateSelector', type: 16, returnType: $System_Windows_Controls_IDataTemplateSelector, getter: { name: 'get_ItemTemplateSelector', type: 8, sname: 'get_ItemTemplateSelector', returnType: $System_Windows_Controls_IDataTemplateSelector, params: [] }, setter: { name: 'set_ItemTemplateSelector', type: 8, sname: 'set_ItemTemplateSelector', returnType: Object, params: [$System_Windows_Controls_IDataTemplateSelector] } }, { name: 'Items', type: 16, returnType: $System_Windows_Controls_ItemCollection, getter: { name: 'get_Items', type: 8, sname: 'get_Items', returnType: $System_Windows_Controls_ItemCollection, params: [] }, setter: { name: 'set_Items', type: 8, sname: 'set_Items', returnType: Object, params: [$System_Windows_Controls_ItemCollection] } }, { name: 'ItemsPanel', type: 16, returnType: $System_Windows_IFrameworkTemplate, getter: { name: 'get_ItemsPanel', type: 8, sname: 'get_ItemsPanel', returnType: $System_Windows_IFrameworkTemplate, params: [] }, setter: { name: 'set_ItemsPanel', type: 8, sname: 'set_ItemsPanel', returnType: Object, params: [$System_Windows_IFrameworkTemplate] } }, { name: 'ItemsSource', type: 16, returnType: ss.IEnumerable, getter: { name: 'get_ItemsSource', type: 8, sname: 'get_ItemsSource', returnType: ss.IEnumerable, params: [] }, setter: { name: 'set_ItemsSource', type: 8, sname: 'set_ItemsSource', returnType: Object, params: [ss.IEnumerable] } }, { name: 'View', type: 16, returnType: $System_Windows_Controls_ItemCollection, getter: { name: 'get_View', type: 8, sname: 'get_View', returnType: $System_Windows_Controls_ItemCollection, params: [] } }, { name: 'ItemContainerGeneratorProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ItemContainerGeneratorProperty' }, { name: 'ItemContainerStyleProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ItemContainerStyleProperty' }, { name: 'ItemContainerStyleSelectorProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ItemContainerStyleSelectorProperty' }, { name: 'ItemTemplateProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ItemTemplateProperty' }, { name: 'ItemTemplateSelectorProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ItemTemplateSelectorProperty' }, { name: 'ItemsPanelProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ItemsPanelProperty' }, { name: 'ItemsSourceProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ItemsSourceProperty' }] });
	ss.setMetadata($System_Windows_Controls_ItemsPanelTemplate, { members: [{ name: '.ctor', type: 1, params: [] }] });
	ss.setMetadata($System_Windows_Controls_ItemsPresenter, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ArrangeOverride', type: 8, sname: 'ArrangeOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'GetTemplate', type: 8, sname: 'GetTemplate', returnType: $System_Windows_IFrameworkTemplate, params: [] }, { name: 'MeasureOverride', type: 8, sname: 'MeasureOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'ItemContainerGenerator', type: 16, returnType: $System_Windows_Controls_IItemContainerGenerator, getter: { name: 'get_ItemContainerGenerator', type: 8, sname: 'get_ItemContainerGenerator', returnType: $System_Windows_Controls_IItemContainerGenerator, params: [] }, setter: { name: 'set_ItemContainerGenerator', type: 8, sname: 'set_ItemContainerGenerator', returnType: Object, params: [$System_Windows_Controls_IItemContainerGenerator] } }, { name: 'Panel', type: 16, returnType: $System_Windows_Controls_Panel, getter: { name: 'get_Panel', type: 8, sname: 'get_Panel', returnType: $System_Windows_Controls_Panel, params: [] }, setter: { name: 'set_Panel', type: 8, sname: 'set_Panel', returnType: Object, params: [$System_Windows_Controls_Panel] } }, { name: 'Template', type: 16, returnType: $System_Windows_IFrameworkTemplate, getter: { name: 'get_Template', type: 8, sname: 'get_Template', returnType: $System_Windows_IFrameworkTemplate, params: [] }, setter: { name: 'set_Template', type: 8, sname: 'set_Template', returnType: Object, params: [$System_Windows_IFrameworkTemplate] } }, { name: 'ItemContainerGeneratorProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ItemContainerGeneratorProperty' }, { name: 'TemplateProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'TemplateProperty' }] });
	ss.setMetadata($System_Windows_Controls_ListBox, { members: [{ name: '.cctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [] }, { name: 'GetContainerForItemOverride', type: 8, sname: 'GetContainerForItemOverride', returnType: $System_Windows_FrameworkElement, params: [] }, { name: 'IsItemItsOwnContainerOverride', type: 8, sname: 'IsItemItsOwnContainerOverride', returnType: Boolean, params: [Object] }, { name: 'OnClearContainerForItem', type: 8, sname: 'OnClearContainerForItem', returnType: Object, params: [Object, $System_Windows_FrameworkElement] }, { name: 'OnPrepareContainerForItem', type: 8, sname: 'OnPrepareContainerForItem', returnType: Object, params: [Object, $System_Windows_FrameworkElement] }, { name: 'SelectedItems', type: 16, returnType: ss.IEnumerable, getter: { name: 'get_SelectedItems', type: 8, sname: 'get_SelectedItems', returnType: ss.IEnumerable, params: [] }, setter: { name: 'set_SelectedItems', type: 8, sname: 'set_SelectedItems', returnType: Object, params: [ss.IEnumerable] } }, { name: 'SelectionMode', type: 16, returnType: $System_Windows_Controls_SelectionMode, getter: { name: 'get_SelectionMode', type: 8, sname: 'get_SelectionMode', returnType: $System_Windows_Controls_SelectionMode, params: [] }, setter: { name: 'set_SelectionMode', type: 8, sname: 'set_SelectionMode', returnType: Object, params: [$System_Windows_Controls_SelectionMode] } }, { name: 'SelectedItemsProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'SelectedItemsProperty' }, { name: 'SelectionModeProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'SelectionModeProperty' }] });
	ss.setMetadata($System_Windows_Controls_ListBoxItem, { attr: [new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.CommonStates, $System_Windows_VisualStates.NormalState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.CommonStates, $System_Windows_VisualStates.MouseOverState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.CommonStates, $System_Windows_VisualStates.DisabledState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.SelectionStates, $System_Windows_VisualStates.SelectedState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.SelectionStates, $System_Windows_VisualStates.SelectedUnfocusedState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.SelectionStates, $System_Windows_VisualStates.UnselectedState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.FocusStates, $System_Windows_VisualStates.FocusedState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.FocusStates, $System_Windows_VisualStates.UnfocusedState)], members: [{ name: '.cctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [] }, { name: 'OnMouseDown', type: 8, sname: 'OnMouseDown', returnType: Object, params: [$System_Windows_Input_MouseButtonEventArgs] }, { name: 'UpdateVisualState', type: 8, sname: 'UpdateVisualState', returnType: Object, params: [Boolean] }, { name: 'IsSelected', type: 16, returnType: Boolean, getter: { name: 'get_IsSelected', type: 8, sname: 'get_IsSelected', returnType: Boolean, params: [] }, setter: { name: 'set_IsSelected', type: 8, sname: 'set_IsSelected', returnType: Object, params: [Boolean] } }, { name: 'IsSelectedProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsSelectedProperty' }, { name: 'SelectedEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'SelectedEvent' }, { name: 'UnselectedEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'UnselectedEvent' }, { name: 'Selected', type: 2, adder: { name: 'add_Selected', type: 8, sname: 'add_Selected', returnType: Object, params: [Function] }, remover: { name: 'remove_Selected', type: 8, sname: 'remove_Selected', returnType: Object, params: [Function] } }, { name: 'Unselected', type: 2, adder: { name: 'add_Unselected', type: 8, sname: 'add_Unselected', returnType: Object, params: [Function] }, remover: { name: 'remove_Unselected', type: 8, sname: 'remove_Unselected', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Controls_Panel, { attr: [new $System_Windows_Markup_ContentPropertyAttribute('Children')], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ArrangeOverride', type: 8, sname: 'ArrangeOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'GetZIndex', isStatic: true, type: 8, sname: 'GetZIndex', returnType: ss.Int32, params: [$System_Windows_DependencyObject] }, { name: 'HitTestOverride', type: 8, sname: 'HitTestOverride', returnType: Boolean, params: [$System_Windows_Point] }, { name: 'MeasureOverride', type: 8, sname: 'MeasureOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'OnGeneratorItemsChanged', type: 8, sname: 'OnGeneratorItemsChanged', returnType: Object, params: [Object, $System_Windows_Controls_ItemsChangedEventArgs] }, { name: 'SetZIndex', isStatic: true, type: 8, sname: 'SetZIndex', returnType: Object, params: [$System_Windows_DependencyObject, ss.Int32] }, { name: 'Background', type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Background', type: 8, sname: 'get_Background', returnType: $System_Windows_Media_Brush, params: [] }, setter: { name: 'set_Background', type: 8, sname: 'set_Background', returnType: Object, params: [$System_Windows_Media_Brush] } }, { name: 'Children', type: 16, returnType: $System_Windows_Controls_UIElementCollection, getter: { name: 'get_Children', type: 8, sname: 'get_Children', returnType: $System_Windows_Controls_UIElementCollection, params: [] }, setter: { name: 'set_Children', type: 8, sname: 'set_Children', returnType: Object, params: [$System_Windows_Controls_UIElementCollection] } }, { name: 'IsItemsHost', type: 16, returnType: Boolean, getter: { name: 'get_IsItemsHost', type: 8, sname: 'get_IsItemsHost', returnType: Boolean, params: [] }, setter: { name: 'set_IsItemsHost', type: 8, sname: 'set_IsItemsHost', returnType: Object, params: [Boolean] } }, { name: 'ItemContainerGenerator', type: 16, returnType: $System_Windows_Controls_IItemContainerGenerator, getter: { name: 'get_ItemContainerGenerator', type: 8, sname: 'get_ItemContainerGenerator', returnType: $System_Windows_Controls_IItemContainerGenerator, params: [] }, setter: { name: 'set_ItemContainerGenerator', type: 8, sname: 'set_ItemContainerGenerator', returnType: Object, params: [$System_Windows_Controls_IItemContainerGenerator] } }, { name: 'BackgroundProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'BackgroundProperty' }, { name: 'IsItemsHostProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsItemsHostProperty' }, { name: 'ZIndexProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ZIndexProperty' }] });
	ss.setMetadata($System_Windows_Controls_PasswordBox, { attr: [new $System_Windows_TemplatePartAttribute('PART_ContentHost', $System_Windows_FrameworkElement)], members: [{ name: '.cctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [] }, { name: 'OnApplyTemplate', type: 8, sname: 'OnApplyTemplate', returnType: Object, params: [] }, { name: 'OnGotFocus', type: 8, sname: 'OnGotFocus', returnType: Object, params: [$System_Windows_RoutedEventArgs] }, { name: 'OnLostFocus', type: 8, sname: 'OnLostFocus', returnType: Object, params: [$System_Windows_RoutedEventArgs] }, { name: 'OnMouseDown', type: 8, sname: 'OnMouseDown', returnType: Object, params: [$System_Windows_Input_MouseButtonEventArgs] }, { name: 'SelectAll', type: 8, sname: 'SelectAll', returnType: Object, params: [] }, { name: 'UpdateVisualState', type: 8, sname: 'UpdateVisualState', returnType: Object, params: [Boolean] }, { name: 'MaxLength', type: 16, returnType: ss.Int32, getter: { name: 'get_MaxLength', type: 8, sname: 'get_MaxLength', returnType: ss.Int32, params: [] }, setter: { name: 'set_MaxLength', type: 8, sname: 'set_MaxLength', returnType: Object, params: [ss.Int32] } }, { name: 'Password', type: 16, returnType: String, getter: { name: 'get_Password', type: 8, sname: 'get_Password', returnType: String, params: [] }, setter: { name: 'set_Password', type: 8, sname: 'set_Password', returnType: Object, params: [String] } }, { name: 'MaxLengthProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'MaxLengthProperty' }, { name: 'PasswordChangedEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'PasswordChangedEvent' }, { name: 'PasswordChanged', type: 2, adder: { name: 'add_PasswordChanged', type: 8, sname: 'add_PasswordChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_PasswordChanged', type: 8, sname: 'remove_PasswordChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Controls_PopupLayer, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'AddChild', type: 8, sname: 'AddChild', returnType: Object, params: [$System_Windows_Media_Visual] }, { name: 'ArrangeOverride', type: 8, sname: 'ArrangeOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'GetIsOpen', isStatic: true, type: 8, sname: 'GetIsOpen', returnType: Boolean, params: [$System_Windows_DependencyObject] }, { name: 'GetPopupLayer', isStatic: true, type: 8, sname: 'GetPopupLayer', returnType: $System_Windows_Controls_PopupLayer, params: [$System_Windows_Media_Visual] }, { name: 'GetPosition', isStatic: true, type: 8, sname: 'GetPosition', returnType: $System_Windows_Point, params: [$System_Windows_DependencyObject] }, { name: 'GetStaysOpen', isStatic: true, type: 8, sname: 'GetStaysOpen', returnType: Boolean, params: [$System_Windows_DependencyObject] }, { name: 'HitTestOverride', type: 8, sname: 'HitTestOverride', returnType: Boolean, params: [$System_Windows_Point] }, { name: 'MeasureOverride', type: 8, sname: 'MeasureOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'OnMouseDown', type: 8, sname: 'OnMouseDown', returnType: Object, params: [$System_Windows_Input_MouseButtonEventArgs] }, { name: 'RemoveChild', type: 8, sname: 'RemoveChild', returnType: Object, params: [$System_Windows_Media_Visual] }, { name: 'SetIsOpen', isStatic: true, type: 8, sname: 'SetIsOpen', returnType: Object, params: [$System_Windows_DependencyObject, Boolean] }, { name: 'SetPosition', isStatic: true, type: 8, sname: 'SetPosition', returnType: Object, params: [$System_Windows_DependencyObject, $System_Windows_Point] }, { name: 'SetStaysOpen', isStatic: true, type: 8, sname: 'SetStaysOpen', returnType: Object, params: [$System_Windows_DependencyObject, Boolean] }, { name: 'IsOpenProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsOpenProperty' }, { name: 'PositionProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'PositionProperty' }, { name: 'StaysOpenProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'StaysOpenProperty' }, { name: 'ClosePopupRequest', type: 2, adder: { name: 'add_ClosePopupRequest', type: 8, sname: 'add_ClosePopupRequest', returnType: Object, params: [Function] }, remover: { name: 'remove_ClosePopupRequest', type: 8, sname: 'remove_ClosePopupRequest', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Controls_ProgressBar, { attr: [new $System_Windows_TemplatePartAttribute('PART_Track', $System_Windows_FrameworkElement), new $System_Windows_TemplatePartAttribute('PART_Indicator', $System_Windows_FrameworkElement), new $System_Windows_TemplatePartAttribute('PART_Glow', $System_Windows_Controls_Border)], members: [{ name: '.cctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [] }, { name: 'OnApplyTemplate', type: 8, sname: 'OnApplyTemplate', returnType: Object, params: [] }, { name: 'OnMaximumChanged', type: 8, sname: 'OnMaximumChanged', returnType: Object, params: [$System_Windows_DependencyPropertyChangedEventArgs] }, { name: 'OnMinimumChanged', type: 8, sname: 'OnMinimumChanged', returnType: Object, params: [$System_Windows_DependencyPropertyChangedEventArgs] }, { name: 'OnValueChanged', type: 8, sname: 'OnValueChanged', returnType: Object, params: [$System_Windows_DependencyPropertyChangedEventArgs] }, { name: 'IsIndeterminate', type: 16, returnType: Boolean, getter: { name: 'get_IsIndeterminate', type: 8, sname: 'get_IsIndeterminate', returnType: Boolean, params: [] }, setter: { name: 'set_IsIndeterminate', type: 8, sname: 'set_IsIndeterminate', returnType: Object, params: [Boolean] } }, { name: 'IsIndeterminateProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsIndeterminateProperty' }] });
	ss.setMetadata($System_Windows_Controls_RadioButton, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'OnIsCheckedChanged', type: 8, sname: 'OnIsCheckedChanged', returnType: Object, params: [$System_Windows_DependencyPropertyChangedEventArgs] }, { name: 'OnVisualAncestorChanged', type: 8, sname: 'OnVisualAncestorChanged', returnType: Object, params: [] }, { name: 'ToggleState', type: 8, sname: 'ToggleState', returnType: Object, params: [] }, { name: 'GroupName', type: 16, returnType: String, getter: { name: 'get_GroupName', type: 8, sname: 'get_GroupName', returnType: String, params: [] }, setter: { name: 'set_GroupName', type: 8, sname: 'set_GroupName', returnType: Object, params: [String] } }, { name: 'GroupNameProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'GroupNameProperty' }] });
	ss.setMetadata($System_Windows_Controls_RowDefinition, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ActualHeight', type: 16, returnType: Number, getter: { name: 'get_ActualHeight', type: 8, sname: 'get_ActualHeight', returnType: Number, params: [] }, setter: { name: 'set_ActualHeight', type: 8, sname: 'set_ActualHeight', returnType: Object, params: [Number] } }, { name: 'ActualLength', type: 16, returnType: Number, getter: { name: 'get_ActualLength', type: 8, sname: 'get_$ActualLength', returnType: Number, params: [] }, setter: { name: 'set_ActualLength', type: 8, sname: 'set_$ActualLength', returnType: Object, params: [Number] } }, { name: 'Height', type: 16, returnType: $System_Windows_Controls_GridLength, getter: { name: 'get_Height', type: 8, sname: 'get_Height', returnType: $System_Windows_Controls_GridLength, params: [] }, setter: { name: 'set_Height', type: 8, sname: 'set_Height', returnType: Object, params: [$System_Windows_Controls_GridLength] } }, { name: 'Length', type: 16, returnType: $System_Windows_Controls_GridLength, getter: { name: 'get_Length', type: 8, sname: 'get_$Length', returnType: $System_Windows_Controls_GridLength, params: [] } }, { name: 'MaxHeight', type: 16, returnType: Number, getter: { name: 'get_MaxHeight', type: 8, sname: 'get_MaxHeight', returnType: Number, params: [] }, setter: { name: 'set_MaxHeight', type: 8, sname: 'set_MaxHeight', returnType: Object, params: [Number] } }, { name: 'MaxLength', type: 16, returnType: Number, getter: { name: 'get_MaxLength', type: 8, sname: 'get_$MaxLength', returnType: Number, params: [] } }, { name: 'MinHeight', type: 16, returnType: Number, getter: { name: 'get_MinHeight', type: 8, sname: 'get_MinHeight', returnType: Number, params: [] }, setter: { name: 'set_MinHeight', type: 8, sname: 'set_MinHeight', returnType: Object, params: [Number] } }, { name: 'MinLength', type: 16, returnType: Number, getter: { name: 'get_MinLength', type: 8, sname: 'get_$MinLength', returnType: Number, params: [] } }, { name: 'ActualHeightProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ActualHeightProperty' }, { name: 'HeightProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'HeightProperty' }, { name: 'MaxHeightProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'MaxHeightProperty' }, { name: 'MinHeightProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'MinHeightProperty' }] });
	ss.setMetadata($System_Windows_Controls_ScrollChangedEventArgs, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_RoutedEvent, Object, $System_Windows_Point, $System_Windows_Point, $System_Windows_Size, $System_Windows_Point, $System_Windows_Size, $System_Windows_Point] }, { name: 'InvokeEventHandler', type: 8, sname: 'InvokeEventHandler', returnType: Object, params: [Function, Object] }, { name: 'Extent', type: 16, returnType: $System_Windows_Size, getter: { name: 'get_Extent', type: 8, sname: 'get_Extent', returnType: $System_Windows_Size, params: [] }, setter: { name: 'set_Extent', type: 8, sname: 'set_Extent', returnType: Object, params: [$System_Windows_Size] } }, { name: 'ExtentChange', type: 16, returnType: $System_Windows_Point, getter: { name: 'get_ExtentChange', type: 8, sname: 'get_ExtentChange', returnType: $System_Windows_Point, params: [] }, setter: { name: 'set_ExtentChange', type: 8, sname: 'set_ExtentChange', returnType: Object, params: [$System_Windows_Point] } }, { name: 'Offset', type: 16, returnType: $System_Windows_Point, getter: { name: 'get_Offset', type: 8, sname: 'get_Offset', returnType: $System_Windows_Point, params: [] }, setter: { name: 'set_Offset', type: 8, sname: 'set_Offset', returnType: Object, params: [$System_Windows_Point] } }, { name: 'OffsetChange', type: 16, returnType: $System_Windows_Point, getter: { name: 'get_OffsetChange', type: 8, sname: 'get_OffsetChange', returnType: $System_Windows_Point, params: [] }, setter: { name: 'set_OffsetChange', type: 8, sname: 'set_OffsetChange', returnType: Object, params: [$System_Windows_Point] } }, { name: 'Viewport', type: 16, returnType: $System_Windows_Size, getter: { name: 'get_Viewport', type: 8, sname: 'get_Viewport', returnType: $System_Windows_Size, params: [] }, setter: { name: 'set_Viewport', type: 8, sname: 'set_Viewport', returnType: Object, params: [$System_Windows_Size] } }, { name: 'ViewportChange', type: 16, returnType: $System_Windows_Point, getter: { name: 'get_ViewportChange', type: 8, sname: 'get_ViewportChange', returnType: $System_Windows_Point, params: [] }, setter: { name: 'set_ViewportChange', type: 8, sname: 'set_ViewportChange', returnType: Object, params: [$System_Windows_Point] } }] });
	ss.setMetadata($System_Windows_Controls_ScrollContentPresenter, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ArrangeOverride', type: 8, sname: 'ArrangeOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'MeasureOverride', type: 8, sname: 'MeasureOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'OnContentChanged', type: 8, sname: 'OnContentChanged', returnType: Object, params: [$System_Windows_DependencyPropertyChangedEventArgs] }, { name: 'OnTemplateChildChanged', type: 8, sname: 'OnTemplateChildChanged', returnType: Object, params: [] }, { name: 'AdornerLayer', type: 16, returnType: $System_Windows_Controls_AdornerLayer, getter: { name: 'get_AdornerLayer', type: 8, sname: 'get_AdornerLayer', returnType: $System_Windows_Controls_AdornerLayer, params: [] }, setter: { name: 'set_AdornerLayer', type: 8, sname: 'set_AdornerLayer', returnType: Object, params: [$System_Windows_Controls_AdornerLayer] } }, { name: 'CanContentScroll', type: 16, returnType: Boolean, getter: { name: 'get_CanContentScroll', type: 8, sname: 'get_CanContentScroll', returnType: Boolean, params: [] }, setter: { name: 'set_CanContentScroll', type: 8, sname: 'set_CanContentScroll', returnType: Object, params: [Boolean] } }, { name: 'CanHorizontallyScroll', type: 16, returnType: Boolean, getter: { name: 'get_CanHorizontallyScroll', type: 8, sname: 'get_CanHorizontallyScroll', returnType: Boolean, params: [] }, setter: { name: 'set_CanHorizontallyScroll', type: 8, sname: 'set_CanHorizontallyScroll', returnType: Object, params: [Boolean] } }, { name: 'CanVerticallyScroll', type: 16, returnType: Boolean, getter: { name: 'get_CanVerticallyScroll', type: 8, sname: 'get_CanVerticallyScroll', returnType: Boolean, params: [] }, setter: { name: 'set_CanVerticallyScroll', type: 8, sname: 'set_CanVerticallyScroll', returnType: Object, params: [Boolean] } }, { name: 'ExtentSize', type: 16, returnType: $System_Windows_Size, getter: { name: 'get_ExtentSize', type: 8, sname: 'get_ExtentSize', returnType: $System_Windows_Size, params: [] } }, { name: 'Offset', type: 16, returnType: $System_Windows_Point, getter: { name: 'get_Offset', type: 8, sname: 'get_Offset', returnType: $System_Windows_Point, params: [] }, setter: { name: 'set_Offset', type: 8, sname: 'set_Offset', returnType: Object, params: [$System_Windows_Point] } }, { name: 'ViewportSize', type: 16, returnType: $System_Windows_Size, getter: { name: 'get_ViewportSize', type: 8, sname: 'get_ViewportSize', returnType: $System_Windows_Size, params: [] } }, { name: 'CanContentScrollProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'CanContentScrollProperty' }] });
	ss.setMetadata($System_Windows_Controls_ScrollEventArgs, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_RoutedEvent, Object, $System_Windows_Controls_ScrollEventType, Number] }, { name: 'InvokeEventHandler', type: 8, sname: 'InvokeEventHandler', returnType: Object, params: [Function, Object] }, { name: 'NewValue', type: 16, returnType: Number, getter: { name: 'get_NewValue', type: 8, sname: 'get_NewValue', returnType: Number, params: [] }, setter: { name: 'set_NewValue', type: 8, sname: 'set_NewValue', returnType: Object, params: [Number] } }, { name: 'ScrollEventType', type: 16, returnType: $System_Windows_Controls_ScrollEventType, getter: { name: 'get_ScrollEventType', type: 8, sname: 'get_ScrollEventType', returnType: $System_Windows_Controls_ScrollEventType, params: [] }, setter: { name: 'set_ScrollEventType', type: 8, sname: 'set_ScrollEventType', returnType: Object, params: [$System_Windows_Controls_ScrollEventType] } }] });
	ss.setMetadata($System_Windows_Controls_ScrollViewer, { attr: [new $System_Windows_TemplatePartAttribute('PART_HorizontalScrollBar', $System_Windows_Controls_Primitives_ScrollBar), new $System_Windows_TemplatePartAttribute('PART_VerticalScrollBar', $System_Windows_Controls_Primitives_ScrollBar), new $System_Windows_TemplatePartAttribute('PART_ScrollContentPresenter', $System_Windows_Controls_ScrollContentPresenter)], members: [{ name: '.cctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [] }, { name: 'GetCanContentScroll', isStatic: true, type: 8, sname: 'GetCanContentScroll', returnType: Boolean, params: [$System_Windows_DependencyObject] }, { name: 'MeasureOverride', type: 8, sname: 'MeasureOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'OnApplyTemplate', type: 8, sname: 'OnApplyTemplate', returnType: Object, params: [] }, { name: 'OnMouseWheel', type: 8, sname: 'OnMouseWheel', returnType: Object, params: [$System_Windows_Input_MouseWheelEventArgs] }, { name: 'SetCanContentScroll', isStatic: true, type: 8, sname: 'SetCanContentScroll', returnType: Object, params: [$System_Windows_DependencyObject, Boolean] }, { name: 'ComputedHorizontalScrollBarVisibility', type: 16, returnType: $System_Windows_Visibility, getter: { name: 'get_ComputedHorizontalScrollBarVisibility', type: 8, sname: 'get_ComputedHorizontalScrollBarVisibility', returnType: $System_Windows_Visibility, params: [] }, setter: { name: 'set_ComputedHorizontalScrollBarVisibility', type: 8, sname: 'set_ComputedHorizontalScrollBarVisibility', returnType: Object, params: [$System_Windows_Visibility] } }, { name: 'ComputedScrollBarsVisibility', type: 16, returnType: $System_Windows_Visibility, getter: { name: 'get_ComputedScrollBarsVisibility', type: 8, sname: 'get_ComputedScrollBarsVisibility', returnType: $System_Windows_Visibility, params: [] }, setter: { name: 'set_ComputedScrollBarsVisibility', type: 8, sname: 'set_ComputedScrollBarsVisibility', returnType: Object, params: [$System_Windows_Visibility] } }, { name: 'ComputedVerticalScrollBarVisibility', type: 16, returnType: $System_Windows_Visibility, getter: { name: 'get_ComputedVerticalScrollBarVisibility', type: 8, sname: 'get_ComputedVerticalScrollBarVisibility', returnType: $System_Windows_Visibility, params: [] }, setter: { name: 'set_ComputedVerticalScrollBarVisibility', type: 8, sname: 'set_ComputedVerticalScrollBarVisibility', returnType: Object, params: [$System_Windows_Visibility] } }, { name: 'ExtentHeight', type: 16, returnType: Number, getter: { name: 'get_ExtentHeight', type: 8, sname: 'get_ExtentHeight', returnType: Number, params: [] }, setter: { name: 'set_ExtentHeight', type: 8, sname: 'set_ExtentHeight', returnType: Object, params: [Number] } }, { name: 'ExtentWidth', type: 16, returnType: Number, getter: { name: 'get_ExtentWidth', type: 8, sname: 'get_ExtentWidth', returnType: Number, params: [] }, setter: { name: 'set_ExtentWidth', type: 8, sname: 'set_ExtentWidth', returnType: Object, params: [Number] } }, { name: 'HorizontalOffset', type: 16, returnType: Number, getter: { name: 'get_HorizontalOffset', type: 8, sname: 'get_HorizontalOffset', returnType: Number, params: [] }, setter: { name: 'set_HorizontalOffset', type: 8, sname: 'set_HorizontalOffset', returnType: Object, params: [Number] } }, { name: 'HorizontalScrollBarVisibility', type: 16, returnType: $System_Windows_Controls_ScrollBarVisibility, getter: { name: 'get_HorizontalScrollBarVisibility', type: 8, sname: 'get_HorizontalScrollBarVisibility', returnType: $System_Windows_Controls_ScrollBarVisibility, params: [] }, setter: { name: 'set_HorizontalScrollBarVisibility', type: 8, sname: 'set_HorizontalScrollBarVisibility', returnType: Object, params: [$System_Windows_Controls_ScrollBarVisibility] } }, { name: 'ScrollableHeight', type: 16, returnType: Number, getter: { name: 'get_ScrollableHeight', type: 8, sname: 'get_ScrollableHeight', returnType: Number, params: [] }, setter: { name: 'set_ScrollableHeight', type: 8, sname: 'set_ScrollableHeight', returnType: Object, params: [Number] } }, { name: 'ScrollableWidth', type: 16, returnType: Number, getter: { name: 'get_ScrollableWidth', type: 8, sname: 'get_ScrollableWidth', returnType: Number, params: [] }, setter: { name: 'set_ScrollableWidth', type: 8, sname: 'set_ScrollableWidth', returnType: Object, params: [Number] } }, { name: 'VerticalOffset', type: 16, returnType: Number, getter: { name: 'get_VerticalOffset', type: 8, sname: 'get_VerticalOffset', returnType: Number, params: [] }, setter: { name: 'set_VerticalOffset', type: 8, sname: 'set_VerticalOffset', returnType: Object, params: [Number] } }, { name: 'VerticalScrollBarVisibility', type: 16, returnType: $System_Windows_Controls_ScrollBarVisibility, getter: { name: 'get_VerticalScrollBarVisibility', type: 8, sname: 'get_VerticalScrollBarVisibility', returnType: $System_Windows_Controls_ScrollBarVisibility, params: [] }, setter: { name: 'set_VerticalScrollBarVisibility', type: 8, sname: 'set_VerticalScrollBarVisibility', returnType: Object, params: [$System_Windows_Controls_ScrollBarVisibility] } }, { name: 'ViewportHeight', type: 16, returnType: Number, getter: { name: 'get_ViewportHeight', type: 8, sname: 'get_ViewportHeight', returnType: Number, params: [] }, setter: { name: 'set_ViewportHeight', type: 8, sname: 'set_ViewportHeight', returnType: Object, params: [Number] } }, { name: 'ViewportWidth', type: 16, returnType: Number, getter: { name: 'get_ViewportWidth', type: 8, sname: 'get_ViewportWidth', returnType: Number, params: [] }, setter: { name: 'set_ViewportWidth', type: 8, sname: 'set_ViewportWidth', returnType: Object, params: [Number] } }, { name: 'CanContentScrollProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'CanContentScrollProperty' }, { name: 'ComputedHorizontalScrollBarVisibilityProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ComputedHorizontalScrollBarVisibilityProperty' }, { name: 'ComputedScrollBarsVisibilityProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ComputedScrollBarsVisibilityProperty' }, { name: 'ComputedVerticalScrollBarVisibilityProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ComputedVerticalScrollBarVisibilityProperty' }, { name: 'ExtentHeightProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ExtentHeightProperty' }, { name: 'ExtentWidthProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ExtentWidthProperty' }, { name: 'HorizontalOffsetProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'HorizontalOffsetProperty' }, { name: 'HorizontalScrollBarVisibilityProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'HorizontalScrollBarVisibilityProperty' }, { name: 'ScrollChangedEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'ScrollChangedEvent' }, { name: 'ScrollableHeightProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ScrollableHeightProperty' }, { name: 'ScrollableWidthProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ScrollableWidthProperty' }, { name: 'VerticalOffsetProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'VerticalOffsetProperty' }, { name: 'VerticalScrollBarVisibilityProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'VerticalScrollBarVisibilityProperty' }, { name: 'ViewportHeightProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ViewportHeightProperty' }, { name: 'ViewportWidthProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ViewportWidthProperty' }, { name: 'ScrollChanged', type: 2, adder: { name: 'add_ScrollChanged', type: 8, sname: 'add_ScrollChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_ScrollChanged', type: 8, sname: 'remove_ScrollChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Controls_SelectionChangedEventArgs, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_RoutedEvent, Object, ss.IEnumerable, ss.IEnumerable] }, { name: 'InvokeEventHandler', type: 8, sname: 'InvokeEventHandler', returnType: Object, params: [Function, Object] }, { name: 'AddedItems', type: 16, returnType: ss.IEnumerable, getter: { name: 'get_AddedItems', type: 8, sname: 'get_AddedItems', returnType: ss.IEnumerable, params: [] }, setter: { name: 'set_AddedItems', type: 8, sname: 'set_AddedItems', returnType: Object, params: [ss.IEnumerable] } }, { name: 'RemovedItems', type: 16, returnType: ss.IEnumerable, getter: { name: 'get_RemovedItems', type: 8, sname: 'get_RemovedItems', returnType: ss.IEnumerable, params: [] }, setter: { name: 'set_RemovedItems', type: 8, sname: 'set_RemovedItems', returnType: Object, params: [ss.IEnumerable] } }] });
	ss.setMetadata($System_Windows_Controls_SelectionGroup$1, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Selection', type: 16, returnType: Object, getter: { name: 'get_Selection', type: 8, sname: 'get_Selection', returnType: Object, params: [] }, setter: { name: 'set_Selection', type: 8, sname: 'set_Selection', returnType: Object, params: [Object] } }, { name: 'selection', type: 4, returnType: Object, sname: 'selection' }, { name: 'SelectionChanged', type: 2, adder: { name: 'add_SelectionChanged', type: 8, sname: 'add_SelectionChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_SelectionChanged', type: 8, sname: 'remove_SelectionChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Controls_SelectionGroupScope$1, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GetSelectionGroup', type: 8, sname: 'GetSelectionGroup', returnType: ss.makeGenericType($System_Windows_Controls_ISelectionGroup$1, [Object]), params: [String] }] });
	ss.setMetadata($System_Windows_Controls_SpellCheck, { members: [{ name: 'GetIsEnabled', isStatic: true, type: 8, sname: 'GetIsEnabled', returnType: Boolean, params: [$System_Windows_DependencyObject] }, { name: 'SetIsEnabled', isStatic: true, type: 8, sname: 'SetIsEnabled', returnType: Object, params: [$System_Windows_DependencyObject, Boolean] }, { name: 'IsEnabledProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsEnabledProperty' }] });
	ss.setMetadata($System_Windows_Controls_StackPanel, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ArrangeOverride', type: 8, sname: 'ArrangeOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'MeasureOverride', type: 8, sname: 'MeasureOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'FlowDirection', type: 16, returnType: $System_Windows_Controls_FlowDirection, getter: { name: 'get_FlowDirection', type: 8, sname: 'get_FlowDirection', returnType: $System_Windows_Controls_FlowDirection, params: [] }, setter: { name: 'set_FlowDirection', type: 8, sname: 'set_FlowDirection', returnType: Object, params: [$System_Windows_Controls_FlowDirection] } }, { name: 'Orientation', type: 16, returnType: $System_Windows_Controls_Orientation, getter: { name: 'get_Orientation', type: 8, sname: 'get_Orientation', returnType: $System_Windows_Controls_Orientation, params: [] }, setter: { name: 'set_Orientation', type: 8, sname: 'set_Orientation', returnType: Object, params: [$System_Windows_Controls_Orientation] } }, { name: 'FlowDirectionProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'FlowDirectionProperty' }, { name: 'OrientationProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'OrientationProperty' }] });
	ss.setMetadata($System_Windows_Controls_TextBlock, { attr: [new $System_Windows_Markup_ContentPropertyAttribute('Text')], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ArrangeOverride', type: 8, sname: 'ArrangeOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'CreateContentRenderElementOverride', type: 8, sname: 'CreateContentRenderElementOverride', returnType: Object, params: [$System_Windows_Media_IRenderElementFactory] }, { name: 'MeasureOverride', type: 8, sname: 'MeasureOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'FontFamily', type: 16, returnType: $System_Windows_FontFamily, getter: { name: 'get_FontFamily', type: 8, sname: 'get_FontFamily', returnType: $System_Windows_FontFamily, params: [] }, setter: { name: 'set_FontFamily', type: 8, sname: 'set_FontFamily', returnType: Object, params: [$System_Windows_FontFamily] } }, { name: 'FontSize', type: 16, returnType: Number, getter: { name: 'get_FontSize', type: 8, sname: 'get_FontSize', returnType: Number, params: [] }, setter: { name: 'set_FontSize', type: 8, sname: 'set_FontSize', returnType: Object, params: [Number] } }, { name: 'FontStretch', type: 16, returnType: $System_Windows_FontStretch, getter: { name: 'get_FontStretch', type: 8, sname: 'get_FontStretch', returnType: $System_Windows_FontStretch, params: [] }, setter: { name: 'set_FontStretch', type: 8, sname: 'set_FontStretch', returnType: Object, params: [$System_Windows_FontStretch] } }, { name: 'FontStyle', type: 16, returnType: $System_Windows_FontStyle, getter: { name: 'get_FontStyle', type: 8, sname: 'get_FontStyle', returnType: $System_Windows_FontStyle, params: [] }, setter: { name: 'set_FontStyle', type: 8, sname: 'set_FontStyle', returnType: Object, params: [$System_Windows_FontStyle] } }, { name: 'FontWeight', type: 16, returnType: $System_Windows_FontWeight, getter: { name: 'get_FontWeight', type: 8, sname: 'get_FontWeight', returnType: $System_Windows_FontWeight, params: [] }, setter: { name: 'set_FontWeight', type: 8, sname: 'set_FontWeight', returnType: Object, params: [$System_Windows_FontWeight] } }, { name: 'Foreground', type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Foreground', type: 8, sname: 'get_Foreground', returnType: $System_Windows_Media_Brush, params: [] }, setter: { name: 'set_Foreground', type: 8, sname: 'set_Foreground', returnType: Object, params: [$System_Windows_Media_Brush] } }, { name: 'Text', type: 16, returnType: String, getter: { name: 'get_Text', type: 8, sname: 'get_Text', returnType: String, params: [] }, setter: { name: 'set_Text', type: 8, sname: 'set_Text', returnType: Object, params: [String] } }, { name: 'TextAlignment', type: 16, returnType: $System_Windows_Controls_TextAlignment, getter: { name: 'get_TextAlignment', type: 8, sname: 'get_TextAlignment', returnType: $System_Windows_Controls_TextAlignment, params: [] }, setter: { name: 'set_TextAlignment', type: 8, sname: 'set_TextAlignment', returnType: Object, params: [$System_Windows_Controls_TextAlignment] } }, { name: 'TextTrimming', type: 16, returnType: $System_Windows_TextTrimming, getter: { name: 'get_TextTrimming', type: 8, sname: 'get_TextTrimming', returnType: $System_Windows_TextTrimming, params: [] }, setter: { name: 'set_TextTrimming', type: 8, sname: 'set_TextTrimming', returnType: Object, params: [$System_Windows_TextTrimming] } }, { name: 'TextWrapping', type: 16, returnType: $System_Windows_TextWrapping, getter: { name: 'get_TextWrapping', type: 8, sname: 'get_TextWrapping', returnType: $System_Windows_TextWrapping, params: [] }, setter: { name: 'set_TextWrapping', type: 8, sname: 'set_TextWrapping', returnType: Object, params: [$System_Windows_TextWrapping] } }, { name: 'FontFamilyProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'FontFamilyProperty' }, { name: 'FontSizeProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'FontSizeProperty' }, { name: 'FontStretchProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'FontStretchProperty' }, { name: 'FontStyleProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'FontStyleProperty' }, { name: 'FontWeightProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'FontWeightProperty' }, { name: 'ForegroundProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ForegroundProperty' }, { name: 'TextAlignmentProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'TextAlignmentProperty' }, { name: 'TextProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'TextProperty' }, { name: 'TextTrimmingProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'TextTrimmingProperty' }, { name: 'TextWrappingProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'TextWrappingProperty' }] });
	ss.setMetadata($System_Windows_Controls_TextBox, { attr: [new $System_Windows_Markup_ContentPropertyAttribute('Text')], members: [{ name: '.cctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [] }, { name: 'Clear', type: 8, sname: 'Clear', returnType: Object, params: [] }, { name: 'GetCharacterIndexFromLineIndex', type: 8, sname: 'GetCharacterIndexFromLineIndex', returnType: ss.Int32, params: [ss.Int32] }, { name: 'GetLineIndexFromCharacterIndex', type: 8, sname: 'GetLineIndexFromCharacterIndex', returnType: ss.Int32, params: [ss.Int32] }, { name: 'GetLineLength', type: 8, sname: 'GetLineLength', returnType: ss.Int32, params: [ss.Int32] }, { name: 'GetLineText', type: 8, sname: 'GetLineText', returnType: String, params: [ss.Int32] }, { name: 'GetTextBoxContent', type: 8, sname: 'GetTextBoxContent', returnType: $System_Windows_FrameworkElement, params: [] }, { name: 'OnGotFocus', type: 8, sname: 'OnGotFocus', returnType: Object, params: [$System_Windows_RoutedEventArgs] }, { name: 'OnKeyDown', type: 8, sname: 'OnKeyDown', returnType: Object, params: [$System_Windows_Input_KeyEventArgs] }, { name: 'OnLostFocus', type: 8, sname: 'OnLostFocus', returnType: Object, params: [$System_Windows_RoutedEventArgs] }, { name: 'ScrollToLine', type: 8, sname: 'ScrollToLine', returnType: Object, params: [ss.Int32] }, { name: 'Select', type: 8, sname: 'Select', returnType: Object, params: [ss.Int32, ss.Int32] }, { name: 'CaretIndex', type: 16, returnType: ss.Int32, getter: { name: 'get_CaretIndex', type: 8, sname: 'get_CaretIndex', returnType: ss.Int32, params: [] }, setter: { name: 'set_CaretIndex', type: 8, sname: 'set_CaretIndex', returnType: Object, params: [ss.Int32] } }, { name: 'HorizontalScrollBarVisibility', type: 16, returnType: $System_Windows_Controls_ScrollBarVisibility, getter: { name: 'get_HorizontalScrollBarVisibility', type: 8, sname: 'get_HorizontalScrollBarVisibility', returnType: $System_Windows_Controls_ScrollBarVisibility, params: [] }, setter: { name: 'set_HorizontalScrollBarVisibility', type: 8, sname: 'set_HorizontalScrollBarVisibility', returnType: Object, params: [$System_Windows_Controls_ScrollBarVisibility] } }, { name: 'LineCount', type: 16, returnType: ss.Int32, getter: { name: 'get_LineCount', type: 8, sname: 'get_LineCount', returnType: ss.Int32, params: [] }, setter: { name: 'set_LineCount', type: 8, sname: 'set_LineCount', returnType: Object, params: [ss.Int32] } }, { name: 'MaxLength', type: 16, returnType: ss.Int32, getter: { name: 'get_MaxLength', type: 8, sname: 'get_MaxLength', returnType: ss.Int32, params: [] }, setter: { name: 'set_MaxLength', type: 8, sname: 'set_MaxLength', returnType: Object, params: [ss.Int32] } }, { name: 'SelectionLength', type: 16, returnType: ss.Int32, getter: { name: 'get_SelectionLength', type: 8, sname: 'get_SelectionLength', returnType: ss.Int32, params: [] }, setter: { name: 'set_SelectionLength', type: 8, sname: 'set_SelectionLength', returnType: Object, params: [ss.Int32] } }, { name: 'SelectionStart', type: 16, returnType: ss.Int32, getter: { name: 'get_SelectionStart', type: 8, sname: 'get_SelectionStart', returnType: ss.Int32, params: [] }, setter: { name: 'set_SelectionStart', type: 8, sname: 'set_SelectionStart', returnType: Object, params: [ss.Int32] } }, { name: 'Text', type: 16, returnType: String, getter: { name: 'get_Text', type: 8, sname: 'get_Text', returnType: String, params: [] }, setter: { name: 'set_Text', type: 8, sname: 'set_Text', returnType: Object, params: [String] } }, { name: 'TextAlignment', type: 16, returnType: $System_Windows_Controls_TextAlignment, getter: { name: 'get_TextAlignment', type: 8, sname: 'get_TextAlignment', returnType: $System_Windows_Controls_TextAlignment, params: [] }, setter: { name: 'set_TextAlignment', type: 8, sname: 'set_TextAlignment', returnType: Object, params: [$System_Windows_Controls_TextAlignment] } }, { name: 'TextWrapping', type: 16, returnType: $System_Windows_TextWrapping, getter: { name: 'get_TextWrapping', type: 8, sname: 'get_TextWrapping', returnType: $System_Windows_TextWrapping, params: [] }, setter: { name: 'set_TextWrapping', type: 8, sname: 'set_TextWrapping', returnType: Object, params: [$System_Windows_TextWrapping] } }, { name: 'VerticalScrollBarVisibility', type: 16, returnType: $System_Windows_Controls_ScrollBarVisibility, getter: { name: 'get_VerticalScrollBarVisibility', type: 8, sname: 'get_VerticalScrollBarVisibility', returnType: $System_Windows_Controls_ScrollBarVisibility, params: [] }, setter: { name: 'set_VerticalScrollBarVisibility', type: 8, sname: 'set_VerticalScrollBarVisibility', returnType: Object, params: [$System_Windows_Controls_ScrollBarVisibility] } }, { name: 'CaretIndexProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'CaretIndexProperty' }, { name: 'HorizontalScrollBarVisibilityProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'HorizontalScrollBarVisibilityProperty' }, { name: 'MaxLengthProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'MaxLengthProperty' }, { name: 'SelectionLengthProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'SelectionLengthProperty' }, { name: 'SelectionStartProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'SelectionStartProperty' }, { name: 'TextAlignmentProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'TextAlignmentProperty' }, { name: 'TextProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'TextProperty' }, { name: 'TextWrappingProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'TextWrappingProperty' }, { name: 'VerticalScrollBarVisibilityProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'VerticalScrollBarVisibilityProperty' }] });
	ss.setMetadata($System_Windows_Controls_TextChangedEventArgs, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_RoutedEvent, Object] }, { name: 'InvokeEventHandler', type: 8, sname: 'InvokeEventHandler', returnType: Object, params: [Function, Object] }] });
	ss.setMetadata($System_Windows_Controls_UIElementCollection, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_UIElement] }, { name: 'Add', type: 8, sname: 'add', returnType: Object, params: [$System_Windows_UIElement] }, { name: 'Clear', type: 8, sname: 'clear', returnType: Object, params: [] }, { name: 'Contains', type: 8, sname: 'contains', returnType: Boolean, params: [$System_Windows_UIElement] }, { name: 'CopyTo', type: 8, sname: 'CopyTo', returnType: Object, params: [Array, ss.Int32] }, { name: 'GetEnumerator', type: 8, sname: 'getEnumerator', returnType: ss.IEnumerator, params: [] }, { name: 'IndexOf', type: 8, sname: 'indexOf', returnType: ss.Int32, params: [$System_Windows_UIElement] }, { name: 'Insert', type: 8, sname: 'insert', returnType: Object, params: [ss.Int32, $System_Windows_UIElement] }, { name: 'Remove', type: 8, sname: 'remove', returnType: Boolean, params: [$System_Windows_UIElement] }, { name: 'RemoveAt', type: 8, sname: 'removeAt', returnType: Object, params: [ss.Int32] }, { name: 'Count', type: 16, returnType: ss.Int32, getter: { name: 'get_Count', type: 8, sname: 'get_count', returnType: ss.Int32, params: [] } }, { name: 'IsReadOnly', type: 16, returnType: Boolean, getter: { name: 'get_IsReadOnly', type: 8, sname: 'get_IsReadOnly', returnType: Boolean, params: [] } }, { name: 'Item', type: 16, returnType: $System_Windows_UIElement, params: [ss.Int32], getter: { name: 'get_Item', type: 8, sname: 'get_item', returnType: $System_Windows_UIElement, params: [ss.Int32] }, setter: { name: 'set_Item', type: 8, sname: 'set_item', returnType: Object, params: [ss.Int32, $System_Windows_UIElement] } }, { name: 'CollectionChanged', type: 2, adder: { name: 'add_CollectionChanged', type: 8, sname: 'add_CollectionChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_CollectionChanged', type: 8, sname: 'remove_CollectionChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Controls_UserControl, { members: [{ name: '.cctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [] }] });
	ss.setMetadata($System_Windows_Controls_WrapPanel, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ArrangeOverride', type: 8, sname: 'ArrangeOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'MeasureOverride', type: 8, sname: 'MeasureOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'Orientation', type: 16, returnType: $System_Windows_Controls_Orientation, getter: { name: 'get_Orientation', type: 8, sname: 'get_Orientation', returnType: $System_Windows_Controls_Orientation, params: [] }, setter: { name: 'set_Orientation', type: 8, sname: 'set_Orientation', returnType: Object, params: [$System_Windows_Controls_Orientation] } }, { name: 'OrientationProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'OrientationProperty' }] });
	ss.setMetadata($System_Windows_Controls_Primitives_ButtonBase, { attr: [new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.CommonStates, $System_Windows_VisualStates.NormalState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.CommonStates, $System_Windows_VisualStates.MouseOverState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.CommonStates, $System_Windows_VisualStates.PressedState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.CommonStates, $System_Windows_VisualStates.DisabledState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.FocusStates, $System_Windows_VisualStates.FocusedState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.FocusStates, $System_Windows_VisualStates.UnfocusedState)], members: [{ name: '.cctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [] }, { name: 'OnClick', type: 8, sname: 'OnClick', returnType: Object, params: [$System_Windows_RoutedEventArgs] }, { name: 'OnGotFocus', type: 8, sname: 'OnGotFocus', returnType: Object, params: [$System_Windows_RoutedEventArgs] }, { name: 'OnIsPressedChanged', type: 8, sname: 'OnIsPressedChanged', returnType: Object, params: [$System_Windows_DependencyPropertyChangedEventArgs] }, { name: 'OnKeyDown', type: 8, sname: 'OnKeyDown', returnType: Object, params: [$System_Windows_Input_KeyEventArgs] }, { name: 'OnKeyUp', type: 8, sname: 'OnKeyUp', returnType: Object, params: [$System_Windows_Input_KeyEventArgs] }, { name: 'OnLostFocus', type: 8, sname: 'OnLostFocus', returnType: Object, params: [$System_Windows_RoutedEventArgs] }, { name: 'OnMouseDown', type: 8, sname: 'OnMouseDown', returnType: Object, params: [$System_Windows_Input_MouseButtonEventArgs] }, { name: 'OnMouseMove', type: 8, sname: 'OnMouseMove', returnType: Object, params: [$System_Windows_Input_MouseEventArgs] }, { name: 'OnMouseUp', type: 8, sname: 'OnMouseUp', returnType: Object, params: [$System_Windows_Input_MouseButtonEventArgs] }, { name: 'OnPressEnded', type: 8, sname: 'OnPressEnded', returnType: Object, params: [] }, { name: 'OnPressStarted', type: 8, sname: 'OnPressStarted', returnType: Object, params: [] }, { name: 'RaiseClick', type: 8, sname: 'RaiseClick', returnType: Boolean, params: [] }, { name: 'UpdateVisualState', type: 8, sname: 'UpdateVisualState', returnType: Object, params: [Boolean] }, { name: 'ClickMode', type: 16, returnType: $System_Windows_Controls_Primitives_ClickMode, getter: { name: 'get_ClickMode', type: 8, sname: 'get_ClickMode', returnType: $System_Windows_Controls_Primitives_ClickMode, params: [] }, setter: { name: 'set_ClickMode', type: 8, sname: 'set_ClickMode', returnType: Object, params: [$System_Windows_Controls_Primitives_ClickMode] } }, { name: 'IsPressed', type: 16, returnType: Boolean, getter: { name: 'get_IsPressed', type: 8, sname: 'get_IsPressed', returnType: Boolean, params: [] }, setter: { name: 'set_IsPressed', type: 8, sname: 'set_IsPressed', returnType: Object, params: [Boolean] } }, { name: 'ClickEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'ClickEvent' }, { name: 'ClickModeProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ClickModeProperty' }, { name: 'IsPressedProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsPressedProperty' }, { name: 'Click', type: 2, adder: { name: 'add_Click', type: 8, sname: 'add_Click', returnType: Object, params: [Function] }, remover: { name: 'remove_Click', type: 8, sname: 'remove_Click', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Controls_Primitives_DragCompletedEventArgs, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_RoutedEvent, Object, Boolean] }, { name: 'InvokeEventHandler', type: 8, sname: 'InvokeEventHandler', returnType: Object, params: [Function, Object] }, { name: 'IsCanceled', type: 16, returnType: Boolean, getter: { name: 'get_IsCanceled', type: 8, sname: 'get_IsCanceled', returnType: Boolean, params: [] }, setter: { name: 'set_IsCanceled', type: 8, sname: 'set_IsCanceled', returnType: Object, params: [Boolean] } }] });
	ss.setMetadata($System_Windows_Controls_Primitives_DragDeltaEventArgs, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_RoutedEvent, Object, $System_Windows_Point] }, { name: 'InvokeEventHandler', type: 8, sname: 'InvokeEventHandler', returnType: Object, params: [Function, Object] }, { name: 'Delta', type: 16, returnType: $System_Windows_Point, getter: { name: 'get_Delta', type: 8, sname: 'get_Delta', returnType: $System_Windows_Point, params: [] }, setter: { name: 'set_Delta', type: 8, sname: 'set_Delta', returnType: Object, params: [$System_Windows_Point] } }] });
	ss.setMetadata($System_Windows_Controls_Primitives_DragStartedEventArgs, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_RoutedEvent, Object] }, { name: 'InvokeEventHandler', type: 8, sname: 'InvokeEventHandler', returnType: Object, params: [Function, Object] }] });
	ss.setMetadata($System_Windows_Controls_Primitives_IScrollInfo, { members: [{ name: 'CanHorizontallyScroll', type: 16, returnType: Boolean, getter: { name: 'get_CanHorizontallyScroll', type: 8, sname: 'get_CanHorizontallyScroll', returnType: Boolean, params: [] }, setter: { name: 'set_CanHorizontallyScroll', type: 8, sname: 'set_CanHorizontallyScroll', returnType: Object, params: [Boolean] } }, { name: 'CanVerticallyScroll', type: 16, returnType: Boolean, getter: { name: 'get_CanVerticallyScroll', type: 8, sname: 'get_CanVerticallyScroll', returnType: Boolean, params: [] }, setter: { name: 'set_CanVerticallyScroll', type: 8, sname: 'set_CanVerticallyScroll', returnType: Object, params: [Boolean] } }, { name: 'ExtentSize', type: 16, returnType: $System_Windows_Size, getter: { name: 'get_ExtentSize', type: 8, sname: 'get_ExtentSize', returnType: $System_Windows_Size, params: [] } }, { name: 'Offset', type: 16, returnType: $System_Windows_Point, getter: { name: 'get_Offset', type: 8, sname: 'get_Offset', returnType: $System_Windows_Point, params: [] }, setter: { name: 'set_Offset', type: 8, sname: 'set_Offset', returnType: Object, params: [$System_Windows_Point] } }, { name: 'ViewportSize', type: 16, returnType: $System_Windows_Size, getter: { name: 'get_ViewportSize', type: 8, sname: 'get_ViewportSize', returnType: $System_Windows_Size, params: [] } }] });
	ss.setMetadata($System_Windows_Controls_Primitives_Placement, { members: [{ name: 'GetPosition', isStatic: true, type: 8, sname: 'GetPosition', returnType: $System_Windows_Point, params: [$System_Windows_Controls_Primitives_PlacementMode, $System_Windows_Rect, $System_Windows_Rect, $System_Windows_Rect, $System_Windows_Point, $System_Windows_Size, $System_Windows_Rect] }] });
	ss.setMetadata($System_Windows_Controls_Primitives_Popup, { attr: [new $System_Windows_Markup_ContentPropertyAttribute('Child')], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'OnClosed', type: 8, sname: 'OnClosed', returnType: Object, params: [] }, { name: 'OnOpened', type: 8, sname: 'OnOpened', returnType: Object, params: [] }, { name: 'OnVisualAncestorChanged', type: 8, sname: 'OnVisualAncestorChanged', returnType: Object, params: [] }, { name: 'Child', type: 16, returnType: $System_Windows_UIElement, getter: { name: 'get_Child', type: 8, sname: 'get_Child', returnType: $System_Windows_UIElement, params: [] }, setter: { name: 'set_Child', type: 8, sname: 'set_Child', returnType: Object, params: [$System_Windows_UIElement] } }, { name: 'HorizontalOffset', type: 16, returnType: Number, getter: { name: 'get_HorizontalOffset', type: 8, sname: 'get_HorizontalOffset', returnType: Number, params: [] }, setter: { name: 'set_HorizontalOffset', type: 8, sname: 'set_HorizontalOffset', returnType: Object, params: [Number] } }, { name: 'IsOpen', type: 16, returnType: Boolean, getter: { name: 'get_IsOpen', type: 8, sname: 'get_IsOpen', returnType: Boolean, params: [] }, setter: { name: 'set_IsOpen', type: 8, sname: 'set_IsOpen', returnType: Object, params: [Boolean] } }, { name: 'Placement', type: 16, returnType: $System_Windows_Controls_Primitives_PlacementMode, getter: { name: 'get_Placement', type: 8, sname: 'get_Placement', returnType: $System_Windows_Controls_Primitives_PlacementMode, params: [] }, setter: { name: 'set_Placement', type: 8, sname: 'set_Placement', returnType: Object, params: [$System_Windows_Controls_Primitives_PlacementMode] } }, { name: 'PlacementRectangle', type: 16, returnType: $System_Windows_Rect, getter: { name: 'get_PlacementRectangle', type: 8, sname: 'get_PlacementRectangle', returnType: $System_Windows_Rect, params: [] }, setter: { name: 'set_PlacementRectangle', type: 8, sname: 'set_PlacementRectangle', returnType: Object, params: [$System_Windows_Rect] } }, { name: 'PlacementTarget', type: 16, returnType: $System_Windows_Media_Visual, getter: { name: 'get_PlacementTarget', type: 8, sname: 'get_PlacementTarget', returnType: $System_Windows_Media_Visual, params: [] }, setter: { name: 'set_PlacementTarget', type: 8, sname: 'set_PlacementTarget', returnType: Object, params: [$System_Windows_Media_Visual] } }, { name: 'StaysOpen', type: 16, returnType: Boolean, getter: { name: 'get_StaysOpen', type: 8, sname: 'get_StaysOpen', returnType: Boolean, params: [] }, setter: { name: 'set_StaysOpen', type: 8, sname: 'set_StaysOpen', returnType: Object, params: [Boolean] } }, { name: 'VerticalOffset', type: 16, returnType: Number, getter: { name: 'get_VerticalOffset', type: 8, sname: 'get_VerticalOffset', returnType: Number, params: [] }, setter: { name: 'set_VerticalOffset', type: 8, sname: 'set_VerticalOffset', returnType: Object, params: [Number] } }, { name: 'HorizontalOffsetProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'HorizontalOffsetProperty' }, { name: 'IsOpenProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsOpenProperty' }, { name: 'PlacementProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'PlacementProperty' }, { name: 'PlacementRectangleProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'PlacementRectangleProperty' }, { name: 'PlacementTargetProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'PlacementTargetProperty' }, { name: 'StaysOpenProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'StaysOpenProperty' }, { name: 'VerticalOffsetProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'VerticalOffsetProperty' }, { name: 'Closed', type: 2, adder: { name: 'add_Closed', type: 8, sname: 'add_Closed', returnType: Object, params: [Function] }, remover: { name: 'remove_Closed', type: 8, sname: 'remove_Closed', returnType: Object, params: [Function] } }, { name: 'Opened', type: 2, adder: { name: 'add_Opened', type: 8, sname: 'add_Opened', returnType: Object, params: [Function] }, remover: { name: 'remove_Opened', type: 8, sname: 'remove_Opened', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Controls_Primitives_RangeBase, { attr: [new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.CommonStates, $System_Windows_VisualStates.NormalState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.CommonStates, $System_Windows_VisualStates.MouseOverState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.CommonStates, $System_Windows_VisualStates.DisabledState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.FocusStates, $System_Windows_VisualStates.FocusedState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.FocusStates, $System_Windows_VisualStates.UnfocusedState)], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'OnMaximumChanged', type: 8, sname: 'OnMaximumChanged', returnType: Object, params: [$System_Windows_DependencyPropertyChangedEventArgs] }, { name: 'OnMinimumChanged', type: 8, sname: 'OnMinimumChanged', returnType: Object, params: [$System_Windows_DependencyPropertyChangedEventArgs] }, { name: 'OnValueChanged', type: 8, sname: 'OnValueChanged', returnType: Object, params: [$System_Windows_DependencyPropertyChangedEventArgs] }, { name: 'UpdateVisualState', type: 8, sname: 'UpdateVisualState', returnType: Object, params: [Boolean] }, { name: 'LargeChange', type: 16, returnType: Number, getter: { name: 'get_LargeChange', type: 8, sname: 'get_LargeChange', returnType: Number, params: [] }, setter: { name: 'set_LargeChange', type: 8, sname: 'set_LargeChange', returnType: Object, params: [Number] } }, { name: 'Maximum', type: 16, returnType: Number, getter: { name: 'get_Maximum', type: 8, sname: 'get_Maximum', returnType: Number, params: [] }, setter: { name: 'set_Maximum', type: 8, sname: 'set_Maximum', returnType: Object, params: [Number] } }, { name: 'Minimum', type: 16, returnType: Number, getter: { name: 'get_Minimum', type: 8, sname: 'get_Minimum', returnType: Number, params: [] }, setter: { name: 'set_Minimum', type: 8, sname: 'set_Minimum', returnType: Object, params: [Number] } }, { name: 'SmallChange', type: 16, returnType: Number, getter: { name: 'get_SmallChange', type: 8, sname: 'get_SmallChange', returnType: Number, params: [] }, setter: { name: 'set_SmallChange', type: 8, sname: 'set_SmallChange', returnType: Object, params: [Number] } }, { name: 'Value', type: 16, returnType: Number, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: Number, params: [] }, setter: { name: 'set_Value', type: 8, sname: 'set_Value', returnType: Object, params: [Number] } }, { name: 'LargeChangeProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'LargeChangeProperty' }, { name: 'MaximumProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'MaximumProperty' }, { name: 'MinimumProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'MinimumProperty' }, { name: 'SmallChangeProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'SmallChangeProperty' }, { name: 'ValueChangedEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'ValueChangedEvent' }, { name: 'ValueProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ValueProperty' }, { name: 'ValueChanged', type: 2, adder: { name: 'add_ValueChanged', type: 8, sname: 'add_ValueChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_ValueChanged', type: 8, sname: 'remove_ValueChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Controls_Primitives_RepeatButton, { members: [{ name: '.cctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [] }, { name: 'OnPressEnded', type: 8, sname: 'OnPressEnded', returnType: Object, params: [] }, { name: 'OnPressStarted', type: 8, sname: 'OnPressStarted', returnType: Object, params: [] }, { name: 'Delay', type: 16, returnType: ss.Int32, getter: { name: 'get_Delay', type: 8, sname: 'get_Delay', returnType: ss.Int32, params: [] }, setter: { name: 'set_Delay', type: 8, sname: 'set_Delay', returnType: Object, params: [ss.Int32] } }, { name: 'Interval', type: 16, returnType: ss.Int32, getter: { name: 'get_Interval', type: 8, sname: 'get_Interval', returnType: ss.Int32, params: [] }, setter: { name: 'set_Interval', type: 8, sname: 'set_Interval', returnType: Object, params: [ss.Int32] } }, { name: 'DelayProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'DelayProperty' }, { name: 'IntervalProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IntervalProperty' }] });
	ss.setMetadata($System_Windows_Controls_Primitives_ScrollBar, { attr: [new $System_Windows_TemplatePartAttribute('PART_Track', $System_Windows_Controls_Primitives_Track), new $System_Windows_TemplatePartAttribute('PART_DecreaseButton', $System_Windows_Controls_Primitives_ButtonBase), new $System_Windows_TemplatePartAttribute('PART_IncreaseButton', $System_Windows_Controls_Primitives_ButtonBase)], members: [{ name: '.cctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [] }, { name: 'OnApplyTemplate', type: 8, sname: 'OnApplyTemplate', returnType: Object, params: [] }, { name: 'Orientation', type: 16, returnType: $System_Windows_Controls_Orientation, getter: { name: 'get_Orientation', type: 8, sname: 'get_Orientation', returnType: $System_Windows_Controls_Orientation, params: [] }, setter: { name: 'set_Orientation', type: 8, sname: 'set_Orientation', returnType: Object, params: [$System_Windows_Controls_Orientation] } }, { name: 'ViewportSize', type: 16, returnType: Number, getter: { name: 'get_ViewportSize', type: 8, sname: 'get_ViewportSize', returnType: Number, params: [] }, setter: { name: 'set_ViewportSize', type: 8, sname: 'set_ViewportSize', returnType: Object, params: [Number] } }, { name: 'OrientationProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'OrientationProperty' }, { name: 'ScrollEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'ScrollEvent' }, { name: 'ViewportSizeProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ViewportSizeProperty' }, { name: 'Scroll', type: 2, adder: { name: 'add_Scroll', type: 8, sname: 'add_Scroll', returnType: Object, params: [Function] }, remover: { name: 'remove_Scroll', type: 8, sname: 'remove_Scroll', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Controls_Primitives_ScrollInfoExtensions, { members: [{ name: 'GetScrollableSize', isStatic: true, type: 8, sname: 'GetScrollableSize', returnType: $System_Windows_Size, params: [$System_Windows_Controls_Primitives_IScrollInfo] }, { name: 'LineDown', isStatic: true, type: 8, sname: 'LineDown', returnType: Object, params: [$System_Windows_Controls_Primitives_IScrollInfo] }, { name: 'LineLeft', isStatic: true, type: 8, sname: 'LineLeft', returnType: Object, params: [$System_Windows_Controls_Primitives_IScrollInfo] }, { name: 'LineRight', isStatic: true, type: 8, sname: 'LineRight', returnType: Object, params: [$System_Windows_Controls_Primitives_IScrollInfo] }, { name: 'LineUp', isStatic: true, type: 8, sname: 'LineUp', returnType: Object, params: [$System_Windows_Controls_Primitives_IScrollInfo] }, { name: 'MouseWheelDown', isStatic: true, type: 8, sname: 'MouseWheelDown', returnType: Object, params: [$System_Windows_Controls_Primitives_IScrollInfo] }, { name: 'MouseWheelLeft', isStatic: true, type: 8, sname: 'MouseWheelLeft', returnType: Object, params: [$System_Windows_Controls_Primitives_IScrollInfo] }, { name: 'MouseWheelRight', isStatic: true, type: 8, sname: 'MouseWheelRight', returnType: Object, params: [$System_Windows_Controls_Primitives_IScrollInfo] }, { name: 'MouseWheelUp', isStatic: true, type: 8, sname: 'MouseWheelUp', returnType: Object, params: [$System_Windows_Controls_Primitives_IScrollInfo] }, { name: 'PageDown', isStatic: true, type: 8, sname: 'PageDown', returnType: Object, params: [$System_Windows_Controls_Primitives_IScrollInfo] }, { name: 'PageLeft', isStatic: true, type: 8, sname: 'PageLeft', returnType: Object, params: [$System_Windows_Controls_Primitives_IScrollInfo] }, { name: 'PageRight', isStatic: true, type: 8, sname: 'PageRight', returnType: Object, params: [$System_Windows_Controls_Primitives_IScrollInfo] }, { name: 'PageUp', isStatic: true, type: 8, sname: 'PageUp', returnType: Object, params: [$System_Windows_Controls_Primitives_IScrollInfo] }, { name: 'ScrollToEnd', isStatic: true, type: 8, sname: 'ScrollToEnd', returnType: Object, params: [$System_Windows_Controls_Primitives_IScrollInfo] }, { name: 'ScrollToHome', isStatic: true, type: 8, sname: 'ScrollToHome', returnType: Object, params: [$System_Windows_Controls_Primitives_IScrollInfo] }, { name: 'ScrollToHorizontalOffset', isStatic: true, type: 8, sname: 'ScrollToHorizontalOffset', returnType: Object, params: [$System_Windows_Controls_Primitives_IScrollInfo, Number] }, { name: 'ScrollToVerticalOffset', isStatic: true, type: 8, sname: 'ScrollToVerticalOffset', returnType: Object, params: [$System_Windows_Controls_Primitives_IScrollInfo, Number] }, { name: 'MouseWheelDelta', isStatic: true, type: 4, returnType: Number, sname: 'MouseWheelDelta' }, { name: 'ScrollLineDelta', isStatic: true, type: 4, returnType: Number, sname: 'ScrollLineDelta' }] });
	ss.setMetadata($System_Windows_Controls_Primitives_Selector, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GetIsSelectionActive', isStatic: true, type: 8, sname: 'GetIsSelectionActive', returnType: Boolean, params: [$System_Windows_DependencyObject] }, { name: 'OnGotFocus', type: 8, sname: 'OnGotFocus', returnType: Object, params: [$System_Windows_RoutedEventArgs] }, { name: 'OnLostFocus', type: 8, sname: 'OnLostFocus', returnType: Object, params: [$System_Windows_RoutedEventArgs] }, { name: 'IsSelected', type: 16, returnType: Boolean, getter: { name: 'get_IsSelected', type: 8, sname: 'get_IsSelected', returnType: Boolean, params: [] }, setter: { name: 'set_IsSelected', type: 8, sname: 'set_IsSelected', returnType: Object, params: [Boolean] } }, { name: 'IsSynchronizedWithCurrentItem', type: 16, returnType: ss.makeGenericType(ss.Nullable$1, [Boolean]), getter: { name: 'get_IsSynchronizedWithCurrentItem', type: 8, sname: 'get_IsSynchronizedWithCurrentItem', returnType: ss.makeGenericType(ss.Nullable$1, [Boolean]), params: [] }, setter: { name: 'set_IsSynchronizedWithCurrentItem', type: 8, sname: 'set_IsSynchronizedWithCurrentItem', returnType: Object, params: [ss.makeGenericType(ss.Nullable$1, [Boolean])] } }, { name: 'SelectedIndex', type: 16, returnType: ss.Int32, getter: { name: 'get_SelectedIndex', type: 8, sname: 'get_SelectedIndex', returnType: ss.Int32, params: [] }, setter: { name: 'set_SelectedIndex', type: 8, sname: 'set_SelectedIndex', returnType: Object, params: [ss.Int32] } }, { name: 'SelectedItem', type: 16, returnType: Object, getter: { name: 'get_SelectedItem', type: 8, sname: 'get_SelectedItem', returnType: Object, params: [] }, setter: { name: 'set_SelectedItem', type: 8, sname: 'set_SelectedItem', returnType: Object, params: [Object] } }, { name: 'SelectedValue', type: 16, returnType: Object, getter: { name: 'get_SelectedValue', type: 8, sname: 'get_SelectedValue', returnType: Object, params: [] }, setter: { name: 'set_SelectedValue', type: 8, sname: 'set_SelectedValue', returnType: Object, params: [Object] } }, { name: 'SelectedValuePath', type: 16, returnType: String, getter: { name: 'get_SelectedValuePath', type: 8, sname: 'get_SelectedValuePath', returnType: String, params: [] }, setter: { name: 'set_SelectedValuePath', type: 8, sname: 'set_SelectedValuePath', returnType: Object, params: [String] } }, { name: 'IsSelectedProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsSelectedProperty' }, { name: 'IsSelectionActiveProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsSelectionActiveProperty' }, { name: 'IsSynchronizedWithCurrentItemProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsSynchronizedWithCurrentItemProperty' }, { name: 'SelectedEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'SelectedEvent' }, { name: 'SelectedIndexProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'SelectedIndexProperty' }, { name: 'SelectedItemProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'SelectedItemProperty' }, { name: 'SelectedValuePathProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'SelectedValuePathProperty' }, { name: 'SelectedValueProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'SelectedValueProperty' }, { name: 'SelectionChangedEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'SelectionChangedEvent' }, { name: 'UnselectedEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'UnselectedEvent' }, { name: 'Selected', type: 2, adder: { name: 'add_Selected', type: 8, sname: 'add_Selected', returnType: Object, params: [Function] }, remover: { name: 'remove_Selected', type: 8, sname: 'remove_Selected', returnType: Object, params: [Function] } }, { name: 'SelectionChanged', type: 2, adder: { name: 'add_SelectionChanged', type: 8, sname: 'add_SelectionChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_SelectionChanged', type: 8, sname: 'remove_SelectionChanged', returnType: Object, params: [Function] } }, { name: 'Unselected', type: 2, adder: { name: 'add_Unselected', type: 8, sname: 'add_Unselected', returnType: Object, params: [Function] }, remover: { name: 'remove_Unselected', type: 8, sname: 'remove_Unselected', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Controls_Primitives_TextBoxBase, { attr: [new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.CommonStates, $System_Windows_VisualStates.NormalState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.CommonStates, $System_Windows_VisualStates.MouseOverState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.CommonStates, $System_Windows_VisualStates.DisabledState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.FocusStates, $System_Windows_VisualStates.FocusedState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.FocusStates, $System_Windows_VisualStates.UnfocusedState), new $System_Windows_TemplatePartAttribute('PART_ContentHost', $System_Windows_Controls_Decorator)], members: [{ name: '.cctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [] }, { name: 'GetTextBoxContent', type: 8, sname: 'GetTextBoxContent', returnType: $System_Windows_FrameworkElement, params: [] }, { name: 'OnApplyTemplate', type: 8, sname: 'OnApplyTemplate', returnType: Object, params: [] }, { name: 'OnMouseDown', type: 8, sname: 'OnMouseDown', returnType: Object, params: [$System_Windows_Input_MouseButtonEventArgs] }, { name: 'UpdateVisualState', type: 8, sname: 'UpdateVisualState', returnType: Object, params: [Boolean] }, { name: 'AcceptsReturn', type: 16, returnType: Boolean, getter: { name: 'get_AcceptsReturn', type: 8, sname: 'get_AcceptsReturn', returnType: Boolean, params: [] }, setter: { name: 'set_AcceptsReturn', type: 8, sname: 'set_AcceptsReturn', returnType: Object, params: [Boolean] } }, { name: 'AcceptsTab', type: 16, returnType: Boolean, getter: { name: 'get_AcceptsTab', type: 8, sname: 'get_AcceptsTab', returnType: Boolean, params: [] }, setter: { name: 'set_AcceptsTab', type: 8, sname: 'set_AcceptsTab', returnType: Object, params: [Boolean] } }, { name: 'ContentHost', type: 16, returnType: $System_Windows_Controls_Decorator, getter: { name: 'get_ContentHost', type: 8, sname: 'get_ContentHost', returnType: $System_Windows_Controls_Decorator, params: [] }, setter: { name: 'set_ContentHost', type: 8, sname: 'set_ContentHost', returnType: Object, params: [$System_Windows_Controls_Decorator] } }, { name: 'IsReadOnly', type: 16, returnType: Boolean, getter: { name: 'get_IsReadOnly', type: 8, sname: 'get_IsReadOnly', returnType: Boolean, params: [] }, setter: { name: 'set_IsReadOnly', type: 8, sname: 'set_IsReadOnly', returnType: Object, params: [Boolean] } }, { name: 'AcceptsReturnProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'AcceptsReturnProperty' }, { name: 'AcceptsTabProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'AcceptsTabProperty' }, { name: 'IsReadOnlyProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsReadOnlyProperty' }, { name: 'SelectionChangedEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'SelectionChangedEvent' }, { name: 'TextChangedEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'TextChangedEvent' }, { name: 'SelectionChanged', type: 2, adder: { name: 'add_SelectionChanged', type: 8, sname: 'add_SelectionChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_SelectionChanged', type: 8, sname: 'remove_SelectionChanged', returnType: Object, params: [Function] } }, { name: 'TextChanged', type: 2, adder: { name: 'add_TextChanged', type: 8, sname: 'add_TextChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_TextChanged', type: 8, sname: 'remove_TextChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Controls_Primitives_Thumb, { attr: [new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.CommonStates, $System_Windows_VisualStates.NormalState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.CommonStates, $System_Windows_VisualStates.MouseOverState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.CommonStates, $System_Windows_VisualStates.PressedState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.CommonStates, $System_Windows_VisualStates.DisabledState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.FocusStates, $System_Windows_VisualStates.FocusedState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.FocusStates, $System_Windows_VisualStates.UnfocusedState)], members: [{ name: '.cctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [] }, { name: 'OnMouseDown', type: 8, sname: 'OnMouseDown', returnType: Object, params: [$System_Windows_Input_MouseButtonEventArgs] }, { name: 'OnMouseMove', type: 8, sname: 'OnMouseMove', returnType: Object, params: [$System_Windows_Input_MouseEventArgs] }, { name: 'OnMouseUp', type: 8, sname: 'OnMouseUp', returnType: Object, params: [$System_Windows_Input_MouseButtonEventArgs] }, { name: 'UpdateVisualState', type: 8, sname: 'UpdateVisualState', returnType: Object, params: [Boolean] }, { name: 'IsDragging', type: 16, returnType: Boolean, getter: { name: 'get_IsDragging', type: 8, sname: 'get_IsDragging', returnType: Boolean, params: [] }, setter: { name: 'set_IsDragging', type: 8, sname: 'set_IsDragging', returnType: Object, params: [Boolean] } }, { name: 'DragCompletedEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'DragCompletedEvent' }, { name: 'DragDeltaEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'DragDeltaEvent' }, { name: 'DragStartedEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'DragStartedEvent' }, { name: 'IsDraggingProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsDraggingProperty' }, { name: 'DragCompleted', type: 2, adder: { name: 'add_DragCompleted', type: 8, sname: 'add_DragCompleted', returnType: Object, params: [Function] }, remover: { name: 'remove_DragCompleted', type: 8, sname: 'remove_DragCompleted', returnType: Object, params: [Function] } }, { name: 'DragDelta', type: 2, adder: { name: 'add_DragDelta', type: 8, sname: 'add_DragDelta', returnType: Object, params: [Function] }, remover: { name: 'remove_DragDelta', type: 8, sname: 'remove_DragDelta', returnType: Object, params: [Function] } }, { name: 'DragStarted', type: 2, adder: { name: 'add_DragStarted', type: 8, sname: 'add_DragStarted', returnType: Object, params: [Function] }, remover: { name: 'remove_DragStarted', type: 8, sname: 'remove_DragStarted', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Controls_Primitives_ToggleButton, { attr: [new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.CheckStates, $System_Windows_VisualStates.CheckedState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.CheckStates, $System_Windows_VisualStates.UncheckedState), new $System_Windows_TemplateVisualStateAttribute($System_Windows_VisualStates.CheckStates, $System_Windows_VisualStates.IndeterminateState)], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GetToggledState', isStatic: true, type: 8, sname: 'GetToggledState', returnType: ss.makeGenericType(ss.Nullable$1, [Boolean]), params: [ss.makeGenericType(ss.Nullable$1, [Boolean]), Boolean] }, { name: 'OnClick', type: 8, sname: 'OnClick', returnType: Object, params: [$System_Windows_RoutedEventArgs] }, { name: 'OnIsCheckedChanged', type: 8, sname: 'OnIsCheckedChanged', returnType: Object, params: [$System_Windows_DependencyPropertyChangedEventArgs] }, { name: 'ToggleState', type: 8, sname: 'ToggleState', returnType: Object, params: [] }, { name: 'UpdateVisualState', type: 8, sname: 'UpdateVisualState', returnType: Object, params: [Boolean] }, { name: 'CheckOnClick', type: 16, returnType: Boolean, getter: { name: 'get_CheckOnClick', type: 8, sname: 'get_CheckOnClick', returnType: Boolean, params: [] }, setter: { name: 'set_CheckOnClick', type: 8, sname: 'set_CheckOnClick', returnType: Object, params: [Boolean] } }, { name: 'IsChecked', type: 16, returnType: ss.makeGenericType(ss.Nullable$1, [Boolean]), getter: { name: 'get_IsChecked', type: 8, sname: 'get_IsChecked', returnType: ss.makeGenericType(ss.Nullable$1, [Boolean]), params: [] }, setter: { name: 'set_IsChecked', type: 8, sname: 'set_IsChecked', returnType: Object, params: [ss.makeGenericType(ss.Nullable$1, [Boolean])] } }, { name: 'IsThreeState', type: 16, returnType: Boolean, getter: { name: 'get_IsThreeState', type: 8, sname: 'get_IsThreeState', returnType: Boolean, params: [] }, setter: { name: 'set_IsThreeState', type: 8, sname: 'set_IsThreeState', returnType: Object, params: [Boolean] } }, { name: 'CheckOnClickProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'CheckOnClickProperty' }, { name: 'CheckedEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'CheckedEvent' }, { name: 'IndeterminateEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'IndeterminateEvent' }, { name: 'IsCheckedProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsCheckedProperty' }, { name: 'IsThreeStateProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsThreeStateProperty' }, { name: 'UncheckedEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'UncheckedEvent' }, { name: 'Checked', type: 2, adder: { name: 'add_Checked', type: 8, sname: 'add_Checked', returnType: Object, params: [Function] }, remover: { name: 'remove_Checked', type: 8, sname: 'remove_Checked', returnType: Object, params: [Function] } }, { name: 'Indeterminate', type: 2, adder: { name: 'add_Indeterminate', type: 8, sname: 'add_Indeterminate', returnType: Object, params: [Function] }, remover: { name: 'remove_Indeterminate', type: 8, sname: 'remove_Indeterminate', returnType: Object, params: [Function] } }, { name: 'Unchecked', type: 2, adder: { name: 'add_Unchecked', type: 8, sname: 'add_Unchecked', returnType: Object, params: [Function] }, remover: { name: 'remove_Unchecked', type: 8, sname: 'remove_Unchecked', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Controls_Primitives_Track, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ArrangeOverride', type: 8, sname: 'ArrangeOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'MeasureOverride', type: 8, sname: 'MeasureOverride', returnType: $System_Windows_Size, params: [$System_Windows_Size] }, { name: 'DecreaseRepeatButton', type: 16, returnType: $System_Windows_Controls_Primitives_RepeatButton, getter: { name: 'get_DecreaseRepeatButton', type: 8, sname: 'get_DecreaseRepeatButton', returnType: $System_Windows_Controls_Primitives_RepeatButton, params: [] }, setter: { name: 'set_DecreaseRepeatButton', type: 8, sname: 'set_DecreaseRepeatButton', returnType: Object, params: [$System_Windows_Controls_Primitives_RepeatButton] } }, { name: 'IncreaseRepeatButton', type: 16, returnType: $System_Windows_Controls_Primitives_RepeatButton, getter: { name: 'get_IncreaseRepeatButton', type: 8, sname: 'get_IncreaseRepeatButton', returnType: $System_Windows_Controls_Primitives_RepeatButton, params: [] }, setter: { name: 'set_IncreaseRepeatButton', type: 8, sname: 'set_IncreaseRepeatButton', returnType: Object, params: [$System_Windows_Controls_Primitives_RepeatButton] } }, { name: 'Maximum', type: 16, returnType: Number, getter: { name: 'get_Maximum', type: 8, sname: 'get_Maximum', returnType: Number, params: [] }, setter: { name: 'set_Maximum', type: 8, sname: 'set_Maximum', returnType: Object, params: [Number] } }, { name: 'Minimum', type: 16, returnType: Number, getter: { name: 'get_Minimum', type: 8, sname: 'get_Minimum', returnType: Number, params: [] }, setter: { name: 'set_Minimum', type: 8, sname: 'set_Minimum', returnType: Object, params: [Number] } }, { name: 'Orientation', type: 16, returnType: $System_Windows_Controls_Orientation, getter: { name: 'get_Orientation', type: 8, sname: 'get_Orientation', returnType: $System_Windows_Controls_Orientation, params: [] }, setter: { name: 'set_Orientation', type: 8, sname: 'set_Orientation', returnType: Object, params: [$System_Windows_Controls_Orientation] } }, { name: 'Thumb', type: 16, returnType: $System_Windows_Controls_Primitives_Thumb, getter: { name: 'get_Thumb', type: 8, sname: 'get_Thumb', returnType: $System_Windows_Controls_Primitives_Thumb, params: [] }, setter: { name: 'set_Thumb', type: 8, sname: 'set_Thumb', returnType: Object, params: [$System_Windows_Controls_Primitives_Thumb] } }, { name: 'ThumbMinLength', type: 16, returnType: Number, getter: { name: 'get_ThumbMinLength', type: 8, sname: 'get_ThumbMinLength', returnType: Number, params: [] }, setter: { name: 'set_ThumbMinLength', type: 8, sname: 'set_ThumbMinLength', returnType: Object, params: [Number] } }, { name: 'Value', type: 16, returnType: Number, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: Number, params: [] }, setter: { name: 'set_Value', type: 8, sname: 'set_Value', returnType: Object, params: [Number] } }, { name: 'ViewportSize', type: 16, returnType: Number, getter: { name: 'get_ViewportSize', type: 8, sname: 'get_ViewportSize', returnType: Number, params: [] }, setter: { name: 'set_ViewportSize', type: 8, sname: 'set_ViewportSize', returnType: Object, params: [Number] } }, { name: 'MaximumProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'MaximumProperty' }, { name: 'MinimumProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'MinimumProperty' }, { name: 'OrientationProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'OrientationProperty' }, { name: 'ValueProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ValueProperty' }, { name: 'ViewportSizeProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ViewportSizeProperty' }] });
	ss.setMetadata($System_Windows_Data_Binding, { attr: [new $System_Windows_Markup_MarkupExtensionParameterAttribute('Path', 0)], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'CreateExpression', type: 8, sname: 'CreateExpression', returnType: $System_Windows_IExpression, params: [$System_Windows_DependencyObject, $System_Windows_DependencyProperty] }, { name: 'ProvideValue', type: 8, sname: 'ProvideValue', returnType: Object, params: [$System_Windows_Markup_InitializeContext] }, { name: 'Converter', type: 16, returnType: $System_Windows_Data_IValueConverter, getter: { name: 'get_Converter', type: 8, sname: 'get_Converter', returnType: $System_Windows_Data_IValueConverter, params: [] }, setter: { name: 'set_Converter', type: 8, sname: 'set_Converter', returnType: Object, params: [$System_Windows_Data_IValueConverter] } }, { name: 'ConverterParameter', type: 16, returnType: Object, getter: { name: 'get_ConverterParameter', type: 8, sname: 'get_ConverterParameter', returnType: Object, params: [] }, setter: { name: 'set_ConverterParameter', type: 8, sname: 'set_ConverterParameter', returnType: Object, params: [Object] } }, { name: 'ElementName', type: 16, returnType: String, getter: { name: 'get_ElementName', type: 8, sname: 'get_ElementName', returnType: String, params: [] }, setter: { name: 'set_ElementName', type: 8, sname: 'set_ElementName', returnType: Object, params: [String] } }, { name: 'FallbackValue', type: 16, returnType: Object, getter: { name: 'get_FallbackValue', type: 8, sname: 'get_FallbackValue', returnType: Object, params: [] }, setter: { name: 'set_FallbackValue', type: 8, sname: 'set_FallbackValue', returnType: Object, params: [Object] } }, { name: 'Mode', type: 16, returnType: $System_Windows_Data_BindingMode, getter: { name: 'get_Mode', type: 8, sname: 'get_Mode', returnType: $System_Windows_Data_BindingMode, params: [] }, setter: { name: 'set_Mode', type: 8, sname: 'set_Mode', returnType: Object, params: [$System_Windows_Data_BindingMode] } }, { name: 'Path', type: 16, returnType: $System_Windows_PropertyPath, getter: { name: 'get_Path', type: 8, sname: 'get_Path', returnType: $System_Windows_PropertyPath, params: [] }, setter: { name: 'set_Path', type: 8, sname: 'set_Path', returnType: Object, params: [$System_Windows_PropertyPath] } }, { name: 'RelativeSource', type: 16, returnType: $System_Windows_Data_RelativeSource, getter: { name: 'get_RelativeSource', type: 8, sname: 'get_RelativeSource', returnType: $System_Windows_Data_RelativeSource, params: [] }, setter: { name: 'set_RelativeSource', type: 8, sname: 'set_RelativeSource', returnType: Object, params: [$System_Windows_Data_RelativeSource] } }, { name: 'Source', type: 16, returnType: Object, getter: { name: 'get_Source', type: 8, sname: 'get_Source', returnType: Object, params: [] }, setter: { name: 'set_Source', type: 8, sname: 'set_Source', returnType: Object, params: [Object] } }, { name: 'StringFormat', type: 16, returnType: String, getter: { name: 'get_StringFormat', type: 8, sname: 'get_StringFormat', returnType: String, params: [] }, setter: { name: 'set_StringFormat', type: 8, sname: 'set_StringFormat', returnType: Object, params: [String] } }, { name: 'TargetNullValue', type: 16, returnType: Object, getter: { name: 'get_TargetNullValue', type: 8, sname: 'get_TargetNullValue', returnType: Object, params: [] }, setter: { name: 'set_TargetNullValue', type: 8, sname: 'set_TargetNullValue', returnType: Object, params: [Object] } }, { name: 'UpdateSourceTrigger', type: 16, returnType: $System_Windows_Data_UpdateSourceTrigger, getter: { name: 'get_UpdateSourceTrigger', type: 8, sname: 'get_UpdateSourceTrigger', returnType: $System_Windows_Data_UpdateSourceTrigger, params: [] }, setter: { name: 'set_UpdateSourceTrigger', type: 8, sname: 'set_UpdateSourceTrigger', returnType: Object, params: [$System_Windows_Data_UpdateSourceTrigger] } }] });
	ss.setMetadata($System_Windows_Data_BindingExpression, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_DependencyObject, $System_Windows_DependencyProperty, $System_Windows_PropertyPath, Object, $System_Windows_Data_RelativeSource, String, $System_Windows_Data_BindingMode, $System_Windows_Data_UpdateSourceTrigger, $System_Windows_Data_IValueConverter, Object, Object, Object] }, { name: 'Dispose', type: 8, sname: 'dispose', returnType: Object, params: [] }, { name: 'SetValue', type: 8, sname: 'SetValue', returnType: Boolean, params: [Object] }, { name: 'UpdateSource', type: 8, sname: 'UpdateSource', returnType: Object, params: [] }, { name: 'UpdateTarget', type: 8, sname: 'UpdateTarget', returnType: Object, params: [] }, { name: 'Converter', type: 16, returnType: $System_Windows_Data_IValueConverter, getter: { name: 'get_Converter', type: 8, sname: 'get_Converter', returnType: $System_Windows_Data_IValueConverter, params: [] }, setter: { name: 'set_Converter', type: 8, sname: 'set_Converter', returnType: Object, params: [$System_Windows_Data_IValueConverter] } }, { name: 'ConverterParameter', type: 16, returnType: Object, getter: { name: 'get_ConverterParameter', type: 8, sname: 'get_ConverterParameter', returnType: Object, params: [] }, setter: { name: 'set_ConverterParameter', type: 8, sname: 'set_ConverterParameter', returnType: Object, params: [Object] } }, { name: 'ElementName', type: 16, returnType: String, getter: { name: 'get_ElementName', type: 8, sname: 'get_ElementName', returnType: String, params: [] }, setter: { name: 'set_ElementName', type: 8, sname: 'set_ElementName', returnType: Object, params: [String] } }, { name: 'FallbackValue', type: 16, returnType: Object, getter: { name: 'get_FallbackValue', type: 8, sname: 'get_FallbackValue', returnType: Object, params: [] }, setter: { name: 'set_FallbackValue', type: 8, sname: 'set_FallbackValue', returnType: Object, params: [Object] } }, { name: 'Mode', type: 16, returnType: $System_Windows_Data_BindingMode, getter: { name: 'get_Mode', type: 8, sname: 'get_Mode', returnType: $System_Windows_Data_BindingMode, params: [] }, setter: { name: 'set_Mode', type: 8, sname: 'set_Mode', returnType: Object, params: [$System_Windows_Data_BindingMode] } }, { name: 'Path', type: 16, returnType: $System_Windows_PropertyPath, getter: { name: 'get_Path', type: 8, sname: 'get_Path', returnType: $System_Windows_PropertyPath, params: [] }, setter: { name: 'set_Path', type: 8, sname: 'set_Path', returnType: Object, params: [$System_Windows_PropertyPath] } }, { name: 'RelativeSource', type: 16, returnType: $System_Windows_Data_RelativeSource, getter: { name: 'get_RelativeSource', type: 8, sname: 'get_RelativeSource', returnType: $System_Windows_Data_RelativeSource, params: [] }, setter: { name: 'set_RelativeSource', type: 8, sname: 'set_RelativeSource', returnType: Object, params: [$System_Windows_Data_RelativeSource] } }, { name: 'Source', type: 16, returnType: Object, getter: { name: 'get_Source', type: 8, sname: 'get_Source', returnType: Object, params: [] }, setter: { name: 'set_Source', type: 8, sname: 'set_Source', returnType: Object, params: [Object] } }, { name: 'Status', type: 16, returnType: $System_Windows_Data_BindingStatus, getter: { name: 'get_Status', type: 8, sname: 'get_Status', returnType: $System_Windows_Data_BindingStatus, params: [] }, setter: { name: 'set_Status', type: 8, sname: 'set_Status', returnType: Object, params: [$System_Windows_Data_BindingStatus] } }, { name: 'Target', type: 16, returnType: $System_Windows_DependencyObject, getter: { name: 'get_Target', type: 8, sname: 'get_Target', returnType: $System_Windows_DependencyObject, params: [] }, setter: { name: 'set_Target', type: 8, sname: 'set_Target', returnType: Object, params: [$System_Windows_DependencyObject] } }, { name: 'TargetNullValue', type: 16, returnType: Object, getter: { name: 'get_TargetNullValue', type: 8, sname: 'get_TargetNullValue', returnType: Object, params: [] }, setter: { name: 'set_TargetNullValue', type: 8, sname: 'set_TargetNullValue', returnType: Object, params: [Object] } }, { name: 'TargetProperty', type: 16, returnType: $System_Windows_DependencyProperty, getter: { name: 'get_TargetProperty', type: 8, sname: 'get_TargetProperty', returnType: $System_Windows_DependencyProperty, params: [] }, setter: { name: 'set_TargetProperty', type: 8, sname: 'set_TargetProperty', returnType: Object, params: [$System_Windows_DependencyProperty] } }, { name: 'UpdateSourceTrigger', type: 16, returnType: $System_Windows_Data_UpdateSourceTrigger, getter: { name: 'get_UpdateSourceTrigger', type: 8, sname: 'get_UpdateSourceTrigger', returnType: $System_Windows_Data_UpdateSourceTrigger, params: [] }, setter: { name: 'set_UpdateSourceTrigger', type: 8, sname: 'set_UpdateSourceTrigger', returnType: Object, params: [$System_Windows_Data_UpdateSourceTrigger] } }, { name: 'Value', type: 16, returnType: Object, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: Object, params: [] } }, { name: 'DisconnectedItem', isStatic: true, type: 4, returnType: $System_Windows_Data_NamedObject, sname: 'DisconnectedItem' }, { name: 'ValueChanged', type: 2, adder: { name: 'add_ValueChanged', type: 8, sname: 'add_ValueChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_ValueChanged', type: 8, sname: 'remove_ValueChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Data_ClrPropertyObserver, { members: [{ name: '.ctor', type: 1, params: [Object, ss.IEnumerable] }, { name: 'Dispose', type: 8, sname: 'dispose', returnType: Object, params: [] }, { name: 'SetBaseValue', type: 8, sname: 'SetBaseValue', returnType: Object, params: [Object] }, { name: 'TrySetValue', type: 8, sname: 'TrySetValue', returnType: Boolean, params: [Object] }, { name: 'Value', type: 16, returnType: Object, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: Object, params: [] } }, { name: 'ValueType', type: 16, returnType: Function, getter: { name: 'get_ValueType', type: 8, sname: 'get_ValueType', returnType: Function, params: [] } }, { name: 'ValueChanged', type: 2, adder: { name: 'add_ValueChanged', type: 8, sname: 'add_ValueChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_ValueChanged', type: 8, sname: 'remove_ValueChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Data_CollectionView, { members: [{ name: '.ctor', type: 1, params: [ss.IEnumerable] }, { name: 'Dispose', type: 8, sname: 'dispose', returnType: Object, params: [] }, { name: 'GetEnumerator', type: 8, sname: 'getEnumerator', returnType: ss.IEnumerator, params: [] }, { name: 'CanFilter', type: 16, returnType: Boolean, getter: { name: 'get_CanFilter', type: 8, sname: 'get_CanFilter', returnType: Boolean, params: [] } }, { name: 'CanSort', type: 16, returnType: Boolean, getter: { name: 'get_CanSort', type: 8, sname: 'get_CanSort', returnType: Boolean, params: [] } }, { name: 'CurrentItem', type: 16, returnType: Object, getter: { name: 'get_CurrentItem', type: 8, sname: 'get_CurrentItem', returnType: Object, params: [] }, setter: { name: 'set_CurrentItem', type: 8, sname: 'set_CurrentItem', returnType: Object, params: [Object] } }, { name: 'CurrentItemIndex', type: 16, returnType: ss.Int32, getter: { name: 'get_CurrentItemIndex', type: 8, sname: 'get_CurrentItemIndex', returnType: ss.Int32, params: [] }, setter: { name: 'set_CurrentItemIndex', type: 8, sname: 'set_CurrentItemIndex', returnType: Object, params: [ss.Int32] } }, { name: 'FilterPredicate', type: 16, returnType: Function, getter: { name: 'get_FilterPredicate', type: 8, sname: 'get_FilterPredicate', returnType: Function, params: [] }, setter: { name: 'set_FilterPredicate', type: 8, sname: 'set_FilterPredicate', returnType: Object, params: [Function] } }, { name: 'SortDirection', type: 16, returnType: $System_Windows_Data_ListSortDirection, getter: { name: 'get_SortDirection', type: 8, sname: 'get_SortDirection', returnType: $System_Windows_Data_ListSortDirection, params: [] }, setter: { name: 'set_SortDirection', type: 8, sname: 'set_SortDirection', returnType: Object, params: [$System_Windows_Data_ListSortDirection] } }, { name: 'SortKeySelector', type: 16, returnType: Function, getter: { name: 'get_SortKeySelector', type: 8, sname: 'get_SortKeySelector', returnType: Function, params: [] }, setter: { name: 'set_SortKeySelector', type: 8, sname: 'set_SortKeySelector', returnType: Object, params: [Function] } }, { name: 'SourceCollection', type: 16, returnType: ss.IEnumerable, getter: { name: 'get_SourceCollection', type: 8, sname: 'get_SourceCollection', returnType: ss.IEnumerable, params: [] }, setter: { name: 'set_SourceCollection', type: 8, sname: 'set_SourceCollection', returnType: Object, params: [ss.IEnumerable] } }, { name: 'Empty', isStatic: true, type: 4, returnType: $System_Windows_Data_ICollectionView, sname: 'Empty' }, { name: 'CollectionChanged', type: 2, adder: { name: 'add_CollectionChanged', type: 8, sname: 'add_CollectionChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_CollectionChanged', type: 8, sname: 'remove_CollectionChanged', returnType: Object, params: [Function] } }, { name: 'CurrentChanged', type: 2, adder: { name: 'add_CurrentChanged', type: 8, sname: 'add_CurrentChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_CurrentChanged', type: 8, sname: 'remove_CurrentChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Data_ConstantObservableValue, { members: [{ name: '.ctor', type: 1, params: [Object] }, { name: 'Value', type: 16, returnType: Object, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: Object, params: [] }, setter: { name: 'set_Value', type: 8, sname: 'set_Value', returnType: Object, params: [Object] } }, { name: 'ValueChanged', type: 2, adder: { name: 'add_ValueChanged', type: 8, sname: 'add_ValueChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_ValueChanged', type: 8, sname: 'remove_ValueChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Data_DependencyPropertyObserver, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_DependencyProperty] }, { name: 'Dispose', type: 8, sname: 'dispose', returnType: Object, params: [] }, { name: 'SetBaseValue', type: 8, sname: 'SetBaseValue', returnType: Object, params: [Object] }, { name: 'TrySetValue', type: 8, sname: 'TrySetValue', returnType: Boolean, params: [Object] }, { name: 'Value', type: 16, returnType: Object, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: Object, params: [] } }, { name: 'ValueType', type: 16, returnType: Function, getter: { name: 'get_ValueType', type: 8, sname: 'get_ValueType', returnType: Function, params: [] } }, { name: 'ValueChanged', type: 2, adder: { name: 'add_ValueChanged', type: 8, sname: 'add_ValueChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_ValueChanged', type: 8, sname: 'remove_ValueChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Data_ICollectionView, { members: [{ name: 'CanFilter', type: 16, returnType: Boolean, getter: { name: 'get_CanFilter', type: 8, sname: 'get_CanFilter', returnType: Boolean, params: [] } }, { name: 'CanSort', type: 16, returnType: Boolean, getter: { name: 'get_CanSort', type: 8, sname: 'get_CanSort', returnType: Boolean, params: [] } }, { name: 'CurrentItem', type: 16, returnType: Object, getter: { name: 'get_CurrentItem', type: 8, sname: 'get_CurrentItem', returnType: Object, params: [] }, setter: { name: 'set_CurrentItem', type: 8, sname: 'set_CurrentItem', returnType: Object, params: [Object] } }, { name: 'CurrentItemIndex', type: 16, returnType: ss.Int32, getter: { name: 'get_CurrentItemIndex', type: 8, sname: 'get_CurrentItemIndex', returnType: ss.Int32, params: [] }, setter: { name: 'set_CurrentItemIndex', type: 8, sname: 'set_CurrentItemIndex', returnType: Object, params: [ss.Int32] } }, { name: 'FilterPredicate', type: 16, returnType: Function, getter: { name: 'get_FilterPredicate', type: 8, sname: 'get_FilterPredicate', returnType: Function, params: [] }, setter: { name: 'set_FilterPredicate', type: 8, sname: 'set_FilterPredicate', returnType: Object, params: [Function] } }, { name: 'SortDirection', type: 16, returnType: $System_Windows_Data_ListSortDirection, getter: { name: 'get_SortDirection', type: 8, sname: 'get_SortDirection', returnType: $System_Windows_Data_ListSortDirection, params: [] }, setter: { name: 'set_SortDirection', type: 8, sname: 'set_SortDirection', returnType: Object, params: [$System_Windows_Data_ListSortDirection] } }, { name: 'SortKeySelector', type: 16, returnType: Function, getter: { name: 'get_SortKeySelector', type: 8, sname: 'get_SortKeySelector', returnType: Function, params: [] }, setter: { name: 'set_SortKeySelector', type: 8, sname: 'set_SortKeySelector', returnType: Object, params: [Function] } }, { name: 'SourceCollection', type: 16, returnType: ss.IEnumerable, getter: { name: 'get_SourceCollection', type: 8, sname: 'get_SourceCollection', returnType: ss.IEnumerable, params: [] } }, { name: 'CurrentChanged', type: 2, adder: { name: 'add_CurrentChanged', type: 8, sname: 'add_CurrentChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_CurrentChanged', type: 8, sname: 'remove_CurrentChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Data_IndexPropertyObserver, { members: [{ name: '.ctor', type: 1, params: [Function, $System_Windows_IndexPropertyPathElement, System.Xaml.XamlNamespaces] }, { name: 'Dispose', type: 8, sname: 'dispose', returnType: Object, params: [] }, { name: 'SetBaseValue', type: 8, sname: 'SetBaseValue', returnType: Object, params: [Object] }, { name: 'TrySetValue', type: 8, sname: 'TrySetValue', returnType: Boolean, params: [Object] }, { name: 'Value', type: 16, returnType: Object, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: Object, params: [] } }, { name: 'ValueType', type: 16, returnType: Function, getter: { name: 'get_ValueType', type: 8, sname: 'get_ValueType', returnType: Function, params: [] } }, { name: 'ValueChanged', type: 2, adder: { name: 'add_ValueChanged', type: 8, sname: 'add_ValueChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_ValueChanged', type: 8, sname: 'remove_ValueChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Data_IObservableValue, { members: [{ name: 'Value', type: 16, returnType: Object, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: Object, params: [] } }, { name: 'ValueChanged', type: 2, adder: { name: 'add_ValueChanged', type: 8, sname: 'add_ValueChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_ValueChanged', type: 8, sname: 'remove_ValueChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Data_IPropertyObserver, { members: [{ name: 'SetBaseValue', type: 8, sname: 'SetBaseValue', returnType: Object, params: [Object] }, { name: 'TrySetValue', type: 8, sname: 'TrySetValue', returnType: Boolean, params: [Object] }, { name: 'ValueType', type: 16, returnType: Function, getter: { name: 'get_ValueType', type: 8, sname: 'get_ValueType', returnType: Function, params: [] } }] });
	ss.setMetadata($System_Windows_Data_IValueConverter, { members: [{ name: 'Convert', type: 8, sname: 'Convert', returnType: Object, params: [Object, Function, Object] }, { name: 'ConvertBack', type: 8, sname: 'ConvertBack', returnType: Object, params: [Object, Function, Object] }] });
	ss.setMetadata($System_Windows_Data_NamedObject, { members: [{ name: '.ctor', type: 1, params: [String] }, { name: 'ToString', type: 8, sname: 'toString', returnType: String, params: [] }] });
	ss.setMetadata($System_Windows_Data_ObservableExpression, { members: [{ name: '.ctor', type: 1, params: [String] }, { name: '.ctor', type: 1, params: [$System_Windows_PropertyPath], sname: '$ctor1' }, { name: '.ctor', type: 1, params: [Object, String], sname: '$ctor2' }, { name: '.ctor', type: 1, params: [Object, $System_Windows_PropertyPath], sname: '$ctor3' }, { name: 'Dispose', type: 8, sname: 'dispose', returnType: Object, params: [] }, { name: 'SetBaseValue', type: 8, sname: 'SetBaseValue', returnType: Object, params: [Object] }, { name: 'TrySetValue', type: 8, sname: 'TrySetValue', returnType: Boolean, params: [Object] }, { name: 'Value', type: 16, returnType: Object, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: Object, params: [] } }, { name: 'ValueType', type: 16, returnType: Function, getter: { name: 'get_ValueType', type: 8, sname: 'get_ValueType', returnType: Function, params: [] }, setter: { name: 'set_ValueType', type: 8, sname: 'set_ValueType', returnType: Object, params: [Function] } }, { name: 'ValueChanged', type: 2, adder: { name: 'add_ValueChanged', type: 8, sname: 'add_ValueChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_ValueChanged', type: 8, sname: 'remove_ValueChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Data_ObservableValue, { attr: [new System.Diagnostics.DebuggerNonUserCodeAttribute()], members: [{ name: '.ctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [Object], sname: '$ctor1' }, { name: 'IsNullOrUnset', isStatic: true, type: 8, sname: 'IsNullOrUnset', returnType: Boolean, params: [Object] }, { name: 'Value', type: 16, returnType: Object, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: Object, params: [] }, setter: { name: 'set_Value', type: 8, sname: 'set_Value', returnType: Object, params: [Object] } }, { name: 'UnsetValue', isStatic: true, type: 4, returnType: $System_Windows_Data_NamedObject, sname: 'UnsetValue' }, { name: 'ValueChanged', type: 2, adder: { name: 'add_ValueChanged', type: 8, sname: 'add_ValueChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_ValueChanged', type: 8, sname: 'remove_ValueChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Data_ObservableValueChangedArgs, { members: [{ name: '.ctor', type: 1, params: [Object, Object] }, { name: 'NewValue', type: 16, returnType: Object, getter: { name: 'get_NewValue', type: 8, sname: 'get_NewValue', returnType: Object, params: [] }, setter: { name: 'set_NewValue', type: 8, sname: 'set_NewValue', returnType: Object, params: [Object] } }, { name: 'OldValue', type: 16, returnType: Object, getter: { name: 'get_OldValue', type: 8, sname: 'get_OldValue', returnType: Object, params: [] }, setter: { name: 'set_OldValue', type: 8, sname: 'set_OldValue', returnType: Object, params: [Object] } }] });
	ss.setMetadata($System_Windows_Data_ReadOnlyObservableValue, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Data_IObservableValue] }, { name: 'Value', type: 16, returnType: Object, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: Object, params: [] } }, { name: 'ValueChanged', type: 2, adder: { name: 'add_ValueChanged', type: 8, sname: 'add_ValueChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_ValueChanged', type: 8, sname: 'remove_ValueChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Data_RelativeSource, { attr: [new $System_Windows_Markup_MarkupExtensionParameterAttribute('Mode', 0)], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ProvideValue', type: 8, sname: 'ProvideValue', returnType: Object, params: [$System_Windows_Markup_InitializeContext] }, { name: 'AncestorLevel', type: 16, returnType: ss.Int32, getter: { name: 'get_AncestorLevel', type: 8, sname: 'get_AncestorLevel', returnType: ss.Int32, params: [] }, setter: { name: 'set_AncestorLevel', type: 8, sname: 'set_AncestorLevel', returnType: Object, params: [ss.Int32] } }, { name: 'AncestorType', type: 16, returnType: Function, getter: { name: 'get_AncestorType', type: 8, sname: 'get_AncestorType', returnType: Function, params: [] }, setter: { name: 'set_AncestorType', type: 8, sname: 'set_AncestorType', returnType: Object, params: [Function] } }, { name: 'Mode', type: 16, returnType: $System_Windows_Data_RelativeSourceMode, getter: { name: 'get_Mode', type: 8, sname: 'get_Mode', returnType: $System_Windows_Data_RelativeSourceMode, params: [] }, setter: { name: 'set_Mode', type: 8, sname: 'set_Mode', returnType: Object, params: [$System_Windows_Data_RelativeSourceMode] } }] });
	ss.setMetadata($System_Windows_Data_TemplateBindingExtension, { attr: [new $System_Windows_Markup_MarkupExtensionParameterAttribute('Property', 0)], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ProvideValue', type: 8, sname: 'ProvideValue', returnType: Object, params: [$System_Windows_Markup_InitializeContext] }, { name: 'Converter', type: 16, returnType: $System_Windows_Data_IValueConverter, getter: { name: 'get_Converter', type: 8, sname: 'get_Converter', returnType: $System_Windows_Data_IValueConverter, params: [] }, setter: { name: 'set_Converter', type: 8, sname: 'set_Converter', returnType: Object, params: [$System_Windows_Data_IValueConverter] } }, { name: 'ConverterParameter', type: 16, returnType: Object, getter: { name: 'get_ConverterParameter', type: 8, sname: 'get_ConverterParameter', returnType: Object, params: [] }, setter: { name: 'set_ConverterParameter', type: 8, sname: 'set_ConverterParameter', returnType: Object, params: [Object] } }, { name: 'Property', type: 16, returnType: $System_Windows_IPropertyPathElement, getter: { name: 'get_Property', type: 8, sname: 'get_Property', returnType: $System_Windows_IPropertyPathElement, params: [] }, setter: { name: 'set_Property', type: 8, sname: 'set_Property', returnType: Object, params: [$System_Windows_IPropertyPathElement] } }] });
	ss.setMetadata($System_Windows_Input_Cursor, { attr: [new $System_Windows_Markup_TypeConverterAttribute($System_Windows_Input_CursorTypeConverter)], members: [{ name: '.ctor', type: 1, params: [$System_Windows_Media_ImageSource, $System_Windows_Point], sname: '$ctor1' }, { name: 'ToString', type: 8, sname: 'toString', returnType: String, params: [] }, { name: 'CursorType', type: 16, returnType: $System_Windows_Input_CursorType, getter: { name: 'get_CursorType', type: 8, sname: 'get_CursorType', returnType: $System_Windows_Input_CursorType, params: [] }, setter: { name: 'set_CursorType', type: 8, sname: 'set_CursorType', returnType: Object, params: [$System_Windows_Input_CursorType] } }, { name: 'Hotspot', type: 16, returnType: $System_Windows_Point, getter: { name: 'get_Hotspot', type: 8, sname: 'get_Hotspot', returnType: $System_Windows_Point, params: [] }, setter: { name: 'set_Hotspot', type: 8, sname: 'set_Hotspot', returnType: Object, params: [$System_Windows_Point] } }, { name: 'ImageSource', type: 16, returnType: $System_Windows_Media_ImageSource, getter: { name: 'get_ImageSource', type: 8, sname: 'get_ImageSource', returnType: $System_Windows_Media_ImageSource, params: [] }, setter: { name: 'set_ImageSource', type: 8, sname: 'set_ImageSource', returnType: Object, params: [$System_Windows_Media_ImageSource] } }] });
	ss.setMetadata($System_Windows_Input_Cursors, { members: [{ name: 'AppStarting', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_AppStarting', isStatic: true, type: 8, sname: 'get_AppStarting', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'Arrow', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_Arrow', isStatic: true, type: 8, sname: 'get_Arrow', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'ArrowCD', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_ArrowCD', isStatic: true, type: 8, sname: 'get_ArrowCD', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'Cross', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_Cross', isStatic: true, type: 8, sname: 'get_Cross', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'Hand', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_Hand', isStatic: true, type: 8, sname: 'get_Hand', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'Help', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_Help', isStatic: true, type: 8, sname: 'get_Help', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'IBeam', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_IBeam', isStatic: true, type: 8, sname: 'get_IBeam', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'No', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_No', isStatic: true, type: 8, sname: 'get_No', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'None', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_None', isStatic: true, type: 8, sname: 'get_None', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'Pen', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_Pen', isStatic: true, type: 8, sname: 'get_Pen', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'ScrollAll', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_ScrollAll', isStatic: true, type: 8, sname: 'get_ScrollAll', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'ScrollE', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_ScrollE', isStatic: true, type: 8, sname: 'get_ScrollE', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'ScrollN', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_ScrollN', isStatic: true, type: 8, sname: 'get_ScrollN', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'ScrollNE', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_ScrollNE', isStatic: true, type: 8, sname: 'get_ScrollNE', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'ScrollNS', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_ScrollNS', isStatic: true, type: 8, sname: 'get_ScrollNS', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'ScrollNW', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_ScrollNW', isStatic: true, type: 8, sname: 'get_ScrollNW', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'ScrollS', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_ScrollS', isStatic: true, type: 8, sname: 'get_ScrollS', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'ScrollSE', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_ScrollSE', isStatic: true, type: 8, sname: 'get_ScrollSE', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'ScrollSW', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_ScrollSW', isStatic: true, type: 8, sname: 'get_ScrollSW', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'ScrollW', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_ScrollW', isStatic: true, type: 8, sname: 'get_ScrollW', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'ScrollWE', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_ScrollWE', isStatic: true, type: 8, sname: 'get_ScrollWE', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'SizeAll', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_SizeAll', isStatic: true, type: 8, sname: 'get_SizeAll', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'SizeNESW', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_SizeNESW', isStatic: true, type: 8, sname: 'get_SizeNESW', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'SizeNS', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_SizeNS', isStatic: true, type: 8, sname: 'get_SizeNS', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'SizeNWSE', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_SizeNWSE', isStatic: true, type: 8, sname: 'get_SizeNWSE', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'SizeWE', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_SizeWE', isStatic: true, type: 8, sname: 'get_SizeWE', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'UpArrow', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_UpArrow', isStatic: true, type: 8, sname: 'get_UpArrow', returnType: $System_Windows_Input_Cursor, params: [] } }, { name: 'Wait', isStatic: true, type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_Wait', isStatic: true, type: 8, sname: 'get_Wait', returnType: $System_Windows_Input_Cursor, params: [] } }] });
	ss.setMetadata($System_Windows_Input_CursorTypeConverter, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ConvertFrom', type: 8, sname: 'ConvertFrom', returnType: Object, params: [System.Xaml.XamlNamespaces, Object] }] });
	ss.setMetadata($System_Windows_Input_FocusManager, { members: [{ name: 'Focus', isStatic: true, type: 8, sname: 'Focus', returnType: ss.IDisposable, params: [$System_Windows_UIElement] }, { name: 'GetFocusScope', isStatic: true, type: 8, sname: 'GetFocusScope', returnType: $System_Windows_UIElement, params: [$System_Windows_UIElement] }, { name: 'GetFocusedElement', isStatic: true, type: 8, sname: 'GetFocusedElement', returnType: $System_Windows_IInputElement, params: [$System_Windows_DependencyObject] }, { name: 'GetIsFocusScope', isStatic: true, type: 8, sname: 'GetIsFocusScope', returnType: Boolean, params: [$System_Windows_DependencyObject] }, { name: 'SetFocusedElement', isStatic: true, type: 8, sname: 'SetFocusedElement', returnType: Object, params: [$System_Windows_DependencyObject, $System_Windows_IInputElement] }, { name: 'SetIsFocusScope', isStatic: true, type: 8, sname: 'SetIsFocusScope', returnType: Object, params: [$System_Windows_DependencyObject, Boolean] }, { name: 'FocusedElementProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'FocusedElementProperty' }, { name: 'GotFocusEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'GotFocusEvent' }, { name: 'IsFocusScopeProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsFocusScopeProperty' }, { name: 'LostFocusEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'LostFocusEvent' }] });
	ss.setMetadata($System_Windows_Input_IInputDevice, { members: [{ name: 'Activate', type: 8, sname: 'Activate', returnType: Object, params: [] }, { name: 'Deactivate', type: 8, sname: 'Deactivate', returnType: Object, params: [] }] });
	ss.setMetadata($System_Windows_Input_InputEventArgs, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_RoutedEvent, Object, $System_Windows_Input_IInputDevice, ss.Int32] }, { name: 'Device', type: 16, returnType: $System_Windows_Input_IInputDevice, getter: { name: 'get_Device', type: 8, sname: 'get_Device', returnType: $System_Windows_Input_IInputDevice, params: [] }, setter: { name: 'set_Device', type: 8, sname: 'set_Device', returnType: Object, params: [$System_Windows_Input_IInputDevice] } }, { name: 'Timestamp', type: 16, returnType: ss.Int32, getter: { name: 'get_Timestamp', type: 8, sname: 'get_Timestamp', returnType: ss.Int32, params: [] }, setter: { name: 'set_Timestamp', type: 8, sname: 'set_Timestamp', returnType: Object, params: [ss.Int32] } }] });
	ss.setMetadata($System_Windows_Input_Keyboard, { members: [{ name: 'Focus', isStatic: true, type: 8, sname: 'Focus', returnType: ss.IDisposable, params: [$System_Windows_IInputElement] }, { name: 'GotKeyboardFocusEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'GotKeyboardFocusEvent' }, { name: 'KeyDownEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'KeyDownEvent' }, { name: 'KeyUpEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'KeyUpEvent' }, { name: 'LostKeyboardFocusEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'LostKeyboardFocusEvent' }, { name: 'PreviewGotKeyboardFocusEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'PreviewGotKeyboardFocusEvent' }, { name: 'PreviewKeyDownEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'PreviewKeyDownEvent' }, { name: 'PreviewKeyUpEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'PreviewKeyUpEvent' }, { name: 'PreviewLostKeyboardFocusEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'PreviewLostKeyboardFocusEvent' }] });
	ss.setMetadata($System_Windows_Input_KeyboardDevice, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_IPresentationSource] }, { name: 'Activate', type: 8, sname: 'Activate', returnType: Object, params: [] }, { name: 'Deactivate', type: 8, sname: 'Deactivate', returnType: Object, params: [] }, { name: 'Focus', type: 8, sname: 'Focus', returnType: ss.IDisposable, params: [$System_Windows_IInputElement] }, { name: 'GetKeyStates', type: 8, sname: 'GetKeyStates', returnType: $System_Windows_Input_KeyStates, params: [$System_Windows_Input_Key] }, { name: 'ProcessRawEvent', type: 8, sname: 'ProcessRawEvent', returnType: Boolean, params: [$System_Windows_Input_RawKeyboardEventArgs] }, { name: 'Modifiers', type: 16, returnType: $System_Windows_Input_ModifierKeys, getter: { name: 'get_Modifiers', type: 8, sname: 'get_Modifiers', returnType: $System_Windows_Input_ModifierKeys, params: [] } }, { name: 'Target', type: 16, returnType: $System_Windows_IInputElement, getter: { name: 'get_Target', type: 8, sname: 'get_Target', returnType: $System_Windows_IInputElement, params: [] }, setter: { name: 'set_Target', type: 8, sname: 'set_Target', returnType: Object, params: [$System_Windows_IInputElement] } }, { name: 'PostProcessKey', type: 2, adder: { name: 'add_PostProcessKey', type: 8, sname: 'add_PostProcessKey', returnType: Object, params: [Function] }, remover: { name: 'remove_PostProcessKey', type: 8, sname: 'remove_PostProcessKey', returnType: Object, params: [Function] } }, { name: 'PreProcessKey', type: 2, adder: { name: 'add_PreProcessKey', type: 8, sname: 'add_PreProcessKey', returnType: Object, params: [Function] }, remover: { name: 'remove_PreProcessKey', type: 8, sname: 'remove_PreProcessKey', returnType: Object, params: [Function] } }, { name: 'TargetChanged', type: 2, adder: { name: 'add_TargetChanged', type: 8, sname: 'add_TargetChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_TargetChanged', type: 8, sname: 'remove_TargetChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Input_KeyboardEventArgs, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_RoutedEvent, Object, $System_Windows_Input_KeyboardDevice, ss.Int32] }, { name: 'KeyboardDevice', type: 16, returnType: $System_Windows_Input_KeyboardDevice, getter: { name: 'get_KeyboardDevice', type: 8, sname: 'get_KeyboardDevice', returnType: $System_Windows_Input_KeyboardDevice, params: [] }, setter: { name: 'set_KeyboardDevice', type: 8, sname: 'set_KeyboardDevice', returnType: Object, params: [$System_Windows_Input_KeyboardDevice] } }] });
	ss.setMetadata($System_Windows_Input_KeyboardFocusChangedEventArgs, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_RoutedEvent, Object, $System_Windows_Input_KeyboardDevice, ss.Int32, $System_Windows_IInputElement, $System_Windows_IInputElement] }, { name: 'InvokeEventHandler', type: 8, sname: 'InvokeEventHandler', returnType: Object, params: [Function, Object] }, { name: 'NewFocus', type: 16, returnType: $System_Windows_IInputElement, getter: { name: 'get_NewFocus', type: 8, sname: 'get_NewFocus', returnType: $System_Windows_IInputElement, params: [] }, setter: { name: 'set_NewFocus', type: 8, sname: 'set_NewFocus', returnType: Object, params: [$System_Windows_IInputElement] } }, { name: 'OldFocus', type: 16, returnType: $System_Windows_IInputElement, getter: { name: 'get_OldFocus', type: 8, sname: 'get_OldFocus', returnType: $System_Windows_IInputElement, params: [] }, setter: { name: 'set_OldFocus', type: 8, sname: 'set_OldFocus', returnType: Object, params: [$System_Windows_IInputElement] } }] });
	ss.setMetadata($System_Windows_Input_KeyboardNavigation, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_IPresentationSource] }, { name: 'Dispose', type: 8, sname: 'dispose', returnType: Object, params: [] }, { name: 'GetControlTabNavigation', isStatic: true, type: 8, sname: 'GetControlTabNavigation', returnType: $System_Windows_Input_KeyboardNavigationMode, params: [$System_Windows_DependencyObject] }, { name: 'GetDirectionalNavigation', isStatic: true, type: 8, sname: 'GetDirectionalNavigation', returnType: $System_Windows_Input_KeyboardNavigationMode, params: [$System_Windows_DependencyObject] }, { name: 'GetIsTabStop', isStatic: true, type: 8, sname: 'GetIsTabStop', returnType: Boolean, params: [$System_Windows_DependencyObject] }, { name: 'GetNavigationFocusElement', isStatic: true, type: 8, sname: 'GetNavigationFocusElement', returnType: $System_Windows_Media_VisualWeakReference, params: [$System_Windows_DependencyObject] }, { name: 'GetTabIndex', isStatic: true, type: 8, sname: 'GetTabIndex', returnType: ss.Int32, params: [$System_Windows_DependencyObject] }, { name: 'GetTabNavigation', isStatic: true, type: 8, sname: 'GetTabNavigation', returnType: $System_Windows_Input_KeyboardNavigationMode, params: [$System_Windows_DependencyObject] }, { name: 'SetControlTabNavigation', isStatic: true, type: 8, sname: 'SetControlTabNavigation', returnType: Object, params: [$System_Windows_DependencyObject, $System_Windows_Input_KeyboardNavigationMode] }, { name: 'SetDirectionalNavigation', isStatic: true, type: 8, sname: 'SetDirectionalNavigation', returnType: Object, params: [$System_Windows_DependencyObject, $System_Windows_Input_KeyboardNavigationMode] }, { name: 'SetIsTabStop', isStatic: true, type: 8, sname: 'SetIsTabStop', returnType: Object, params: [$System_Windows_DependencyObject, Boolean] }, { name: 'SetNavigationFocusElement', isStatic: true, type: 8, sname: 'SetNavigationFocusElement', returnType: Object, params: [$System_Windows_DependencyObject, $System_Windows_Media_VisualWeakReference] }, { name: 'SetTabIndex', isStatic: true, type: 8, sname: 'SetTabIndex', returnType: Object, params: [$System_Windows_DependencyObject, ss.Int32] }, { name: 'SetTabNavigation', isStatic: true, type: 8, sname: 'SetTabNavigation', returnType: Object, params: [$System_Windows_DependencyObject, $System_Windows_Input_KeyboardNavigationMode] }, { name: 'ControlTabNavigationProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ControlTabNavigationProperty' }, { name: 'DirectionalNavigationProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'DirectionalNavigationProperty' }, { name: 'IsTabStopProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsTabStopProperty' }, { name: 'NavigationFocusElementProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'NavigationFocusElementProperty' }, { name: 'TabIndexProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'TabIndexProperty' }, { name: 'TabNavigationProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'TabNavigationProperty' }] });
	ss.setMetadata($System_Windows_Input_KeyboardNavigationTarget, { members: [{ name: 'FindTarget', isStatic: true, type: 8, sname: 'FindTarget', returnType: $System_Windows_Media_Visual, params: [$System_Windows_Media_Visual, $System_Windows_Input_FocusNavigationDirection, $System_Windows_DependencyProperty] }] });
	ss.setMetadata($System_Windows_Input_KeyEventArgs, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_RoutedEvent, Object, $System_Windows_Input_KeyboardDevice, ss.Int32, $System_Windows_Input_Key, $System_Windows_Input_KeyStates, Boolean] }, { name: 'InvokeEventHandler', type: 8, sname: 'InvokeEventHandler', returnType: Object, params: [Function, Object] }, { name: 'ForceHostHandling', type: 16, returnType: Boolean, getter: { name: 'get_ForceHostHandling', type: 8, sname: 'get_ForceHostHandling', returnType: Boolean, params: [] }, setter: { name: 'set_ForceHostHandling', type: 8, sname: 'set_ForceHostHandling', returnType: Object, params: [Boolean] } }, { name: 'IsDown', type: 16, returnType: Boolean, getter: { name: 'get_IsDown', type: 8, sname: 'get_IsDown', returnType: Boolean, params: [] } }, { name: 'IsRepeat', type: 16, returnType: Boolean, getter: { name: 'get_IsRepeat', type: 8, sname: 'get_IsRepeat', returnType: Boolean, params: [] }, setter: { name: 'set_IsRepeat', type: 8, sname: 'set_IsRepeat', returnType: Object, params: [Boolean] } }, { name: 'IsUp', type: 16, returnType: Boolean, getter: { name: 'get_IsUp', type: 8, sname: 'get_IsUp', returnType: Boolean, params: [] } }, { name: 'Key', type: 16, returnType: $System_Windows_Input_Key, getter: { name: 'get_Key', type: 8, sname: 'get_Key', returnType: $System_Windows_Input_Key, params: [] }, setter: { name: 'set_Key', type: 8, sname: 'set_Key', returnType: Object, params: [$System_Windows_Input_Key] } }, { name: 'KeyStates', type: 16, returnType: $System_Windows_Input_KeyStates, getter: { name: 'get_KeyStates', type: 8, sname: 'get_KeyStates', returnType: $System_Windows_Input_KeyStates, params: [] }, setter: { name: 'set_KeyStates', type: 8, sname: 'set_KeyStates', returnType: Object, params: [$System_Windows_Input_KeyStates] } }] });
	ss.setMetadata($System_Windows_Input_KeyEventHandlerExtensions, { members: [{ name: 'Raise', isStatic: true, type: 8, sname: 'Raise', returnType: Object, params: [Function, Object, $System_Windows_Input_KeyEventArgs] }] });
	ss.setMetadata($System_Windows_Input_Mouse, { members: [{ name: 'MouseDownEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'MouseDownEvent' }, { name: 'MouseEnterEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'MouseEnterEvent' }, { name: 'MouseLeaveEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'MouseLeaveEvent' }, { name: 'MouseMoveEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'MouseMoveEvent' }, { name: 'MouseUpEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'MouseUpEvent' }, { name: 'MouseWheelEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'MouseWheelEvent' }, { name: 'PreviewMouseDownEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'PreviewMouseDownEvent' }, { name: 'PreviewMouseMoveEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'PreviewMouseMoveEvent' }, { name: 'PreviewMouseUpEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'PreviewMouseUpEvent' }, { name: 'PreviewMouseWheelEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'PreviewMouseWheelEvent' }, { name: 'QueryCursorEvent', isStatic: true, type: 4, returnType: $System_Windows_RoutedEvent, sname: 'QueryCursorEvent' }] });
	ss.setMetadata($System_Windows_Input_MouseButtonEventArgs, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_RoutedEvent, Object, $System_Windows_Input_MouseDevice, ss.Int32, $System_Windows_Point, $System_Windows_Input_MouseButton, $System_Windows_Input_MouseButtonState, ss.Int32] }, { name: 'InvokeEventHandler', type: 8, sname: 'InvokeEventHandler', returnType: Object, params: [Function, Object] }, { name: 'ButtonState', type: 16, returnType: $System_Windows_Input_MouseButtonState, getter: { name: 'get_ButtonState', type: 8, sname: 'get_ButtonState', returnType: $System_Windows_Input_MouseButtonState, params: [] }, setter: { name: 'set_ButtonState', type: 8, sname: 'set_ButtonState', returnType: Object, params: [$System_Windows_Input_MouseButtonState] } }, { name: 'ChangedButton', type: 16, returnType: $System_Windows_Input_MouseButton, getter: { name: 'get_ChangedButton', type: 8, sname: 'get_ChangedButton', returnType: $System_Windows_Input_MouseButton, params: [] }, setter: { name: 'set_ChangedButton', type: 8, sname: 'set_ChangedButton', returnType: Object, params: [$System_Windows_Input_MouseButton] } }, { name: 'ClickCount', type: 16, returnType: ss.Int32, getter: { name: 'get_ClickCount', type: 8, sname: 'get_ClickCount', returnType: ss.Int32, params: [] }, setter: { name: 'set_ClickCount', type: 8, sname: 'set_ClickCount', returnType: Object, params: [ss.Int32] } }] });
	ss.setMetadata($System_Windows_Input_MouseDevice, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_IPresentationSource] }, { name: 'Activate', type: 8, sname: 'Activate', returnType: Object, params: [] }, { name: 'Capture', type: 8, sname: 'Capture', returnType: Object, params: [$System_Windows_IInputElement] }, { name: 'Deactivate', type: 8, sname: 'Deactivate', returnType: Object, params: [] }, { name: 'Dispose', type: 8, sname: 'dispose', returnType: Object, params: [] }, { name: 'GetButtonState', type: 8, sname: 'GetButtonState', returnType: $System_Windows_Input_MouseButtonState, params: [$System_Windows_Input_MouseButton] }, { name: 'ProcessRawEvent', type: 8, sname: 'ProcessRawEvent', returnType: Boolean, params: [$System_Windows_Input_RawMouseEventArgs] }, { name: 'ReleaseCapture', type: 8, sname: 'ReleaseCapture', returnType: Object, params: [] }, { name: 'UpdateCursor', type: 8, sname: 'UpdateCursor', returnType: Object, params: [] }, { name: 'CaptureTarget', type: 16, returnType: $System_Windows_IInputElement, getter: { name: 'get_CaptureTarget', type: 8, sname: 'get_CaptureTarget', returnType: $System_Windows_IInputElement, params: [] }, setter: { name: 'set_CaptureTarget', type: 8, sname: 'set_CaptureTarget', returnType: Object, params: [$System_Windows_IInputElement] } }, { name: 'Cursor', type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_Cursor', type: 8, sname: 'get_Cursor', returnType: $System_Windows_Input_Cursor, params: [] }, setter: { name: 'set_Cursor', type: 8, sname: 'set_Cursor', returnType: Object, params: [$System_Windows_Input_Cursor] } }, { name: 'HitTarget', type: 16, returnType: $System_Windows_IInputElement, getter: { name: 'get_HitTarget', type: 8, sname: 'get_HitTarget', returnType: $System_Windows_IInputElement, params: [] }, setter: { name: 'set_HitTarget', type: 8, sname: 'set_HitTarget', returnType: Object, params: [$System_Windows_IInputElement] } }, { name: 'Position', type: 16, returnType: $System_Windows_Point, getter: { name: 'get_Position', type: 8, sname: 'get_Position', returnType: $System_Windows_Point, params: [] }, setter: { name: 'set_Position', type: 8, sname: 'set_Position', returnType: Object, params: [$System_Windows_Point] } }, { name: 'Target', type: 16, returnType: $System_Windows_IInputElement, getter: { name: 'get_Target', type: 8, sname: 'get_Target', returnType: $System_Windows_IInputElement, params: [] }, setter: { name: 'set_Target', type: 8, sname: 'set_Target', returnType: Object, params: [$System_Windows_IInputElement] } }, { name: 'CursorChanged', type: 2, adder: { name: 'add_CursorChanged', type: 8, sname: 'add_CursorChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_CursorChanged', type: 8, sname: 'remove_CursorChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Input_MouseEventArgs, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_RoutedEvent, Object, $System_Windows_Input_MouseDevice, ss.Int32, $System_Windows_Point] }, { name: 'GetPosition', type: 8, sname: 'GetPosition', returnType: $System_Windows_Point, params: [$System_Windows_IInputElement] }, { name: 'InvokeEventHandler', type: 8, sname: 'InvokeEventHandler', returnType: Object, params: [Function, Object] }, { name: 'AbsolutePosition', type: 16, returnType: $System_Windows_Point, getter: { name: 'get_AbsolutePosition', type: 8, sname: 'get_AbsolutePosition', returnType: $System_Windows_Point, params: [] }, setter: { name: 'set_AbsolutePosition', type: 8, sname: 'set_AbsolutePosition', returnType: Object, params: [$System_Windows_Point] } }, { name: 'LeftButton', type: 16, returnType: $System_Windows_Input_MouseButtonState, getter: { name: 'get_LeftButton', type: 8, sname: 'get_LeftButton', returnType: $System_Windows_Input_MouseButtonState, params: [] }, setter: { name: 'set_LeftButton', type: 8, sname: 'set_LeftButton', returnType: Object, params: [$System_Windows_Input_MouseButtonState] } }, { name: 'MiddleButton', type: 16, returnType: $System_Windows_Input_MouseButtonState, getter: { name: 'get_MiddleButton', type: 8, sname: 'get_MiddleButton', returnType: $System_Windows_Input_MouseButtonState, params: [] }, setter: { name: 'set_MiddleButton', type: 8, sname: 'set_MiddleButton', returnType: Object, params: [$System_Windows_Input_MouseButtonState] } }, { name: 'MouseDevice', type: 16, returnType: $System_Windows_Input_MouseDevice, getter: { name: 'get_MouseDevice', type: 8, sname: 'get_MouseDevice', returnType: $System_Windows_Input_MouseDevice, params: [] }, setter: { name: 'set_MouseDevice', type: 8, sname: 'set_MouseDevice', returnType: Object, params: [$System_Windows_Input_MouseDevice] } }, { name: 'RightButton', type: 16, returnType: $System_Windows_Input_MouseButtonState, getter: { name: 'get_RightButton', type: 8, sname: 'get_RightButton', returnType: $System_Windows_Input_MouseButtonState, params: [] }, setter: { name: 'set_RightButton', type: 8, sname: 'set_RightButton', returnType: Object, params: [$System_Windows_Input_MouseButtonState] } }, { name: 'XButton1', type: 16, returnType: $System_Windows_Input_MouseButtonState, getter: { name: 'get_XButton1', type: 8, sname: 'get_XButton1', returnType: $System_Windows_Input_MouseButtonState, params: [] }, setter: { name: 'set_XButton1', type: 8, sname: 'set_XButton1', returnType: Object, params: [$System_Windows_Input_MouseButtonState] } }, { name: 'XButton2', type: 16, returnType: $System_Windows_Input_MouseButtonState, getter: { name: 'get_XButton2', type: 8, sname: 'get_XButton2', returnType: $System_Windows_Input_MouseButtonState, params: [] }, setter: { name: 'set_XButton2', type: 8, sname: 'set_XButton2', returnType: Object, params: [$System_Windows_Input_MouseButtonState] } }] });
	ss.setMetadata($System_Windows_Input_MouseWheelEventArgs, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_RoutedEvent, Object, $System_Windows_Input_MouseDevice, ss.Int32, $System_Windows_Point, ss.Int32] }, { name: 'InvokeEventHandler', type: 8, sname: 'InvokeEventHandler', returnType: Object, params: [Function, Object] }, { name: 'Delta', type: 16, returnType: ss.Int32, getter: { name: 'get_Delta', type: 8, sname: 'get_Delta', returnType: ss.Int32, params: [] }, setter: { name: 'set_Delta', type: 8, sname: 'set_Delta', returnType: Object, params: [ss.Int32] } }] });
	ss.setMetadata($System_Windows_Input_QueryCursorEventArgs, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_RoutedEvent, Object, $System_Windows_Input_MouseDevice, ss.Int32, $System_Windows_Point] }, { name: 'InvokeEventHandler', type: 8, sname: 'InvokeEventHandler', returnType: Object, params: [Function, Object] }, { name: 'Cursor', type: 16, returnType: $System_Windows_Input_Cursor, getter: { name: 'get_Cursor', type: 8, sname: 'get_Cursor', returnType: $System_Windows_Input_Cursor, params: [] }, setter: { name: 'set_Cursor', type: 8, sname: 'set_Cursor', returnType: Object, params: [$System_Windows_Input_Cursor] } }] });
	ss.setMetadata($System_Windows_Input_RawEventArgs, { members: [{ name: '.ctor', type: 1, params: [ss.Int32] }, { name: 'Timestamp', type: 16, returnType: ss.Int32, getter: { name: 'get_Timestamp', type: 8, sname: 'get_Timestamp', returnType: ss.Int32, params: [] }, setter: { name: 'set_Timestamp', type: 8, sname: 'set_Timestamp', returnType: Object, params: [ss.Int32] } }] });
	ss.setMetadata($System_Windows_Input_RawKeyboardEventArgs, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Input_Key, $System_Windows_Input_KeyStates, Boolean, ss.Int32] }, { name: 'IsRepeat', type: 16, returnType: Boolean, getter: { name: 'get_IsRepeat', type: 8, sname: 'get_IsRepeat', returnType: Boolean, params: [] }, setter: { name: 'set_IsRepeat', type: 8, sname: 'set_IsRepeat', returnType: Object, params: [Boolean] } }, { name: 'Key', type: 16, returnType: $System_Windows_Input_Key, getter: { name: 'get_Key', type: 8, sname: 'get_Key', returnType: $System_Windows_Input_Key, params: [] }, setter: { name: 'set_Key', type: 8, sname: 'set_Key', returnType: Object, params: [$System_Windows_Input_Key] } }, { name: 'KeyStates', type: 16, returnType: $System_Windows_Input_KeyStates, getter: { name: 'get_KeyStates', type: 8, sname: 'get_KeyStates', returnType: $System_Windows_Input_KeyStates, params: [] }, setter: { name: 'set_KeyStates', type: 8, sname: 'set_KeyStates', returnType: Object, params: [$System_Windows_Input_KeyStates] } }] });
	ss.setMetadata($System_Windows_Input_RawMouseButtonEventArgs, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Input_MouseButton, $System_Windows_Input_MouseButtonState, $System_Windows_Point, ss.Int32] }, { name: 'Button', type: 16, returnType: $System_Windows_Input_MouseButton, getter: { name: 'get_Button', type: 8, sname: 'get_Button', returnType: $System_Windows_Input_MouseButton, params: [] }, setter: { name: 'set_Button', type: 8, sname: 'set_Button', returnType: Object, params: [$System_Windows_Input_MouseButton] } }, { name: 'ButtonState', type: 16, returnType: $System_Windows_Input_MouseButtonState, getter: { name: 'get_ButtonState', type: 8, sname: 'get_ButtonState', returnType: $System_Windows_Input_MouseButtonState, params: [] }, setter: { name: 'set_ButtonState', type: 8, sname: 'set_ButtonState', returnType: Object, params: [$System_Windows_Input_MouseButtonState] } }] });
	ss.setMetadata($System_Windows_Input_RawMouseEventArgs, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Point, ss.Int32] }, { name: 'Position', type: 16, returnType: $System_Windows_Point, getter: { name: 'get_Position', type: 8, sname: 'get_Position', returnType: $System_Windows_Point, params: [] }, setter: { name: 'set_Position', type: 8, sname: 'set_Position', returnType: Object, params: [$System_Windows_Point] } }] });
	ss.setMetadata($System_Windows_Input_RawMouseWheelEventArgs, { members: [{ name: '.ctor', type: 1, params: [ss.Int32, $System_Windows_Point, ss.Int32] }, { name: 'Delta', type: 16, returnType: ss.Int32, getter: { name: 'get_Delta', type: 8, sname: 'get_Delta', returnType: ss.Int32, params: [] }, setter: { name: 'set_Delta', type: 8, sname: 'set_Delta', returnType: Object, params: [ss.Int32] } }] });
	ss.setMetadata($System_Windows_Markup_$BooleanTypeConverter, { members: [{ name: 'ConvertFrom', type: 8, sname: 'ConvertFrom', returnType: Object, params: [System.Xaml.XamlNamespaces, Object] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_Windows_Markup_$BooleanTypeConverter, sname: '$Default' }] });
	ss.setMetadata($System_Windows_Markup_$DoubleTypeConverter, { members: [{ name: 'ConvertFrom', type: 8, sname: 'ConvertFrom', returnType: Object, params: [System.Xaml.XamlNamespaces, Object] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_Windows_Markup_$DoubleTypeConverter, sname: '$Default' }] });
	ss.setMetadata($System_Windows_Markup_$EnumTypeConverter, { members: [{ name: '.ctor', type: 1, params: [Function] }, { name: 'ConvertFrom', type: 8, sname: 'ConvertFrom', returnType: Object, params: [System.Xaml.XamlNamespaces, Object] }] });
	ss.setMetadata($System_Windows_Markup_$Int32TypeConverter, { members: [{ name: 'ConvertFrom', type: 8, sname: 'ConvertFrom', returnType: Object, params: [System.Xaml.XamlNamespaces, Object] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_Windows_Markup_$Int32TypeConverter, sname: '$Default' }] });
	ss.setMetadata($System_Windows_Markup_$ObjectTypeConverter, { members: [{ name: 'ConvertFrom', type: 8, sname: 'ConvertFrom', returnType: Object, params: [System.Xaml.XamlNamespaces, Object] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_Windows_Markup_$ObjectTypeConverter, sname: '$Default' }] });
	ss.setMetadata($System_Windows_Markup_$ParseTypeConverter, { members: [{ name: '.ctor', type: 1, params: [Function] }, { name: 'ContainsParseMethod', isStatic: true, type: 8, sname: '$ContainsParseMethod', returnType: Boolean, params: [Function] }, { name: 'ConvertFrom', type: 8, sname: 'ConvertFrom', returnType: Object, params: [System.Xaml.XamlNamespaces, Object] }] });
	ss.setMetadata($System_Windows_Markup_$StringTypeConverter, { members: [{ name: 'ConvertFrom', type: 8, sname: 'ConvertFrom', returnType: Object, params: [System.Xaml.XamlNamespaces, Object] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_Windows_Markup_$StringTypeConverter, sname: '$Default' }] });
	ss.setMetadata($System_Windows_Markup_$TimeSpanTypeConverter, { members: [{ name: 'ConvertFrom', type: 8, sname: 'ConvertFrom', returnType: Object, params: [System.Xaml.XamlNamespaces, Object] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_Windows_Markup_$TimeSpanTypeConverter, sname: '$Default' }] });
	ss.setMetadata($System_Windows_Markup_$TypeTypeConverter, { members: [{ name: 'ConvertFrom', type: 8, sname: 'ConvertFrom', returnType: Object, params: [System.Xaml.XamlNamespaces, Object] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_Windows_Markup_$TypeTypeConverter, sname: '$Default' }] });
	ss.setMetadata($System_Windows_Markup_ClrEventAdapter, { members: [{ name: '.ctor', type: 1, params: [Object] }, { name: 'AddHandler', type: 8, sname: 'AddHandler', returnType: Object, params: [Object, Function] }, { name: 'HandlerType', type: 16, returnType: Function, getter: { name: 'get_HandlerType', type: 8, sname: 'get_HandlerType', returnType: Function, params: [] } }] });
	ss.setMetadata($System_Windows_Markup_ClrPropertyAdapter, { members: [{ name: '.ctor', type: 1, params: [Object, Array] }, { name: 'GetValue', type: 8, sname: 'GetValue', returnType: Object, params: [Object] }, { name: 'SetValue', type: 8, sname: 'SetValue', returnType: Object, params: [Object, Object, $System_Windows_BaseValueSource] }, { name: 'HasGetter', type: 16, returnType: Boolean, getter: { name: 'get_HasGetter', type: 8, sname: 'get_HasGetter', returnType: Boolean, params: [] } }, { name: 'HasSetter', type: 16, returnType: Boolean, getter: { name: 'get_HasSetter', type: 8, sname: 'get_HasSetter', returnType: Boolean, params: [] } }, { name: 'PropertyType', type: 16, returnType: Function, getter: { name: 'get_PropertyType', type: 8, sname: 'get_PropertyType', returnType: Function, params: [] } }] });
	ss.setMetadata($System_Windows_Markup_ConstantElementFactory, { members: [{ name: '.ctor', type: 1, params: [Object] }, { name: 'CreateElement', type: 8, sname: 'CreateElement', returnType: Object, params: [$System_Windows_Markup_InitializeContext] }, { name: 'ElementType', type: 16, returnType: Function, getter: { name: 'get_ElementType', type: 8, sname: 'get_ElementType', returnType: Function, params: [] }, setter: { name: 'set_ElementType', type: 8, sname: 'set_ElementType', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Markup_ContentPropertyAttribute, { members: [{ name: '.ctor', type: 1, params: [String] }] });
	ss.setMetadata($System_Windows_Markup_ConvertedElementFactory, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Markup_IElementFactory, Function, System.Xaml.XamlNamespaces] }, { name: 'CreateElement', type: 8, sname: 'CreateElement', returnType: Object, params: [$System_Windows_Markup_InitializeContext] }, { name: 'ElementType', type: 16, returnType: Function, getter: { name: 'get_ElementType', type: 8, sname: 'get_ElementType', returnType: Function, params: [] }, setter: { name: 'set_ElementType', type: 8, sname: 'set_ElementType', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Markup_DependencyPropertyAdapter, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_DependencyProperty] }, { name: 'GetValue', type: 8, sname: 'GetValue', returnType: Object, params: [Object] }, { name: 'SetValue', type: 8, sname: 'SetValue', returnType: Object, params: [Object, Object, $System_Windows_BaseValueSource] }, { name: 'HasGetter', type: 16, returnType: Boolean, getter: { name: 'get_HasGetter', type: 8, sname: 'get_HasGetter', returnType: Boolean, params: [] } }, { name: 'HasSetter', type: 16, returnType: Boolean, getter: { name: 'get_HasSetter', type: 8, sname: 'get_HasSetter', returnType: Boolean, params: [] } }, { name: 'PropertyType', type: 16, returnType: Function, getter: { name: 'get_PropertyType', type: 8, sname: 'get_PropertyType', returnType: Function, params: [] } }] });
	ss.setMetadata($System_Windows_Markup_DictionaryKeyPropertyAttribute, { members: [{ name: '.ctor', type: 1, params: [String] }] });
	ss.setMetadata($System_Windows_Markup_ElementCollectionContentInitailizer, { members: [{ name: 'Create', isStatic: true, type: 8, sname: 'Create', returnType: $System_Windows_Markup_IElementInitializer, params: [ss.IEnumerable, Function] }, { name: 'IsCollectionType', isStatic: true, type: 8, sname: 'IsCollectionType', returnType: Boolean, params: [Function] }] });
	ss.setMetadata($System_Windows_Markup_ElementCollectionContentInitializer, { members: [{ name: '.ctor', type: 1, params: [Function, ss.IEnumerable] }, { name: 'InitializeElement', type: 8, sname: 'InitializeElement', returnType: Object, params: [Object, $System_Windows_Markup_InitializeContext] }] });
	ss.setMetadata($System_Windows_Markup_ElementDictionaryContentInitializer, { members: [{ name: '.ctor', type: 1, params: [Function, Function, ss.IEnumerable] }, { name: 'InitializeElement', type: 8, sname: 'InitializeElement', returnType: Object, params: [Object, $System_Windows_Markup_InitializeContext] }] });
	ss.setMetadata($System_Windows_Markup_ElementEventMemberInitializer, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Markup_IEventAdapter, String] }, { name: 'InitializeElement', type: 8, sname: 'InitializeElement', returnType: Object, params: [Object, $System_Windows_Markup_InitializeContext] }] });
	ss.setMetadata($System_Windows_Markup_ElementFactory, { members: [{ name: '.ctor', type: 1, params: [Function, $System_Windows_Markup_IElementInitializer] }, { name: 'CreateElement', type: 8, sname: 'CreateElement', returnType: Object, params: [$System_Windows_Markup_InitializeContext] }, { name: 'FromValue', isStatic: true, type: 8, sname: 'FromValue', returnType: $System_Windows_Markup_IElementFactory, params: [Object, Function, System.Xaml.XamlNamespaces] }, { name: 'FromXamlElement', isStatic: true, type: 8, sname: 'FromXamlElement', returnType: $System_Windows_Markup_IElementFactory, params: [System.Xaml.XamlElement, Function] }, { name: 'ElementType', type: 16, returnType: Function, getter: { name: 'get_ElementType', type: 8, sname: 'get_ElementType', returnType: Function, params: [] }, setter: { name: 'set_ElementType', type: 8, sname: 'set_ElementType', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Markup_ElementInitializer, { members: [{ name: '.ctor', type: 1, params: [System.Xaml.XamlElement] }, { name: 'InitializeElement', type: 8, sname: 'InitializeElement', returnType: Object, params: [Object, $System_Windows_Markup_InitializeContext] }, { name: 'Empty', isStatic: true, type: 4, returnType: $System_Windows_Markup_IElementInitializer, sname: 'Empty' }] });
	ss.setMetadata($System_Windows_Markup_ElementMemberInitializer, { members: [{ name: 'Create', isStatic: true, type: 8, sname: 'Create', returnType: $System_Windows_Markup_IElementInitializer, params: [System.Xaml.XamlName, Function, ss.IEnumerable, System.Xaml.XamlNamespaces] }] });
	ss.setMetadata($System_Windows_Markup_ElementPropertyMemberInitializer, { members: [{ name: 'Create', isStatic: true, type: 8, sname: 'Create', returnType: $System_Windows_Markup_IElementInitializer, params: [$System_Windows_Markup_IPropertyAdapter, ss.IEnumerable, System.Xaml.XamlNamespaces] }, { name: 'InitializeElement', type: 8, sname: 'InitializeElement', returnType: Object, params: [Object, $System_Windows_Markup_InitializeContext] }] });
	ss.setMetadata($System_Windows_Markup_EventAdapter, { members: [{ name: 'CreateAdapter', isStatic: true, type: 8, sname: 'CreateAdapter', returnType: $System_Windows_Markup_IEventAdapter, params: [Function, System.Xaml.XamlName] }] });
	ss.setMetadata($System_Windows_Markup_EventPropertyAdapter, { members: [{ name: '.ctor', type: 1, params: [Object] }, { name: 'AddHandler', type: 8, sname: 'AddHandler', returnType: Object, params: [Object, Function] }, { name: 'HandlerType', type: 16, returnType: Function, getter: { name: 'get_HandlerType', type: 8, sname: 'get_HandlerType', returnType: Function, params: [] } }] });
	ss.setMetadata($System_Windows_Markup_FrameworkElementFactoryInitializer, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Markup_IPropertyAdapter, $System_Windows_Markup_IElementFactory] }, { name: 'InitializeElement', type: 8, sname: 'InitializeElement', returnType: Object, params: [Object, $System_Windows_Markup_InitializeContext] }] });
	ss.setMetadata($System_Windows_Markup_IElementFactory, { members: [{ name: 'CreateElement', type: 8, sname: 'CreateElement', returnType: Object, params: [$System_Windows_Markup_InitializeContext] }, { name: 'ElementType', type: 16, returnType: Function, getter: { name: 'get_ElementType', type: 8, sname: 'get_ElementType', returnType: Function, params: [] } }] });
	ss.setMetadata($System_Windows_Markup_IElementInitializer, { members: [{ name: 'InitializeElement', type: 8, sname: 'InitializeElement', returnType: Object, params: [Object, $System_Windows_Markup_InitializeContext] }] });
	ss.setMetadata($System_Windows_Markup_IEventAdapter, { members: [{ name: 'AddHandler', type: 8, sname: 'AddHandler', returnType: Object, params: [Object, Function] }, { name: 'HandlerType', type: 16, returnType: Function, getter: { name: 'get_HandlerType', type: 8, sname: 'get_HandlerType', returnType: Function, params: [] } }] });
	ss.setMetadata($System_Windows_Markup_IMarkupExtension, { members: [{ name: 'ProvideValue', type: 8, sname: 'ProvideValue', returnType: Object, params: [$System_Windows_Markup_InitializeContext] }] });
	ss.setMetadata($System_Windows_Markup_INameScope, { members: [{ name: 'FindName', type: 8, sname: 'FindName', returnType: Object, params: [String] }, { name: 'RegisterName', type: 8, sname: 'RegisterName', returnType: Object, params: [String, Object] }, { name: 'UnregisterName', type: 8, sname: 'UnregisterName', returnType: Object, params: [String] }] });
	ss.setMetadata($System_Windows_Markup_InitializeContext, { members: [{ name: '.ctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [Object, $System_Windows_Markup_InitializeContext, $System_Windows_Markup_INameScope, $System_Windows_FrameworkElement, $System_Windows_BaseValueSource], sname: '$ctor1' }, { name: 'NameScope', type: 16, returnType: $System_Windows_Markup_INameScope, getter: { name: 'get_NameScope', type: 8, sname: 'get_NameScope', returnType: $System_Windows_Markup_INameScope, params: [] }, setter: { name: 'set_NameScope', type: 8, sname: 'set_NameScope', returnType: Object, params: [$System_Windows_Markup_INameScope] } }, { name: 'ParentContext', type: 16, returnType: $System_Windows_Markup_InitializeContext, getter: { name: 'get_ParentContext', type: 8, sname: 'get_ParentContext', returnType: $System_Windows_Markup_InitializeContext, params: [] }, setter: { name: 'set_ParentContext', type: 8, sname: 'set_ParentContext', returnType: Object, params: [$System_Windows_Markup_InitializeContext] } }, { name: 'Root', type: 16, returnType: Object, getter: { name: 'get_Root', type: 8, sname: 'get_Root', returnType: Object, params: [] }, setter: { name: 'set_Root', type: 8, sname: 'set_Root', returnType: Object, params: [Object] } }, { name: 'Target', type: 16, returnType: Object, getter: { name: 'get_Target', type: 8, sname: 'get_Target', returnType: Object, params: [] }, setter: { name: 'set_Target', type: 8, sname: 'set_Target', returnType: Object, params: [Object] } }, { name: 'TemplatedParent', type: 16, returnType: $System_Windows_FrameworkElement, getter: { name: 'get_TemplatedParent', type: 8, sname: 'get_TemplatedParent', returnType: $System_Windows_FrameworkElement, params: [] }, setter: { name: 'set_TemplatedParent', type: 8, sname: 'set_TemplatedParent', returnType: Object, params: [$System_Windows_FrameworkElement] } }, { name: 'ValueSource', type: 16, returnType: $System_Windows_BaseValueSource, getter: { name: 'get_ValueSource', type: 8, sname: 'get_ValueSource', returnType: $System_Windows_BaseValueSource, params: [] }, setter: { name: 'set_ValueSource', type: 8, sname: 'set_ValueSource', returnType: Object, params: [$System_Windows_BaseValueSource] } }] });
	ss.setMetadata($System_Windows_Markup_InitializeContextExtensions, { members: [{ name: 'CreateChildContext', isStatic: true, type: 8, sname: 'CreateChildContext', returnType: $System_Windows_Markup_InitializeContext, params: [$System_Windows_Markup_InitializeContext, Object] }, { name: 'SetNameScope', isStatic: true, type: 8, sname: 'SetNameScope', returnType: $System_Windows_Markup_InitializeContext, params: [$System_Windows_Markup_InitializeContext, $System_Windows_Markup_INameScope] }, { name: 'SetTarget', isStatic: true, type: 8, sname: 'SetTarget', returnType: $System_Windows_Markup_InitializeContext, params: [$System_Windows_Markup_InitializeContext, Object] }] });
	ss.setMetadata($System_Windows_Markup_IPropertyAdapter, { members: [{ name: 'GetValue', type: 8, sname: 'GetValue', returnType: Object, params: [Object] }, { name: 'SetValue', type: 8, sname: 'SetValue', returnType: Object, params: [Object, Object, $System_Windows_BaseValueSource] }, { name: 'HasGetter', type: 16, returnType: Boolean, getter: { name: 'get_HasGetter', type: 8, sname: 'get_HasGetter', returnType: Boolean, params: [] } }, { name: 'HasSetter', type: 16, returnType: Boolean, getter: { name: 'get_HasSetter', type: 8, sname: 'get_HasSetter', returnType: Boolean, params: [] } }, { name: 'PropertyType', type: 16, returnType: Function, getter: { name: 'get_PropertyType', type: 8, sname: 'get_PropertyType', returnType: Function, params: [] } }] });
	ss.setMetadata($System_Windows_Markup_ISupportInitialize, { members: [{ name: 'BeginInit', type: 8, sname: 'BeginInit', returnType: Object, params: [] }, { name: 'EndInit', type: 8, sname: 'EndInit', returnType: Object, params: [] }] });
	ss.setMetadata($System_Windows_Markup_ITypeConverter, { members: [{ name: 'ConvertFrom', type: 8, sname: 'ConvertFrom', returnType: Object, params: [System.Xaml.XamlNamespaces, Object] }] });
	ss.setMetadata($System_Windows_Markup_IValueProvider, { members: [{ name: 'ProvideValue', type: 8, sname: 'ProvideValue', returnType: Object, params: [] }] });
	ss.setMetadata($System_Windows_Markup_KnownTypes, { members: [{ name: 'GetTypeConverter', isStatic: true, type: 8, sname: 'GetTypeConverter', returnType: $System_Windows_Markup_ITypeConverter, params: [Function] }] });
	ss.setMetadata($System_Windows_Markup_MarkupExtensionElementFactory, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Markup_IElementFactory] }, { name: 'CreateElement', type: 8, sname: 'CreateElement', returnType: Object, params: [$System_Windows_Markup_InitializeContext] }, { name: 'ElementType', type: 16, returnType: Function, getter: { name: 'get_ElementType', type: 8, sname: 'get_ElementType', returnType: Function, params: [] } }] });
	ss.setMetadata($System_Windows_Markup_MarkupExtensionParameterAttribute, { members: [{ name: '.ctor', type: 1, params: [String, ss.Int32] }, { name: 'Index', type: 16, returnType: ss.Int32, getter: { name: 'get_Index', type: 8, sname: 'get_Index', returnType: ss.Int32, params: [] }, setter: { name: 'set_Index', type: 8, sname: 'set_Index', returnType: Object, params: [ss.Int32] } }], attrAllowMultiple: true });
	ss.setMetadata($System_Windows_Markup_NameScope, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Markup_INameScope] }, { name: 'FindName', type: 8, sname: 'FindName', returnType: Object, params: [String] }, { name: 'GetContainingNameScope', isStatic: true, type: 8, sname: 'GetContainingNameScope', returnType: $System_Windows_Markup_INameScope, params: [$System_Windows_DependencyObject] }, { name: 'GetEnumerator', type: 8, sname: 'getEnumerator', returnType: ss.IEnumerator, params: [] }, { name: 'GetNameScope', isStatic: true, type: 8, sname: 'GetNameScope', returnType: $System_Windows_Markup_INameScope, params: [$System_Windows_DependencyObject] }, { name: 'GetTemplateNameScope', isStatic: true, type: 8, sname: 'GetTemplateNameScope', returnType: $System_Windows_Markup_INameScope, params: [$System_Windows_FrameworkElement] }, { name: 'RegisterName', type: 8, sname: 'RegisterName', returnType: Object, params: [String, Object] }, { name: 'SetNameScope', isStatic: true, type: 8, sname: 'SetNameScope', returnType: Object, params: [$System_Windows_DependencyObject, $System_Windows_Markup_INameScope] }, { name: 'UnregisterName', type: 8, sname: 'UnregisterName', returnType: Object, params: [String] }, { name: 'NameScopeProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'NameScopeProperty' }] });
	ss.setMetadata($System_Windows_Markup_PropertyAdapter, { members: [{ name: 'CreateAdapter', isStatic: true, type: 8, sname: 'CreateAdapter', returnType: $System_Windows_Markup_IPropertyAdapter, params: [Function, System.Xaml.XamlName] }] });
	ss.setMetadata($System_Windows_Markup_PropertyAttribute, { members: [{ name: '.ctor', type: 1, params: [String] }, { name: 'GetPropertyName', isStatic: true, type: 8, tpcount: 1, sname: 'GetPropertyName', returnType: String, params: [Function] }, { name: 'Name', type: 16, returnType: String, getter: { name: 'get_Name', type: 8, sname: 'get_Name', returnType: String, params: [] }, setter: { name: 'set_Name', type: 8, sname: 'set_Name', returnType: Object, params: [String] } }] });
	ss.setMetadata($System_Windows_Markup_PropertyPathParser, { members: [{ name: '.ctor', type: 1, params: [String, System.Xaml.XamlNamespaces] }, { name: 'Parse', type: 8, sname: 'Parse', returnType: ss.IEnumerable, params: [] }] });
	ss.setMetadata($System_Windows_Markup_RoutedEventAdapter, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_RoutedEvent] }, { name: 'AddHandler', type: 8, sname: 'AddHandler', returnType: Object, params: [Object, Function] }, { name: 'HandlerType', type: 16, returnType: Function, getter: { name: 'get_HandlerType', type: 8, sname: 'get_HandlerType', returnType: Function, params: [] } }] });
	ss.setMetadata($System_Windows_Markup_RuntimeNamePropertyAttribute, { members: [{ name: '.ctor', type: 1, params: [String] }] });
	ss.setMetadata($System_Windows_Markup_TypeConverter, { members: [{ name: 'ConvertValue', isStatic: true, type: 8, sname: 'ConvertValue', returnType: Object, params: [Object, Function, System.Xaml.XamlNamespaces] }] });
	ss.setMetadata($System_Windows_Markup_TypeConverterAttribute, { members: [{ name: '.ctor', type: 1, params: [Function] }, { name: 'ConverterType', type: 16, returnType: Function, getter: { name: 'get_ConverterType', type: 8, sname: 'get_ConverterType', returnType: Function, params: [] }, setter: { name: 'set_ConverterType', type: 8, sname: 'set_ConverterType', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Markup_TypeParser, { members: [{ name: 'ParseType', isStatic: true, type: 8, sname: 'ParseType', returnType: Function, params: [System.Xaml.XamlName] }, { name: 'ParseType', isStatic: true, type: 8, sname: 'ParseType$1', returnType: Function, params: [String, System.Xaml.XamlNamespaces] }] });
	ss.setMetadata($System_Windows_Markup_ValueProvider, { members: [{ name: '.ctor', type: 1, params: [Function] }, { name: 'ProvideValue', type: 8, sname: 'ProvideValue', returnType: Object, params: [] }] });
	ss.setMetadata($System_Windows_Markup_XamlElementExtensions, { members: [{ name: 'GetElementType', isStatic: true, type: 8, sname: 'GetElementType', returnType: Function, params: [System.Xaml.XamlElement] }] });
	ss.setMetadata($System_Windows_Markup_XamlLoader, { members: [{ name: 'Load', isStatic: true, type: 8, sname: 'Load', returnType: Object, params: [System.Xaml.XamlElement] }, { name: 'Load', isStatic: true, type: 8, sname: 'Load$1', returnType: Object, params: [Object, System.Xaml.XamlElement] }] });
	ss.setMetadata($System_Windows_Markup_XamlTypes, { members: [{ name: 'ParseXamlType', isStatic: true, type: 8, sname: 'ParseXamlType', returnType: Function, params: [System.Xaml.XamlName] }] });
	ss.setMetadata($System_Windows_Markup_XmlnsDefinitionAttribute, { members: [{ name: '.ctor', type: 1, params: [String, String, String] }, { name: 'AssemblyName', type: 16, returnType: String, getter: { name: 'get_AssemblyName', type: 8, sname: 'get_AssemblyName', returnType: String, params: [] }, setter: { name: 'set_AssemblyName', type: 8, sname: 'set_AssemblyName', returnType: Object, params: [String] } }, { name: 'ClrNamespace', type: 16, returnType: String, getter: { name: 'get_ClrNamespace', type: 8, sname: 'get_ClrNamespace', returnType: String, params: [] }, setter: { name: 'set_ClrNamespace', type: 8, sname: 'set_ClrNamespace', returnType: Object, params: [String] } }, { name: 'XmlNamespace', type: 16, returnType: String, getter: { name: 'get_XmlNamespace', type: 8, sname: 'get_XmlNamespace', returnType: String, params: [] }, setter: { name: 'set_XmlNamespace', type: 8, sname: 'set_XmlNamespace', returnType: Object, params: [String] } }], attrAllowMultiple: true });
	ss.setMetadata($System_Windows_Media_Brush, { attr: [new $System_Windows_Markup_TypeConverterAttribute($System_Windows_Media_BrushTypeConverter)], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Opacity', type: 16, returnType: Number, getter: { name: 'get_Opacity', type: 8, sname: 'get_Opacity', returnType: Number, params: [] }, setter: { name: 'set_Opacity', type: 8, sname: 'set_Opacity', returnType: Object, params: [Number] } }, { name: 'OpacityProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'OpacityProperty' }] });
	ss.setMetadata($System_Windows_Media_Brushes, { members: [{ name: 'AliceBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_AliceBlue', isStatic: true, type: 8, sname: 'get_AliceBlue', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'AntiqueWhite', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_AntiqueWhite', isStatic: true, type: 8, sname: 'get_AntiqueWhite', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Aqua', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Aqua', isStatic: true, type: 8, sname: 'get_Aqua', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Aquamarine', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Aquamarine', isStatic: true, type: 8, sname: 'get_Aquamarine', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Azure', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Azure', isStatic: true, type: 8, sname: 'get_Azure', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Beige', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Beige', isStatic: true, type: 8, sname: 'get_Beige', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Bisque', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Bisque', isStatic: true, type: 8, sname: 'get_Bisque', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Black', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Black', isStatic: true, type: 8, sname: 'get_Black', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'BlanchedAlmond', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_BlanchedAlmond', isStatic: true, type: 8, sname: 'get_BlanchedAlmond', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Blue', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Blue', isStatic: true, type: 8, sname: 'get_Blue', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'BlueViolet', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_BlueViolet', isStatic: true, type: 8, sname: 'get_BlueViolet', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Brown', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Brown', isStatic: true, type: 8, sname: 'get_Brown', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'BurlyWood', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_BurlyWood', isStatic: true, type: 8, sname: 'get_BurlyWood', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'CadetBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_CadetBlue', isStatic: true, type: 8, sname: 'get_CadetBlue', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Chartreuse', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Chartreuse', isStatic: true, type: 8, sname: 'get_Chartreuse', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Chocolate', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Chocolate', isStatic: true, type: 8, sname: 'get_Chocolate', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Coral', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Coral', isStatic: true, type: 8, sname: 'get_Coral', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'CornflowerBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_CornflowerBlue', isStatic: true, type: 8, sname: 'get_CornflowerBlue', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Cornsilk', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Cornsilk', isStatic: true, type: 8, sname: 'get_Cornsilk', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Crimson', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Crimson', isStatic: true, type: 8, sname: 'get_Crimson', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Cyan', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Cyan', isStatic: true, type: 8, sname: 'get_Cyan', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'DarkBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_DarkBlue', isStatic: true, type: 8, sname: 'get_DarkBlue', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'DarkCyan', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_DarkCyan', isStatic: true, type: 8, sname: 'get_DarkCyan', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'DarkGoldenrod', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_DarkGoldenrod', isStatic: true, type: 8, sname: 'get_DarkGoldenrod', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'DarkGray', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_DarkGray', isStatic: true, type: 8, sname: 'get_DarkGray', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'DarkGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_DarkGreen', isStatic: true, type: 8, sname: 'get_DarkGreen', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'DarkKhaki', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_DarkKhaki', isStatic: true, type: 8, sname: 'get_DarkKhaki', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'DarkMagenta', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_DarkMagenta', isStatic: true, type: 8, sname: 'get_DarkMagenta', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'DarkOliveGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_DarkOliveGreen', isStatic: true, type: 8, sname: 'get_DarkOliveGreen', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'DarkOrange', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_DarkOrange', isStatic: true, type: 8, sname: 'get_DarkOrange', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'DarkOrchid', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_DarkOrchid', isStatic: true, type: 8, sname: 'get_DarkOrchid', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'DarkRed', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_DarkRed', isStatic: true, type: 8, sname: 'get_DarkRed', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'DarkSalmon', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_DarkSalmon', isStatic: true, type: 8, sname: 'get_DarkSalmon', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'DarkSeaGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_DarkSeaGreen', isStatic: true, type: 8, sname: 'get_DarkSeaGreen', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'DarkSlateBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_DarkSlateBlue', isStatic: true, type: 8, sname: 'get_DarkSlateBlue', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'DarkSlateGray', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_DarkSlateGray', isStatic: true, type: 8, sname: 'get_DarkSlateGray', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'DarkTurquoise', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_DarkTurquoise', isStatic: true, type: 8, sname: 'get_DarkTurquoise', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'DarkViolet', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_DarkViolet', isStatic: true, type: 8, sname: 'get_DarkViolet', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'DeepPink', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_DeepPink', isStatic: true, type: 8, sname: 'get_DeepPink', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'DeepSkyBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_DeepSkyBlue', isStatic: true, type: 8, sname: 'get_DeepSkyBlue', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'DimGray', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_DimGray', isStatic: true, type: 8, sname: 'get_DimGray', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'DodgerBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_DodgerBlue', isStatic: true, type: 8, sname: 'get_DodgerBlue', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Firebrick', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Firebrick', isStatic: true, type: 8, sname: 'get_Firebrick', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'FloralWhite', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_FloralWhite', isStatic: true, type: 8, sname: 'get_FloralWhite', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'ForestGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_ForestGreen', isStatic: true, type: 8, sname: 'get_ForestGreen', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Fuchsia', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Fuchsia', isStatic: true, type: 8, sname: 'get_Fuchsia', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Gainsboro', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Gainsboro', isStatic: true, type: 8, sname: 'get_Gainsboro', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'GhostWhite', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_GhostWhite', isStatic: true, type: 8, sname: 'get_GhostWhite', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Gold', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Gold', isStatic: true, type: 8, sname: 'get_Gold', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Goldenrod', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Goldenrod', isStatic: true, type: 8, sname: 'get_Goldenrod', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Gray', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Gray', isStatic: true, type: 8, sname: 'get_Gray', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Green', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Green', isStatic: true, type: 8, sname: 'get_Green', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'GreenYellow', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_GreenYellow', isStatic: true, type: 8, sname: 'get_GreenYellow', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Honeydew', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Honeydew', isStatic: true, type: 8, sname: 'get_Honeydew', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'HotPink', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_HotPink', isStatic: true, type: 8, sname: 'get_HotPink', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'IndianRed', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_IndianRed', isStatic: true, type: 8, sname: 'get_IndianRed', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Indigo', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Indigo', isStatic: true, type: 8, sname: 'get_Indigo', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Ivory', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Ivory', isStatic: true, type: 8, sname: 'get_Ivory', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Khaki', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Khaki', isStatic: true, type: 8, sname: 'get_Khaki', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Lavender', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Lavender', isStatic: true, type: 8, sname: 'get_Lavender', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'LavenderBlush', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_LavenderBlush', isStatic: true, type: 8, sname: 'get_LavenderBlush', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'LawnGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_LawnGreen', isStatic: true, type: 8, sname: 'get_LawnGreen', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'LemonChiffon', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_LemonChiffon', isStatic: true, type: 8, sname: 'get_LemonChiffon', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'LightBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_LightBlue', isStatic: true, type: 8, sname: 'get_LightBlue', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'LightCoral', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_LightCoral', isStatic: true, type: 8, sname: 'get_LightCoral', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'LightCyan', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_LightCyan', isStatic: true, type: 8, sname: 'get_LightCyan', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'LightGoldenrodYellow', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_LightGoldenrodYellow', isStatic: true, type: 8, sname: 'get_LightGoldenrodYellow', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'LightGray', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_LightGray', isStatic: true, type: 8, sname: 'get_LightGray', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'LightGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_LightGreen', isStatic: true, type: 8, sname: 'get_LightGreen', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'LightPink', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_LightPink', isStatic: true, type: 8, sname: 'get_LightPink', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'LightSalmon', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_LightSalmon', isStatic: true, type: 8, sname: 'get_LightSalmon', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'LightSeaGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_LightSeaGreen', isStatic: true, type: 8, sname: 'get_LightSeaGreen', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'LightSkyBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_LightSkyBlue', isStatic: true, type: 8, sname: 'get_LightSkyBlue', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'LightSlateGray', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_LightSlateGray', isStatic: true, type: 8, sname: 'get_LightSlateGray', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'LightSteelBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_LightSteelBlue', isStatic: true, type: 8, sname: 'get_LightSteelBlue', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'LightYellow', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_LightYellow', isStatic: true, type: 8, sname: 'get_LightYellow', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Lime', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Lime', isStatic: true, type: 8, sname: 'get_Lime', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'LimeGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_LimeGreen', isStatic: true, type: 8, sname: 'get_LimeGreen', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Linen', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Linen', isStatic: true, type: 8, sname: 'get_Linen', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Magenta', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Magenta', isStatic: true, type: 8, sname: 'get_Magenta', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Maroon', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Maroon', isStatic: true, type: 8, sname: 'get_Maroon', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'MediumAquamarine', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_MediumAquamarine', isStatic: true, type: 8, sname: 'get_MediumAquamarine', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'MediumBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_MediumBlue', isStatic: true, type: 8, sname: 'get_MediumBlue', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'MediumOrchid', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_MediumOrchid', isStatic: true, type: 8, sname: 'get_MediumOrchid', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'MediumPurple', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_MediumPurple', isStatic: true, type: 8, sname: 'get_MediumPurple', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'MediumSeaGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_MediumSeaGreen', isStatic: true, type: 8, sname: 'get_MediumSeaGreen', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'MediumSlateBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_MediumSlateBlue', isStatic: true, type: 8, sname: 'get_MediumSlateBlue', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'MediumSpringGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_MediumSpringGreen', isStatic: true, type: 8, sname: 'get_MediumSpringGreen', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'MediumTurquoise', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_MediumTurquoise', isStatic: true, type: 8, sname: 'get_MediumTurquoise', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'MediumVioletRed', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_MediumVioletRed', isStatic: true, type: 8, sname: 'get_MediumVioletRed', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'MidnightBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_MidnightBlue', isStatic: true, type: 8, sname: 'get_MidnightBlue', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'MintCream', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_MintCream', isStatic: true, type: 8, sname: 'get_MintCream', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'MistyRose', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_MistyRose', isStatic: true, type: 8, sname: 'get_MistyRose', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Moccasin', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Moccasin', isStatic: true, type: 8, sname: 'get_Moccasin', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'NavajoWhite', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_NavajoWhite', isStatic: true, type: 8, sname: 'get_NavajoWhite', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Navy', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Navy', isStatic: true, type: 8, sname: 'get_Navy', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'OldLace', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_OldLace', isStatic: true, type: 8, sname: 'get_OldLace', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Olive', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Olive', isStatic: true, type: 8, sname: 'get_Olive', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'OliveDrab', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_OliveDrab', isStatic: true, type: 8, sname: 'get_OliveDrab', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Orange', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Orange', isStatic: true, type: 8, sname: 'get_Orange', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'OrangeRed', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_OrangeRed', isStatic: true, type: 8, sname: 'get_OrangeRed', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Orchid', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Orchid', isStatic: true, type: 8, sname: 'get_Orchid', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'PaleGoldenrod', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_PaleGoldenrod', isStatic: true, type: 8, sname: 'get_PaleGoldenrod', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'PaleGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_PaleGreen', isStatic: true, type: 8, sname: 'get_PaleGreen', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'PaleTurquoise', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_PaleTurquoise', isStatic: true, type: 8, sname: 'get_PaleTurquoise', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'PaleVioletRed', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_PaleVioletRed', isStatic: true, type: 8, sname: 'get_PaleVioletRed', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'PapayaWhip', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_PapayaWhip', isStatic: true, type: 8, sname: 'get_PapayaWhip', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'PeachPuff', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_PeachPuff', isStatic: true, type: 8, sname: 'get_PeachPuff', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Peru', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Peru', isStatic: true, type: 8, sname: 'get_Peru', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Pink', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Pink', isStatic: true, type: 8, sname: 'get_Pink', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Plum', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Plum', isStatic: true, type: 8, sname: 'get_Plum', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'PowderBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_PowderBlue', isStatic: true, type: 8, sname: 'get_PowderBlue', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Purple', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Purple', isStatic: true, type: 8, sname: 'get_Purple', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Red', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Red', isStatic: true, type: 8, sname: 'get_Red', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'RosyBrown', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_RosyBrown', isStatic: true, type: 8, sname: 'get_RosyBrown', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'RoyalBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_RoyalBlue', isStatic: true, type: 8, sname: 'get_RoyalBlue', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'SaddleBrown', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_SaddleBrown', isStatic: true, type: 8, sname: 'get_SaddleBrown', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Salmon', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Salmon', isStatic: true, type: 8, sname: 'get_Salmon', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'SandyBrown', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_SandyBrown', isStatic: true, type: 8, sname: 'get_SandyBrown', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'SeaGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_SeaGreen', isStatic: true, type: 8, sname: 'get_SeaGreen', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'SeaShell', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_SeaShell', isStatic: true, type: 8, sname: 'get_SeaShell', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Sienna', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Sienna', isStatic: true, type: 8, sname: 'get_Sienna', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Silver', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Silver', isStatic: true, type: 8, sname: 'get_Silver', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'SkyBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_SkyBlue', isStatic: true, type: 8, sname: 'get_SkyBlue', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'SlateBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_SlateBlue', isStatic: true, type: 8, sname: 'get_SlateBlue', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'SlateGray', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_SlateGray', isStatic: true, type: 8, sname: 'get_SlateGray', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Snow', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Snow', isStatic: true, type: 8, sname: 'get_Snow', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'SpringGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_SpringGreen', isStatic: true, type: 8, sname: 'get_SpringGreen', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'SteelBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_SteelBlue', isStatic: true, type: 8, sname: 'get_SteelBlue', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Tan', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Tan', isStatic: true, type: 8, sname: 'get_Tan', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Teal', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Teal', isStatic: true, type: 8, sname: 'get_Teal', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Thistle', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Thistle', isStatic: true, type: 8, sname: 'get_Thistle', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Tomato', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Tomato', isStatic: true, type: 8, sname: 'get_Tomato', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Transparent', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Transparent', isStatic: true, type: 8, sname: 'get_Transparent', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Turquoise', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Turquoise', isStatic: true, type: 8, sname: 'get_Turquoise', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Violet', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Violet', isStatic: true, type: 8, sname: 'get_Violet', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Wheat', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Wheat', isStatic: true, type: 8, sname: 'get_Wheat', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'White', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_White', isStatic: true, type: 8, sname: 'get_White', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'WhiteSmoke', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_WhiteSmoke', isStatic: true, type: 8, sname: 'get_WhiteSmoke', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'Yellow', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Yellow', isStatic: true, type: 8, sname: 'get_Yellow', returnType: $System_Windows_Media_Brush, params: [] } }, { name: 'YellowGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_YellowGreen', isStatic: true, type: 8, sname: 'get_YellowGreen', returnType: $System_Windows_Media_Brush, params: [] } }] });
	ss.setMetadata($System_Windows_Media_BrushTypeConverter, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ConvertFrom', type: 8, sname: 'ConvertFrom', returnType: Object, params: [System.Xaml.XamlNamespaces, Object] }] });
	ss.setMetadata($System_Windows_Media_Color, { attr: [new $System_Windows_Markup_TypeConverterAttribute($System_Windows_Media_ColorTypeConverter)], members: [{ name: 'Equals', type: 8, sname: 'equals', returnType: Boolean, params: [Object] }, { name: 'FromArgb', isStatic: true, type: 8, sname: 'FromArgb', returnType: $System_Windows_Media_Color, params: [ss.Int32, ss.Int32, ss.Int32, ss.Int32] }, { name: 'FromRgb', isStatic: true, type: 8, sname: 'FromRgb', returnType: $System_Windows_Media_Color, params: [ss.Int32, ss.Int32, ss.Int32] }, { name: 'FromUInt32', isStatic: true, type: 8, sname: 'FromUInt32', returnType: $System_Windows_Media_Color, params: [ss.Int32] }, { name: 'GetHashCode', type: 8, sname: 'getHashCode', returnType: ss.Int32, params: [] }, { name: 'IsClose', type: 8, sname: 'IsClose', returnType: Boolean, params: [$System_Windows_Media_Color] }, { name: 'ToString', type: 8, sname: 'toString', returnType: String, params: [] }, { name: 'op_Addition', isStatic: true, type: 8, sname: 'op_Addition', returnType: $System_Windows_Media_Color, params: [$System_Windows_Media_Color, $System_Windows_Media_Color] }, { name: 'op_Equality', isStatic: true, type: 8, sname: 'op_Equality', returnType: Boolean, params: [$System_Windows_Media_Color, $System_Windows_Media_Color] }, { name: 'op_Inequality', isStatic: true, type: 8, sname: 'op_Inequality', returnType: Boolean, params: [$System_Windows_Media_Color, $System_Windows_Media_Color] }, { name: 'op_Multiply', isStatic: true, type: 8, sname: 'op_Multiply', returnType: $System_Windows_Media_Color, params: [Number, $System_Windows_Media_Color] }, { name: 'op_Multiply', isStatic: true, type: 8, sname: 'op_Multiply$1', returnType: $System_Windows_Media_Color, params: [$System_Windows_Media_Color, Number] }, { name: 'op_Subtraction', isStatic: true, type: 8, sname: 'op_Subtraction', returnType: $System_Windows_Media_Color, params: [$System_Windows_Media_Color, $System_Windows_Media_Color] }, { name: 'A', type: 16, returnType: ss.Int32, getter: { name: 'get_A', type: 8, sname: 'get_A', returnType: ss.Int32, params: [] }, setter: { name: 'set_A', type: 8, sname: 'set_A', returnType: Object, params: [ss.Int32] } }, { name: 'B', type: 16, returnType: ss.Int32, getter: { name: 'get_B', type: 8, sname: 'get_B', returnType: ss.Int32, params: [] }, setter: { name: 'set_B', type: 8, sname: 'set_B', returnType: Object, params: [ss.Int32] } }, { name: 'G', type: 16, returnType: ss.Int32, getter: { name: 'get_G', type: 8, sname: 'get_G', returnType: ss.Int32, params: [] }, setter: { name: 'set_G', type: 8, sname: 'set_G', returnType: Object, params: [ss.Int32] } }, { name: 'R', type: 16, returnType: ss.Int32, getter: { name: 'get_R', type: 8, sname: 'get_R', returnType: ss.Int32, params: [] }, setter: { name: 'set_R', type: 8, sname: 'set_R', returnType: Object, params: [ss.Int32] } }] });
	ss.setMetadata($System_Windows_Media_ColorExtensions, { members: [{ name: 'ApplyOpacity', isStatic: true, type: 8, sname: 'ApplyOpacity', returnType: $System_Windows_Media_Color, params: [$System_Windows_Media_Color, Number] }] });
	ss.setMetadata($System_Windows_Media_Colors, { members: [{ name: 'AliceBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_AliceBlue', isStatic: true, type: 8, sname: 'get_AliceBlue', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'AntiqueWhite', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_AntiqueWhite', isStatic: true, type: 8, sname: 'get_AntiqueWhite', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Aqua', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Aqua', isStatic: true, type: 8, sname: 'get_Aqua', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Aquamarine', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Aquamarine', isStatic: true, type: 8, sname: 'get_Aquamarine', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Azure', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Azure', isStatic: true, type: 8, sname: 'get_Azure', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Beige', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Beige', isStatic: true, type: 8, sname: 'get_Beige', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Bisque', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Bisque', isStatic: true, type: 8, sname: 'get_Bisque', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Black', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Black', isStatic: true, type: 8, sname: 'get_Black', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'BlanchedAlmond', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_BlanchedAlmond', isStatic: true, type: 8, sname: 'get_BlanchedAlmond', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Blue', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Blue', isStatic: true, type: 8, sname: 'get_Blue', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'BlueViolet', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_BlueViolet', isStatic: true, type: 8, sname: 'get_BlueViolet', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Brown', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Brown', isStatic: true, type: 8, sname: 'get_Brown', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'BurlyWood', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_BurlyWood', isStatic: true, type: 8, sname: 'get_BurlyWood', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'CadetBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_CadetBlue', isStatic: true, type: 8, sname: 'get_CadetBlue', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Chartreuse', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Chartreuse', isStatic: true, type: 8, sname: 'get_Chartreuse', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Chocolate', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Chocolate', isStatic: true, type: 8, sname: 'get_Chocolate', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Coral', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Coral', isStatic: true, type: 8, sname: 'get_Coral', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'CornflowerBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_CornflowerBlue', isStatic: true, type: 8, sname: 'get_CornflowerBlue', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Cornsilk', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Cornsilk', isStatic: true, type: 8, sname: 'get_Cornsilk', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Crimson', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Crimson', isStatic: true, type: 8, sname: 'get_Crimson', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Cyan', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Cyan', isStatic: true, type: 8, sname: 'get_Cyan', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'DarkBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_DarkBlue', isStatic: true, type: 8, sname: 'get_DarkBlue', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'DarkCyan', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_DarkCyan', isStatic: true, type: 8, sname: 'get_DarkCyan', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'DarkGoldenrod', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_DarkGoldenrod', isStatic: true, type: 8, sname: 'get_DarkGoldenrod', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'DarkGray', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_DarkGray', isStatic: true, type: 8, sname: 'get_DarkGray', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'DarkGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_DarkGreen', isStatic: true, type: 8, sname: 'get_DarkGreen', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'DarkKhaki', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_DarkKhaki', isStatic: true, type: 8, sname: 'get_DarkKhaki', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'DarkMagenta', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_DarkMagenta', isStatic: true, type: 8, sname: 'get_DarkMagenta', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'DarkOliveGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_DarkOliveGreen', isStatic: true, type: 8, sname: 'get_DarkOliveGreen', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'DarkOrange', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_DarkOrange', isStatic: true, type: 8, sname: 'get_DarkOrange', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'DarkOrchid', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_DarkOrchid', isStatic: true, type: 8, sname: 'get_DarkOrchid', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'DarkRed', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_DarkRed', isStatic: true, type: 8, sname: 'get_DarkRed', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'DarkSalmon', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_DarkSalmon', isStatic: true, type: 8, sname: 'get_DarkSalmon', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'DarkSeaGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_DarkSeaGreen', isStatic: true, type: 8, sname: 'get_DarkSeaGreen', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'DarkSlateBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_DarkSlateBlue', isStatic: true, type: 8, sname: 'get_DarkSlateBlue', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'DarkSlateGray', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_DarkSlateGray', isStatic: true, type: 8, sname: 'get_DarkSlateGray', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'DarkTurquoise', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_DarkTurquoise', isStatic: true, type: 8, sname: 'get_DarkTurquoise', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'DarkViolet', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_DarkViolet', isStatic: true, type: 8, sname: 'get_DarkViolet', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'DeepPink', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_DeepPink', isStatic: true, type: 8, sname: 'get_DeepPink', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'DeepSkyBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_DeepSkyBlue', isStatic: true, type: 8, sname: 'get_DeepSkyBlue', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'DimGray', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_DimGray', isStatic: true, type: 8, sname: 'get_DimGray', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'DodgerBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_DodgerBlue', isStatic: true, type: 8, sname: 'get_DodgerBlue', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Firebrick', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Firebrick', isStatic: true, type: 8, sname: 'get_Firebrick', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'FloralWhite', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_FloralWhite', isStatic: true, type: 8, sname: 'get_FloralWhite', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'ForestGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_ForestGreen', isStatic: true, type: 8, sname: 'get_ForestGreen', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Fuchsia', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Fuchsia', isStatic: true, type: 8, sname: 'get_Fuchsia', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Gainsboro', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Gainsboro', isStatic: true, type: 8, sname: 'get_Gainsboro', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'GhostWhite', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_GhostWhite', isStatic: true, type: 8, sname: 'get_GhostWhite', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Gold', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Gold', isStatic: true, type: 8, sname: 'get_Gold', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Goldenrod', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Goldenrod', isStatic: true, type: 8, sname: 'get_Goldenrod', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Gray', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Gray', isStatic: true, type: 8, sname: 'get_Gray', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Green', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Green', isStatic: true, type: 8, sname: 'get_Green', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'GreenYellow', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_GreenYellow', isStatic: true, type: 8, sname: 'get_GreenYellow', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Honeydew', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Honeydew', isStatic: true, type: 8, sname: 'get_Honeydew', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'HotPink', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_HotPink', isStatic: true, type: 8, sname: 'get_HotPink', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'IndianRed', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_IndianRed', isStatic: true, type: 8, sname: 'get_IndianRed', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Indigo', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Indigo', isStatic: true, type: 8, sname: 'get_Indigo', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Ivory', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Ivory', isStatic: true, type: 8, sname: 'get_Ivory', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Khaki', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Khaki', isStatic: true, type: 8, sname: 'get_Khaki', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Lavender', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Lavender', isStatic: true, type: 8, sname: 'get_Lavender', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'LavenderBlush', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_LavenderBlush', isStatic: true, type: 8, sname: 'get_LavenderBlush', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'LawnGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_LawnGreen', isStatic: true, type: 8, sname: 'get_LawnGreen', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'LemonChiffon', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_LemonChiffon', isStatic: true, type: 8, sname: 'get_LemonChiffon', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'LightBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_LightBlue', isStatic: true, type: 8, sname: 'get_LightBlue', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'LightCoral', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_LightCoral', isStatic: true, type: 8, sname: 'get_LightCoral', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'LightCyan', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_LightCyan', isStatic: true, type: 8, sname: 'get_LightCyan', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'LightGoldenrodYellow', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_LightGoldenrodYellow', isStatic: true, type: 8, sname: 'get_LightGoldenrodYellow', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'LightGray', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_LightGray', isStatic: true, type: 8, sname: 'get_LightGray', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'LightGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_LightGreen', isStatic: true, type: 8, sname: 'get_LightGreen', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'LightPink', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_LightPink', isStatic: true, type: 8, sname: 'get_LightPink', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'LightSalmon', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_LightSalmon', isStatic: true, type: 8, sname: 'get_LightSalmon', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'LightSeaGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_LightSeaGreen', isStatic: true, type: 8, sname: 'get_LightSeaGreen', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'LightSkyBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_LightSkyBlue', isStatic: true, type: 8, sname: 'get_LightSkyBlue', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'LightSlateGray', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_LightSlateGray', isStatic: true, type: 8, sname: 'get_LightSlateGray', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'LightSteelBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_LightSteelBlue', isStatic: true, type: 8, sname: 'get_LightSteelBlue', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'LightYellow', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_LightYellow', isStatic: true, type: 8, sname: 'get_LightYellow', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Lime', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Lime', isStatic: true, type: 8, sname: 'get_Lime', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'LimeGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_LimeGreen', isStatic: true, type: 8, sname: 'get_LimeGreen', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Linen', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Linen', isStatic: true, type: 8, sname: 'get_Linen', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Magenta', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Magenta', isStatic: true, type: 8, sname: 'get_Magenta', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Maroon', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Maroon', isStatic: true, type: 8, sname: 'get_Maroon', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'MediumAquamarine', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_MediumAquamarine', isStatic: true, type: 8, sname: 'get_MediumAquamarine', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'MediumBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_MediumBlue', isStatic: true, type: 8, sname: 'get_MediumBlue', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'MediumOrchid', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_MediumOrchid', isStatic: true, type: 8, sname: 'get_MediumOrchid', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'MediumPurple', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_MediumPurple', isStatic: true, type: 8, sname: 'get_MediumPurple', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'MediumSeaGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_MediumSeaGreen', isStatic: true, type: 8, sname: 'get_MediumSeaGreen', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'MediumSlateBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_MediumSlateBlue', isStatic: true, type: 8, sname: 'get_MediumSlateBlue', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'MediumSpringGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_MediumSpringGreen', isStatic: true, type: 8, sname: 'get_MediumSpringGreen', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'MediumTurquoise', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_MediumTurquoise', isStatic: true, type: 8, sname: 'get_MediumTurquoise', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'MediumVioletRed', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_MediumVioletRed', isStatic: true, type: 8, sname: 'get_MediumVioletRed', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'MidnightBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_MidnightBlue', isStatic: true, type: 8, sname: 'get_MidnightBlue', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'MintCream', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_MintCream', isStatic: true, type: 8, sname: 'get_MintCream', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'MistyRose', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_MistyRose', isStatic: true, type: 8, sname: 'get_MistyRose', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Moccasin', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Moccasin', isStatic: true, type: 8, sname: 'get_Moccasin', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'NavajoWhite', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_NavajoWhite', isStatic: true, type: 8, sname: 'get_NavajoWhite', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Navy', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Navy', isStatic: true, type: 8, sname: 'get_Navy', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'OldLace', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_OldLace', isStatic: true, type: 8, sname: 'get_OldLace', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Olive', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Olive', isStatic: true, type: 8, sname: 'get_Olive', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'OliveDrab', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_OliveDrab', isStatic: true, type: 8, sname: 'get_OliveDrab', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Orange', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Orange', isStatic: true, type: 8, sname: 'get_Orange', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'OrangeRed', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_OrangeRed', isStatic: true, type: 8, sname: 'get_OrangeRed', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Orchid', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Orchid', isStatic: true, type: 8, sname: 'get_Orchid', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'PaleGoldenrod', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_PaleGoldenrod', isStatic: true, type: 8, sname: 'get_PaleGoldenrod', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'PaleGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_PaleGreen', isStatic: true, type: 8, sname: 'get_PaleGreen', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'PaleTurquoise', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_PaleTurquoise', isStatic: true, type: 8, sname: 'get_PaleTurquoise', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'PaleVioletRed', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_PaleVioletRed', isStatic: true, type: 8, sname: 'get_PaleVioletRed', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'PapayaWhip', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_PapayaWhip', isStatic: true, type: 8, sname: 'get_PapayaWhip', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'PeachPuff', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_PeachPuff', isStatic: true, type: 8, sname: 'get_PeachPuff', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Peru', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Peru', isStatic: true, type: 8, sname: 'get_Peru', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Pink', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Pink', isStatic: true, type: 8, sname: 'get_Pink', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Plum', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Plum', isStatic: true, type: 8, sname: 'get_Plum', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'PowderBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_PowderBlue', isStatic: true, type: 8, sname: 'get_PowderBlue', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Purple', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Purple', isStatic: true, type: 8, sname: 'get_Purple', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Red', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Red', isStatic: true, type: 8, sname: 'get_Red', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'RosyBrown', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_RosyBrown', isStatic: true, type: 8, sname: 'get_RosyBrown', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'RoyalBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_RoyalBlue', isStatic: true, type: 8, sname: 'get_RoyalBlue', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'SaddleBrown', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_SaddleBrown', isStatic: true, type: 8, sname: 'get_SaddleBrown', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Salmon', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Salmon', isStatic: true, type: 8, sname: 'get_Salmon', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'SandyBrown', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_SandyBrown', isStatic: true, type: 8, sname: 'get_SandyBrown', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'SeaGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_SeaGreen', isStatic: true, type: 8, sname: 'get_SeaGreen', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'SeaShell', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_SeaShell', isStatic: true, type: 8, sname: 'get_SeaShell', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Sienna', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Sienna', isStatic: true, type: 8, sname: 'get_Sienna', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Silver', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Silver', isStatic: true, type: 8, sname: 'get_Silver', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'SkyBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_SkyBlue', isStatic: true, type: 8, sname: 'get_SkyBlue', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'SlateBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_SlateBlue', isStatic: true, type: 8, sname: 'get_SlateBlue', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'SlateGray', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_SlateGray', isStatic: true, type: 8, sname: 'get_SlateGray', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Snow', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Snow', isStatic: true, type: 8, sname: 'get_Snow', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'SpringGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_SpringGreen', isStatic: true, type: 8, sname: 'get_SpringGreen', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'SteelBlue', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_SteelBlue', isStatic: true, type: 8, sname: 'get_SteelBlue', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Tan', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Tan', isStatic: true, type: 8, sname: 'get_Tan', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Teal', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Teal', isStatic: true, type: 8, sname: 'get_Teal', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Thistle', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Thistle', isStatic: true, type: 8, sname: 'get_Thistle', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Tomato', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Tomato', isStatic: true, type: 8, sname: 'get_Tomato', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Transparent', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Transparent', isStatic: true, type: 8, sname: 'get_Transparent', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Turquoise', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Turquoise', isStatic: true, type: 8, sname: 'get_Turquoise', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Violet', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Violet', isStatic: true, type: 8, sname: 'get_Violet', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Wheat', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Wheat', isStatic: true, type: 8, sname: 'get_Wheat', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'White', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_White', isStatic: true, type: 8, sname: 'get_White', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'WhiteSmoke', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_WhiteSmoke', isStatic: true, type: 8, sname: 'get_WhiteSmoke', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Yellow', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Yellow', isStatic: true, type: 8, sname: 'get_Yellow', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'YellowGreen', isStatic: true, type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_YellowGreen', isStatic: true, type: 8, sname: 'get_YellowGreen', returnType: $System_Windows_Media_Color, params: [] } }] });
	ss.setMetadata($System_Windows_Media_ColorTypeConverter, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ConvertFrom', type: 8, sname: 'ConvertFrom', returnType: Object, params: [System.Xaml.XamlNamespaces, Object] }] });
	ss.setMetadata($System_Windows_Media_GradientBrush, { attr: [new $System_Windows_Markup_ContentPropertyAttribute('GradientStops')], members: [{ name: '.ctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [ss.IEnumerable], sname: '$ctor1' }, { name: 'GradientStops', type: 16, returnType: $System_Windows_Media_GradientStopCollection, getter: { name: 'get_GradientStops', type: 8, sname: 'get_GradientStops', returnType: $System_Windows_Media_GradientStopCollection, params: [] }, setter: { name: 'set_GradientStops', type: 8, sname: 'set_GradientStops', returnType: Object, params: [$System_Windows_Media_GradientStopCollection] } }, { name: 'SpreadMethod', type: 16, returnType: $System_Windows_Media_GradientSpreadMethod, getter: { name: 'get_SpreadMethod', type: 8, sname: 'get_SpreadMethod', returnType: $System_Windows_Media_GradientSpreadMethod, params: [] }, setter: { name: 'set_SpreadMethod', type: 8, sname: 'set_SpreadMethod', returnType: Object, params: [$System_Windows_Media_GradientSpreadMethod] } }, { name: 'GradientStopsProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'GradientStopsProperty' }, { name: 'SpreadMethodProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'SpreadMethodProperty' }] });
	ss.setMetadata($System_Windows_Media_GradientStop, { members: [{ name: '.ctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [$System_Windows_Media_Color, Number], sname: '$ctor1' }, { name: 'Color', type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Color', type: 8, sname: 'get_Color', returnType: $System_Windows_Media_Color, params: [] }, setter: { name: 'set_Color', type: 8, sname: 'set_Color', returnType: Object, params: [$System_Windows_Media_Color] } }, { name: 'Offset', type: 16, returnType: Number, getter: { name: 'get_Offset', type: 8, sname: 'get_Offset', returnType: Number, params: [] }, setter: { name: 'set_Offset', type: 8, sname: 'set_Offset', returnType: Object, params: [Number] } }, { name: 'ColorProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ColorProperty' }, { name: 'OffsetProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'OffsetProperty' }] });
	ss.setMetadata($System_Windows_Media_GradientStopCollection, { members: [{ name: '.ctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [ss.IEnumerable], sname: '$ctor1' }] });
	ss.setMetadata($System_Windows_Media_IBorderRenderElement, { members: [{ name: 'Background', type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Background', type: 8, sname: 'get_Background', returnType: $System_Windows_Media_Brush, params: [] }, setter: { name: 'set_Background', type: 8, sname: 'set_Background', returnType: Object, params: [$System_Windows_Media_Brush] } }, { name: 'BorderBrush', type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_BorderBrush', type: 8, sname: 'get_BorderBrush', returnType: $System_Windows_Media_Brush, params: [] }, setter: { name: 'set_BorderBrush', type: 8, sname: 'set_BorderBrush', returnType: Object, params: [$System_Windows_Media_Brush] } }, { name: 'BorderThickness', type: 16, returnType: $System_Windows_Thickness, getter: { name: 'get_BorderThickness', type: 8, sname: 'get_BorderThickness', returnType: $System_Windows_Thickness, params: [] }, setter: { name: 'set_BorderThickness', type: 8, sname: 'set_BorderThickness', returnType: Object, params: [$System_Windows_Thickness] } }, { name: 'Bounds', type: 16, returnType: $System_Windows_Rect, getter: { name: 'get_Bounds', type: 8, sname: 'get_Bounds', returnType: $System_Windows_Rect, params: [] }, setter: { name: 'set_Bounds', type: 8, sname: 'set_Bounds', returnType: Object, params: [$System_Windows_Rect] } }, { name: 'CornerRadius', type: 16, returnType: $System_Windows_CornerRadius, getter: { name: 'get_CornerRadius', type: 8, sname: 'get_CornerRadius', returnType: $System_Windows_CornerRadius, params: [] }, setter: { name: 'set_CornerRadius', type: 8, sname: 'set_CornerRadius', returnType: Object, params: [$System_Windows_CornerRadius] } }, { name: 'IsHitTestVisible', type: 16, returnType: Boolean, getter: { name: 'get_IsHitTestVisible', type: 8, sname: 'get_IsHitTestVisible', returnType: Boolean, params: [] }, setter: { name: 'set_IsHitTestVisible', type: 8, sname: 'set_IsHitTestVisible', returnType: Object, params: [Boolean] } }] });
	ss.setMetadata($System_Windows_Media_IDrawingRenderElement, { members: [{ name: 'DrawLine', type: 8, sname: 'DrawLine', returnType: Object, params: [$System_Windows_Point, $System_Windows_Point] }] });
	ss.setMetadata($System_Windows_Media_IImageRenderElement, { members: [{ name: 'Bounds', type: 16, returnType: $System_Windows_Rect, getter: { name: 'get_Bounds', type: 8, sname: 'get_Bounds', returnType: $System_Windows_Rect, params: [] }, setter: { name: 'set_Bounds', type: 8, sname: 'set_Bounds', returnType: Object, params: [$System_Windows_Rect] } }, { name: 'Source', type: 16, returnType: $System_Windows_Media_ImageSource, getter: { name: 'get_Source', type: 8, sname: 'get_Source', returnType: $System_Windows_Media_ImageSource, params: [] }, setter: { name: 'set_Source', type: 8, sname: 'set_Source', returnType: Object, params: [$System_Windows_Media_ImageSource] } }] });
	ss.setMetadata($System_Windows_Media_ImageBrush, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ImageSource', type: 16, returnType: String, getter: { name: 'get_ImageSource', type: 8, sname: 'get_ImageSource', returnType: String, params: [] }, setter: { name: 'set_ImageSource', type: 8, sname: 'set_ImageSource', returnType: Object, params: [String] } }, { name: 'ImageSourceProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ImageSourceProperty' }] });
	ss.setMetadata($System_Windows_Media_ImageSource, { attr: [new $System_Windows_Markup_TypeConverterAttribute($System_Windows_Media_ImageSourceTypeConverter)], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'RenderImageSource', type: 16, returnType: $System_Windows_Media_IRenderImageSource, getter: { name: 'get_RenderImageSource', type: 8, sname: 'get_RenderImageSource', returnType: $System_Windows_Media_IRenderImageSource, params: [] } }, { name: 'Size', type: 16, returnType: $System_Windows_Size, getter: { name: 'get_Size', type: 8, sname: 'get_Size', returnType: $System_Windows_Size, params: [] } }] });
	ss.setMetadata($System_Windows_Media_ImageSourceTypeConverter, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'ConvertFrom', type: 8, sname: 'ConvertFrom', returnType: Object, params: [System.Xaml.XamlNamespaces, Object] }] });
	ss.setMetadata($System_Windows_Media_IRenderElementFactory, { members: [{ name: 'CreateBorderRenderElement', type: 8, sname: 'CreateBorderRenderElement', returnType: $System_Windows_Media_IBorderRenderElement, params: [Object] }, { name: 'CreateDrawingRenderElement', type: 8, sname: 'CreateDrawingRenderElement', returnType: $System_Windows_Media_IDrawingRenderElement, params: [Object] }, { name: 'CreateImageRenderElement', type: 8, sname: 'CreateImageRenderElement', returnType: $System_Windows_Media_IImageRenderElement, params: [Object] }, { name: 'CreateTextBlockRenderElement', type: 8, sname: 'CreateTextBlockRenderElement', returnType: $System_Windows_Media_ITextBlockRenderElement, params: [Object] }, { name: 'CreateTextBoxRenderElement', type: 8, sname: 'CreateTextBoxRenderElement', returnType: $System_Windows_Media_ITextBoxRenderElement, params: [Object] }, { name: 'CreateVisualRenderElement', type: 8, sname: 'CreateVisualRenderElement', returnType: $System_Windows_Media_IVisualRenderElement, params: [Object] }] });
	ss.setMetadata($System_Windows_Media_IRenderImageSource, { members: [{ name: 'Size', type: 16, returnType: $System_Windows_Size, getter: { name: 'get_Size', type: 8, sname: 'get_Size', returnType: $System_Windows_Size, params: [] } }, { name: 'State', type: 16, returnType: $System_Windows_Media_RenderImageState, getter: { name: 'get_State', type: 8, sname: 'get_State', returnType: $System_Windows_Media_RenderImageState, params: [] } }, { name: 'StateChanged', type: 2, adder: { name: 'add_StateChanged', type: 8, sname: 'add_StateChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_StateChanged', type: 8, sname: 'remove_StateChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Media_ITextBlockRenderElement, { members: [{ name: 'Bounds', type: 16, returnType: $System_Windows_Rect, getter: { name: 'get_Bounds', type: 8, sname: 'get_Bounds', returnType: $System_Windows_Rect, params: [] }, setter: { name: 'set_Bounds', type: 8, sname: 'set_Bounds', returnType: Object, params: [$System_Windows_Rect] } }, { name: 'FontFamily', type: 16, returnType: $System_Windows_FontFamily, getter: { name: 'get_FontFamily', type: 8, sname: 'get_FontFamily', returnType: $System_Windows_FontFamily, params: [] }, setter: { name: 'set_FontFamily', type: 8, sname: 'set_FontFamily', returnType: Object, params: [$System_Windows_FontFamily] } }, { name: 'FontSize', type: 16, returnType: Number, getter: { name: 'get_FontSize', type: 8, sname: 'get_FontSize', returnType: Number, params: [] }, setter: { name: 'set_FontSize', type: 8, sname: 'set_FontSize', returnType: Object, params: [Number] } }, { name: 'FontStretch', type: 16, returnType: $System_Windows_FontStretch, getter: { name: 'get_FontStretch', type: 8, sname: 'get_FontStretch', returnType: $System_Windows_FontStretch, params: [] }, setter: { name: 'set_FontStretch', type: 8, sname: 'set_FontStretch', returnType: Object, params: [$System_Windows_FontStretch] } }, { name: 'FontStyle', type: 16, returnType: $System_Windows_FontStyle, getter: { name: 'get_FontStyle', type: 8, sname: 'get_FontStyle', returnType: $System_Windows_FontStyle, params: [] }, setter: { name: 'set_FontStyle', type: 8, sname: 'set_FontStyle', returnType: Object, params: [$System_Windows_FontStyle] } }, { name: 'FontWeight', type: 16, returnType: $System_Windows_FontWeight, getter: { name: 'get_FontWeight', type: 8, sname: 'get_FontWeight', returnType: $System_Windows_FontWeight, params: [] }, setter: { name: 'set_FontWeight', type: 8, sname: 'set_FontWeight', returnType: Object, params: [$System_Windows_FontWeight] } }, { name: 'Foreground', type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Foreground', type: 8, sname: 'get_Foreground', returnType: $System_Windows_Media_Brush, params: [] }, setter: { name: 'set_Foreground', type: 8, sname: 'set_Foreground', returnType: Object, params: [$System_Windows_Media_Brush] } }, { name: 'Text', type: 16, returnType: String, getter: { name: 'get_Text', type: 8, sname: 'get_Text', returnType: String, params: [] }, setter: { name: 'set_Text', type: 8, sname: 'set_Text', returnType: Object, params: [String] } }, { name: 'TextAlignment', type: 16, returnType: $System_Windows_Controls_TextAlignment, getter: { name: 'get_TextAlignment', type: 8, sname: 'get_TextAlignment', returnType: $System_Windows_Controls_TextAlignment, params: [] }, setter: { name: 'set_TextAlignment', type: 8, sname: 'set_TextAlignment', returnType: Object, params: [$System_Windows_Controls_TextAlignment] } }, { name: 'TextTrimming', type: 16, returnType: $System_Windows_TextTrimming, getter: { name: 'get_TextTrimming', type: 8, sname: 'get_TextTrimming', returnType: $System_Windows_TextTrimming, params: [] }, setter: { name: 'set_TextTrimming', type: 8, sname: 'set_TextTrimming', returnType: Object, params: [$System_Windows_TextTrimming] } }, { name: 'TextWrapping', type: 16, returnType: $System_Windows_TextWrapping, getter: { name: 'get_TextWrapping', type: 8, sname: 'get_TextWrapping', returnType: $System_Windows_TextWrapping, params: [] }, setter: { name: 'set_TextWrapping', type: 8, sname: 'set_TextWrapping', returnType: Object, params: [$System_Windows_TextWrapping] } }] });
	ss.setMetadata($System_Windows_Media_ITextBoxRenderElement, { members: [{ name: 'ClearFocus', type: 8, sname: 'ClearFocus', returnType: Object, params: [] }, { name: 'Focus', type: 8, sname: 'Focus', returnType: Object, params: [] }, { name: 'ProcessKeyEvent', type: 8, sname: 'ProcessKeyEvent', returnType: Object, params: [$System_Windows_Input_KeyEventArgs] }, { name: 'AcceptsReturn', type: 16, returnType: Boolean, getter: { name: 'get_AcceptsReturn', type: 8, sname: 'get_AcceptsReturn', returnType: Boolean, params: [] }, setter: { name: 'set_AcceptsReturn', type: 8, sname: 'set_AcceptsReturn', returnType: Object, params: [Boolean] } }, { name: 'AcceptsTab', type: 16, returnType: Boolean, getter: { name: 'get_AcceptsTab', type: 8, sname: 'get_AcceptsTab', returnType: Boolean, params: [] }, setter: { name: 'set_AcceptsTab', type: 8, sname: 'set_AcceptsTab', returnType: Object, params: [Boolean] } }, { name: 'Bounds', type: 16, returnType: $System_Windows_Rect, getter: { name: 'get_Bounds', type: 8, sname: 'get_Bounds', returnType: $System_Windows_Rect, params: [] }, setter: { name: 'set_Bounds', type: 8, sname: 'set_Bounds', returnType: Object, params: [$System_Windows_Rect] } }, { name: 'CaretIndex', type: 16, returnType: ss.Int32, getter: { name: 'get_CaretIndex', type: 8, sname: 'get_CaretIndex', returnType: ss.Int32, params: [] }, setter: { name: 'set_CaretIndex', type: 8, sname: 'set_CaretIndex', returnType: Object, params: [ss.Int32] } }, { name: 'FontFamily', type: 16, returnType: $System_Windows_FontFamily, getter: { name: 'get_FontFamily', type: 8, sname: 'get_FontFamily', returnType: $System_Windows_FontFamily, params: [] }, setter: { name: 'set_FontFamily', type: 8, sname: 'set_FontFamily', returnType: Object, params: [$System_Windows_FontFamily] } }, { name: 'FontSize', type: 16, returnType: Number, getter: { name: 'get_FontSize', type: 8, sname: 'get_FontSize', returnType: Number, params: [] }, setter: { name: 'set_FontSize', type: 8, sname: 'set_FontSize', returnType: Object, params: [Number] } }, { name: 'FontStretch', type: 16, returnType: $System_Windows_FontStretch, getter: { name: 'get_FontStretch', type: 8, sname: 'get_FontStretch', returnType: $System_Windows_FontStretch, params: [] }, setter: { name: 'set_FontStretch', type: 8, sname: 'set_FontStretch', returnType: Object, params: [$System_Windows_FontStretch] } }, { name: 'FontStyle', type: 16, returnType: $System_Windows_FontStyle, getter: { name: 'get_FontStyle', type: 8, sname: 'get_FontStyle', returnType: $System_Windows_FontStyle, params: [] }, setter: { name: 'set_FontStyle', type: 8, sname: 'set_FontStyle', returnType: Object, params: [$System_Windows_FontStyle] } }, { name: 'FontWeight', type: 16, returnType: $System_Windows_FontWeight, getter: { name: 'get_FontWeight', type: 8, sname: 'get_FontWeight', returnType: $System_Windows_FontWeight, params: [] }, setter: { name: 'set_FontWeight', type: 8, sname: 'set_FontWeight', returnType: Object, params: [$System_Windows_FontWeight] } }, { name: 'Foreground', type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Foreground', type: 8, sname: 'get_Foreground', returnType: $System_Windows_Media_Brush, params: [] }, setter: { name: 'set_Foreground', type: 8, sname: 'set_Foreground', returnType: Object, params: [$System_Windows_Media_Brush] } }, { name: 'HorizontalScrollBarVisibility', type: 16, returnType: $System_Windows_Controls_ScrollBarVisibility, getter: { name: 'get_HorizontalScrollBarVisibility', type: 8, sname: 'get_HorizontalScrollBarVisibility', returnType: $System_Windows_Controls_ScrollBarVisibility, params: [] }, setter: { name: 'set_HorizontalScrollBarVisibility', type: 8, sname: 'set_HorizontalScrollBarVisibility', returnType: Object, params: [$System_Windows_Controls_ScrollBarVisibility] } }, { name: 'IsHitTestVisible', type: 16, returnType: Boolean, getter: { name: 'get_IsHitTestVisible', type: 8, sname: 'get_IsHitTestVisible', returnType: Boolean, params: [] }, setter: { name: 'set_IsHitTestVisible', type: 8, sname: 'set_IsHitTestVisible', returnType: Object, params: [Boolean] } }, { name: 'IsPassword', type: 16, returnType: Boolean, getter: { name: 'get_IsPassword', type: 8, sname: 'get_IsPassword', returnType: Boolean, params: [] }, setter: { name: 'set_IsPassword', type: 8, sname: 'set_IsPassword', returnType: Object, params: [Boolean] } }, { name: 'IsReadOnly', type: 16, returnType: Boolean, getter: { name: 'get_IsReadOnly', type: 8, sname: 'get_IsReadOnly', returnType: Boolean, params: [] }, setter: { name: 'set_IsReadOnly', type: 8, sname: 'set_IsReadOnly', returnType: Object, params: [Boolean] } }, { name: 'MaxLength', type: 16, returnType: ss.Int32, getter: { name: 'get_MaxLength', type: 8, sname: 'get_MaxLength', returnType: ss.Int32, params: [] }, setter: { name: 'set_MaxLength', type: 8, sname: 'set_MaxLength', returnType: Object, params: [ss.Int32] } }, { name: 'SelectionLength', type: 16, returnType: ss.Int32, getter: { name: 'get_SelectionLength', type: 8, sname: 'get_SelectionLength', returnType: ss.Int32, params: [] }, setter: { name: 'set_SelectionLength', type: 8, sname: 'set_SelectionLength', returnType: Object, params: [ss.Int32] } }, { name: 'SelectionStart', type: 16, returnType: ss.Int32, getter: { name: 'get_SelectionStart', type: 8, sname: 'get_SelectionStart', returnType: ss.Int32, params: [] }, setter: { name: 'set_SelectionStart', type: 8, sname: 'set_SelectionStart', returnType: Object, params: [ss.Int32] } }, { name: 'SpellCheck', type: 16, returnType: Boolean, getter: { name: 'get_SpellCheck', type: 8, sname: 'get_SpellCheck', returnType: Boolean, params: [] }, setter: { name: 'set_SpellCheck', type: 8, sname: 'set_SpellCheck', returnType: Object, params: [Boolean] } }, { name: 'Text', type: 16, returnType: String, getter: { name: 'get_Text', type: 8, sname: 'get_Text', returnType: String, params: [] }, setter: { name: 'set_Text', type: 8, sname: 'set_Text', returnType: Object, params: [String] } }, { name: 'TextAlignment', type: 16, returnType: $System_Windows_Controls_TextAlignment, getter: { name: 'get_TextAlignment', type: 8, sname: 'get_TextAlignment', returnType: $System_Windows_Controls_TextAlignment, params: [] }, setter: { name: 'set_TextAlignment', type: 8, sname: 'set_TextAlignment', returnType: Object, params: [$System_Windows_Controls_TextAlignment] } }, { name: 'TextWrapping', type: 16, returnType: $System_Windows_TextWrapping, getter: { name: 'get_TextWrapping', type: 8, sname: 'get_TextWrapping', returnType: $System_Windows_TextWrapping, params: [] }, setter: { name: 'set_TextWrapping', type: 8, sname: 'set_TextWrapping', returnType: Object, params: [$System_Windows_TextWrapping] } }, { name: 'VerticalScrollBarVisibility', type: 16, returnType: $System_Windows_Controls_ScrollBarVisibility, getter: { name: 'get_VerticalScrollBarVisibility', type: 8, sname: 'get_VerticalScrollBarVisibility', returnType: $System_Windows_Controls_ScrollBarVisibility, params: [] }, setter: { name: 'set_VerticalScrollBarVisibility', type: 8, sname: 'set_VerticalScrollBarVisibility', returnType: Object, params: [$System_Windows_Controls_ScrollBarVisibility] } }, { name: 'CaretIndexChanged', type: 2, adder: { name: 'add_CaretIndexChanged', type: 8, sname: 'add_CaretIndexChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_CaretIndexChanged', type: 8, sname: 'remove_CaretIndexChanged', returnType: Object, params: [Function] } }, { name: 'SelectionLengthChanged', type: 2, adder: { name: 'add_SelectionLengthChanged', type: 8, sname: 'add_SelectionLengthChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_SelectionLengthChanged', type: 8, sname: 'remove_SelectionLengthChanged', returnType: Object, params: [Function] } }, { name: 'SelectionStartChanged', type: 2, adder: { name: 'add_SelectionStartChanged', type: 8, sname: 'add_SelectionStartChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_SelectionStartChanged', type: 8, sname: 'remove_SelectionStartChanged', returnType: Object, params: [Function] } }, { name: 'TextChanged', type: 2, adder: { name: 'add_TextChanged', type: 8, sname: 'add_TextChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_TextChanged', type: 8, sname: 'remove_TextChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Media_IVisualRenderElement, { members: [{ name: 'InsertChild', type: 8, sname: 'InsertChild', returnType: Object, params: [ss.Int32, Object] }, { name: 'RemoveChild', type: 8, sname: 'RemoveChild', returnType: Object, params: [Object] }, { name: 'Background', type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_Background', type: 8, sname: 'get_Background', returnType: $System_Windows_Media_Brush, params: [] }, setter: { name: 'set_Background', type: 8, sname: 'set_Background', returnType: Object, params: [$System_Windows_Media_Brush] } }, { name: 'Bounds', type: 16, returnType: $System_Windows_Rect, getter: { name: 'get_Bounds', type: 8, sname: 'get_Bounds', returnType: $System_Windows_Rect, params: [] }, setter: { name: 'set_Bounds', type: 8, sname: 'set_Bounds', returnType: Object, params: [$System_Windows_Rect] } }, { name: 'Children', type: 16, returnType: ss.IEnumerable, getter: { name: 'get_Children', type: 8, sname: 'get_Children', returnType: ss.IEnumerable, params: [] } }, { name: 'ClipToBounds', type: 16, returnType: Boolean, getter: { name: 'get_ClipToBounds', type: 8, sname: 'get_ClipToBounds', returnType: Boolean, params: [] }, setter: { name: 'set_ClipToBounds', type: 8, sname: 'set_ClipToBounds', returnType: Object, params: [Boolean] } }, { name: 'IsHitTestVisible', type: 16, returnType: Boolean, getter: { name: 'get_IsHitTestVisible', type: 8, sname: 'get_IsHitTestVisible', returnType: Boolean, params: [] }, setter: { name: 'set_IsHitTestVisible', type: 8, sname: 'set_IsHitTestVisible', returnType: Object, params: [Boolean] } }, { name: 'IsVisible', type: 16, returnType: Boolean, getter: { name: 'get_IsVisible', type: 8, sname: 'get_IsVisible', returnType: Boolean, params: [] }, setter: { name: 'set_IsVisible', type: 8, sname: 'set_IsVisible', returnType: Object, params: [Boolean] } }, { name: 'Opacity', type: 16, returnType: Number, getter: { name: 'get_Opacity', type: 8, sname: 'get_Opacity', returnType: Number, params: [] }, setter: { name: 'set_Opacity', type: 8, sname: 'set_Opacity', returnType: Object, params: [Number] } }, { name: 'Transform', type: 16, returnType: $System_Windows_Media_Transform, getter: { name: 'get_Transform', type: 8, sname: 'get_Transform', returnType: $System_Windows_Media_Transform, params: [] }, setter: { name: 'set_Transform', type: 8, sname: 'set_Transform', returnType: Object, params: [$System_Windows_Media_Transform] } }] });
	ss.setMetadata($System_Windows_Media_LinearGradientBrush, { members: [{ name: '.ctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [Number, ss.IEnumerable], sname: '$ctor1' }, { name: '.ctor', type: 1, params: [Number, $System_Windows_Media_Color, $System_Windows_Media_Color], sname: '$ctor2' }, { name: '.ctor', type: 1, params: [$System_Windows_Point, $System_Windows_Point, ss.IEnumerable], sname: '$ctor3' }, { name: '.ctor', type: 1, params: [$System_Windows_Point, $System_Windows_Point, $System_Windows_Media_Color, $System_Windows_Media_Color], sname: '$ctor4' }, { name: 'Angle', type: 16, returnType: Number, getter: { name: 'get_Angle', type: 8, sname: 'get_Angle', returnType: Number, params: [] }, setter: { name: 'set_Angle', type: 8, sname: 'set_Angle', returnType: Object, params: [Number] } }, { name: 'EndPoint', type: 16, returnType: $System_Windows_Point, getter: { name: 'get_EndPoint', type: 8, sname: 'get_EndPoint', returnType: $System_Windows_Point, params: [] }, setter: { name: 'set_EndPoint', type: 8, sname: 'set_EndPoint', returnType: Object, params: [$System_Windows_Point] } }, { name: 'StartPoint', type: 16, returnType: $System_Windows_Point, getter: { name: 'get_StartPoint', type: 8, sname: 'get_StartPoint', returnType: $System_Windows_Point, params: [] }, setter: { name: 'set_StartPoint', type: 8, sname: 'set_StartPoint', returnType: Object, params: [$System_Windows_Point] } }, { name: 'AngleProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'AngleProperty' }, { name: 'EndPointProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'EndPointProperty' }, { name: 'StartPointProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'StartPointProperty' }] });
	ss.setMetadata($System_Windows_Media_Matrix, { members: [{ name: '.ctor', type: 1, params: [Number, Number, Number, Number, Number, Number] }, { name: 'Equals', type: 8, sname: 'equals', returnType: Boolean, params: [Object] }, { name: 'GetHashCode', type: 8, sname: 'getHashCode', returnType: ss.Int32, params: [] }, { name: 'IsClose', type: 8, sname: 'IsClose', returnType: Boolean, params: [$System_Windows_Media_Matrix] }, { name: 'Parse', isStatic: true, type: 8, sname: 'Parse', returnType: $System_Windows_Media_Matrix, params: [String] }, { name: 'RotationMatrix', isStatic: true, type: 8, sname: 'RotationMatrix', returnType: $System_Windows_Media_Matrix, params: [Number, Number, Number] }, { name: 'ScalingMatrix', isStatic: true, type: 8, sname: 'ScalingMatrix', returnType: $System_Windows_Media_Matrix, params: [Number, Number, Number, Number] }, { name: 'SkewMatrix', isStatic: true, type: 8, sname: 'SkewMatrix', returnType: $System_Windows_Media_Matrix, params: [Number, Number, Number, Number] }, { name: 'ToString', type: 8, sname: 'toString', returnType: String, params: [] }, { name: 'TranslationMatrix', isStatic: true, type: 8, sname: 'TranslationMatrix', returnType: $System_Windows_Media_Matrix, params: [Number, Number] }, { name: 'op_Equality', isStatic: true, type: 8, sname: 'op_Equality', returnType: Boolean, params: [$System_Windows_Media_Matrix, $System_Windows_Media_Matrix] }, { name: 'op_Inequality', isStatic: true, type: 8, sname: 'op_Inequality', returnType: Boolean, params: [$System_Windows_Media_Matrix, $System_Windows_Media_Matrix] }, { name: 'op_Multiply', isStatic: true, type: 8, sname: 'op_Multiply', returnType: $System_Windows_Media_Matrix, params: [$System_Windows_Media_Matrix, $System_Windows_Media_Matrix] }, { name: 'op_Multiply', isStatic: true, type: 8, sname: 'op_Multiply$1', returnType: $System_Windows_Point, params: [$System_Windows_Point, $System_Windows_Media_Matrix] }, { name: 'IsIdentity', type: 16, returnType: Boolean, getter: { name: 'get_IsIdentity', type: 8, sname: 'get_IsIdentity', returnType: Boolean, params: [] } }, { name: 'IsScaling', type: 16, returnType: Boolean, getter: { name: 'get_IsScaling', type: 8, sname: 'get_IsScaling', returnType: Boolean, params: [] } }, { name: 'IsTranslation', type: 16, returnType: Boolean, getter: { name: 'get_IsTranslation', type: 8, sname: 'get_IsTranslation', returnType: Boolean, params: [] } }, { name: 'M11', type: 16, returnType: Number, getter: { name: 'get_M11', type: 8, sname: 'get_M11', returnType: Number, params: [] }, setter: { name: 'set_M11', type: 8, sname: 'set_M11', returnType: Object, params: [Number] } }, { name: 'M12', type: 16, returnType: Number, getter: { name: 'get_M12', type: 8, sname: 'get_M12', returnType: Number, params: [] }, setter: { name: 'set_M12', type: 8, sname: 'set_M12', returnType: Object, params: [Number] } }, { name: 'M21', type: 16, returnType: Number, getter: { name: 'get_M21', type: 8, sname: 'get_M21', returnType: Number, params: [] }, setter: { name: 'set_M21', type: 8, sname: 'set_M21', returnType: Object, params: [Number] } }, { name: 'M22', type: 16, returnType: Number, getter: { name: 'get_M22', type: 8, sname: 'get_M22', returnType: Number, params: [] }, setter: { name: 'set_M22', type: 8, sname: 'set_M22', returnType: Object, params: [Number] } }, { name: 'OffsetX', type: 16, returnType: Number, getter: { name: 'get_OffsetX', type: 8, sname: 'get_OffsetX', returnType: Number, params: [] }, setter: { name: 'set_OffsetX', type: 8, sname: 'set_OffsetX', returnType: Object, params: [Number] } }, { name: 'OffsetY', type: 16, returnType: Number, getter: { name: 'get_OffsetY', type: 8, sname: 'get_OffsetY', returnType: Number, params: [] }, setter: { name: 'set_OffsetY', type: 8, sname: 'set_OffsetY', returnType: Object, params: [Number] } }, { name: 'Identity', isStatic: true, type: 4, returnType: $System_Windows_Media_Matrix, sname: 'Identity' }] });
	ss.setMetadata($System_Windows_Media_RadialGradientBrush, { members: [{ name: '.ctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [ss.IEnumerable], sname: '$ctor1' }, { name: '.ctor', type: 1, params: [$System_Windows_Media_Color, $System_Windows_Media_Color], sname: '$ctor2' }, { name: 'Center', type: 16, returnType: $System_Windows_Point, getter: { name: 'get_Center', type: 8, sname: 'get_Center', returnType: $System_Windows_Point, params: [] }, setter: { name: 'set_Center', type: 8, sname: 'set_Center', returnType: Object, params: [$System_Windows_Point] } }, { name: 'GradientOrigin', type: 16, returnType: $System_Windows_Point, getter: { name: 'get_GradientOrigin', type: 8, sname: 'get_GradientOrigin', returnType: $System_Windows_Point, params: [] }, setter: { name: 'set_GradientOrigin', type: 8, sname: 'set_GradientOrigin', returnType: Object, params: [$System_Windows_Point] } }, { name: 'RadiusX', type: 16, returnType: Number, getter: { name: 'get_RadiusX', type: 8, sname: 'get_RadiusX', returnType: Number, params: [] }, setter: { name: 'set_RadiusX', type: 8, sname: 'set_RadiusX', returnType: Object, params: [Number] } }, { name: 'RadiusY', type: 16, returnType: Number, getter: { name: 'get_RadiusY', type: 8, sname: 'get_RadiusY', returnType: Number, params: [] }, setter: { name: 'set_RadiusY', type: 8, sname: 'set_RadiusY', returnType: Object, params: [Number] } }, { name: 'CenterProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'CenterProperty' }, { name: 'GradientOriginProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'GradientOriginProperty' }, { name: 'RadiusXProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'RadiusXProperty' }, { name: 'RadiusYProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'RadiusYProperty' }] });
	ss.setMetadata($System_Windows_Media_RotateTransform, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Angle', type: 16, returnType: Number, getter: { name: 'get_Angle', type: 8, sname: 'get_Angle', returnType: Number, params: [] }, setter: { name: 'set_Angle', type: 8, sname: 'set_Angle', returnType: Object, params: [Number] } }, { name: 'CenterX', type: 16, returnType: Number, getter: { name: 'get_CenterX', type: 8, sname: 'get_CenterX', returnType: Number, params: [] }, setter: { name: 'set_CenterX', type: 8, sname: 'set_CenterX', returnType: Object, params: [Number] } }, { name: 'CenterY', type: 16, returnType: Number, getter: { name: 'get_CenterY', type: 8, sname: 'get_CenterY', returnType: Number, params: [] }, setter: { name: 'set_CenterY', type: 8, sname: 'set_CenterY', returnType: Object, params: [Number] } }, { name: 'Value', type: 16, returnType: $System_Windows_Media_Matrix, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: $System_Windows_Media_Matrix, params: [] } }, { name: 'AngleProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'AngleProperty' }, { name: 'CenterXProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'CenterXProperty' }, { name: 'CenterYProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'CenterYProperty' }] });
	ss.setMetadata($System_Windows_Media_ScaleTransform, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'CenterX', type: 16, returnType: Number, getter: { name: 'get_CenterX', type: 8, sname: 'get_CenterX', returnType: Number, params: [] }, setter: { name: 'set_CenterX', type: 8, sname: 'set_CenterX', returnType: Object, params: [Number] } }, { name: 'CenterY', type: 16, returnType: Number, getter: { name: 'get_CenterY', type: 8, sname: 'get_CenterY', returnType: Number, params: [] }, setter: { name: 'set_CenterY', type: 8, sname: 'set_CenterY', returnType: Object, params: [Number] } }, { name: 'ScaleX', type: 16, returnType: Number, getter: { name: 'get_ScaleX', type: 8, sname: 'get_ScaleX', returnType: Number, params: [] }, setter: { name: 'set_ScaleX', type: 8, sname: 'set_ScaleX', returnType: Object, params: [Number] } }, { name: 'ScaleY', type: 16, returnType: Number, getter: { name: 'get_ScaleY', type: 8, sname: 'get_ScaleY', returnType: Number, params: [] }, setter: { name: 'set_ScaleY', type: 8, sname: 'set_ScaleY', returnType: Object, params: [Number] } }, { name: 'Value', type: 16, returnType: $System_Windows_Media_Matrix, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: $System_Windows_Media_Matrix, params: [] } }, { name: 'CenterXProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'CenterXProperty' }, { name: 'CenterYProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'CenterYProperty' }, { name: 'ScaleXProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ScaleXProperty' }, { name: 'ScaleYProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ScaleYProperty' }] });
	ss.setMetadata($System_Windows_Media_SkewTransform, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'AngleX', type: 16, returnType: Number, getter: { name: 'get_AngleX', type: 8, sname: 'get_AngleX', returnType: Number, params: [] }, setter: { name: 'set_AngleX', type: 8, sname: 'set_AngleX', returnType: Object, params: [Number] } }, { name: 'AngleY', type: 16, returnType: Number, getter: { name: 'get_AngleY', type: 8, sname: 'get_AngleY', returnType: Number, params: [] }, setter: { name: 'set_AngleY', type: 8, sname: 'set_AngleY', returnType: Object, params: [Number] } }, { name: 'CenterX', type: 16, returnType: Number, getter: { name: 'get_CenterX', type: 8, sname: 'get_CenterX', returnType: Number, params: [] }, setter: { name: 'set_CenterX', type: 8, sname: 'set_CenterX', returnType: Object, params: [Number] } }, { name: 'CenterY', type: 16, returnType: Number, getter: { name: 'get_CenterY', type: 8, sname: 'get_CenterY', returnType: Number, params: [] }, setter: { name: 'set_CenterY', type: 8, sname: 'set_CenterY', returnType: Object, params: [Number] } }, { name: 'Value', type: 16, returnType: $System_Windows_Media_Matrix, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: $System_Windows_Media_Matrix, params: [] } }, { name: 'AngleXProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'AngleXProperty' }, { name: 'AngleYProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'AngleYProperty' }, { name: 'CenterXProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'CenterXProperty' }, { name: 'CenterYProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'CenterYProperty' }] });
	ss.setMetadata($System_Windows_Media_SolidColorBrush, { members: [{ name: '.ctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [$System_Windows_Media_Color], sname: '$ctor1' }, { name: 'ToString', type: 8, sname: 'toString', returnType: String, params: [] }, { name: 'Color', type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Color', type: 8, sname: 'get_Color', returnType: $System_Windows_Media_Color, params: [] }, setter: { name: 'set_Color', type: 8, sname: 'set_Color', returnType: Object, params: [$System_Windows_Media_Color] } }, { name: 'ColorProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ColorProperty' }] });
	ss.setMetadata($System_Windows_Media_TileBrush, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Stretch', type: 16, returnType: $System_Windows_Media_Stretch, getter: { name: 'get_Stretch', type: 8, sname: 'get_Stretch', returnType: $System_Windows_Media_Stretch, params: [] }, setter: { name: 'set_Stretch', type: 8, sname: 'set_Stretch', returnType: Object, params: [$System_Windows_Media_Stretch] } }, { name: 'TileMode', type: 16, returnType: $System_Windows_Media_TileMode, getter: { name: 'get_TileMode', type: 8, sname: 'get_TileMode', returnType: $System_Windows_Media_TileMode, params: [] }, setter: { name: 'set_TileMode', type: 8, sname: 'set_TileMode', returnType: Object, params: [$System_Windows_Media_TileMode] } }, { name: 'Viewport', type: 16, returnType: $System_Windows_Rect, getter: { name: 'get_Viewport', type: 8, sname: 'get_Viewport', returnType: $System_Windows_Rect, params: [] }, setter: { name: 'set_Viewport', type: 8, sname: 'set_Viewport', returnType: Object, params: [$System_Windows_Rect] } }, { name: 'ViewportUnits', type: 16, returnType: $System_Windows_Media_BrushMappingMode, getter: { name: 'get_ViewportUnits', type: 8, sname: 'get_ViewportUnits', returnType: $System_Windows_Media_BrushMappingMode, params: [] }, setter: { name: 'set_ViewportUnits', type: 8, sname: 'set_ViewportUnits', returnType: Object, params: [$System_Windows_Media_BrushMappingMode] } }, { name: 'StretchProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'StretchProperty' }, { name: 'TileModeProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'TileModeProperty' }, { name: 'ViewportProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ViewportProperty' }, { name: 'ViewportUnitsProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ViewportUnitsProperty' }] });
	ss.setMetadata($System_Windows_Media_Transform, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Value', type: 16, returnType: $System_Windows_Media_Matrix, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: $System_Windows_Media_Matrix, params: [] } }, { name: 'Identity', isStatic: true, type: 4, returnType: $System_Windows_Media_Transform, sname: 'Identity' }] });
	ss.setMetadata($System_Windows_Media_Typeface, { members: [{ name: '.ctor', type: 1, params: [String, $System_Windows_FontStyle, $System_Windows_FontWeight, $System_Windows_FontStretch] }, { name: '.ctor', type: 1, params: [$System_Windows_FontFamily, $System_Windows_FontStyle, $System_Windows_FontWeight, $System_Windows_FontStretch], sname: '$ctor1' }, { name: 'FontFamily', type: 16, returnType: $System_Windows_FontFamily, getter: { name: 'get_FontFamily', type: 8, sname: 'get_FontFamily', returnType: $System_Windows_FontFamily, params: [] }, setter: { name: 'set_FontFamily', type: 8, sname: 'set_FontFamily', returnType: Object, params: [$System_Windows_FontFamily] } }, { name: 'Stretch', type: 16, returnType: $System_Windows_FontStretch, getter: { name: 'get_Stretch', type: 8, sname: 'get_Stretch', returnType: $System_Windows_FontStretch, params: [] }, setter: { name: 'set_Stretch', type: 8, sname: 'set_Stretch', returnType: Object, params: [$System_Windows_FontStretch] } }, { name: 'Style', type: 16, returnType: $System_Windows_FontStyle, getter: { name: 'get_Style', type: 8, sname: 'get_Style', returnType: $System_Windows_FontStyle, params: [] }, setter: { name: 'set_Style', type: 8, sname: 'set_Style', returnType: Object, params: [$System_Windows_FontStyle] } }, { name: 'Weight', type: 16, returnType: $System_Windows_FontWeight, getter: { name: 'get_Weight', type: 8, sname: 'get_Weight', returnType: $System_Windows_FontWeight, params: [] }, setter: { name: 'set_Weight', type: 8, sname: 'set_Weight', returnType: Object, params: [$System_Windows_FontWeight] } }] });
	ss.setMetadata($System_Windows_Media_Visual, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'AddVisualChild', type: 8, sname: 'AddVisualChild', returnType: Object, params: [$System_Windows_Media_Visual] }, { name: 'ClearVisualChildren', type: 8, sname: 'ClearVisualChildren', returnType: Object, params: [] }, { name: 'CreateContentRenderElementOverride', type: 8, sname: 'CreateContentRenderElementOverride', returnType: Object, params: [$System_Windows_Media_IRenderElementFactory] }, { name: 'GetRenderElement', type: 8, sname: 'GetRenderElement', returnType: $System_Windows_Media_IVisualRenderElement, params: [$System_Windows_Media_IRenderElementFactory] }, { name: 'OnVisualAncestorChanged', type: 8, sname: 'OnVisualAncestorChanged', returnType: Object, params: [] }, { name: 'OnVisualParentChanged', type: 8, sname: 'OnVisualParentChanged', returnType: Object, params: [$System_Windows_Media_Visual, $System_Windows_Media_Visual] }, { name: 'PointFromRoot', type: 8, sname: 'PointFromRoot', returnType: $System_Windows_Point, params: [$System_Windows_Point] }, { name: 'PointToRoot', type: 8, sname: 'PointToRoot', returnType: $System_Windows_Point, params: [$System_Windows_Point] }, { name: 'RemoveRenderElement', type: 8, sname: 'RemoveRenderElement', returnType: Object, params: [$System_Windows_Media_IRenderElementFactory] }, { name: 'RemoveVisualChild', type: 8, sname: 'RemoveVisualChild', returnType: Object, params: [$System_Windows_Media_Visual] }, { name: 'SetVisualChildIndex', type: 8, sname: 'SetVisualChildIndex', returnType: Object, params: [$System_Windows_Media_Visual, ss.Int32] }, { name: 'VisualBackground', type: 16, returnType: $System_Windows_Media_Brush, getter: { name: 'get_VisualBackground', type: 8, sname: 'get_VisualBackground', returnType: $System_Windows_Media_Brush, params: [] }, setter: { name: 'set_VisualBackground', type: 8, sname: 'set_VisualBackground', returnType: Object, params: [$System_Windows_Media_Brush] } }, { name: 'VisualBounds', type: 16, returnType: $System_Windows_Rect, getter: { name: 'get_VisualBounds', type: 8, sname: 'get_VisualBounds', returnType: $System_Windows_Rect, params: [] }, setter: { name: 'set_VisualBounds', type: 8, sname: 'set_VisualBounds', returnType: Object, params: [$System_Windows_Rect] } }, { name: 'VisualChildren', type: 16, returnType: Array, getter: { name: 'get_VisualChildren', type: 8, sname: 'get_VisualChildren', returnType: Array, params: [] }, setter: { name: 'set_VisualChildren', type: 8, sname: 'set_VisualChildren', returnType: Object, params: [Array] } }, { name: 'VisualClipToBounds', type: 16, returnType: Boolean, getter: { name: 'get_VisualClipToBounds', type: 8, sname: 'get_VisualClipToBounds', returnType: Boolean, params: [] }, setter: { name: 'set_VisualClipToBounds', type: 8, sname: 'set_VisualClipToBounds', returnType: Object, params: [Boolean] } }, { name: 'VisualIsHitTestVisible', type: 16, returnType: Boolean, getter: { name: 'get_VisualIsHitTestVisible', type: 8, sname: 'get_VisualIsHitTestVisible', returnType: Boolean, params: [] }, setter: { name: 'set_VisualIsHitTestVisible', type: 8, sname: 'set_VisualIsHitTestVisible', returnType: Object, params: [Boolean] } }, { name: 'VisualIsVisible', type: 16, returnType: Boolean, getter: { name: 'get_VisualIsVisible', type: 8, sname: 'get_VisualIsVisible', returnType: Boolean, params: [] }, setter: { name: 'set_VisualIsVisible', type: 8, sname: 'set_VisualIsVisible', returnType: Object, params: [Boolean] } }, { name: 'VisualLevel', type: 16, returnType: ss.Int32, getter: { name: 'get_VisualLevel', type: 8, sname: 'get_VisualLevel', returnType: ss.Int32, params: [] } }, { name: 'VisualOffset', type: 16, returnType: $System_Windows_Point, getter: { name: 'get_VisualOffset', type: 8, sname: 'get_VisualOffset', returnType: $System_Windows_Point, params: [] } }, { name: 'VisualOpacity', type: 16, returnType: Number, getter: { name: 'get_VisualOpacity', type: 8, sname: 'get_VisualOpacity', returnType: Number, params: [] }, setter: { name: 'set_VisualOpacity', type: 8, sname: 'set_VisualOpacity', returnType: Object, params: [Number] } }, { name: 'VisualParent', type: 16, returnType: $System_Windows_Media_Visual, getter: { name: 'get_VisualParent', type: 8, sname: 'get_VisualParent', returnType: $System_Windows_Media_Visual, params: [] }, setter: { name: 'set_VisualParent', type: 8, sname: 'set_VisualParent', returnType: Object, params: [$System_Windows_Media_Visual] } }, { name: 'VisualSize', type: 16, returnType: $System_Windows_Size, getter: { name: 'get_VisualSize', type: 8, sname: 'get_VisualSize', returnType: $System_Windows_Size, params: [] } }, { name: 'VisualTransform', type: 16, returnType: $System_Windows_Media_Transform, getter: { name: 'get_VisualTransform', type: 8, sname: 'get_VisualTransform', returnType: $System_Windows_Media_Transform, params: [] }, setter: { name: 'set_VisualTransform', type: 8, sname: 'set_VisualTransform', returnType: Object, params: [$System_Windows_Media_Transform] } }, { name: 'VisualAncestorChanged', type: 2, adder: { name: 'add_VisualAncestorChanged', type: 8, sname: 'add_VisualAncestorChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_VisualAncestorChanged', type: 8, sname: 'remove_VisualAncestorChanged', returnType: Object, params: [Function] } }, { name: 'VisualParentChanged', type: 2, adder: { name: 'add_VisualParentChanged', type: 8, sname: 'add_VisualParentChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_VisualParentChanged', type: 8, sname: 'remove_VisualParentChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Media_VisualExtensions, { members: [{ name: 'IsAncestorOf', isStatic: true, type: 8, sname: 'IsAncestorOf', returnType: Boolean, params: [$System_Windows_Media_Visual, $System_Windows_Media_Visual] }] });
	ss.setMetadata($System_Windows_Media_VisualWeakReference, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Media_Visual, $System_Windows_Media_Visual] }, { name: 'Dispose', type: 8, sname: 'dispose', returnType: Object, params: [] }, { name: 'Visual', type: 16, returnType: $System_Windows_Media_Visual, getter: { name: 'get_Visual', type: 8, sname: 'get_Visual', returnType: $System_Windows_Media_Visual, params: [] }, setter: { name: 'set_Visual', type: 8, sname: 'set_Visual', returnType: Object, params: [$System_Windows_Media_Visual] } }] });
	ss.setMetadata($System_Windows_Media_Animation_$ColorAnimationOperations, { members: [{ name: 'Add', type: 8, sname: 'Add', returnType: $System_Windows_Media_Color, params: [$System_Windows_Media_Color, $System_Windows_Media_Color] }, { name: 'Interpolate', type: 8, sname: 'Interpolate', returnType: $System_Windows_Media_Color, params: [$System_Windows_Media_Color, $System_Windows_Media_Color, Number] }, { name: 'Scale', type: 8, sname: 'Scale', returnType: $System_Windows_Media_Color, params: [$System_Windows_Media_Color, Number] }, { name: 'Subtract', type: 8, sname: 'Subtract', returnType: $System_Windows_Media_Color, params: [$System_Windows_Media_Color, $System_Windows_Media_Color] }, { name: 'Zero', type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Zero', type: 8, sname: 'get_Zero', returnType: $System_Windows_Media_Color, params: [] } }, { name: 'Default', isStatic: true, type: 4, returnType: $System_Windows_Media_Animation_$ColorAnimationOperations, sname: '$Default' }] });
	ss.setMetadata($System_Windows_Media_Animation_$DoubleAnimationOperations, { members: [{ name: 'Add', type: 8, sname: 'Add', returnType: ss.makeGenericType(ss.Nullable$1, [Number]), params: [ss.makeGenericType(ss.Nullable$1, [Number]), ss.makeGenericType(ss.Nullable$1, [Number])] }, { name: 'Interpolate', type: 8, sname: 'Interpolate', returnType: ss.makeGenericType(ss.Nullable$1, [Number]), params: [ss.makeGenericType(ss.Nullable$1, [Number]), ss.makeGenericType(ss.Nullable$1, [Number]), Number] }, { name: 'Scale', type: 8, sname: 'Scale', returnType: ss.makeGenericType(ss.Nullable$1, [Number]), params: [ss.makeGenericType(ss.Nullable$1, [Number]), Number] }, { name: 'Subtract', type: 8, sname: 'Subtract', returnType: ss.makeGenericType(ss.Nullable$1, [Number]), params: [ss.makeGenericType(ss.Nullable$1, [Number]), ss.makeGenericType(ss.Nullable$1, [Number])] }, { name: 'Zero', type: 16, returnType: ss.makeGenericType(ss.Nullable$1, [Number]), getter: { name: 'get_Zero', type: 8, sname: 'get_Zero', returnType: ss.makeGenericType(ss.Nullable$1, [Number]), params: [] } }, { name: 'Default', isStatic: true, type: 4, returnType: $System_Windows_Media_Animation_$DoubleAnimationOperations, sname: '$Default' }] });
	ss.setMetadata($System_Windows_Media_Animation_$RectAnimationOperations, { members: [{ name: 'Add', type: 8, sname: 'Add', returnType: $System_Windows_Rect, params: [$System_Windows_Rect, $System_Windows_Rect] }, { name: 'Interpolate', type: 8, sname: 'Interpolate', returnType: $System_Windows_Rect, params: [$System_Windows_Rect, $System_Windows_Rect, Number] }, { name: 'Scale', type: 8, sname: 'Scale', returnType: $System_Windows_Rect, params: [$System_Windows_Rect, Number] }, { name: 'Subtract', type: 8, sname: 'Subtract', returnType: $System_Windows_Rect, params: [$System_Windows_Rect, $System_Windows_Rect] }, { name: 'Zero', type: 16, returnType: $System_Windows_Rect, getter: { name: 'get_Zero', type: 8, sname: 'get_Zero', returnType: $System_Windows_Rect, params: [] } }, { name: 'Default', isStatic: true, type: 4, returnType: $System_Windows_Media_Animation_$RectAnimationOperations, sname: '$Default' }] });
	ss.setMetadata($System_Windows_Media_Animation_$ThicknessAnimationOperations, { members: [{ name: 'Add', type: 8, sname: 'Add', returnType: $System_Windows_Thickness, params: [$System_Windows_Thickness, $System_Windows_Thickness] }, { name: 'Interpolate', type: 8, sname: 'Interpolate', returnType: $System_Windows_Thickness, params: [$System_Windows_Thickness, $System_Windows_Thickness, Number] }, { name: 'Scale', type: 8, sname: 'Scale', returnType: $System_Windows_Thickness, params: [$System_Windows_Thickness, Number] }, { name: 'Subtract', type: 8, sname: 'Subtract', returnType: $System_Windows_Thickness, params: [$System_Windows_Thickness, $System_Windows_Thickness] }, { name: 'Zero', type: 16, returnType: $System_Windows_Thickness, getter: { name: 'get_Zero', type: 8, sname: 'get_Zero', returnType: $System_Windows_Thickness, params: [] } }, { name: 'Default', isStatic: true, type: 4, returnType: $System_Windows_Media_Animation_$ThicknessAnimationOperations, sname: '$Default' }] });
	ss.setMetadata($System_Windows_Media_Animation_Animatable, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'AddAnimationClocks', type: 8, sname: 'AddAnimationClocks', returnType: Object, params: [$System_Windows_DependencyProperty, ss.IEnumerable, Object] }, { name: 'OnInheritanceParentChanged', type: 8, sname: 'OnInheritanceParentChanged', returnType: Object, params: [$System_Windows_DependencyObject, $System_Windows_DependencyObject] }, { name: 'RemoveAnimationClocks', type: 8, sname: 'RemoveAnimationClocks', returnType: Object, params: [$System_Windows_DependencyProperty, ss.IEnumerable, Object] }, { name: 'SetAnimationClocks', type: 8, sname: 'SetAnimationClocks', returnType: Object, params: [$System_Windows_DependencyProperty, ss.IEnumerable, Object] }, { name: 'RootClock', type: 16, returnType: $System_Windows_Media_Animation_IRootClock, getter: { name: 'get_RootClock', type: 8, sname: 'get_RootClock', returnType: $System_Windows_Media_Animation_IRootClock, params: [] }, setter: { name: 'set_RootClock', type: 8, sname: 'set_RootClock', returnType: Object, params: [$System_Windows_Media_Animation_IRootClock] } }] });
	ss.setMetadata($System_Windows_Media_Animation_AnimatableExtensions, { members: [{ name: 'ApplyAnimationClock', isStatic: true, type: 8, sname: 'ApplyAnimationClock', returnType: Object, params: [$System_Windows_Media_Animation_IAnimatable, $System_Windows_DependencyProperty, $System_Windows_Media_Animation_AnimationTimelineClock, $System_Windows_Media_Animation_HandoffBehavior, Object] }, { name: 'ApplyAnimationClocks', isStatic: true, type: 8, sname: 'ApplyAnimationClocks', returnType: Object, params: [$System_Windows_Media_Animation_IAnimatable, $System_Windows_DependencyProperty, ss.IEnumerable, $System_Windows_Media_Animation_HandoffBehavior, Object] }, { name: 'BeginAnimation', isStatic: true, type: 8, sname: 'BeginAnimation', returnType: Object, params: [$System_Windows_Media_Animation_IAnimatable, $System_Windows_DependencyProperty, $System_Windows_Media_Animation_AnimationTimeline, $System_Windows_Media_Animation_HandoffBehavior, Object] }, { name: 'ClearAnimationClocks', isStatic: true, type: 8, sname: 'ClearAnimationClocks', returnType: Object, params: [$System_Windows_Media_Animation_IAnimatable, $System_Windows_DependencyProperty, Object] }] });
	ss.setMetadata($System_Windows_Media_Animation_AnimatableRootClock, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Media_Animation_IRootClock, Boolean] }, { name: 'AddClock', type: 8, sname: 'AddClock', returnType: Object, params: [$System_Windows_Media_Animation_IClock] }, { name: 'RemoveClock', type: 8, sname: 'RemoveClock', returnType: Object, params: [$System_Windows_Media_Animation_IClock] }, { name: 'IsConnected', type: 16, returnType: Boolean, getter: { name: 'get_IsConnected', type: 8, sname: 'get_IsConnected', returnType: Boolean, params: [] }, setter: { name: 'set_IsConnected', type: 8, sname: 'set_IsConnected', returnType: Object, params: [Boolean] } }, { name: 'Time', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_Time', type: 8, sname: 'get_Time', returnType: ss.TimeSpan, params: [] } }] });
	ss.setMetadata($System_Windows_Media_Animation_AnimationClock, { members: [{ name: '.ctor', type: 1, params: [ss.TimeSpan] }, { name: 'Tick', type: 8, sname: 'Tick', returnType: $System_Windows_Media_Animation_ClockState, params: [ss.TimeSpan] }, { name: 'Duration', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_Duration', type: 8, sname: 'get_Duration', returnType: ss.TimeSpan, params: [] }, setter: { name: 'set_Duration', type: 8, sname: 'set_Duration', returnType: Object, params: [ss.TimeSpan] } }, { name: 'FirstTick', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_FirstTick', type: 8, sname: 'get_FirstTick', returnType: ss.TimeSpan, params: [] } }, { name: 'LastTick', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_LastTick', type: 8, sname: 'get_LastTick', returnType: ss.TimeSpan, params: [] } }] });
	ss.setMetadata($System_Windows_Media_Animation_AnimationExpression, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_DependencyObject, $System_Windows_DependencyProperty] }, { name: 'AddClocks', type: 8, sname: 'AddClocks', returnType: Object, params: [ss.IEnumerable, Object] }, { name: 'RemoveClocks', type: 8, sname: 'RemoveClocks', returnType: Object, params: [ss.IEnumerable, Object] }, { name: 'SetClocks', type: 8, sname: 'SetClocks', returnType: Object, params: [ss.IEnumerable, Object] }, { name: 'SetValue', type: 8, sname: 'SetValue', returnType: Boolean, params: [Object] }, { name: 'Value', type: 16, returnType: Object, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: Object, params: [] } }, { name: 'ValueChanged', type: 2, adder: { name: 'add_ValueChanged', type: 8, sname: 'add_ValueChanged', returnType: Object, params: [Function] }, remover: { name: 'remove_ValueChanged', type: 8, sname: 'remove_ValueChanged', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Media_Animation_AnimationLayer, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'AddClocks', type: 8, sname: 'AddClocks', returnType: Object, params: [ss.IEnumerable] }, { name: 'Dispose', type: 8, sname: 'dispose', returnType: Object, params: [] }, { name: 'GetValue', type: 8, sname: 'GetValue', returnType: Object, params: [Object] }, { name: 'RemoveClocks', type: 8, sname: 'RemoveClocks', returnType: Object, params: [ss.IEnumerable] }, { name: 'SetClocks', type: 8, sname: 'SetClocks', returnType: Object, params: [ss.IEnumerable, Object] }, { name: 'HasValue', type: 16, returnType: Boolean, getter: { name: 'get_HasValue', type: 8, sname: 'get_HasValue', returnType: Boolean, params: [] } }, { name: 'IsEmpty', type: 16, returnType: Boolean, getter: { name: 'get_IsEmpty', type: 8, sname: 'get_IsEmpty', returnType: Boolean, params: [] } }, { name: 'ClockInvalidated', type: 2, adder: { name: 'add_ClockInvalidated', type: 8, sname: 'add_ClockInvalidated', returnType: Object, params: [Function] }, remover: { name: 'remove_ClockInvalidated', type: 8, sname: 'remove_ClockInvalidated', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Media_Animation_AnimationLayerCollection, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'AddClocks', type: 8, sname: 'AddClocks', returnType: Object, params: [ss.IEnumerable, $System_Windows_Media_Animation_AnimationLayerKey] }, { name: 'GetValue', type: 8, sname: 'GetValue', returnType: Object, params: [Object] }, { name: 'RemoveClocks', type: 8, sname: 'RemoveClocks', returnType: Object, params: [ss.IEnumerable, $System_Windows_Media_Animation_AnimationLayerKey] }, { name: 'SetClocks', type: 8, sname: 'SetClocks', returnType: Object, params: [ss.IEnumerable, Object, $System_Windows_Media_Animation_AnimationLayerKey] }, { name: 'HasValue', type: 16, returnType: Boolean, getter: { name: 'get_HasValue', type: 8, sname: 'get_HasValue', returnType: Boolean, params: [] } }, { name: 'LayerInvalidated', type: 2, adder: { name: 'add_LayerInvalidated', type: 8, sname: 'add_LayerInvalidated', returnType: Object, params: [Function] }, remover: { name: 'remove_LayerInvalidated', type: 8, sname: 'remove_LayerInvalidated', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Media_Animation_AnimationLayerKey, { members: [{ name: 'Equals', type: 8, sname: 'equals', returnType: Boolean, params: [Object] }, { name: 'FromLayerOwner', isStatic: true, type: 8, sname: 'FromLayerOwner', returnType: $System_Windows_Media_Animation_AnimationLayerKey, params: [Object] }, { name: 'GetHashCode', type: 8, sname: 'getHashCode', returnType: ss.Int32, params: [] }, { name: 'Default', isStatic: true, type: 4, returnType: $System_Windows_Media_Animation_AnimationLayerKey, sname: 'Default' }] });
	ss.setMetadata($System_Windows_Media_Animation_AnimationTimeline, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'CreateClock', type: 8, sname: 'CreateClock', returnType: $System_Windows_Media_Animation_TimelineClock, params: [] }, { name: 'GetCurrentValue', type: 8, sname: 'GetCurrentValue', returnType: Object, params: [Object, Object, $System_Windows_Media_Animation_AnimationTimelineClock] }, { name: 'IsAdditive', type: 16, returnType: Boolean, getter: { name: 'get_IsAdditive', type: 8, sname: 'get_IsAdditive', returnType: Boolean, params: [] }, setter: { name: 'set_IsAdditive', type: 8, sname: 'set_IsAdditive', returnType: Object, params: [Boolean] } }, { name: 'IsCumulative', type: 16, returnType: Boolean, getter: { name: 'get_IsCumulative', type: 8, sname: 'get_IsCumulative', returnType: Boolean, params: [] }, setter: { name: 'set_IsCumulative', type: 8, sname: 'set_IsCumulative', returnType: Object, params: [Boolean] } }, { name: 'IsAdditiveProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsAdditiveProperty' }, { name: 'IsCumulativeProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'IsCumulativeProperty' }] });
	ss.setMetadata($System_Windows_Media_Animation_AnimationTimelineClock, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Media_Animation_AnimationTimeline] }, { name: 'GetValue', type: 8, sname: 'GetValue', returnType: Object, params: [Object, Object] }] });
	ss.setMetadata($System_Windows_Media_Animation_BackEase, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'EaseOverride', type: 8, sname: 'EaseOverride', returnType: Number, params: [Number] }, { name: 'Amplitude', type: 16, returnType: Number, getter: { name: 'get_Amplitude', type: 8, sname: 'get_Amplitude', returnType: Number, params: [] }, setter: { name: 'set_Amplitude', type: 8, sname: 'set_Amplitude', returnType: Object, params: [Number] } }, { name: 'AmplitudeProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'AmplitudeProperty' }] });
	ss.setMetadata($System_Windows_Media_Animation_BeginStoryboard, { attr: [new $System_Windows_Markup_RuntimeNamePropertyAttribute('Name'), new $System_Windows_Markup_ContentPropertyAttribute('Storyboard')], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Apply', type: 8, sname: 'Apply', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_BaseValueSource] }, { name: 'Clean', type: 8, sname: 'Clean', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_BaseValueSource] }, { name: 'IsActionOverlaps', type: 8, sname: 'IsActionOverlaps', returnType: Boolean, params: [$System_Windows_ITriggerAction] }, { name: 'Pause', type: 8, sname: 'Pause', returnType: Object, params: [$System_Windows_FrameworkElement] }, { name: 'Remove', type: 8, sname: 'Remove', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_Markup_INameScope, Object] }, { name: 'Resume', type: 8, sname: 'Resume', returnType: Object, params: [$System_Windows_FrameworkElement] }, { name: 'SkipToFill', type: 8, sname: 'SkipToFill', returnType: Object, params: [$System_Windows_FrameworkElement] }, { name: 'Stop', type: 8, sname: 'Stop', returnType: Object, params: [$System_Windows_FrameworkElement] }, { name: 'HandoffBehavior', type: 16, returnType: $System_Windows_Media_Animation_HandoffBehavior, getter: { name: 'get_HandoffBehavior', type: 8, sname: 'get_HandoffBehavior', returnType: $System_Windows_Media_Animation_HandoffBehavior, params: [] }, setter: { name: 'set_HandoffBehavior', type: 8, sname: 'set_HandoffBehavior', returnType: Object, params: [$System_Windows_Media_Animation_HandoffBehavior] } }, { name: 'Name', type: 16, returnType: String, getter: { name: 'get_Name', type: 8, sname: 'get_Name', returnType: String, params: [] }, setter: { name: 'set_Name', type: 8, sname: 'set_Name', returnType: Object, params: [String] } }, { name: 'Storyboard', type: 16, returnType: $System_Windows_Media_Animation_Storyboard, getter: { name: 'get_Storyboard', type: 8, sname: 'get_Storyboard', returnType: $System_Windows_Media_Animation_Storyboard, params: [] }, setter: { name: 'set_Storyboard', type: 8, sname: 'set_Storyboard', returnType: Object, params: [$System_Windows_Media_Animation_Storyboard] } }, { name: 'StoryboardProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'StoryboardProperty' }] });
	ss.setMetadata($System_Windows_Media_Animation_CircleEase, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'EaseOverride', type: 8, sname: 'EaseOverride', returnType: Number, params: [Number] }] });
	ss.setMetadata($System_Windows_Media_Animation_ClockState, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Media_Animation_ClockProgressState, Number, Number, ss.TimeSpan, ss.TimeSpan] }, { name: 'Iteration', type: 16, returnType: Number, getter: { name: 'get_Iteration', type: 8, sname: 'get_Iteration', returnType: Number, params: [] }, setter: { name: 'set_Iteration', type: 8, sname: 'set_Iteration', returnType: Object, params: [Number] } }, { name: 'NextTick', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_NextTick', type: 8, sname: 'get_NextTick', returnType: ss.TimeSpan, params: [] }, setter: { name: 'set_NextTick', type: 8, sname: 'set_NextTick', returnType: Object, params: [ss.TimeSpan] } }, { name: 'PreviousTick', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_PreviousTick', type: 8, sname: 'get_PreviousTick', returnType: ss.TimeSpan, params: [] }, setter: { name: 'set_PreviousTick', type: 8, sname: 'set_PreviousTick', returnType: Object, params: [ss.TimeSpan] } }, { name: 'Progress', type: 16, returnType: Number, getter: { name: 'get_Progress', type: 8, sname: 'get_Progress', returnType: Number, params: [] }, setter: { name: 'set_Progress', type: 8, sname: 'set_Progress', returnType: Object, params: [Number] } }, { name: 'ProgressState', type: 16, returnType: $System_Windows_Media_Animation_ClockProgressState, getter: { name: 'get_ProgressState', type: 8, sname: 'get_ProgressState', returnType: $System_Windows_Media_Animation_ClockProgressState, params: [] }, setter: { name: 'set_ProgressState', type: 8, sname: 'set_ProgressState', returnType: Object, params: [$System_Windows_Media_Animation_ClockProgressState] } }, { name: 'Empty', isStatic: true, type: 4, returnType: $System_Windows_Media_Animation_ClockState, sname: 'Empty' }] });
	ss.setMetadata($System_Windows_Media_Animation_ColorAnimation, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GetCurrentValue', type: 8, sname: 'GetCurrentValue', returnType: Object, params: [Object, Object, $System_Windows_Media_Animation_AnimationTimelineClock] }, { name: 'By', type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_By', type: 8, sname: 'get_By', returnType: $System_Windows_Media_Color, params: [] }, setter: { name: 'set_By', type: 8, sname: 'set_By', returnType: Object, params: [$System_Windows_Media_Color] } }, { name: 'EasingFunction', type: 16, returnType: $System_Windows_Media_Animation_IEasingFunction, getter: { name: 'get_EasingFunction', type: 8, sname: 'get_EasingFunction', returnType: $System_Windows_Media_Animation_IEasingFunction, params: [] }, setter: { name: 'set_EasingFunction', type: 8, sname: 'set_EasingFunction', returnType: Object, params: [$System_Windows_Media_Animation_IEasingFunction] } }, { name: 'From', type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_From', type: 8, sname: 'get_From', returnType: $System_Windows_Media_Color, params: [] }, setter: { name: 'set_From', type: 8, sname: 'set_From', returnType: Object, params: [$System_Windows_Media_Color] } }, { name: 'To', type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_To', type: 8, sname: 'get_To', returnType: $System_Windows_Media_Color, params: [] }, setter: { name: 'set_To', type: 8, sname: 'set_To', returnType: Object, params: [$System_Windows_Media_Color] } }, { name: 'ByProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ByProperty' }, { name: 'EasingFunctionProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'EasingFunctionProperty' }, { name: 'FromProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'FromProperty' }, { name: 'ToProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ToProperty' }] });
	ss.setMetadata($System_Windows_Media_Animation_ColorAnimationUsingKeyFrames, { attr: [new $System_Windows_Markup_ContentPropertyAttribute('KeyFrames')], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GetCurrentValue', type: 8, sname: 'GetCurrentValue', returnType: Object, params: [Object, Object, $System_Windows_Media_Animation_AnimationTimelineClock] }, { name: 'KeyFrames', type: 16, returnType: ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Media_Animation_ColorKeyFrame]), getter: { name: 'get_KeyFrames', type: 8, sname: 'get_KeyFrames', returnType: ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Media_Animation_ColorKeyFrame]), params: [] }, setter: { name: 'set_KeyFrames', type: 8, sname: 'set_KeyFrames', returnType: Object, params: [ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Media_Animation_ColorKeyFrame])] } }] });
	ss.setMetadata($System_Windows_Media_Animation_ColorKeyFrame, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'InterpolateValue', type: 8, sname: 'InterpolateValue', returnType: $System_Windows_Media_Color, params: [$System_Windows_Media_Color, Number] }, { name: 'KeyTime', type: 16, returnType: $System_Windows_Media_Animation_KeyTime, getter: { name: 'get_KeyTime', type: 8, sname: 'get_KeyTime', returnType: $System_Windows_Media_Animation_KeyTime, params: [] }, setter: { name: 'set_KeyTime', type: 8, sname: 'set_KeyTime', returnType: Object, params: [$System_Windows_Media_Animation_KeyTime] } }, { name: 'Value', type: 16, returnType: $System_Windows_Media_Color, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: $System_Windows_Media_Color, params: [] }, setter: { name: 'set_Value', type: 8, sname: 'set_Value', returnType: Object, params: [$System_Windows_Media_Color] } }, { name: 'KeyTimeProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'KeyTimeProperty' }, { name: 'ValueProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ValueProperty' }] });
	ss.setMetadata($System_Windows_Media_Animation_CubicEase, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'EaseOverride', type: 8, sname: 'EaseOverride', returnType: Number, params: [Number] }] });
	ss.setMetadata($System_Windows_Media_Animation_DiscreteColorKeyFrame, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'InterpolateValue', type: 8, sname: 'InterpolateValue', returnType: $System_Windows_Media_Color, params: [$System_Windows_Media_Color, Number] }] });
	ss.setMetadata($System_Windows_Media_Animation_DiscreteDoubleKeyFrame, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'InterpolateValue', type: 8, sname: 'InterpolateValue', returnType: ss.makeGenericType(ss.Nullable$1, [Number]), params: [ss.makeGenericType(ss.Nullable$1, [Number]), Number] }] });
	ss.setMetadata($System_Windows_Media_Animation_DiscreteRectKeyFrame, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'InterpolateValue', type: 8, sname: 'InterpolateValue', returnType: $System_Windows_Rect, params: [$System_Windows_Rect, Number] }] });
	ss.setMetadata($System_Windows_Media_Animation_DiscreteThicknessKeyFrame, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'InterpolateValue', type: 8, sname: 'InterpolateValue', returnType: $System_Windows_Thickness, params: [$System_Windows_Thickness, Number] }] });
	ss.setMetadata($System_Windows_Media_Animation_DoubleAnimation, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GetCurrentValue', type: 8, sname: 'GetCurrentValue', returnType: Object, params: [Object, Object, $System_Windows_Media_Animation_AnimationTimelineClock] }, { name: 'By', type: 16, returnType: ss.makeGenericType(ss.Nullable$1, [Number]), getter: { name: 'get_By', type: 8, sname: 'get_By', returnType: ss.makeGenericType(ss.Nullable$1, [Number]), params: [] }, setter: { name: 'set_By', type: 8, sname: 'set_By', returnType: Object, params: [ss.makeGenericType(ss.Nullable$1, [Number])] } }, { name: 'EasingFunction', type: 16, returnType: $System_Windows_Media_Animation_IEasingFunction, getter: { name: 'get_EasingFunction', type: 8, sname: 'get_EasingFunction', returnType: $System_Windows_Media_Animation_IEasingFunction, params: [] }, setter: { name: 'set_EasingFunction', type: 8, sname: 'set_EasingFunction', returnType: Object, params: [$System_Windows_Media_Animation_IEasingFunction] } }, { name: 'From', type: 16, returnType: ss.makeGenericType(ss.Nullable$1, [Number]), getter: { name: 'get_From', type: 8, sname: 'get_From', returnType: ss.makeGenericType(ss.Nullable$1, [Number]), params: [] }, setter: { name: 'set_From', type: 8, sname: 'set_From', returnType: Object, params: [ss.makeGenericType(ss.Nullable$1, [Number])] } }, { name: 'To', type: 16, returnType: ss.makeGenericType(ss.Nullable$1, [Number]), getter: { name: 'get_To', type: 8, sname: 'get_To', returnType: ss.makeGenericType(ss.Nullable$1, [Number]), params: [] }, setter: { name: 'set_To', type: 8, sname: 'set_To', returnType: Object, params: [ss.makeGenericType(ss.Nullable$1, [Number])] } }, { name: 'ByProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ByProperty' }, { name: 'EasingFunctionProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'EasingFunctionProperty' }, { name: 'FromProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'FromProperty' }, { name: 'ToProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ToProperty' }] });
	ss.setMetadata($System_Windows_Media_Animation_DoubleAnimationUsingKeyFrames, { attr: [new $System_Windows_Markup_ContentPropertyAttribute('KeyFrames')], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GetCurrentValue', type: 8, sname: 'GetCurrentValue', returnType: Object, params: [Object, Object, $System_Windows_Media_Animation_AnimationTimelineClock] }, { name: 'KeyFrames', type: 16, returnType: ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Media_Animation_DoubleKeyFrame]), getter: { name: 'get_KeyFrames', type: 8, sname: 'get_KeyFrames', returnType: ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Media_Animation_DoubleKeyFrame]), params: [] }, setter: { name: 'set_KeyFrames', type: 8, sname: 'set_KeyFrames', returnType: Object, params: [ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Media_Animation_DoubleKeyFrame])] } }] });
	ss.setMetadata($System_Windows_Media_Animation_DoubleKeyFrame, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'InterpolateValue', type: 8, sname: 'InterpolateValue', returnType: ss.makeGenericType(ss.Nullable$1, [Number]), params: [ss.makeGenericType(ss.Nullable$1, [Number]), Number] }, { name: 'KeyTime', type: 16, returnType: $System_Windows_Media_Animation_KeyTime, getter: { name: 'get_KeyTime', type: 8, sname: 'get_KeyTime', returnType: $System_Windows_Media_Animation_KeyTime, params: [] }, setter: { name: 'set_KeyTime', type: 8, sname: 'set_KeyTime', returnType: Object, params: [$System_Windows_Media_Animation_KeyTime] } }, { name: 'Value', type: 16, returnType: ss.makeGenericType(ss.Nullable$1, [Number]), getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: ss.makeGenericType(ss.Nullable$1, [Number]), params: [] }, setter: { name: 'set_Value', type: 8, sname: 'set_Value', returnType: Object, params: [ss.makeGenericType(ss.Nullable$1, [Number])] } }, { name: 'KeyTimeProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'KeyTimeProperty' }, { name: 'ValueProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ValueProperty' }] });
	ss.setMetadata($System_Windows_Media_Animation_DurationClock, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Media_Animation_IClock, ss.TimeSpan] }, { name: 'Tick', type: 8, sname: 'Tick', returnType: $System_Windows_Media_Animation_ClockState, params: [ss.TimeSpan] }, { name: 'Duration', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_Duration', type: 8, sname: 'get_Duration', returnType: ss.TimeSpan, params: [] }, setter: { name: 'set_Duration', type: 8, sname: 'set_Duration', returnType: Object, params: [ss.TimeSpan] } }, { name: 'FirstTick', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_FirstTick', type: 8, sname: 'get_FirstTick', returnType: ss.TimeSpan, params: [] }, setter: { name: 'set_FirstTick', type: 8, sname: 'set_FirstTick', returnType: Object, params: [ss.TimeSpan] } }, { name: 'LastTick', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_LastTick', type: 8, sname: 'get_LastTick', returnType: ss.TimeSpan, params: [] }, setter: { name: 'set_LastTick', type: 8, sname: 'set_LastTick', returnType: Object, params: [ss.TimeSpan] } }] });
	ss.setMetadata($System_Windows_Media_Animation_EasingColorKeyFrame, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'InterpolateValue', type: 8, sname: 'InterpolateValue', returnType: $System_Windows_Media_Color, params: [$System_Windows_Media_Color, Number] }, { name: 'EasingFunction', type: 16, returnType: $System_Windows_Media_Animation_IEasingFunction, getter: { name: 'get_EasingFunction', type: 8, sname: 'get_EasingFunction', returnType: $System_Windows_Media_Animation_IEasingFunction, params: [] }, setter: { name: 'set_EasingFunction', type: 8, sname: 'set_EasingFunction', returnType: Object, params: [$System_Windows_Media_Animation_IEasingFunction] } }, { name: 'EasingFunctionProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'EasingFunctionProperty' }] });
	ss.setMetadata($System_Windows_Media_Animation_EasingDoubleKeyFrame, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'InterpolateValue', type: 8, sname: 'InterpolateValue', returnType: ss.makeGenericType(ss.Nullable$1, [Number]), params: [ss.makeGenericType(ss.Nullable$1, [Number]), Number] }, { name: 'EasingFunction', type: 16, returnType: $System_Windows_Media_Animation_IEasingFunction, getter: { name: 'get_EasingFunction', type: 8, sname: 'get_EasingFunction', returnType: $System_Windows_Media_Animation_IEasingFunction, params: [] }, setter: { name: 'set_EasingFunction', type: 8, sname: 'set_EasingFunction', returnType: Object, params: [$System_Windows_Media_Animation_IEasingFunction] } }, { name: 'EasingFunctionProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'EasingFunctionProperty' }] });
	ss.setMetadata($System_Windows_Media_Animation_EasingFunctionBase, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Ease', type: 8, sname: 'Ease', returnType: Number, params: [Number] }, { name: 'EaseOverride', type: 8, sname: 'EaseOverride', returnType: Number, params: [Number] }, { name: 'EasingMode', type: 16, returnType: $System_Windows_Media_Animation_EasingMode, getter: { name: 'get_EasingMode', type: 8, sname: 'get_EasingMode', returnType: $System_Windows_Media_Animation_EasingMode, params: [] }, setter: { name: 'set_EasingMode', type: 8, sname: 'set_EasingMode', returnType: Object, params: [$System_Windows_Media_Animation_EasingMode] } }, { name: 'EasingModeProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'EasingModeProperty' }] });
	ss.setMetadata($System_Windows_Media_Animation_EasingRectKeyFrame, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'InterpolateValue', type: 8, sname: 'InterpolateValue', returnType: $System_Windows_Rect, params: [$System_Windows_Rect, Number] }, { name: 'EasingFunction', type: 16, returnType: $System_Windows_Media_Animation_IEasingFunction, getter: { name: 'get_EasingFunction', type: 8, sname: 'get_EasingFunction', returnType: $System_Windows_Media_Animation_IEasingFunction, params: [] }, setter: { name: 'set_EasingFunction', type: 8, sname: 'set_EasingFunction', returnType: Object, params: [$System_Windows_Media_Animation_IEasingFunction] } }, { name: 'EasingFunctionProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'EasingFunctionProperty' }] });
	ss.setMetadata($System_Windows_Media_Animation_EasingThicknessKeyFrame, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'InterpolateValue', type: 8, sname: 'InterpolateValue', returnType: $System_Windows_Thickness, params: [$System_Windows_Thickness, Number] }, { name: 'EasingFunction', type: 16, returnType: $System_Windows_Media_Animation_IEasingFunction, getter: { name: 'get_EasingFunction', type: 8, sname: 'get_EasingFunction', returnType: $System_Windows_Media_Animation_IEasingFunction, params: [] }, setter: { name: 'set_EasingFunction', type: 8, sname: 'set_EasingFunction', returnType: Object, params: [$System_Windows_Media_Animation_IEasingFunction] } }, { name: 'EasingFunctionProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'EasingFunctionProperty' }] });
	ss.setMetadata($System_Windows_Media_Animation_ElasticEase, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'EaseOverride', type: 8, sname: 'EaseOverride', returnType: Number, params: [Number] }, { name: 'Oscillations', type: 16, returnType: Number, getter: { name: 'get_Oscillations', type: 8, sname: 'get_Oscillations', returnType: Number, params: [] }, setter: { name: 'set_Oscillations', type: 8, sname: 'set_Oscillations', returnType: Object, params: [Number] } }, { name: 'Springiness', type: 16, returnType: Number, getter: { name: 'get_Springiness', type: 8, sname: 'get_Springiness', returnType: Number, params: [] }, setter: { name: 'set_Springiness', type: 8, sname: 'set_Springiness', returnType: Object, params: [Number] } }, { name: 'OscillationsProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'OscillationsProperty' }, { name: 'SpringinessProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'SpringinessProperty' }] });
	ss.setMetadata($System_Windows_Media_Animation_ExponentialEase, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'EaseOverride', type: 8, sname: 'EaseOverride', returnType: Number, params: [Number] }, { name: 'Exponent', type: 16, returnType: Number, getter: { name: 'get_Exponent', type: 8, sname: 'get_Exponent', returnType: Number, params: [] }, setter: { name: 'set_Exponent', type: 8, sname: 'set_Exponent', returnType: Object, params: [Number] } }, { name: 'ExponentProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ExponentProperty' }] });
	ss.setMetadata($System_Windows_Media_Animation_IAnimatable, { members: [{ name: 'AddAnimationClocks', type: 8, sname: 'AddAnimationClocks', returnType: Object, params: [$System_Windows_DependencyProperty, ss.IEnumerable, Object] }, { name: 'RemoveAnimationClocks', type: 8, sname: 'RemoveAnimationClocks', returnType: Object, params: [$System_Windows_DependencyProperty, ss.IEnumerable, Object] }, { name: 'SetAnimationClocks', type: 8, sname: 'SetAnimationClocks', returnType: Object, params: [$System_Windows_DependencyProperty, ss.IEnumerable, Object] }, { name: 'RootClock', type: 16, returnType: $System_Windows_Media_Animation_IRootClock, getter: { name: 'get_RootClock', type: 8, sname: 'get_RootClock', returnType: $System_Windows_Media_Animation_IRootClock, params: [] } }] });
	ss.setMetadata($System_Windows_Media_Animation_IAnimationOperations$1, { members: [{ name: 'Add', type: 8, sname: 'Add', returnType: Object, params: [Object, Object] }, { name: 'Interpolate', type: 8, sname: 'Interpolate', returnType: Object, params: [Object, Object, Number] }, { name: 'Scale', type: 8, sname: 'Scale', returnType: Object, params: [Object, Number] }, { name: 'Subtract', type: 8, sname: 'Subtract', returnType: Object, params: [Object, Object] }, { name: 'Zero', type: 16, returnType: Object, getter: { name: 'get_Zero', type: 8, sname: 'get_Zero', returnType: Object, params: [] } }] });
	ss.setMetadata($System_Windows_Media_Animation_IClock, { members: [{ name: 'Tick', type: 8, sname: 'Tick', returnType: $System_Windows_Media_Animation_ClockState, params: [ss.TimeSpan] }, { name: 'Duration', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_Duration', type: 8, sname: 'get_Duration', returnType: ss.TimeSpan, params: [] } }, { name: 'FirstTick', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_FirstTick', type: 8, sname: 'get_FirstTick', returnType: ss.TimeSpan, params: [] } }, { name: 'LastTick', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_LastTick', type: 8, sname: 'get_LastTick', returnType: ss.TimeSpan, params: [] } }] });
	ss.setMetadata($System_Windows_Media_Animation_IEasingFunction, { members: [{ name: 'Ease', type: 8, sname: 'Ease', returnType: Number, params: [Number] }] });
	ss.setMetadata($System_Windows_Media_Animation_IRootClock, { members: [{ name: 'AddClock', type: 8, sname: 'AddClock', returnType: Object, params: [$System_Windows_Media_Animation_IClock] }, { name: 'RemoveClock', type: 8, sname: 'RemoveClock', returnType: Object, params: [$System_Windows_Media_Animation_IClock] }, { name: 'Time', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_Time', type: 8, sname: 'get_Time', returnType: ss.TimeSpan, params: [] } }] });
	ss.setMetadata($System_Windows_Media_Animation_KeyTime, { members: [{ name: 'Equals', type: 8, sname: 'equals', returnType: Boolean, params: [Object] }, { name: 'FromPercent', isStatic: true, type: 8, sname: 'FromPercent', returnType: $System_Windows_Media_Animation_KeyTime, params: [Number] }, { name: 'FromTimeSpan', isStatic: true, type: 8, sname: 'FromTimeSpan', returnType: $System_Windows_Media_Animation_KeyTime, params: [ss.TimeSpan] }, { name: 'GetHashCode', type: 8, sname: 'getHashCode', returnType: ss.Int32, params: [] }, { name: 'Parse', isStatic: true, type: 8, sname: 'Parse', returnType: $System_Windows_Media_Animation_KeyTime, params: [String] }, { name: 'HasPercent', type: 16, returnType: Boolean, getter: { name: 'get_HasPercent', type: 8, sname: 'get_HasPercent', returnType: Boolean, params: [] } }, { name: 'HasTimeSpan', type: 16, returnType: Boolean, getter: { name: 'get_HasTimeSpan', type: 8, sname: 'get_HasTimeSpan', returnType: Boolean, params: [] } }, { name: 'IsPaced', type: 16, returnType: Boolean, getter: { name: 'get_IsPaced', type: 8, sname: 'get_IsPaced', returnType: Boolean, params: [] } }, { name: 'IsUniform', type: 16, returnType: Boolean, getter: { name: 'get_IsUniform', type: 8, sname: 'get_IsUniform', returnType: Boolean, params: [] } }, { name: 'Percent', type: 16, returnType: Number, getter: { name: 'get_Percent', type: 8, sname: 'get_Percent', returnType: Number, params: [] }, setter: { name: 'set_Percent', type: 8, sname: 'set_Percent', returnType: Object, params: [Number] } }, { name: 'TimeSpan', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_TimeSpan', type: 8, sname: 'get_TimeSpan', returnType: ss.TimeSpan, params: [] }, setter: { name: 'set_TimeSpan', type: 8, sname: 'set_TimeSpan', returnType: Object, params: [ss.TimeSpan] } }, { name: 'Type', type: 16, returnType: $System_Windows_Media_Animation_KeyTimeType, getter: { name: 'get_Type', type: 8, sname: 'get_Type', returnType: $System_Windows_Media_Animation_KeyTimeType, params: [] }, setter: { name: 'set_Type', type: 8, sname: 'set_Type', returnType: Object, params: [$System_Windows_Media_Animation_KeyTimeType] } }, { name: 'Paced', isStatic: true, type: 4, returnType: $System_Windows_Media_Animation_KeyTime, sname: 'Paced' }, { name: 'Uniform', isStatic: true, type: 4, returnType: $System_Windows_Media_Animation_KeyTime, sname: 'Uniform' }] });
	ss.setMetadata($System_Windows_Media_Animation_LinearColorKeyFrame, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'InterpolateValue', type: 8, sname: 'InterpolateValue', returnType: $System_Windows_Media_Color, params: [$System_Windows_Media_Color, Number] }] });
	ss.setMetadata($System_Windows_Media_Animation_LinearDoubleKeyFrame, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'InterpolateValue', type: 8, sname: 'InterpolateValue', returnType: ss.makeGenericType(ss.Nullable$1, [Number]), params: [ss.makeGenericType(ss.Nullable$1, [Number]), Number] }] });
	ss.setMetadata($System_Windows_Media_Animation_LinearRectKeyFrame, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'InterpolateValue', type: 8, sname: 'InterpolateValue', returnType: $System_Windows_Rect, params: [$System_Windows_Rect, Number] }] });
	ss.setMetadata($System_Windows_Media_Animation_LinearThicknessKeyFrame, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'InterpolateValue', type: 8, sname: 'InterpolateValue', returnType: $System_Windows_Thickness, params: [$System_Windows_Thickness, Number] }] });
	ss.setMetadata($System_Windows_Media_Animation_OffsetClock, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Media_Animation_IClock, ss.TimeSpan] }, { name: 'Tick', type: 8, sname: 'Tick', returnType: $System_Windows_Media_Animation_ClockState, params: [ss.TimeSpan] }, { name: 'Duration', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_Duration', type: 8, sname: 'get_Duration', returnType: ss.TimeSpan, params: [] } }, { name: 'FirstTick', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_FirstTick', type: 8, sname: 'get_FirstTick', returnType: ss.TimeSpan, params: [] } }, { name: 'LastTick', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_LastTick', type: 8, sname: 'get_LastTick', returnType: ss.TimeSpan, params: [] } }] });
	ss.setMetadata($System_Windows_Media_Animation_ParallelClock, { members: [{ name: '.ctor', type: 1, params: [ss.IEnumerable] }, { name: 'Tick', type: 8, sname: 'Tick', returnType: $System_Windows_Media_Animation_ClockState, params: [ss.TimeSpan] }, { name: 'Duration', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_Duration', type: 8, sname: 'get_Duration', returnType: ss.TimeSpan, params: [] }, setter: { name: 'set_Duration', type: 8, sname: 'set_Duration', returnType: Object, params: [ss.TimeSpan] } }, { name: 'FirstTick', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_FirstTick', type: 8, sname: 'get_FirstTick', returnType: ss.TimeSpan, params: [] }, setter: { name: 'set_FirstTick', type: 8, sname: 'set_FirstTick', returnType: Object, params: [ss.TimeSpan] } }, { name: 'LastTick', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_LastTick', type: 8, sname: 'get_LastTick', returnType: ss.TimeSpan, params: [] }, setter: { name: 'set_LastTick', type: 8, sname: 'set_LastTick', returnType: Object, params: [ss.TimeSpan] } }] });
	ss.setMetadata($System_Windows_Media_Animation_ParallelTimeline, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'CreateGroupClock', type: 8, sname: 'CreateGroupClock', returnType: $System_Windows_Media_Animation_TimelineGroupClock, params: [ss.IEnumerable] }] });
	ss.setMetadata($System_Windows_Media_Animation_ParallelTimelineClock, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Media_Animation_ParallelTimeline, ss.IEnumerable] }] });
	ss.setMetadata($System_Windows_Media_Animation_PauseStoryboard, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Apply', type: 8, sname: 'Apply', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_BaseValueSource] }] });
	ss.setMetadata($System_Windows_Media_Animation_PowerEase, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'EaseOverride', type: 8, sname: 'EaseOverride', returnType: Number, params: [Number] }, { name: 'Power', type: 16, returnType: Number, getter: { name: 'get_Power', type: 8, sname: 'get_Power', returnType: Number, params: [] }, setter: { name: 'set_Power', type: 8, sname: 'set_Power', returnType: Object, params: [Number] } }, { name: 'PowerProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'PowerProperty' }] });
	ss.setMetadata($System_Windows_Media_Animation_QuadraticEase, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'EaseOverride', type: 8, sname: 'EaseOverride', returnType: Number, params: [Number] }] });
	ss.setMetadata($System_Windows_Media_Animation_QuarticEase, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'EaseOverride', type: 8, sname: 'EaseOverride', returnType: Number, params: [Number] }] });
	ss.setMetadata($System_Windows_Media_Animation_QuinticEase, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'EaseOverride', type: 8, sname: 'EaseOverride', returnType: Number, params: [Number] }] });
	ss.setMetadata($System_Windows_Media_Animation_RectAnimation, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GetCurrentValue', type: 8, sname: 'GetCurrentValue', returnType: Object, params: [Object, Object, $System_Windows_Media_Animation_AnimationTimelineClock] }, { name: 'By', type: 16, returnType: $System_Windows_Rect, getter: { name: 'get_By', type: 8, sname: 'get_By', returnType: $System_Windows_Rect, params: [] }, setter: { name: 'set_By', type: 8, sname: 'set_By', returnType: Object, params: [$System_Windows_Rect] } }, { name: 'EasingFunction', type: 16, returnType: $System_Windows_Media_Animation_IEasingFunction, getter: { name: 'get_EasingFunction', type: 8, sname: 'get_EasingFunction', returnType: $System_Windows_Media_Animation_IEasingFunction, params: [] }, setter: { name: 'set_EasingFunction', type: 8, sname: 'set_EasingFunction', returnType: Object, params: [$System_Windows_Media_Animation_IEasingFunction] } }, { name: 'From', type: 16, returnType: $System_Windows_Rect, getter: { name: 'get_From', type: 8, sname: 'get_From', returnType: $System_Windows_Rect, params: [] }, setter: { name: 'set_From', type: 8, sname: 'set_From', returnType: Object, params: [$System_Windows_Rect] } }, { name: 'To', type: 16, returnType: $System_Windows_Rect, getter: { name: 'get_To', type: 8, sname: 'get_To', returnType: $System_Windows_Rect, params: [] }, setter: { name: 'set_To', type: 8, sname: 'set_To', returnType: Object, params: [$System_Windows_Rect] } }, { name: 'ByProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ByProperty' }, { name: 'EasingFunctionProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'EasingFunctionProperty' }, { name: 'FromProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'FromProperty' }, { name: 'ToProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ToProperty' }] });
	ss.setMetadata($System_Windows_Media_Animation_RectAnimationUsingKeyFrames, { attr: [new $System_Windows_Markup_ContentPropertyAttribute('KeyFrames')], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GetCurrentValue', type: 8, sname: 'GetCurrentValue', returnType: Object, params: [Object, Object, $System_Windows_Media_Animation_AnimationTimelineClock] }, { name: 'KeyFrames', type: 16, returnType: ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Media_Animation_RectKeyFrame]), getter: { name: 'get_KeyFrames', type: 8, sname: 'get_KeyFrames', returnType: ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Media_Animation_RectKeyFrame]), params: [] }, setter: { name: 'set_KeyFrames', type: 8, sname: 'set_KeyFrames', returnType: Object, params: [ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Media_Animation_RectKeyFrame])] } }] });
	ss.setMetadata($System_Windows_Media_Animation_RectKeyFrame, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'InterpolateValue', type: 8, sname: 'InterpolateValue', returnType: $System_Windows_Rect, params: [$System_Windows_Rect, Number] }, { name: 'KeyTime', type: 16, returnType: $System_Windows_Media_Animation_KeyTime, getter: { name: 'get_KeyTime', type: 8, sname: 'get_KeyTime', returnType: $System_Windows_Media_Animation_KeyTime, params: [] }, setter: { name: 'set_KeyTime', type: 8, sname: 'set_KeyTime', returnType: Object, params: [$System_Windows_Media_Animation_KeyTime] } }, { name: 'Value', type: 16, returnType: $System_Windows_Rect, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: $System_Windows_Rect, params: [] }, setter: { name: 'set_Value', type: 8, sname: 'set_Value', returnType: Object, params: [$System_Windows_Rect] } }, { name: 'KeyTimeProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'KeyTimeProperty' }, { name: 'ValueProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ValueProperty' }] });
	ss.setMetadata($System_Windows_Media_Animation_RemoveStoryboard, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Apply', type: 8, sname: 'Apply', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_BaseValueSource] }] });
	ss.setMetadata($System_Windows_Media_Animation_RepeatBehavior, { members: [{ name: 'FromRepeatCount', isStatic: true, type: 8, sname: 'FromRepeatCount', returnType: $System_Windows_Media_Animation_RepeatBehavior, params: [Number] }, { name: 'FromTimeSpan', isStatic: true, type: 8, sname: 'FromTimeSpan', returnType: $System_Windows_Media_Animation_RepeatBehavior, params: [ss.TimeSpan] }, { name: 'Parse', isStatic: true, type: 8, sname: 'Parse', returnType: $System_Windows_Media_Animation_RepeatBehavior, params: [String] }, { name: 'Count', type: 16, returnType: Number, getter: { name: 'get_Count', type: 8, sname: 'get_Count', returnType: Number, params: [] }, setter: { name: 'set_Count', type: 8, sname: 'set_Count', returnType: Object, params: [Number] } }, { name: 'Duration', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_Duration', type: 8, sname: 'get_Duration', returnType: ss.TimeSpan, params: [] }, setter: { name: 'set_Duration', type: 8, sname: 'set_Duration', returnType: Object, params: [ss.TimeSpan] } }, { name: 'Forever', isStatic: true, type: 4, returnType: $System_Windows_Media_Animation_RepeatBehavior, sname: 'Forever' }, { name: 'OneTime', isStatic: true, type: 4, returnType: $System_Windows_Media_Animation_RepeatBehavior, sname: 'OneTime' }] });
	ss.setMetadata($System_Windows_Media_Animation_RepeatClock, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Media_Animation_IClock, Number] }, { name: 'Tick', type: 8, sname: 'Tick', returnType: $System_Windows_Media_Animation_ClockState, params: [ss.TimeSpan] }, { name: 'Duration', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_Duration', type: 8, sname: 'get_Duration', returnType: ss.TimeSpan, params: [] }, setter: { name: 'set_Duration', type: 8, sname: 'set_Duration', returnType: Object, params: [ss.TimeSpan] } }, { name: 'FirstTick', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_FirstTick', type: 8, sname: 'get_FirstTick', returnType: ss.TimeSpan, params: [] }, setter: { name: 'set_FirstTick', type: 8, sname: 'set_FirstTick', returnType: Object, params: [ss.TimeSpan] } }, { name: 'LastTick', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_LastTick', type: 8, sname: 'get_LastTick', returnType: ss.TimeSpan, params: [] }, setter: { name: 'set_LastTick', type: 8, sname: 'set_LastTick', returnType: Object, params: [ss.TimeSpan] } }] });
	ss.setMetadata($System_Windows_Media_Animation_ResumeStoryboard, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Apply', type: 8, sname: 'Apply', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_BaseValueSource] }] });
	ss.setMetadata($System_Windows_Media_Animation_ReverseClock, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Media_Animation_IClock] }, { name: 'Tick', type: 8, sname: 'Tick', returnType: $System_Windows_Media_Animation_ClockState, params: [ss.TimeSpan] }, { name: 'Duration', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_Duration', type: 8, sname: 'get_Duration', returnType: ss.TimeSpan, params: [] }, setter: { name: 'set_Duration', type: 8, sname: 'set_Duration', returnType: Object, params: [ss.TimeSpan] } }, { name: 'FirstTick', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_FirstTick', type: 8, sname: 'get_FirstTick', returnType: ss.TimeSpan, params: [] } }, { name: 'LastTick', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_LastTick', type: 8, sname: 'get_LastTick', returnType: ss.TimeSpan, params: [] }, setter: { name: 'set_LastTick', type: 8, sname: 'set_LastTick', returnType: Object, params: [ss.TimeSpan] } }] });
	ss.setMetadata($System_Windows_Media_Animation_RootClock, { members: [{ name: 'AddClock', type: 8, sname: 'AddClock', returnType: Object, params: [$System_Windows_Media_Animation_IClock] }, { name: 'RemoveClock', type: 8, sname: 'RemoveClock', returnType: Object, params: [$System_Windows_Media_Animation_IClock] }, { name: 'Tick', type: 8, sname: 'Tick', returnType: Object, params: [] }, { name: 'Time', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_Time', type: 8, sname: 'get_Time', returnType: ss.TimeSpan, params: [] } }, { name: 'Default', isStatic: true, type: 4, returnType: $System_Windows_Media_Animation_RootClock, sname: 'Default' }] });
	ss.setMetadata($System_Windows_Media_Animation_SequentialClock, { members: [{ name: '.ctor', type: 1, params: [ss.IEnumerable] }, { name: 'Tick', type: 8, sname: 'Tick', returnType: $System_Windows_Media_Animation_ClockState, params: [ss.TimeSpan] }, { name: 'Duration', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_Duration', type: 8, sname: 'get_Duration', returnType: ss.TimeSpan, params: [] }, setter: { name: 'set_Duration', type: 8, sname: 'set_Duration', returnType: Object, params: [ss.TimeSpan] } }, { name: 'FirstTick', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_FirstTick', type: 8, sname: 'get_FirstTick', returnType: ss.TimeSpan, params: [] }, setter: { name: 'set_FirstTick', type: 8, sname: 'set_FirstTick', returnType: Object, params: [ss.TimeSpan] } }, { name: 'LastTick', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_LastTick', type: 8, sname: 'get_LastTick', returnType: ss.TimeSpan, params: [] }, setter: { name: 'set_LastTick', type: 8, sname: 'set_LastTick', returnType: Object, params: [ss.TimeSpan] } }] });
	ss.setMetadata($System_Windows_Media_Animation_SequentialTimeline, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'CreateGroupClock', type: 8, sname: 'CreateGroupClock', returnType: $System_Windows_Media_Animation_TimelineGroupClock, params: [ss.IEnumerable] }] });
	ss.setMetadata($System_Windows_Media_Animation_SequentialTimelineClock, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Media_Animation_SequentialTimeline, ss.IEnumerable] }] });
	ss.setMetadata($System_Windows_Media_Animation_SineEase, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'EaseOverride', type: 8, sname: 'EaseOverride', returnType: Number, params: [Number] }] });
	ss.setMetadata($System_Windows_Media_Animation_SkipToFillStoryboard, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Apply', type: 8, sname: 'Apply', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_BaseValueSource] }] });
	ss.setMetadata($System_Windows_Media_Animation_StopStoryboard, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Apply', type: 8, sname: 'Apply', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_BaseValueSource] }] });
	ss.setMetadata($System_Windows_Media_Animation_Storyboard, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Begin', type: 8, sname: 'Begin', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_Markup_INameScope, $System_Windows_Media_Animation_HandoffBehavior, Object] }, { name: 'GetTarget', isStatic: true, type: 8, sname: 'GetTarget', returnType: $System_Windows_DependencyObject, params: [$System_Windows_DependencyObject] }, { name: 'GetTargetName', isStatic: true, type: 8, sname: 'GetTargetName', returnType: String, params: [$System_Windows_DependencyObject] }, { name: 'GetTargetProperty', isStatic: true, type: 8, sname: 'GetTargetProperty', returnType: $System_Windows_PropertyPath, params: [$System_Windows_DependencyObject] }, { name: 'Pause', type: 8, sname: 'Pause', returnType: Object, params: [$System_Windows_FrameworkElement] }, { name: 'Remove', type: 8, sname: 'Remove', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_Markup_INameScope, Object] }, { name: 'Resume', type: 8, sname: 'Resume', returnType: Object, params: [$System_Windows_FrameworkElement] }, { name: 'Seek', type: 8, sname: 'Seek', returnType: Object, params: [$System_Windows_FrameworkElement, ss.TimeSpan] }, { name: 'SeekOffset', type: 8, sname: 'SeekOffset', returnType: Object, params: [$System_Windows_FrameworkElement, ss.TimeSpan] }, { name: 'SetTarget', isStatic: true, type: 8, sname: 'SetTarget', returnType: Object, params: [$System_Windows_DependencyObject, $System_Windows_DependencyObject] }, { name: 'SetTargetName', isStatic: true, type: 8, sname: 'SetTargetName', returnType: Object, params: [$System_Windows_DependencyObject, String] }, { name: 'SetTargetProperty', isStatic: true, type: 8, sname: 'SetTargetProperty', returnType: Object, params: [$System_Windows_DependencyObject, $System_Windows_PropertyPath] }, { name: 'SkipToFill', type: 8, sname: 'SkipToFill', returnType: Object, params: [$System_Windows_FrameworkElement] }, { name: 'Stop', type: 8, sname: 'Stop', returnType: Object, params: [$System_Windows_FrameworkElement] }, { name: 'TargetNameProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'TargetNameProperty' }, { name: 'TargetProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'TargetProperty' }, { name: 'TargetPropertyProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'TargetPropertyProperty' }] });
	ss.setMetadata($System_Windows_Media_Animation_StoryboardAction, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Apply', type: 8, sname: 'Apply', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_BaseValueSource] }, { name: 'Clean', type: 8, sname: 'Clean', returnType: Object, params: [$System_Windows_FrameworkElement, $System_Windows_BaseValueSource] }, { name: 'GetBeginStoryboard', type: 8, sname: 'GetBeginStoryboard', returnType: $System_Windows_Media_Animation_BeginStoryboard, params: [$System_Windows_FrameworkElement] }, { name: 'IsActionOverlaps', type: 8, sname: 'IsActionOverlaps', returnType: Boolean, params: [$System_Windows_ITriggerAction] }, { name: 'BeginStoryboardName', type: 16, returnType: String, getter: { name: 'get_BeginStoryboardName', type: 8, sname: 'get_BeginStoryboardName', returnType: String, params: [] }, setter: { name: 'set_BeginStoryboardName', type: 8, sname: 'set_BeginStoryboardName', returnType: Object, params: [String] } }] });
	ss.setMetadata($System_Windows_Media_Animation_ThicknessAnimation, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GetCurrentValue', type: 8, sname: 'GetCurrentValue', returnType: Object, params: [Object, Object, $System_Windows_Media_Animation_AnimationTimelineClock] }, { name: 'By', type: 16, returnType: $System_Windows_Thickness, getter: { name: 'get_By', type: 8, sname: 'get_By', returnType: $System_Windows_Thickness, params: [] }, setter: { name: 'set_By', type: 8, sname: 'set_By', returnType: Object, params: [$System_Windows_Thickness] } }, { name: 'EasingFunction', type: 16, returnType: $System_Windows_Media_Animation_IEasingFunction, getter: { name: 'get_EasingFunction', type: 8, sname: 'get_EasingFunction', returnType: $System_Windows_Media_Animation_IEasingFunction, params: [] }, setter: { name: 'set_EasingFunction', type: 8, sname: 'set_EasingFunction', returnType: Object, params: [$System_Windows_Media_Animation_IEasingFunction] } }, { name: 'From', type: 16, returnType: $System_Windows_Thickness, getter: { name: 'get_From', type: 8, sname: 'get_From', returnType: $System_Windows_Thickness, params: [] }, setter: { name: 'set_From', type: 8, sname: 'set_From', returnType: Object, params: [$System_Windows_Thickness] } }, { name: 'To', type: 16, returnType: $System_Windows_Thickness, getter: { name: 'get_To', type: 8, sname: 'get_To', returnType: $System_Windows_Thickness, params: [] }, setter: { name: 'set_To', type: 8, sname: 'set_To', returnType: Object, params: [$System_Windows_Thickness] } }, { name: 'ByProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ByProperty' }, { name: 'EasingFunctionProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'EasingFunctionProperty' }, { name: 'FromProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'FromProperty' }, { name: 'ToProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ToProperty' }] });
	ss.setMetadata($System_Windows_Media_Animation_ThicknessAnimationUsingKeyFrames, { attr: [new $System_Windows_Markup_ContentPropertyAttribute('KeyFrames')], members: [{ name: '.ctor', type: 1, params: [] }, { name: 'GetCurrentValue', type: 8, sname: 'GetCurrentValue', returnType: Object, params: [Object, Object, $System_Windows_Media_Animation_AnimationTimelineClock] }, { name: 'KeyFrames', type: 16, returnType: ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Media_Animation_ThicknessKeyFrame]), getter: { name: 'get_KeyFrames', type: 8, sname: 'get_KeyFrames', returnType: ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Media_Animation_ThicknessKeyFrame]), params: [] }, setter: { name: 'set_KeyFrames', type: 8, sname: 'set_KeyFrames', returnType: Object, params: [ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_Media_Animation_ThicknessKeyFrame])] } }] });
	ss.setMetadata($System_Windows_Media_Animation_ThicknessKeyFrame, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'InterpolateValue', type: 8, sname: 'InterpolateValue', returnType: $System_Windows_Thickness, params: [$System_Windows_Thickness, Number] }, { name: 'KeyTime', type: 16, returnType: $System_Windows_Media_Animation_KeyTime, getter: { name: 'get_KeyTime', type: 8, sname: 'get_KeyTime', returnType: $System_Windows_Media_Animation_KeyTime, params: [] }, setter: { name: 'set_KeyTime', type: 8, sname: 'set_KeyTime', returnType: Object, params: [$System_Windows_Media_Animation_KeyTime] } }, { name: 'Value', type: 16, returnType: $System_Windows_Thickness, getter: { name: 'get_Value', type: 8, sname: 'get_Value', returnType: $System_Windows_Thickness, params: [] }, setter: { name: 'set_Value', type: 8, sname: 'set_Value', returnType: Object, params: [$System_Windows_Thickness] } }, { name: 'KeyTimeProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'KeyTimeProperty' }, { name: 'ValueProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ValueProperty' }] });
	ss.setMetadata($System_Windows_Media_Animation_Timeline, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'CreateClock', type: 8, sname: 'CreateClock', returnType: $System_Windows_Media_Animation_TimelineClock, params: [] }, { name: 'AutoReverse', type: 16, returnType: Boolean, getter: { name: 'get_AutoReverse', type: 8, sname: 'get_AutoReverse', returnType: Boolean, params: [] }, setter: { name: 'set_AutoReverse', type: 8, sname: 'set_AutoReverse', returnType: Object, params: [Boolean] } }, { name: 'BeginTime', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_BeginTime', type: 8, sname: 'get_BeginTime', returnType: ss.TimeSpan, params: [] }, setter: { name: 'set_BeginTime', type: 8, sname: 'set_BeginTime', returnType: Object, params: [ss.TimeSpan] } }, { name: 'Duration', type: 16, returnType: $System_Windows_Duration, getter: { name: 'get_Duration', type: 8, sname: 'get_Duration', returnType: $System_Windows_Duration, params: [] }, setter: { name: 'set_Duration', type: 8, sname: 'set_Duration', returnType: Object, params: [$System_Windows_Duration] } }, { name: 'FillBehavior', type: 16, returnType: $System_Windows_Media_Animation_FillBehavior, getter: { name: 'get_FillBehavior', type: 8, sname: 'get_FillBehavior', returnType: $System_Windows_Media_Animation_FillBehavior, params: [] }, setter: { name: 'set_FillBehavior', type: 8, sname: 'set_FillBehavior', returnType: Object, params: [$System_Windows_Media_Animation_FillBehavior] } }, { name: 'Parent', type: 16, returnType: $System_Windows_Media_Animation_TimelineGroup, getter: { name: 'get_Parent', type: 8, sname: 'get_Parent', returnType: $System_Windows_Media_Animation_TimelineGroup, params: [] }, setter: { name: 'set_Parent', type: 8, sname: 'set_Parent', returnType: Object, params: [$System_Windows_Media_Animation_TimelineGroup] } }, { name: 'RepeatBehavior', type: 16, returnType: $System_Windows_Media_Animation_RepeatBehavior, getter: { name: 'get_RepeatBehavior', type: 8, sname: 'get_RepeatBehavior', returnType: $System_Windows_Media_Animation_RepeatBehavior, params: [] }, setter: { name: 'set_RepeatBehavior', type: 8, sname: 'set_RepeatBehavior', returnType: Object, params: [$System_Windows_Media_Animation_RepeatBehavior] } }, { name: 'AutoReverseProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'AutoReverseProperty' }, { name: 'BeginTimeProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'BeginTimeProperty' }, { name: 'DurationProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'DurationProperty' }, { name: 'FillBehaviorProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'FillBehaviorProperty' }, { name: 'RepeatBehaviorProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'RepeatBehaviorProperty' }] });
	ss.setMetadata($System_Windows_Media_Animation_TimelineClock, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Media_Animation_IClock, $System_Windows_Media_Animation_Timeline] }, { name: 'Begin', type: 8, sname: 'Begin', returnType: Object, params: [$System_Windows_Media_Animation_IRootClock] }, { name: 'Pause', type: 8, sname: 'Pause', returnType: Object, params: [] }, { name: 'Remove', type: 8, sname: 'Remove', returnType: Object, params: [] }, { name: 'Resume', type: 8, sname: 'Resume', returnType: Object, params: [] }, { name: 'Seek', type: 8, sname: 'Seek', returnType: Object, params: [ss.TimeSpan] }, { name: 'SeekOffset', type: 8, sname: 'SeekOffset', returnType: Object, params: [ss.TimeSpan] }, { name: 'SkipToFill', type: 8, sname: 'SkipToFill', returnType: Object, params: [] }, { name: 'Stop', type: 8, sname: 'Stop', returnType: Object, params: [] }, { name: 'Tick', type: 8, sname: 'Tick', returnType: $System_Windows_Media_Animation_ClockState, params: [ss.TimeSpan] }, { name: 'CurrentState', type: 16, returnType: $System_Windows_Media_Animation_ClockState, getter: { name: 'get_CurrentState', type: 8, sname: 'get_CurrentState', returnType: $System_Windows_Media_Animation_ClockState, params: [] }, setter: { name: 'set_CurrentState', type: 8, sname: 'set_CurrentState', returnType: Object, params: [$System_Windows_Media_Animation_ClockState] } }, { name: 'Duration', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_Duration', type: 8, sname: 'get_Duration', returnType: ss.TimeSpan, params: [] } }, { name: 'FirstTick', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_FirstTick', type: 8, sname: 'get_FirstTick', returnType: ss.TimeSpan, params: [] } }, { name: 'IsFilling', type: 16, returnType: Boolean, getter: { name: 'get_IsFilling', type: 8, sname: 'get_IsFilling', returnType: Boolean, params: [] } }, { name: 'LastTick', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_LastTick', type: 8, sname: 'get_LastTick', returnType: ss.TimeSpan, params: [] } }, { name: 'Timeline', type: 16, returnType: $System_Windows_Media_Animation_Timeline, getter: { name: 'get_Timeline', type: 8, sname: 'get_Timeline', returnType: $System_Windows_Media_Animation_Timeline, params: [] }, setter: { name: 'set_Timeline', type: 8, sname: 'set_Timeline', returnType: Object, params: [$System_Windows_Media_Animation_Timeline] } }, { name: 'Invalidated', type: 2, adder: { name: 'add_Invalidated', type: 8, sname: 'add_Invalidated', returnType: Object, params: [Function] }, remover: { name: 'remove_Invalidated', type: 8, sname: 'remove_Invalidated', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Media_Animation_TimelineGroup, { attr: [new $System_Windows_Markup_ContentPropertyAttribute('Children')], members: [{ name: '.cctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [] }, { name: 'CreateClock', type: 8, sname: 'CreateClock', returnType: $System_Windows_Media_Animation_TimelineClock, params: [] }, { name: 'CreateGroupClock', type: 8, sname: 'CreateGroupClock', returnType: $System_Windows_Media_Animation_TimelineGroupClock, params: [ss.IEnumerable] }, { name: 'Children', type: 16, returnType: ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_Media_Animation_Timeline]), getter: { name: 'get_Children', type: 8, sname: 'get_Children', returnType: ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_Media_Animation_Timeline]), params: [] }, setter: { name: 'set_Children', type: 8, sname: 'set_Children', returnType: Object, params: [ss.makeGenericType(Granular.Collections.ObservableCollection$1, [$System_Windows_Media_Animation_Timeline])] } }] });
	ss.setMetadata($System_Windows_Media_Animation_TimelineGroupClock, { members: [{ name: '.ctor', type: 1, params: [$System_Windows_Media_Animation_IClock, $System_Windows_Media_Animation_TimelineGroup, ss.IEnumerable] }, { name: 'Children', type: 16, returnType: ss.IEnumerable, getter: { name: 'get_Children', type: 8, sname: 'get_Children', returnType: ss.IEnumerable, params: [] }, setter: { name: 'set_Children', type: 8, sname: 'set_Children', returnType: Object, params: [ss.IEnumerable] } }] });
	ss.setMetadata($System_Windows_Media_Animation_TransitionAnimationTimeline$1, { members: [{ name: '.ctor', type: 1, params: [ss.makeGenericType($System_Windows_Media_Animation_IAnimationOperations$1, [Object]), Boolean] }, { name: 'GetCurrentValue', type: 8, sname: 'GetCurrentValue', returnType: Object, params: [Object, Object, $System_Windows_Media_Animation_AnimationTimelineClock] }, { name: 'By', type: 16, returnType: Object, getter: { name: 'get_By', type: 8, sname: 'get_By', returnType: Object, params: [] }, setter: { name: 'set_By', type: 8, sname: 'set_By', returnType: Object, params: [Object] } }, { name: 'EasingFunction', type: 16, returnType: $System_Windows_Media_Animation_IEasingFunction, getter: { name: 'get_EasingFunction', type: 8, sname: 'get_EasingFunction', returnType: $System_Windows_Media_Animation_IEasingFunction, params: [] }, setter: { name: 'set_EasingFunction', type: 8, sname: 'set_EasingFunction', returnType: Object, params: [$System_Windows_Media_Animation_IEasingFunction] } }, { name: 'From', type: 16, returnType: Object, getter: { name: 'get_From', type: 8, sname: 'get_From', returnType: Object, params: [] }, setter: { name: 'set_From', type: 8, sname: 'set_From', returnType: Object, params: [Object] } }, { name: 'To', type: 16, returnType: Object, getter: { name: 'get_To', type: 8, sname: 'get_To', returnType: Object, params: [] }, setter: { name: 'set_To', type: 8, sname: 'set_To', returnType: Object, params: [Object] } }, { name: 'ByProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ByProperty' }, { name: 'EasingFunctionProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'EasingFunctionProperty' }, { name: 'FromProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'FromProperty' }, { name: 'ToProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'ToProperty' }] });
	ss.setMetadata($System_Windows_Media_Imaging_BitmapImage, { members: [{ name: '.ctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [String, $System_Windows_Media_Imaging_BitmapCacheOption], sname: '$ctor1' }, { name: 'BeginInit', type: 8, sname: 'BeginInit', returnType: Object, params: [] }, { name: 'EndInit', type: 8, sname: 'EndInit', returnType: Object, params: [] }, { name: 'CacheOption', type: 16, returnType: $System_Windows_Media_Imaging_BitmapCacheOption, getter: { name: 'get_CacheOption', type: 8, sname: 'get_CacheOption', returnType: $System_Windows_Media_Imaging_BitmapCacheOption, params: [] }, setter: { name: 'set_CacheOption', type: 8, sname: 'set_CacheOption', returnType: Object, params: [$System_Windows_Media_Imaging_BitmapCacheOption] } }, { name: 'RenderImageSource', type: 16, returnType: $System_Windows_Media_IRenderImageSource, getter: { name: 'get_RenderImageSource', type: 8, sname: 'get_RenderImageSource', returnType: $System_Windows_Media_IRenderImageSource, params: [] } }, { name: 'SourceRect', type: 16, returnType: $System_Windows_Rect, getter: { name: 'get_SourceRect', type: 8, sname: 'get_SourceRect', returnType: $System_Windows_Rect, params: [] }, setter: { name: 'set_SourceRect', type: 8, sname: 'set_SourceRect', returnType: Object, params: [$System_Windows_Rect] } }, { name: 'UriSource', type: 16, returnType: String, getter: { name: 'get_UriSource', type: 8, sname: 'get_UriSource', returnType: String, params: [] }, setter: { name: 'set_UriSource', type: 8, sname: 'set_UriSource', returnType: Object, params: [String] } }, { name: 'CacheOptionProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'CacheOptionProperty' }, { name: 'SourceRectProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'SourceRectProperty' }, { name: 'UriSourceProperty', isStatic: true, type: 4, returnType: $System_Windows_DependencyProperty, sname: 'UriSourceProperty' }] });
	ss.setMetadata($System_Windows_Media_Imaging_BitmapSource, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'Create', isStatic: true, type: 8, sname: 'Create', returnType: $System_Windows_Media_Imaging_BitmapSource, params: [Array, $System_Windows_Rect] }, { name: 'Create', isStatic: true, type: 8, sname: 'Create$1', returnType: $System_Windows_Media_Imaging_BitmapSource, params: [$System_Windows_Media_RenderImageType, Array, $System_Windows_Rect] }, { name: 'SetRenderImageState', type: 8, sname: 'SetRenderImageState', returnType: Object, params: [$System_Windows_Media_RenderImageState] }, { name: 'IsDownloading', type: 16, returnType: Boolean, getter: { name: 'get_IsDownloading', type: 8, sname: 'get_IsDownloading', returnType: Boolean, params: [] }, setter: { name: 'set_IsDownloading', type: 8, sname: 'set_IsDownloading', returnType: Object, params: [Boolean] } }, { name: 'RenderImageSource', type: 16, returnType: $System_Windows_Media_IRenderImageSource, getter: { name: 'get_RenderImageSource', type: 8, sname: 'get_RenderImageSource', returnType: $System_Windows_Media_IRenderImageSource, params: [] } }, { name: 'DownloadCompleted', type: 2, adder: { name: 'add_DownloadCompleted', type: 8, sname: 'add_DownloadCompleted', returnType: Object, params: [Function] }, remover: { name: 'remove_DownloadCompleted', type: 8, sname: 'remove_DownloadCompleted', returnType: Object, params: [Function] } }, { name: 'DownloadFailed', type: 2, adder: { name: 'add_DownloadFailed', type: 8, sname: 'add_DownloadFailed', returnType: Object, params: [Function] }, remover: { name: 'remove_DownloadFailed', type: 8, sname: 'remove_DownloadFailed', returnType: Object, params: [Function] } }, { name: 'DownloadProgress', type: 2, adder: { name: 'add_DownloadProgress', type: 8, sname: 'add_DownloadProgress', returnType: Object, params: [Function] }, remover: { name: 'remove_DownloadProgress', type: 8, sname: 'remove_DownloadProgress', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Threading_Dispatcher, { members: [{ name: '.ctor', type: 1, params: [] }, { name: 'BeginInvoke', type: 8, sname: 'BeginInvoke', returnType: $System_Windows_Threading_DispatcherOperation, params: [Function] }, { name: 'BeginInvoke', type: 8, sname: 'BeginInvoke$1', returnType: $System_Windows_Threading_DispatcherOperation, params: [Function] }, { name: 'BeginInvoke', type: 8, sname: 'BeginInvoke$2', returnType: Object, params: [$System_Windows_Threading_DispatcherOperation] }, { name: 'BeginInvoke', type: 8, sname: 'BeginInvoke$3', returnType: $System_Windows_Threading_DispatcherOperation, params: [$System_Windows_Threading_DispatcherPriority, Function] }, { name: 'BeginInvoke', type: 8, sname: 'BeginInvoke$4', returnType: $System_Windows_Threading_DispatcherOperation, params: [$System_Windows_Threading_DispatcherPriority, Function] }, { name: 'DisableProcessing', type: 8, sname: 'DisableProcessing', returnType: ss.IDisposable, params: [] }, { name: 'ProcessQueue', type: 8, sname: 'ProcessQueue', returnType: Object, params: [] }, { name: 'CurrentDispatcher', isStatic: true, type: 4, returnType: $System_Windows_Threading_Dispatcher, sname: 'CurrentDispatcher' }] });
	ss.setMetadata($System_Windows_Threading_DispatcherOperation, { members: [{ name: '.ctor', type: 1, params: [Function] }, { name: '.ctor', type: 1, params: [Function], sname: '$ctor1' }, { name: '.ctor', type: 1, params: [$System_Windows_Threading_DispatcherPriority, Function], sname: '$ctor2' }, { name: '.ctor', type: 1, params: [$System_Windows_Threading_DispatcherPriority, Function], sname: '$ctor3' }, { name: 'Abort', type: 8, sname: 'Abort', returnType: Object, params: [] }, { name: 'Invoke', type: 8, sname: 'Invoke', returnType: Object, params: [] }, { name: 'Priority', type: 16, returnType: $System_Windows_Threading_DispatcherPriority, getter: { name: 'get_Priority', type: 8, sname: 'get_Priority', returnType: $System_Windows_Threading_DispatcherPriority, params: [] }, setter: { name: 'set_Priority', type: 8, sname: 'set_Priority', returnType: Object, params: [$System_Windows_Threading_DispatcherPriority] } }, { name: 'Result', type: 16, returnType: Object, getter: { name: 'get_Result', type: 8, sname: 'get_Result', returnType: Object, params: [] }, setter: { name: 'set_Result', type: 8, sname: 'set_Result', returnType: Object, params: [Object] } }, { name: 'Status', type: 16, returnType: $System_Windows_Threading_DispatcherOperationStatus, getter: { name: 'get_Status', type: 8, sname: 'get_Status', returnType: $System_Windows_Threading_DispatcherOperationStatus, params: [] }, setter: { name: 'set_Status', type: 8, sname: 'set_Status', returnType: Object, params: [$System_Windows_Threading_DispatcherOperationStatus] } }, { name: 'Aborted', type: 2, adder: { name: 'add_Aborted', type: 8, sname: 'add_Aborted', returnType: Object, params: [Function] }, remover: { name: 'remove_Aborted', type: 8, sname: 'remove_Aborted', returnType: Object, params: [Function] } }, { name: 'Completed', type: 2, adder: { name: 'add_Completed', type: 8, sname: 'add_Completed', returnType: Object, params: [Function] }, remover: { name: 'remove_Completed', type: 8, sname: 'remove_Completed', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Threading_DispatcherTimer, { members: [{ name: '.ctor', type: 1, params: [] }, { name: '.ctor', type: 1, params: [$System_Windows_Threading_Dispatcher, $System_Windows_Threading_ITaskScheduler, ss.TimeSpan, $System_Windows_Threading_DispatcherPriority], sname: '$ctor1' }, { name: 'Start', type: 8, sname: 'Start', returnType: Object, params: [] }, { name: 'Stop', type: 8, sname: 'Stop', returnType: Object, params: [] }, { name: 'Interval', type: 16, returnType: ss.TimeSpan, getter: { name: 'get_Interval', type: 8, sname: 'get_Interval', returnType: ss.TimeSpan, params: [] }, setter: { name: 'set_Interval', type: 8, sname: 'set_Interval', returnType: Object, params: [ss.TimeSpan] } }, { name: 'IsEnabled', type: 16, returnType: Boolean, getter: { name: 'get_IsEnabled', type: 8, sname: 'get_IsEnabled', returnType: Boolean, params: [] }, setter: { name: 'set_IsEnabled', type: 8, sname: 'set_IsEnabled', returnType: Object, params: [Boolean] } }, { name: 'Priority', type: 16, returnType: $System_Windows_Threading_DispatcherPriority, getter: { name: 'get_Priority', type: 8, sname: 'get_Priority', returnType: $System_Windows_Threading_DispatcherPriority, params: [] }, setter: { name: 'set_Priority', type: 8, sname: 'set_Priority', returnType: Object, params: [$System_Windows_Threading_DispatcherPriority] } }, { name: 'Tick', type: 2, adder: { name: 'add_Tick', type: 8, sname: 'add_Tick', returnType: Object, params: [Function] }, remover: { name: 'remove_Tick', type: 8, sname: 'remove_Tick', returnType: Object, params: [Function] } }] });
	ss.setMetadata($System_Windows_Threading_ITaskScheduler, { members: [{ name: 'ScheduleTask', type: 8, sname: 'ScheduleTask', returnType: ss.IDisposable, params: [ss.TimeSpan, Function] }] });
	ss.setMetadata($System_Windows_Threading_TaskSchedulerExtensions, { members: [{ name: 'ScheduleTask', isStatic: true, type: 8, sname: 'ScheduleTask', returnType: ss.IDisposable, params: [$System_Windows_Threading_ITaskScheduler, Function] }] });
	$asm.attr = [new $System_Windows_ThemeInfoAttribute(2), new $System_Windows_Markup_XmlnsDefinitionAttribute('http://schemas.microsoft.com/winfx/2006/xaml/presentation', 'System.Windows', 'Granular.Presentation'), new $System_Windows_Markup_XmlnsDefinitionAttribute('http://schemas.microsoft.com/winfx/2006/xaml/presentation', 'System.Windows.Controls', 'Granular.Presentation'), new $System_Windows_Markup_XmlnsDefinitionAttribute('http://schemas.microsoft.com/winfx/2006/xaml/presentation', 'System.Windows.Controls.Primitives', 'Granular.Presentation'), new $System_Windows_Markup_XmlnsDefinitionAttribute('http://schemas.microsoft.com/winfx/2006/xaml/presentation', 'System.Windows.Data', 'Granular.Presentation'), new $System_Windows_Markup_XmlnsDefinitionAttribute('http://schemas.microsoft.com/winfx/2006/xaml/presentation', 'System.Windows.Input', 'Granular.Presentation'), new $System_Windows_Markup_XmlnsDefinitionAttribute('http://schemas.microsoft.com/winfx/2006/xaml/presentation', 'System.Windows.Media', 'Granular.Presentation'), new $System_Windows_Markup_XmlnsDefinitionAttribute('http://schemas.microsoft.com/winfx/2006/xaml/presentation', 'System.Windows.Media.Animation', 'Granular.Presentation'), new $System_Windows_Markup_XmlnsDefinitionAttribute('http://schemas.microsoft.com/winfx/2006/xaml/presentation', 'System.Windows.Media.Imaging', 'Granular.Presentation')];
	(function() {
		$System_$Windows_DependencyProperty$TypeComparer.$Default = new $System_$Windows_DependencyProperty$TypeComparer();
	})();
	(function() {
		$System_Windows_Data_ObservableValue.UnsetValue = new $System_Windows_Data_NamedObject('ObservableValue.UnsetValue');
	})();
	(function() {
		$System_Windows_Media_Animation_AnimationLayerKey.Default = new $System_Windows_Media_Animation_AnimationLayerKey(null);
	})();
	(function() {
		$System_Windows_Media_Animation_AnimationLayer.$UnsetValue = new $System_Windows_Data_NamedObject('AnimationLayer.UnsetValue');
	})();
	(function() {
		$System_Windows_ResourcesChangedEventArgs.Reset = new $System_Windows_ResourcesChangedEventArgs(null);
	})();
	(function() {
		$System_Windows_DependencyPropertyValueEntry.$BaseValuePriorities = 12;
	})();
	(function() {
		var $t1 = new (ss.makeGenericType(ss.Dictionary$2, [System.Xaml.XamlName, Function]))();
		$t1.add(System.Xaml.XamlLanguage.NullTypeName, $System_$Windows_Markup_XamlTypes$NullProvider);
		$t1.add(System.Xaml.XamlLanguage.TypeTypeName, $System_$Windows_Markup_XamlTypes$TypeProvider);
		$System_Windows_Markup_XamlTypes.$TypeProviders = $t1;
	})();
	(function() {
		$System_Windows_Markup_TypeParser.$ClrNamespacePrefix = 'clr-namespace:';
		$System_Windows_Markup_TypeParser.$AssemblyQualifier = ';assembly=';
		$System_Windows_Markup_TypeParser.$resolvedTypesCache = new (ss.makeGenericType(Granular.Collections.CacheDictionary$2, [System.Xaml.XamlName, Function]).$ctor1)($System_Windows_Markup_TypeParser.TryResolveType);
		$System_Windows_Markup_TypeParser.$xmlnsDefinitionAttributesCache = null;
	})();
	(function() {
		$System_Windows_DependencyProperty.$registeredProperties = new (ss.makeGenericType(ss.Dictionary$2, [$System_$Windows_DependencyProperty$DependencyPropertyHashKey, $System_Windows_DependencyProperty]))();
		$System_Windows_DependencyProperty.$registeredReadOnlyPropertiesKey = new (ss.makeGenericType(ss.Dictionary$2, [$System_$Windows_DependencyProperty$DependencyPropertyHashKey, $System_Windows_DependencyPropertyKey]))();
		$System_Windows_DependencyProperty.$typeRegisteredProperties = new (ss.makeGenericType(Granular.Collections.ListDictionary$2, [Function, $System_Windows_DependencyProperty]))();
		$System_Windows_DependencyProperty.$typeFlattenedPropertiesCache = new (ss.makeGenericType(Granular.Collections.CacheDictionary$2, [Function, ss.IEnumerable]))($System_Windows_DependencyProperty.$ResolveTypeFlattenedProperties);
	})();
	(function() {
		$System_Windows_Point.Empty = new $System_Windows_Point();
		$System_Windows_Point.Zero = new $System_Windows_Point.$ctor1(0, 0);
	})();
	(function() {
		$System_Windows_Size.Empty = new $System_Windows_Size(Number.NaN, Number.NaN);
		$System_Windows_Size.Zero = new $System_Windows_Size(0, 0);
		$System_Windows_Size.Infinity = new $System_Windows_Size(Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY);
	})();
	(function() {
		$System_Windows_Thickness.Zero = new $System_Windows_Thickness();
	})();
	(function() {
		$System_Windows_Rect.Empty = new $System_Windows_Rect.$ctor2($System_Windows_Point.Empty, $System_Windows_Size.Empty);
		$System_Windows_Rect.Zero = new $System_Windows_Rect($System_Windows_Size.Zero);
	})();
	(function() {
		$System_Windows_ApplicationHost.$current = null;
	})();
	(function() {
		$System_Windows_Disposable.Empty = new $System_$Windows_Disposable$EmptyDisposable();
	})();
	(function() {
		$System_Windows_Threading_Dispatcher.CurrentDispatcher = new $System_Windows_Threading_Dispatcher();
	})();
	(function() {
		$System_Windows_Media_Animation_RootClock.$TickFrequency = new ss.TimeSpan(20 * 10000);
		$System_Windows_Media_Animation_RootClock.Default = new $System_Windows_Media_Animation_RootClock();
	})();
	(function() {
		$System_Windows_EventManager.$registeredRoutedEvents = new (ss.makeGenericType(ss.Dictionary$2, [$System_$Windows_EventManager$RoutedEventKey, $System_Windows_RoutedEvent]))();
		$System_Windows_EventManager.$classHandlers = new (ss.makeGenericType(Granular.Collections.ListDictionary$2, [$System_$Windows_EventManager$ClassHandlerKey, $System_Windows_RoutedEventHandlerItem]))();
		$System_Windows_EventManager.$flattenedClassHandlersCache = new (ss.makeGenericType(Granular.Collections.CacheDictionary$2, [$System_$Windows_EventManager$ClassHandlerKey, ss.IEnumerable]))($System_Windows_EventManager.$ResolveFlattenedClassHandlers);
	})();
	(function() {
		$System_Windows_Media_Matrix.Identity = new $System_Windows_Media_Matrix(1, 0, 0, 1, 0, 0);
	})();
	(function() {
		$System_Windows_Input_Mouse.PreviewMouseMoveEvent = $System_Windows_EventManager.RegisterRoutedEvent('PreviewMouseMove', 0, Function, $System_Windows_Input_Mouse);
		$System_Windows_Input_Mouse.PreviewMouseDownEvent = $System_Windows_EventManager.RegisterRoutedEvent('PreviewMouseDown', 0, Function, $System_Windows_Input_Mouse);
		$System_Windows_Input_Mouse.PreviewMouseUpEvent = $System_Windows_EventManager.RegisterRoutedEvent('PreviewMouseUp', 0, Function, $System_Windows_Input_Mouse);
		$System_Windows_Input_Mouse.PreviewMouseWheelEvent = $System_Windows_EventManager.RegisterRoutedEvent('PreviewMouseWheel', 0, Function, $System_Windows_Input_Mouse);
		$System_Windows_Input_Mouse.MouseMoveEvent = $System_Windows_EventManager.RegisterRoutedEvent('MouseMove', 1, Function, $System_Windows_Input_Mouse);
		$System_Windows_Input_Mouse.MouseDownEvent = $System_Windows_EventManager.RegisterRoutedEvent('MouseDown', 1, Function, $System_Windows_Input_Mouse);
		$System_Windows_Input_Mouse.MouseUpEvent = $System_Windows_EventManager.RegisterRoutedEvent('MouseUp', 1, Function, $System_Windows_Input_Mouse);
		$System_Windows_Input_Mouse.MouseWheelEvent = $System_Windows_EventManager.RegisterRoutedEvent('MouseWheel', 1, Function, $System_Windows_Input_Mouse);
		$System_Windows_Input_Mouse.MouseEnterEvent = $System_Windows_EventManager.RegisterRoutedEvent('MouseEnter', 2, Function, $System_Windows_Input_Mouse);
		$System_Windows_Input_Mouse.MouseLeaveEvent = $System_Windows_EventManager.RegisterRoutedEvent('MouseLeave', 2, Function, $System_Windows_Input_Mouse);
		$System_Windows_Input_Mouse.QueryCursorEvent = $System_Windows_EventManager.RegisterRoutedEvent('QueryCursor', 1, Function, $System_Windows_Input_Mouse);
	})();
	(function() {
		$System_Windows_Media_Transform.Identity = new $System_$Windows_Media_Transform$IdentityTransfrom();
	})();
	(function() {
		$System_Windows_FrameworkElement.InitializedEvent = $System_Windows_EventManager.RegisterRoutedEvent('Initialized', 2, Function, $System_Windows_FrameworkElement);
		$System_Windows_FrameworkElement.HorizontalAlignmentProperty = $System_Windows_DependencyProperty.Register('HorizontalAlignment', $System_Windows_HorizontalAlignment, $System_Windows_FrameworkElement, new $System_Windows_FrameworkPropertyMetadata(3, null, null, false, true, false, false, 0), null);
		$System_Windows_FrameworkElement.VerticalAlignmentProperty = $System_Windows_DependencyProperty.Register('VerticalAlignment', $System_Windows_VerticalAlignment, $System_Windows_FrameworkElement, new $System_Windows_FrameworkPropertyMetadata(3, null, null, false, true, false, false, 0), null);
		$System_Windows_FrameworkElement.MarginProperty = $System_Windows_DependencyProperty.Register('Margin', $System_Windows_Thickness, $System_Windows_FrameworkElement, new $System_Windows_FrameworkPropertyMetadata($System_Windows_Thickness.Zero, null, null, false, true, false, false, 0), null);
		$System_Windows_FrameworkElement.WidthProperty = $System_Windows_DependencyProperty.Register('Width', Number, $System_Windows_FrameworkElement, new $System_Windows_FrameworkPropertyMetadata(Number.NaN, function(sender, e) {
			ss.cast(sender, $System_Windows_FrameworkElement).$SetSize();
		}, null, false, true, false, false, 0), null);
		$System_Windows_FrameworkElement.HeightProperty = $System_Windows_DependencyProperty.Register('Height', Number, $System_Windows_FrameworkElement, new $System_Windows_FrameworkPropertyMetadata(Number.NaN, function(sender, e) {
			ss.cast(sender, $System_Windows_FrameworkElement).$SetSize();
		}, null, false, true, false, false, 0), null);
		$System_Windows_FrameworkElement.MinWidthProperty = $System_Windows_DependencyProperty.Register('MinWidth', Number, $System_Windows_FrameworkElement, new $System_Windows_FrameworkPropertyMetadata(0, function(sender, e) {
			ss.cast(sender, $System_Windows_FrameworkElement).$SetMinSize();
		}, null, false, true, false, false, 0), null);
		$System_Windows_FrameworkElement.MinHeightProperty = $System_Windows_DependencyProperty.Register('MinHeight', Number, $System_Windows_FrameworkElement, new $System_Windows_FrameworkPropertyMetadata(0, function(sender, e) {
			ss.cast(sender, $System_Windows_FrameworkElement).$SetMinSize();
		}, null, false, true, false, false, 0), null);
		$System_Windows_FrameworkElement.MaxWidthProperty = $System_Windows_DependencyProperty.Register('MaxWidth', Number, $System_Windows_FrameworkElement, new $System_Windows_FrameworkPropertyMetadata(Number.POSITIVE_INFINITY, function(sender, e) {
			ss.cast(sender, $System_Windows_FrameworkElement).$SetMaxSize();
		}, null, false, true, false, false, 0), null);
		$System_Windows_FrameworkElement.MaxHeightProperty = $System_Windows_DependencyProperty.Register('MaxHeight', Number, $System_Windows_FrameworkElement, new $System_Windows_FrameworkPropertyMetadata(Number.POSITIVE_INFINITY, function(sender, e) {
			ss.cast(sender, $System_Windows_FrameworkElement).$SetMaxSize();
		}, null, false, true, false, false, 0), null);
		$System_Windows_FrameworkElement.$ActualWidthPropertyKey = $System_Windows_DependencyProperty.RegisterReadOnly('ActualWidth', Number, $System_Windows_FrameworkElement, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_FrameworkElement.ActualWidthProperty = $System_Windows_FrameworkElement.$ActualWidthPropertyKey.get_DependencyProperty();
		$System_Windows_FrameworkElement.$ActualHeightPropertyKey = $System_Windows_DependencyProperty.RegisterReadOnly('ActualHeight', Number, $System_Windows_FrameworkElement, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_FrameworkElement.ActualHeightProperty = $System_Windows_FrameworkElement.$ActualHeightPropertyKey.get_DependencyProperty();
		$System_Windows_FrameworkElement.StyleProperty = $System_Windows_DependencyProperty.Register('Style', $System_Windows_Style, $System_Windows_FrameworkElement, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.safeCast(sender, $System_Windows_FrameworkElement).$OnStyleChanged(e);
		}, null, false, true, false, false, 0), null);
		$System_Windows_FrameworkElement.FocusVisualStyleProperty = $System_Windows_DependencyProperty.Register('FocusVisualStyle', $System_Windows_Style, $System_Windows_FrameworkElement, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_FrameworkElement.DataContextProperty = $System_Windows_DependencyProperty.Register('DataContext', Object, $System_Windows_FrameworkElement, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_FrameworkElement).$OnDataContextChanged(e);
		}, null, true, false, false, false, 0), null);
		$System_Windows_FrameworkElement.CursorProperty = $System_Windows_DependencyProperty.Register('Cursor', $System_Windows_Input_Cursor, $System_Windows_FrameworkElement, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_FrameworkElement).$UpdateCursor();
		}, null, false, false, false, false, 0), null);
		$System_Windows_FrameworkElement.ForceCursorProperty = $System_Windows_DependencyProperty.Register('ForceCursor', Boolean, $System_Windows_FrameworkElement, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_FrameworkElement).$UpdateCursor();
		}, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Input_Keyboard.PreviewKeyDownEvent = $System_Windows_EventManager.RegisterRoutedEvent('PreviewKeyDown', 0, Function, $System_Windows_Input_Keyboard);
		$System_Windows_Input_Keyboard.PreviewKeyUpEvent = $System_Windows_EventManager.RegisterRoutedEvent('PreviewKeyUp', 0, Function, $System_Windows_Input_Keyboard);
		$System_Windows_Input_Keyboard.PreviewGotKeyboardFocusEvent = $System_Windows_EventManager.RegisterRoutedEvent('PreviewGotKeyboardFocus', 0, Function, $System_Windows_Input_Keyboard);
		$System_Windows_Input_Keyboard.PreviewLostKeyboardFocusEvent = $System_Windows_EventManager.RegisterRoutedEvent('PreviewLostKeyboardFocus', 0, Function, $System_Windows_Input_Keyboard);
		$System_Windows_Input_Keyboard.KeyDownEvent = $System_Windows_EventManager.RegisterRoutedEvent('KeyDown', 1, Function, $System_Windows_Input_Keyboard);
		$System_Windows_Input_Keyboard.KeyUpEvent = $System_Windows_EventManager.RegisterRoutedEvent('KeyUp', 1, Function, $System_Windows_Input_Keyboard);
		$System_Windows_Input_Keyboard.GotKeyboardFocusEvent = $System_Windows_EventManager.RegisterRoutedEvent('GotKeyboardFocus', 1, Function, $System_Windows_Input_Keyboard);
		$System_Windows_Input_Keyboard.LostKeyboardFocusEvent = $System_Windows_EventManager.RegisterRoutedEvent('LostKeyboardFocus', 1, Function, $System_Windows_Input_Keyboard);
	})();
	(function() {
		$System_Windows_Input_FocusManager.GotFocusEvent = $System_Windows_EventManager.RegisterRoutedEvent('GotFocus', 1, Function, $System_Windows_Input_FocusManager);
		$System_Windows_Input_FocusManager.LostFocusEvent = $System_Windows_EventManager.RegisterRoutedEvent('LostFocus', 1, Function, $System_Windows_Input_FocusManager);
		$System_Windows_Input_FocusManager.FocusedElementProperty = $System_Windows_DependencyProperty.RegisterAttached('FocusedElement', $System_Windows_IInputElement, $System_Windows_Input_FocusManager, new $System_Windows_FrameworkPropertyMetadata(null, $System_Windows_Input_FocusManager.$OnFocusedElementChanged, null, false, false, false, false, 0), null);
		$System_Windows_Input_FocusManager.IsFocusScopeProperty = $System_Windows_DependencyProperty.RegisterAttached('IsFocusScope', Boolean, $System_Windows_Input_FocusManager, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_UIElement.OpacityProperty = $System_Windows_DependencyProperty.Register('Opacity', Number, $System_Windows_UIElement, new $System_Windows_FrameworkPropertyMetadata(1, function(sender, e) {
			ss.safeCast(sender, $System_Windows_UIElement).set_VisualOpacity(ss.unbox(ss.cast(e.get_NewValue(), Number)));
		}, null, false, false, false, false, 0), null);
		$System_Windows_UIElement.VisibilityProperty = $System_Windows_DependencyProperty.Register('Visibility', $System_Windows_Visibility, $System_Windows_UIElement, new $System_Windows_FrameworkPropertyMetadata(0, function(sender, e) {
			ss.cast(sender, $System_Windows_UIElement).$OnVisibilityChanged(e);
		}, null, false, true, false, false, 0), null);
		$System_Windows_UIElement.$IsVisiblePropertyKey = $System_Windows_DependencyProperty.RegisterReadOnly('IsVisible', Boolean, $System_Windows_UIElement, new $System_Windows_FrameworkPropertyMetadata(true, function(sender, e) {
			ss.cast(sender, $System_Windows_UIElement).$OnIsVisibleChanged(e);
		}, null, true, false, false, false, 0), null);
		$System_Windows_UIElement.IsVisibleProperty = $System_Windows_UIElement.$IsVisiblePropertyKey.get_DependencyProperty();
		$System_Windows_UIElement.IsEnabledProperty = $System_Windows_DependencyProperty.Register('IsEnabled', Boolean, $System_Windows_UIElement, new $System_Windows_FrameworkPropertyMetadata(true, function(sender, e) {
			ss.cast(sender, $System_Windows_UIElement).$OnIsEnabledChanged(e);
		}, null, true, false, false, false, 0), null);
		$System_Windows_UIElement.IsHitTestVisibleProperty = $System_Windows_DependencyProperty.Register('IsHitTestVisible', Boolean, $System_Windows_UIElement, new $System_Windows_FrameworkPropertyMetadata(true, function(sender, e) {
			ss.cast(sender, $System_Windows_UIElement).$OnIsHitTestVisibleChanged(e);
		}, null, true, false, false, false, 0), null);
		$System_Windows_UIElement.ClipToBoundsProperty = $System_Windows_DependencyProperty.Register('ClipToBounds', Boolean, $System_Windows_UIElement, new $System_Windows_FrameworkPropertyMetadata(true, function(sender, e) {
			ss.cast(sender, $System_Windows_UIElement).set_VisualClipToBounds(ss.unbox(ss.cast(e.get_NewValue(), Boolean)));
		}, null, false, false, false, false, 0), null);
		$System_Windows_UIElement.FocusableProperty = $System_Windows_DependencyProperty.Register('Focusable', Boolean, $System_Windows_UIElement, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_UIElement).$OnFocusableChanged(e);
		}, null, false, false, false, false, 0), null);
		$System_Windows_UIElement.$IsMouseOverPropertyKey = $System_Windows_DependencyProperty.RegisterReadOnly('IsMouseOver', Boolean, $System_Windows_UIElement, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_UIElement.IsMouseOverProperty = $System_Windows_UIElement.$IsMouseOverPropertyKey.get_DependencyProperty();
		$System_Windows_UIElement.$IsFocusedPropertyKey = $System_Windows_DependencyProperty.RegisterReadOnly('IsFocused', Boolean, $System_Windows_UIElement, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_UIElement.IsFocusedProperty = $System_Windows_UIElement.$IsFocusedPropertyKey.get_DependencyProperty();
		$System_Windows_UIElement.$IsKeyboardFocusedPropertyKey = $System_Windows_DependencyProperty.RegisterReadOnly('IsKeyboardFocused', Boolean, $System_Windows_UIElement, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_UIElement.IsKeyboardFocusedProperty = $System_Windows_UIElement.$IsKeyboardFocusedPropertyKey.get_DependencyProperty();
		$System_Windows_UIElement.$IsKeyboardFocusWithinPropertyKey = $System_Windows_DependencyProperty.RegisterReadOnly('IsKeyboardFocusWithin', Boolean, $System_Windows_UIElement, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_UIElement.IsKeyboardFocusWithinProperty = $System_Windows_UIElement.$IsKeyboardFocusWithinPropertyKey.get_DependencyProperty();
		$System_Windows_UIElement.PreviewMouseMoveEvent = $System_Windows_Input_Mouse.PreviewMouseMoveEvent.AddOwner($System_Windows_UIElement);
		$System_Windows_UIElement.PreviewMouseDownEvent = $System_Windows_Input_Mouse.PreviewMouseDownEvent.AddOwner($System_Windows_UIElement);
		$System_Windows_UIElement.PreviewMouseUpEvent = $System_Windows_Input_Mouse.PreviewMouseUpEvent.AddOwner($System_Windows_UIElement);
		$System_Windows_UIElement.PreviewMouseWheelEvent = $System_Windows_Input_Mouse.PreviewMouseWheelEvent.AddOwner($System_Windows_UIElement);
		$System_Windows_UIElement.MouseMoveEvent = $System_Windows_Input_Mouse.MouseMoveEvent.AddOwner($System_Windows_UIElement);
		$System_Windows_UIElement.MouseDownEvent = $System_Windows_Input_Mouse.MouseDownEvent.AddOwner($System_Windows_UIElement);
		$System_Windows_UIElement.MouseUpEvent = $System_Windows_Input_Mouse.MouseUpEvent.AddOwner($System_Windows_UIElement);
		$System_Windows_UIElement.MouseWheelEvent = $System_Windows_Input_Mouse.MouseWheelEvent.AddOwner($System_Windows_UIElement);
		$System_Windows_UIElement.MouseEnterEvent = $System_Windows_Input_Mouse.MouseEnterEvent.AddOwner($System_Windows_UIElement);
		$System_Windows_UIElement.MouseLeaveEvent = $System_Windows_Input_Mouse.MouseLeaveEvent.AddOwner($System_Windows_UIElement);
		$System_Windows_UIElement.QueryCursorEvent = $System_Windows_Input_Mouse.QueryCursorEvent.AddOwner($System_Windows_UIElement);
		$System_Windows_UIElement.PreviewKeyDownEvent = $System_Windows_Input_Keyboard.PreviewKeyDownEvent.AddOwner($System_Windows_UIElement);
		$System_Windows_UIElement.PreviewKeyUpEvent = $System_Windows_Input_Keyboard.PreviewKeyUpEvent.AddOwner($System_Windows_UIElement);
		$System_Windows_UIElement.PreviewGotKeyboardFocusEvent = $System_Windows_Input_Keyboard.PreviewGotKeyboardFocusEvent.AddOwner($System_Windows_UIElement);
		$System_Windows_UIElement.PreviewLostKeyboardFocusEvent = $System_Windows_Input_Keyboard.PreviewLostKeyboardFocusEvent.AddOwner($System_Windows_UIElement);
		$System_Windows_UIElement.KeyDownEvent = $System_Windows_Input_Keyboard.KeyDownEvent.AddOwner($System_Windows_UIElement);
		$System_Windows_UIElement.KeyUpEvent = $System_Windows_Input_Keyboard.KeyUpEvent.AddOwner($System_Windows_UIElement);
		$System_Windows_UIElement.GotKeyboardFocusEvent = $System_Windows_Input_Keyboard.GotKeyboardFocusEvent.AddOwner($System_Windows_UIElement);
		$System_Windows_UIElement.LostKeyboardFocusEvent = $System_Windows_Input_Keyboard.LostKeyboardFocusEvent.AddOwner($System_Windows_UIElement);
		$System_Windows_UIElement.GotFocusEvent = $System_Windows_Input_FocusManager.GotFocusEvent.AddOwner($System_Windows_UIElement);
		$System_Windows_UIElement.LostFocusEvent = $System_Windows_Input_FocusManager.LostFocusEvent.AddOwner($System_Windows_UIElement);
		$System_Windows_EventManager.RegisterClassHandler($System_Windows_UIElement, $System_Windows_Input_Mouse.MouseEnterEvent, $System_Windows_UIElement.$OnMouseEnter, false);
		$System_Windows_EventManager.RegisterClassHandler($System_Windows_UIElement, $System_Windows_Input_Mouse.MouseLeaveEvent, $System_Windows_UIElement.$OnMouseLeave, false);
		$System_Windows_EventManager.RegisterClassHandler($System_Windows_UIElement, $System_Windows_Input_Mouse.QueryCursorEvent, function(sender, e) {
			ss.cast(sender, $System_Windows_UIElement).OnQueryCursor(e);
		}, true);
		$System_Windows_EventManager.RegisterClassHandler($System_Windows_UIElement, $System_Windows_Input_Mouse.PreviewMouseMoveEvent, function(sender1, e1) {
			ss.cast(sender1, $System_Windows_UIElement).OnPreviewMouseMove(e1);
		}, false);
		$System_Windows_EventManager.RegisterClassHandler($System_Windows_UIElement, $System_Windows_Input_Mouse.PreviewMouseDownEvent, function(sender2, e2) {
			ss.cast(sender2, $System_Windows_UIElement).OnPreviewMouseDown(e2);
		}, false);
		$System_Windows_EventManager.RegisterClassHandler($System_Windows_UIElement, $System_Windows_Input_Mouse.PreviewMouseUpEvent, function(sender3, e3) {
			ss.cast(sender3, $System_Windows_UIElement).OnPreviewMouseUp(e3);
		}, false);
		$System_Windows_EventManager.RegisterClassHandler($System_Windows_UIElement, $System_Windows_Input_Mouse.PreviewMouseWheelEvent, function(sender4, e4) {
			ss.cast(sender4, $System_Windows_UIElement).OnPreviewMouseWheel(e4);
		}, false);
		$System_Windows_EventManager.RegisterClassHandler($System_Windows_UIElement, $System_Windows_Input_Mouse.MouseMoveEvent, function(sender5, e5) {
			ss.cast(sender5, $System_Windows_UIElement).OnMouseMove(e5);
		}, false);
		$System_Windows_EventManager.RegisterClassHandler($System_Windows_UIElement, $System_Windows_Input_Mouse.MouseDownEvent, function(sender6, e6) {
			ss.cast(sender6, $System_Windows_UIElement).OnMouseDown(e6);
		}, false);
		$System_Windows_EventManager.RegisterClassHandler($System_Windows_UIElement, $System_Windows_Input_Mouse.MouseUpEvent, function(sender7, e7) {
			ss.cast(sender7, $System_Windows_UIElement).OnMouseUp(e7);
		}, false);
		$System_Windows_EventManager.RegisterClassHandler($System_Windows_UIElement, $System_Windows_Input_Mouse.MouseWheelEvent, function(sender8, e8) {
			ss.cast(sender8, $System_Windows_UIElement).OnMouseWheel(e8);
		}, false);
		$System_Windows_EventManager.RegisterClassHandler($System_Windows_UIElement, $System_Windows_Input_Keyboard.GotKeyboardFocusEvent, $System_Windows_UIElement.$OnGotKeyboardFocus, true);
		$System_Windows_EventManager.RegisterClassHandler($System_Windows_UIElement, $System_Windows_Input_Keyboard.LostKeyboardFocusEvent, $System_Windows_UIElement.$OnLostKeyboardFocus, true);
		$System_Windows_EventManager.RegisterClassHandler($System_Windows_UIElement, $System_Windows_Input_Keyboard.PreviewKeyDownEvent, function(sender9, e9) {
			ss.cast(sender9, $System_Windows_UIElement).OnPreviewKeyDown(e9);
		}, false);
		$System_Windows_EventManager.RegisterClassHandler($System_Windows_UIElement, $System_Windows_Input_Keyboard.PreviewKeyUpEvent, function(sender10, e10) {
			ss.cast(sender10, $System_Windows_UIElement).OnPreviewKeyUp(e10);
		}, false);
		$System_Windows_EventManager.RegisterClassHandler($System_Windows_UIElement, $System_Windows_Input_Keyboard.KeyDownEvent, function(sender11, e11) {
			ss.cast(sender11, $System_Windows_UIElement).OnKeyDown(e11);
		}, false);
		$System_Windows_EventManager.RegisterClassHandler($System_Windows_UIElement, $System_Windows_Input_Keyboard.KeyUpEvent, function(sender12, e12) {
			ss.cast(sender12, $System_Windows_UIElement).OnKeyUp(e12);
		}, false);
		$System_Windows_EventManager.RegisterClassHandler($System_Windows_UIElement, $System_Windows_Input_FocusManager.GotFocusEvent, $System_Windows_UIElement.$OnGotFocus, false);
		$System_Windows_EventManager.RegisterClassHandler($System_Windows_UIElement, $System_Windows_Input_FocusManager.LostFocusEvent, $System_Windows_UIElement.$OnLostFocus, false);
	})();
	(function() {
		$System_Windows_LayoutManager.Current = new $System_Windows_LayoutManager();
	})();
	(function() {
		$System_Windows_Freezable.DataContextProperty = $System_Windows_FrameworkElement.DataContextProperty.AddOwner($System_Windows_Freezable, null);
	})();
	(function() {
		$System_Windows_Media_Brush.OpacityProperty = $System_Windows_DependencyProperty.Register('Opacity', Number, $System_Windows_Media_Brush, new $System_Windows_FrameworkPropertyMetadata(1, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_FontFamily.Default = new $System_Windows_FontFamily.$ctor1('');
	})();
	(function() {
		$System_Windows_Media_SolidColorBrush.ColorProperty = $System_Windows_DependencyProperty.Register('Color', $System_Windows_Media_Color, $System_Windows_Media_SolidColorBrush, new $System_Windows_FrameworkPropertyMetadata($System_Windows_Media_Colors.get_Transparent(), null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_Brushes.$brushes = new (ss.makeGenericType(Granular.Collections.CacheDictionary$2, [$System_Windows_Media_Color, $System_Windows_Media_Brush]))($System_Windows_Media_Brushes.$CreateBrush);
	})();
	(function() {
		$System_Windows_Controls_TextBlock.TextProperty = $System_Windows_DependencyProperty.Register('Text', String, $System_Windows_Controls_TextBlock, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_TextBlock).$OnTextChanged(e);
		}, null, false, true, false, false, 0), null);
		$System_Windows_Controls_TextBlock.ForegroundProperty = $System_Windows_DependencyProperty.Register('Foreground', $System_Windows_Media_Brush, $System_Windows_Controls_TextBlock, new $System_Windows_FrameworkPropertyMetadata($System_Windows_Media_Brushes.get_Black(), function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_TextBlock).$SetRenderElementsProperty(function(textBlockRenderElement) {
				textBlockRenderElement.set_Foreground(ss.cast(e.get_NewValue(), $System_Windows_Media_Brush));
			});
		}, null, true, false, false, false, 0), null);
		$System_Windows_Controls_TextBlock.FontFamilyProperty = $System_Windows_DependencyProperty.Register('FontFamily', $System_Windows_FontFamily, $System_Windows_Controls_TextBlock, new $System_Windows_FrameworkPropertyMetadata($System_Windows_FontFamily.Default, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_TextBlock).$OnFontFamilyChanged(e);
		}, null, true, true, false, false, 0), null);
		$System_Windows_Controls_TextBlock.FontSizeProperty = $System_Windows_DependencyProperty.Register('FontSize', Number, $System_Windows_Controls_TextBlock, new $System_Windows_FrameworkPropertyMetadata(11, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_TextBlock).$OnFontSizeChanged(e);
		}, null, true, true, false, false, 0), null);
		$System_Windows_Controls_TextBlock.FontStyleProperty = $System_Windows_DependencyProperty.Register('FontStyle', $System_Windows_FontStyle, $System_Windows_Controls_TextBlock, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_TextBlock).$OnFontStyleChanged(e);
		}, null, true, true, false, false, 0), null);
		$System_Windows_Controls_TextBlock.FontWeightProperty = $System_Windows_DependencyProperty.Register('FontWeight', $System_Windows_FontWeight, $System_Windows_Controls_TextBlock, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_TextBlock).$OnFontWeightChanged(e);
		}, null, true, true, false, false, 0), null);
		$System_Windows_Controls_TextBlock.FontStretchProperty = $System_Windows_DependencyProperty.Register('FontStretch', $System_Windows_FontStretch, $System_Windows_Controls_TextBlock, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_TextBlock).$OnFontStretchChanged(e);
		}, null, true, true, false, false, 0), null);
		$System_Windows_Controls_TextBlock.TextAlignmentProperty = $System_Windows_DependencyProperty.Register('TextAlignment', $System_Windows_Controls_TextAlignment, $System_Windows_Controls_TextBlock, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_TextBlock).$SetRenderElementsProperty(function(textBlockRenderElement) {
				textBlockRenderElement.set_TextAlignment(ss.cast(e.get_NewValue(), ss.Int32));
			});
		}, null, true, false, false, false, 0), null);
		$System_Windows_Controls_TextBlock.TextTrimmingProperty = $System_Windows_DependencyProperty.Register('TextTrimming', $System_Windows_TextTrimming, $System_Windows_Controls_TextBlock, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_TextBlock).$SetRenderElementsProperty(function(textBlockRenderElement) {
				textBlockRenderElement.set_TextTrimming(ss.cast(e.get_NewValue(), ss.Int32));
			});
		}, null, true, true, false, false, 0), null);
		$System_Windows_Controls_TextBlock.TextWrappingProperty = $System_Windows_DependencyProperty.Register('TextWrapping', $System_Windows_TextWrapping, $System_Windows_Controls_TextBlock, new $System_Windows_FrameworkPropertyMetadata(1, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_TextBlock).$SetRenderElementsProperty(function(textBlockRenderElement) {
				textBlockRenderElement.set_TextWrapping(ss.cast(e.get_NewValue(), ss.Int32));
			});
		}, null, true, true, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Markup_$ObjectTypeConverter.$Default = new $System_Windows_Markup_$ObjectTypeConverter();
	})();
	(function() {
		$System_Windows_Markup_$StringTypeConverter.$Default = new $System_Windows_Markup_$StringTypeConverter();
	})();
	(function() {
		$System_Windows_Markup_$BooleanTypeConverter.$Default = new $System_Windows_Markup_$BooleanTypeConverter();
	})();
	(function() {
		$System_Windows_Markup_$Int32TypeConverter.$Default = new $System_Windows_Markup_$Int32TypeConverter();
	})();
	(function() {
		$System_Windows_Markup_$DoubleTypeConverter.$Default = new $System_Windows_Markup_$DoubleTypeConverter();
	})();
	(function() {
		$System_Windows_Markup_$TimeSpanTypeConverter.$Default = new $System_Windows_Markup_$TimeSpanTypeConverter();
	})();
	(function() {
		$System_Windows_Markup_$TypeTypeConverter.$Default = new $System_Windows_Markup_$TypeTypeConverter();
	})();
	(function() {
		$System_Windows_Markup_PropertyPathParser.$lexer = new System.Xaml.Lexer([new System.Xaml.RegexTokenDefinition(0, new RegExp('[\\(\\)\\[\\]\\.,]')), new System.Xaml.RegexTokenDefinition(1, new RegExp('[^\\(\\)\\[\\]\\.\\,]*'))]);
	})();
	(function() {
		$System_Windows_PropertyPath.Empty = new $System_Windows_PropertyPath([]);
	})();
	(function() {
		$System_Windows_Markup_NameScope.NameScopeProperty = $System_Windows_DependencyProperty.RegisterAttached('NameScope', $System_Windows_Markup_INameScope, $System_Windows_Markup_NameScope, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Data_BindingExpression.DisconnectedItem = new $System_Windows_Data_NamedObject('BindingExpression.DisconnectedItem');
	})();
	(function() {
		$System_Windows_FrameworkTemplate.Empty = new $System_$Windows_FrameworkTemplate$EmptyFrameworkTemplate();
	})();
	(function() {
		$System_Windows_Data_CollectionView.Empty = new $System_$Windows_Data_CollectionView$EmptyCollectionView();
	})();
	(function() {
		$System_Windows_CornerRadius.Zero = new $System_Windows_CornerRadius(0);
	})();
	(function() {
		$System_Windows_UIElement.ClipToBoundsProperty.OverrideMetadata($System_Windows_Controls_Adorner, new $System_Windows_FrameworkPropertyMetadata(false, null, null, false, false, false, false, 0));
	})();
	(function() {
		$System_$Windows_Input_KeyboardNavigationTarget$TabStopComparer.$Default = new $System_$Windows_Input_KeyboardNavigationTarget$TabStopComparer();
	})();
	(function() {
		$System_$Windows_Controls_ContentPresenter$DefaultContentTemplate$ToStringConverter.$Default = new $System_$Windows_Controls_ContentPresenter$DefaultContentTemplate$ToStringConverter();
	})();
	(function() {
		$System_$Windows_Input_KeyboardNavigationTarget$LocalNavigation.$Default = new $System_$Windows_Input_KeyboardNavigationTarget$LocalNavigation();
	})();
	(function() {
		$System_$Windows_Input_KeyboardNavigationTarget$ContainedNavigation.$Default = new $System_$Windows_Input_KeyboardNavigationTarget$ContainedNavigation();
	})();
	(function() {
		$System_$Windows_Input_KeyboardNavigationTarget$NoneNavigation.$Default = new $System_$Windows_Input_KeyboardNavigationTarget$NoneNavigation();
	})();
	(function() {
		$System_$Windows_Input_KeyboardNavigationTarget$CycleNavigation.$Default = new $System_$Windows_Input_KeyboardNavigationTarget$CycleNavigation();
	})();
	(function() {
		$System_$Windows_Input_KeyboardNavigationTarget$OnceNavigation.$Default = new $System_$Windows_Input_KeyboardNavigationTarget$OnceNavigation();
	})();
	(function() {
		$System_$Windows_Input_KeyboardNavigationTarget$ContinueNavigation.$Default = new $System_$Windows_Input_KeyboardNavigationTarget$ContinueNavigation();
	})();
	(function() {
		$System_Windows_Input_KeyboardNavigation.TabNavigationProperty = $System_Windows_DependencyProperty.RegisterAttached('TabNavigation', $System_Windows_Input_KeyboardNavigationMode, $System_Windows_Input_KeyboardNavigation, new $System_Windows_FrameworkPropertyMetadata(0, null, null, false, false, false, false, 0), null);
		$System_Windows_Input_KeyboardNavigation.ControlTabNavigationProperty = $System_Windows_DependencyProperty.RegisterAttached('ControlTabNavigation', $System_Windows_Input_KeyboardNavigationMode, $System_Windows_Input_KeyboardNavigation, new $System_Windows_FrameworkPropertyMetadata(0, null, null, false, false, false, false, 0), null);
		$System_Windows_Input_KeyboardNavigation.DirectionalNavigationProperty = $System_Windows_DependencyProperty.RegisterAttached('DirectionalNavigation', $System_Windows_Input_KeyboardNavigationMode, $System_Windows_Input_KeyboardNavigation, new $System_Windows_FrameworkPropertyMetadata(0, null, null, false, false, false, false, 0), null);
		$System_Windows_Input_KeyboardNavigation.IsTabStopProperty = $System_Windows_DependencyProperty.RegisterAttached('IsTabStop', Boolean, $System_Windows_Input_KeyboardNavigation, new $System_Windows_FrameworkPropertyMetadata(true, null, null, false, false, false, false, 0), null);
		$System_Windows_Input_KeyboardNavigation.TabIndexProperty = $System_Windows_DependencyProperty.RegisterAttached('TabIndex', ss.Int32, $System_Windows_Input_KeyboardNavigation, new $System_Windows_FrameworkPropertyMetadata(2147483647, null, null, false, false, false, false, 0), null);
		$System_Windows_Input_KeyboardNavigation.NavigationFocusElementProperty = $System_Windows_DependencyProperty.RegisterAttached('NavigationFocusElement', $System_Windows_Media_VisualWeakReference, $System_Windows_Input_KeyboardNavigation, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Input_KeyboardNavigationTarget.$TabStopComparerProvider = new $System_$Windows_Input_KeyboardNavigationTarget$StopComparerProvider(function(currentStop) {
			return $System_$Windows_Input_KeyboardNavigationTarget$TabStopComparer.$Default;
		});
		$System_Windows_Input_KeyboardNavigationTarget.$LeftBoundStopComparerProvider = new $System_$Windows_Input_KeyboardNavigationTarget$StopComparerProvider(function(currentStop) {
			return new $System_$Windows_Input_KeyboardNavigationTarget$LeftBoundStopComparer(currentStop);
		});
		$System_Windows_Input_KeyboardNavigationTarget.$RightBoundStopComparerProvider = new $System_$Windows_Input_KeyboardNavigationTarget$StopComparerProvider(function(currentStop) {
			return new $System_$Windows_Input_KeyboardNavigationTarget$RightBoundStopComparer(currentStop);
		});
		$System_Windows_Input_KeyboardNavigationTarget.$TopBoundStopComparerProvider = new $System_$Windows_Input_KeyboardNavigationTarget$StopComparerProvider(function(currentStop) {
			return new $System_$Windows_Input_KeyboardNavigationTarget$TopBoundStopComparer(currentStop);
		});
		$System_Windows_Input_KeyboardNavigationTarget.$BottomBoundStopComparerProvider = new $System_$Windows_Input_KeyboardNavigationTarget$StopComparerProvider(function(currentStop) {
			return new $System_$Windows_Input_KeyboardNavigationTarget$BottomBoundStopComparer(currentStop);
		});
	})();
	(function() {
		$System_Windows_Controls_Panel.IsItemsHostProperty = $System_Windows_DependencyProperty.Register('IsItemsHost', Boolean, $System_Windows_Controls_Panel, new $System_Windows_FrameworkPropertyMetadata(false, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Panel).$OnIsItemsHostChanged(e);
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Panel.BackgroundProperty = $System_Windows_DependencyProperty.Register('Background', $System_Windows_Media_Brush, $System_Windows_Controls_Panel, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Panel).$OnBackgroundChanged(e);
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Panel.ZIndexProperty = $System_Windows_DependencyProperty.RegisterAttached('ZIndex', ss.Int32, $System_Windows_Controls_Panel, new $System_Windows_FrameworkPropertyMetadata(null, $System_Windows_Controls_Panel.$OnZIndexPropertyChanged, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Controls_Border.BackgroundProperty = $System_Windows_Controls_Panel.BackgroundProperty.AddOwner($System_Windows_Controls_Border, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Border).$SetRenderElementsProperty(function(renderElement) {
				renderElement.set_Background(ss.cast(e.get_NewValue(), $System_Windows_Media_Brush));
			});
		}, null, false, false, false, false, 0));
		$System_Windows_Controls_Border.BorderBrushProperty = $System_Windows_DependencyProperty.Register('BorderBrush', $System_Windows_Media_Brush, $System_Windows_Controls_Border, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Border).$SetRenderElementsProperty(function(renderElement) {
				renderElement.set_BorderBrush(ss.cast(e.get_NewValue(), $System_Windows_Media_Brush));
			});
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Border.BorderThicknessProperty = $System_Windows_DependencyProperty.Register('BorderThickness', $System_Windows_Thickness, $System_Windows_Controls_Border, new $System_Windows_FrameworkPropertyMetadata($System_Windows_Thickness.Zero, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Border).$SetRenderElementsProperty(function(renderElement) {
				renderElement.set_BorderThickness(ss.cast(e.get_NewValue(), $System_Windows_Thickness));
			});
		}, null, false, true, false, false, 0), null);
		$System_Windows_Controls_Border.CornerRadiusProperty = $System_Windows_DependencyProperty.Register('CornerRadius', $System_Windows_CornerRadius, $System_Windows_Controls_Border, new $System_Windows_FrameworkPropertyMetadata($System_Windows_CornerRadius.Zero, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Border).$SetRenderElementsProperty(function(renderElement) {
				renderElement.set_CornerRadius(ss.cast(e.get_NewValue(), $System_Windows_CornerRadius));
			});
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Border.PaddingProperty = $System_Windows_DependencyProperty.Register('Padding', $System_Windows_Thickness, $System_Windows_Controls_Border, new $System_Windows_FrameworkPropertyMetadata($System_Windows_Thickness.Zero, null, null, false, true, false, false, 0), null);
		$System_Windows_UIElement.IsHitTestVisibleProperty.OverrideMetadata($System_Windows_Controls_Border, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Border).$SetRenderElementsProperty(function(renderElement) {
				renderElement.set_IsHitTestVisible(ss.unbox(ss.cast(e.get_NewValue(), Boolean)));
			});
		}, null, true, false, false, false, 0));
	})();
	(function() {
		$System_Windows_Controls_StackPanel.OrientationProperty = $System_Windows_DependencyProperty.Register('Orientation', $System_Windows_Controls_Orientation, $System_Windows_Controls_StackPanel, new $System_Windows_FrameworkPropertyMetadata(1, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_StackPanel.FlowDirectionProperty = $System_Windows_DependencyProperty.Register('FlowDirection', $System_Windows_Controls_FlowDirection, $System_Windows_Controls_StackPanel, new $System_Windows_FrameworkPropertyMetadata(1, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Controls_ItemsControl.ItemsSourceProperty = $System_Windows_DependencyProperty.Register('ItemsSource', ss.IEnumerable, $System_Windows_Controls_ItemsControl, new $System_Windows_FrameworkPropertyMetadata(null, function(dependencyObject, e) {
			ss.safeCast(dependencyObject, $System_Windows_Controls_ItemsControl).$OnItemsSourceChanged(e);
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ItemsControl.ItemContainerStyleProperty = $System_Windows_DependencyProperty.Register('ItemContainerStyle', $System_Windows_Style, $System_Windows_Controls_ItemsControl, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ItemsControl.ItemContainerStyleSelectorProperty = $System_Windows_DependencyProperty.Register('ItemContainerStyleSelector', $System_Windows_Controls_IStyleSelector, $System_Windows_Controls_ItemsControl, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ItemsControl.ItemsPanelProperty = $System_Windows_DependencyProperty.Register('ItemsPanel', $System_Windows_IFrameworkTemplate, $System_Windows_Controls_ItemsControl, new $System_Windows_FrameworkPropertyMetadata(new $System_$Windows_Controls_ItemsControl$DefaultItemsPanelTemplate(), null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ItemsControl.ItemTemplateProperty = $System_Windows_DependencyProperty.Register('ItemTemplate', $System_Windows_DataTemplate, $System_Windows_Controls_ItemsControl, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ItemsControl.ItemTemplateSelectorProperty = $System_Windows_DependencyProperty.Register('ItemTemplateSelector', $System_Windows_Controls_IDataTemplateSelector, $System_Windows_Controls_ItemsControl, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ItemsControl.$ItemContainerGeneratorPropertyKey = $System_Windows_DependencyProperty.RegisterReadOnly('ItemContainerGenerator', $System_Windows_Controls_IItemContainerGenerator, $System_Windows_Controls_ItemsControl, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ItemsControl.ItemContainerGeneratorProperty = $System_Windows_Controls_ItemsControl.$ItemContainerGeneratorPropertyKey.get_DependencyProperty();
	})();
	(function() {
		$System_Windows_Controls_Control.PreviewMouseDoubleClickEvent = $System_Windows_EventManager.RegisterRoutedEvent('PreviewMouseDoubleClick', 0, Function, $System_Windows_Controls_Control);
		$System_Windows_Controls_Control.MouseDoubleClickEvent = $System_Windows_EventManager.RegisterRoutedEvent('MouseDoubleClick', 1, Function, $System_Windows_Controls_Control);
		$System_Windows_Controls_Control.TemplateProperty = $System_Windows_DependencyProperty.Register('Template', $System_Windows_Controls_ControlTemplate, $System_Windows_Controls_Control, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Control).ApplyTemplate();
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Control.BackgroundProperty = $System_Windows_Controls_Panel.BackgroundProperty.AddOwner($System_Windows_Controls_Control, null);
		$System_Windows_Controls_Control.ForegroundProperty = $System_Windows_Controls_TextBlock.ForegroundProperty.AddOwner($System_Windows_Controls_Control, null);
		$System_Windows_Controls_Control.FontFamilyProperty = $System_Windows_Controls_TextBlock.FontFamilyProperty.AddOwner($System_Windows_Controls_Control, null);
		$System_Windows_Controls_Control.FontSizeProperty = $System_Windows_Controls_TextBlock.FontSizeProperty.AddOwner($System_Windows_Controls_Control, new $System_Windows_FrameworkPropertyMetadata(null, null, null, true, true, false, false, 0));
		$System_Windows_Controls_Control.FontStyleProperty = $System_Windows_Controls_TextBlock.FontStyleProperty.AddOwner($System_Windows_Controls_Control, new $System_Windows_FrameworkPropertyMetadata(null, null, null, true, true, false, false, 0));
		$System_Windows_Controls_Control.FontWeightProperty = $System_Windows_Controls_TextBlock.FontWeightProperty.AddOwner($System_Windows_Controls_Control, new $System_Windows_FrameworkPropertyMetadata(null, null, null, true, true, false, false, 0));
		$System_Windows_Controls_Control.FontStretchProperty = $System_Windows_Controls_TextBlock.FontStretchProperty.AddOwner($System_Windows_Controls_Control, new $System_Windows_FrameworkPropertyMetadata(null, null, null, true, true, false, false, 0));
		$System_Windows_Controls_Control.BorderBrushProperty = $System_Windows_Controls_Border.BorderBrushProperty.AddOwner($System_Windows_Controls_Control, null);
		$System_Windows_Controls_Control.BorderThicknessProperty = $System_Windows_Controls_Border.BorderThicknessProperty.AddOwner($System_Windows_Controls_Control, null);
		$System_Windows_Controls_Control.HorizontalContentAlignmentProperty = $System_Windows_DependencyProperty.Register('HorizontalContentAlignment', $System_Windows_HorizontalAlignment, $System_Windows_Controls_Control, new $System_Windows_FrameworkPropertyMetadata(0, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Control.VerticalContentAlignmentProperty = $System_Windows_DependencyProperty.Register('VerticalContentAlignment', $System_Windows_VerticalAlignment, $System_Windows_Controls_Control, new $System_Windows_FrameworkPropertyMetadata(0, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Control.PaddingProperty = $System_Windows_Controls_Border.PaddingProperty.AddOwner($System_Windows_Controls_Control, null);
		$System_Windows_Controls_Control.IsTabStopProperty = $System_Windows_Input_KeyboardNavigation.IsTabStopProperty.AddOwner($System_Windows_Controls_Control, null);
		$System_Windows_Controls_Control.TabIndexProperty = $System_Windows_Input_KeyboardNavigation.TabIndexProperty.AddOwner($System_Windows_Controls_Control, null);
		$System_Windows_UIElement.FocusableProperty.OverrideMetadata($System_Windows_Controls_Control, new $System_Windows_FrameworkPropertyMetadata(true, null, null, false, false, false, false, 0));
		$System_Windows_EventManager.RegisterClassHandler($System_Windows_Controls_Control, $System_Windows_UIElement.PreviewMouseDownEvent, $System_Windows_Controls_Control.$OnPreviewMouseDown, true);
		$System_Windows_EventManager.RegisterClassHandler($System_Windows_Controls_Control, $System_Windows_UIElement.MouseDownEvent, $System_Windows_Controls_Control.$OnMouseDown, true);
	})();
	(function() {
		$System_Windows_Controls_ContentControl.ContentProperty = $System_Windows_DependencyProperty.Register('Content', Object, $System_Windows_Controls_ContentControl, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_ContentControl).$OnContentChanged(e);
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ContentControl.ContentTemplateProperty = $System_Windows_DependencyProperty.Register('ContentTemplate', $System_Windows_DataTemplate, $System_Windows_Controls_ContentControl, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ContentControl.ContentTemplateSelectorProperty = $System_Windows_DependencyProperty.Register('ContentTemplateSelector', $System_Windows_Controls_IDataTemplateSelector, $System_Windows_Controls_ContentControl, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ContentControl.$HasContentPropertyKey = $System_Windows_DependencyProperty.RegisterReadOnly('HasContent', Boolean, $System_Windows_Controls_ContentControl, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ContentControl.HasContentProperty = $System_Windows_Controls_ContentControl.$HasContentPropertyKey.get_DependencyProperty();
	})();
	(function() {
		$System_Windows_Controls_ContentPresenter.ContentProperty = $System_Windows_Controls_ContentControl.ContentProperty.AddOwner($System_Windows_Controls_ContentPresenter, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_ContentPresenter).OnContentChanged(e);
		}, null, false, false, false, false, 0));
		$System_Windows_Controls_ContentPresenter.ContentTemplateProperty = $System_Windows_Controls_ContentControl.ContentTemplateProperty.AddOwner($System_Windows_Controls_ContentPresenter, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_ContentPresenter).$SetTemplate();
		}, null, false, false, false, false, 0));
		$System_Windows_Controls_ContentPresenter.ContentTemplateSelectorProperty = $System_Windows_Controls_ContentControl.ContentTemplateSelectorProperty.AddOwner($System_Windows_Controls_ContentPresenter, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_ContentPresenter).$SetTemplate();
		}, null, false, false, false, false, 0));
	})();
	(function() {
		$System_$Windows_Controls_ContentPresenter$DefaultContentTemplate.$Default = new $System_$Windows_Controls_ContentPresenter$DefaultContentTemplate();
	})();
	(function() {
		$System_$Windows_Controls_Primitives_Placement$TopPlacement.$Default = new $System_$Windows_Controls_Primitives_Placement$TopPlacement();
	})();
	(function() {
		$System_$Windows_Controls_Primitives_Placement$LeftPlacement.$Default = new $System_$Windows_Controls_Primitives_Placement$LeftPlacement();
	})();
	(function() {
		$System_$Windows_Controls_Primitives_Placement$MousePointPlacement.$Default = new $System_$Windows_Controls_Primitives_Placement$MousePointPlacement();
	})();
	(function() {
		$System_$Windows_Controls_Primitives_Placement$MousePlacement.$Default = new $System_$Windows_Controls_Primitives_Placement$MousePlacement();
	})();
	(function() {
		$System_$Windows_Controls_Primitives_Placement$RelativePointPlacement.$Default = new $System_$Windows_Controls_Primitives_Placement$RelativePointPlacement();
	})();
	(function() {
		$System_$Windows_Controls_Primitives_Placement$AbsolutePointPlacement.$Default = new $System_$Windows_Controls_Primitives_Placement$AbsolutePointPlacement();
	})();
	(function() {
		$System_$Windows_Controls_Primitives_Placement$RightPlacement.$Default = new $System_$Windows_Controls_Primitives_Placement$RightPlacement();
	})();
	(function() {
		$System_$Windows_Controls_Primitives_Placement$CenterPlacement.$Default = new $System_$Windows_Controls_Primitives_Placement$CenterPlacement();
	})();
	(function() {
		$System_$Windows_Controls_Primitives_Placement$BottomPlacement.$Default = new $System_$Windows_Controls_Primitives_Placement$BottomPlacement();
	})();
	(function() {
		$System_$Windows_Controls_Primitives_Placement$RelativePlacement.$Default = new $System_$Windows_Controls_Primitives_Placement$RelativePlacement();
	})();
	(function() {
		$System_$Windows_Controls_Primitives_Placement$AbsolutePlacement.$Default = new $System_$Windows_Controls_Primitives_Placement$AbsolutePlacement();
	})();
	(function() {
		$System_Windows_Controls_PopupLayer.PositionProperty = $System_Windows_DependencyProperty.RegisterAttached('Position', $System_Windows_Point, $System_Windows_Controls_PopupLayer, new $System_Windows_FrameworkPropertyMetadata($System_Windows_Point.Zero, $System_Windows_Controls_PopupLayer.$OnPositionChanged, null, false, false, false, false, 0), null);
		$System_Windows_Controls_PopupLayer.IsOpenProperty = $System_Windows_DependencyProperty.RegisterAttached('IsOpen', Boolean, $System_Windows_Controls_PopupLayer, new $System_Windows_FrameworkPropertyMetadata(null, $System_Windows_Controls_PopupLayer.$OnIsOpenChanged, null, false, false, false, false, 0), null);
		$System_Windows_Controls_PopupLayer.StaysOpenProperty = $System_Windows_DependencyProperty.RegisterAttached('StaysOpen', Boolean, $System_Windows_Controls_PopupLayer, new $System_Windows_FrameworkPropertyMetadata(true, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Markup_ElementInitializer.Empty = new $System_$Windows_Markup_ElementInitializer$EmptyElementInitializer();
	})();
	(function() {
		$System_Windows_$DataTriggerCondition.$ValueProperty = $System_Windows_DependencyProperty.Register('Value', Object, $System_Windows_$DataTriggerCondition, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_$DataTriggerCondition).$OnValueChanged(e);
		}, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_StartupEventArgs.Empty = new $System_Windows_StartupEventArgs();
	})();
	(function() {
		$System_Windows_EmbeddedResourceLoader.$ResourceUriRegex = new RegExp('/([^;]*);component/(.*)');
		$System_Windows_EmbeddedResourceLoader.$ResourceUriAssemblyNameGroupIndex = 1;
		$System_Windows_EmbeddedResourceLoader.$ResourceUriPathGroupIndex = 2;
		$System_Windows_EmbeddedResourceLoader.$resourceDataCache = new (ss.makeGenericType(Granular.Collections.CacheDictionary$2, [$System_$Windows_EmbeddedResourceLoader$EmbeddedResourceKey, Array]))($System_Windows_EmbeddedResourceLoader.$ResolveResourceData);
		$System_Windows_EmbeddedResourceLoader.$resourceElementCache = new (ss.makeGenericType(Granular.Collections.CacheDictionary$2, [$System_$Windows_EmbeddedResourceLoader$EmbeddedResourceKey, Object]))($System_Windows_EmbeddedResourceLoader.$ResolveResourceElement);
	})();
	(function() {
		$System_Windows_Media_Animation_ClockState.Empty = new $System_Windows_Media_Animation_ClockState(0, 0, 0, Granular.Compatibility.TimeSpan.MinValue, Granular.Compatibility.TimeSpan.MaxValue);
	})();
	(function() {
		$System_Windows_Media_Animation_RepeatBehavior.Forever = new $System_Windows_Media_Animation_RepeatBehavior(Number.POSITIVE_INFINITY, new ss.TimeSpan(0));
		$System_Windows_Media_Animation_RepeatBehavior.OneTime = new $System_Windows_Media_Animation_RepeatBehavior(1, new ss.TimeSpan(0));
	})();
	(function() {
		$System_Windows_Duration.Automatic = new $System_Windows_Duration.$ctor1(0, new ss.TimeSpan(0));
		$System_Windows_Duration.Forever = new $System_Windows_Duration.$ctor1(2, new ss.TimeSpan(0));
	})();
	(function() {
		$System_Windows_Media_Animation_Timeline.BeginTimeProperty = $System_Windows_DependencyProperty.Register('BeginTime', ss.TimeSpan, $System_Windows_Media_Animation_Timeline, new $System_Windows_FrameworkPropertyMetadata(new ss.TimeSpan(0), null, null, false, false, false, false, 0), null);
		$System_Windows_Media_Animation_Timeline.DurationProperty = $System_Windows_DependencyProperty.Register('Duration', $System_Windows_Duration, $System_Windows_Media_Animation_Timeline, new $System_Windows_FrameworkPropertyMetadata(new $System_Windows_Duration(new ss.TimeSpan(1 * 10000000)), null, null, false, false, false, false, 0), null);
		$System_Windows_Media_Animation_Timeline.FillBehaviorProperty = $System_Windows_DependencyProperty.Register('FillBehavior', $System_Windows_Media_Animation_FillBehavior, $System_Windows_Media_Animation_Timeline, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_Animation_Timeline.RepeatBehaviorProperty = $System_Windows_DependencyProperty.Register('RepeatBehavior', $System_Windows_Media_Animation_RepeatBehavior, $System_Windows_Media_Animation_Timeline, new $System_Windows_FrameworkPropertyMetadata($System_Windows_Media_Animation_RepeatBehavior.OneTime, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_Animation_Timeline.AutoReverseProperty = $System_Windows_DependencyProperty.Register('AutoReverse', Boolean, $System_Windows_Media_Animation_Timeline, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_Animation_Timeline.DurationProperty.OverrideMetadata($System_Windows_Media_Animation_TimelineGroup, new $System_Windows_FrameworkPropertyMetadata($System_Windows_Duration.Automatic, null, null, false, false, false, false, 0));
	})();
	(function() {
		$System_Windows_Media_Animation_Storyboard.TargetNameProperty = $System_Windows_DependencyProperty.RegisterAttached('TargetName', String, $System_Windows_Media_Animation_Storyboard, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_Animation_Storyboard.TargetProperty = $System_Windows_DependencyProperty.RegisterAttached('Target', $System_Windows_DependencyObject, $System_Windows_Media_Animation_Storyboard, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_Animation_Storyboard.TargetPropertyProperty = $System_Windows_DependencyProperty.RegisterAttached('TargetProperty', $System_Windows_PropertyPath, $System_Windows_Media_Animation_Storyboard, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_VisualState.StoryboardProperty = $System_Windows_DependencyProperty.Register('Storyboard', $System_Windows_Media_Animation_Storyboard, $System_Windows_VisualState, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_VisualTransition.StoryboardProperty = $System_Windows_DependencyProperty.Register('Storyboard', $System_Windows_Media_Animation_Storyboard, $System_Windows_VisualTransition, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_VisualStateManager.VisualStateGroupsProperty = $System_Windows_DependencyProperty.RegisterAttached('VisualStateGroups', ss.makeGenericType($System_Windows_FreezableCollection$1, [$System_Windows_VisualStateGroup]), $System_Windows_VisualStateManager, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_VisualStates.CommonStates = 'CommonStates';
		$System_Windows_VisualStates.DisabledState = 'Disabled';
		$System_Windows_VisualStates.PressedState = 'Pressed';
		$System_Windows_VisualStates.MouseOverState = 'MouseOver';
		$System_Windows_VisualStates.NormalState = 'Normal';
		$System_Windows_VisualStates.FocusStates = 'FocusStates';
		$System_Windows_VisualStates.FocusedState = 'Focused';
		$System_Windows_VisualStates.UnfocusedState = 'Unfocused';
		$System_Windows_VisualStates.CheckStates = 'CheckStates';
		$System_Windows_VisualStates.CheckedState = 'Checked';
		$System_Windows_VisualStates.UncheckedState = 'Unchecked';
		$System_Windows_VisualStates.IndeterminateState = 'Indeterminate';
		$System_Windows_VisualStates.ExpansionStates = 'ExpansionStates';
		$System_Windows_VisualStates.ExpandedState = 'Expanded';
		$System_Windows_VisualStates.CollapsedState = 'Collapsed';
		$System_Windows_VisualStates.SelectionStates = 'SelectionStates';
		$System_Windows_VisualStates.SelectedState = 'Selected';
		$System_Windows_VisualStates.SelectedUnfocusedState = 'SelectedUnfocused';
		$System_Windows_VisualStates.SelectedInactiveState = 'SelectedInactive';
		$System_Windows_VisualStates.UnselectedState = 'Unselected';
	})();
	(function() {
		$System_Windows_Controls_Primitives_ButtonBase.ClickEvent = $System_Windows_EventManager.RegisterRoutedEvent('Click', 1, Function, $System_Windows_Controls_Primitives_ButtonBase);
		$System_Windows_Controls_Primitives_ButtonBase.ClickModeProperty = $System_Windows_DependencyProperty.Register('ClickMode', $System_Windows_Controls_Primitives_ClickMode, $System_Windows_Controls_Primitives_ButtonBase, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Primitives_ButtonBase.IsPressedProperty = $System_Windows_DependencyProperty.Register('IsPressed', Boolean, $System_Windows_Controls_Primitives_ButtonBase, new $System_Windows_Controls_ControlPropertyMetadata(false, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Primitives_ButtonBase).OnIsPressedChanged(e);
		}, null, false, false, false, true, true, 0), null);
		$System_Windows_EventManager.RegisterClassHandler($System_Windows_Controls_Primitives_ButtonBase, $System_Windows_Controls_Primitives_ButtonBase.ClickEvent, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Primitives_ButtonBase).OnClick(e);
		}, false);
		$System_Windows_UIElement.IsEnabledProperty.OverrideMetadata($System_Windows_Controls_Primitives_ButtonBase, new $System_Windows_Controls_ControlPropertyMetadata(null, null, null, true, false, false, true, true, 0));
		$System_Windows_UIElement.IsMouseOverProperty.OverrideMetadata($System_Windows_Controls_Primitives_ButtonBase, new $System_Windows_Controls_ControlPropertyMetadata(null, null, null, false, false, false, true, true, 0));
		$System_Windows_UIElement.IsFocusedProperty.OverrideMetadata($System_Windows_Controls_Primitives_ButtonBase, new $System_Windows_Controls_ControlPropertyMetadata(null, null, null, false, false, false, true, true, 0));
	})();
	(function() {
		$System_Windows_Controls_Primitives_ToggleButton.CheckedEvent = $System_Windows_EventManager.RegisterRoutedEvent('Checked', 1, Function, $System_Windows_Controls_Primitives_ToggleButton);
		$System_Windows_Controls_Primitives_ToggleButton.UncheckedEvent = $System_Windows_EventManager.RegisterRoutedEvent('Unchecked', 1, Function, $System_Windows_Controls_Primitives_ToggleButton);
		$System_Windows_Controls_Primitives_ToggleButton.IndeterminateEvent = $System_Windows_EventManager.RegisterRoutedEvent('Indeterminate', 1, Function, $System_Windows_Controls_Primitives_ToggleButton);
		$System_Windows_Controls_Primitives_ToggleButton.IsCheckedProperty = $System_Windows_DependencyProperty.Register('IsChecked', ss.makeGenericType(ss.Nullable$1, [Boolean]), $System_Windows_Controls_Primitives_ToggleButton, new $System_Windows_FrameworkPropertyMetadata(false, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Primitives_ToggleButton).OnIsCheckedChanged(e);
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Primitives_ToggleButton.IsThreeStateProperty = $System_Windows_DependencyProperty.Register('IsThreeState', Boolean, $System_Windows_Controls_Primitives_ToggleButton, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Primitives_ToggleButton.CheckOnClickProperty = $System_Windows_DependencyProperty.Register('CheckOnClick', Boolean, $System_Windows_Controls_Primitives_ToggleButton, new $System_Windows_FrameworkPropertyMetadata(true, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Controls_RadioButton.$SelectionGroupProperty = $System_Windows_DependencyProperty.RegisterAttached('SelectionGroup', ss.makeGenericType($System_Windows_Controls_ISelectionGroup$1, [$System_Windows_Controls_RadioButton]), $System_Windows_Controls_RadioButton, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_RadioButton.GroupNameProperty = $System_Windows_DependencyProperty.Register('GroupName', String, $System_Windows_Controls_RadioButton, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_RadioButton).$OnGroupNameChanged(e);
		}, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_SystemResources.$ThemeName = 'Generic';
		$System_Windows_SystemResources.$ThemeNameAndColor = 'Generic';
	})();
	(function() {
		$System_Windows_Application.$1$CurrentField = null;
		$System_Windows_Application.SystemResources = new $System_Windows_SystemResources();
	})();
	(function() {
		$System_Windows_Window.TitleProperty = $System_Windows_DependencyProperty.Register('Title', String, $System_Windows_Window, new $System_Windows_FrameworkPropertyMetadata('', function(sender, e) {
			ss.cast(sender, $System_Windows_Window).$OnTitleChanged(e);
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Control.IsTabStopProperty.OverrideMetadata($System_Windows_Window, new $System_Windows_FrameworkPropertyMetadata(false, null, null, false, false, false, false, 0));
		$System_Windows_Input_KeyboardNavigation.DirectionalNavigationProperty.OverrideMetadata($System_Windows_Window, new $System_Windows_FrameworkPropertyMetadata(2, null, null, false, false, false, false, 0));
		$System_Windows_Input_KeyboardNavigation.TabNavigationProperty.OverrideMetadata($System_Windows_Window, new $System_Windows_FrameworkPropertyMetadata(2, null, null, false, false, false, false, 0));
		$System_Windows_Input_KeyboardNavigation.ControlTabNavigationProperty.OverrideMetadata($System_Windows_Window, new $System_Windows_FrameworkPropertyMetadata(2, null, null, false, false, false, false, 0));
		$System_Windows_Input_FocusManager.IsFocusScopeProperty.OverrideMetadata($System_Windows_Window, new $System_Windows_FrameworkPropertyMetadata(true, null, null, false, false, false, false, 0));
	})();
	(function() {
		$System_Windows_Controls_GridLength.Auto = new $System_Windows_Controls_GridLength(0, 0);
		$System_Windows_Controls_GridLength.Star = new $System_Windows_Controls_GridLength(2, 1);
	})();
	(function() {
		$System_Windows_Controls_Primitives_TextBoxBase.SelectionChangedEvent = $System_Windows_EventManager.RegisterRoutedEvent('SelectionChanged', 2, Function, $System_Windows_Controls_Primitives_TextBoxBase);
		$System_Windows_Controls_Primitives_TextBoxBase.TextChangedEvent = $System_Windows_EventManager.RegisterRoutedEvent('TextChanged', 2, Function, $System_Windows_Controls_Primitives_TextBoxBase);
		$System_Windows_Controls_Primitives_TextBoxBase.AcceptsReturnProperty = $System_Windows_DependencyProperty.Register('AcceptsReturn', Boolean, $System_Windows_Controls_Primitives_TextBoxBase, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Primitives_TextBoxBase.AcceptsTabProperty = $System_Windows_DependencyProperty.Register('AcceptsTab', Boolean, $System_Windows_Controls_Primitives_TextBoxBase, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Primitives_TextBoxBase.IsReadOnlyProperty = $System_Windows_DependencyProperty.Register('IsReadOnly', Boolean, $System_Windows_Controls_Primitives_TextBoxBase, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_UIElement.IsEnabledProperty.OverrideMetadata($System_Windows_Controls_Primitives_TextBoxBase, new $System_Windows_Controls_ControlPropertyMetadata(null, null, null, true, false, false, true, true, 0));
		$System_Windows_UIElement.IsMouseOverProperty.OverrideMetadata($System_Windows_Controls_Primitives_TextBoxBase, new $System_Windows_Controls_ControlPropertyMetadata(null, null, null, false, false, false, true, true, 0));
		$System_Windows_UIElement.IsFocusedProperty.OverrideMetadata($System_Windows_Controls_Primitives_TextBoxBase, new $System_Windows_Controls_ControlPropertyMetadata(null, null, null, false, false, false, true, true, 0));
	})();
	(function() {
		$System_Windows_Controls_SpellCheck.IsEnabledProperty = $System_Windows_DependencyProperty.RegisterAttached('IsEnabled', Boolean, $System_Windows_Controls_SpellCheck, new $System_Windows_FrameworkPropertyMetadata(true, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Controls_ItemsPresenter.ItemContainerGeneratorProperty = $System_Windows_DependencyProperty.Register('ItemContainerGenerator', $System_Windows_Controls_IItemContainerGenerator, $System_Windows_Controls_ItemsPresenter, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_ItemsPresenter).$OnItemContainerGeneratorChanged(e);
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ItemsPresenter.TemplateProperty = $System_Windows_DependencyProperty.Register('Template', $System_Windows_IFrameworkTemplate, $System_Windows_Controls_ItemsPresenter, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_ItemsPresenter).$OnTemplateChanged(e);
		}, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Controls_Primitives_Track.OrientationProperty = $System_Windows_DependencyProperty.Register('Orientation', $System_Windows_Controls_Orientation, $System_Windows_Controls_Primitives_Track, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, true, false, false, 0), null);
		$System_Windows_Controls_Primitives_Track.MinimumProperty = $System_Windows_DependencyProperty.Register('Minimum', Number, $System_Windows_Controls_Primitives_Track, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, true, false, 0), null);
		$System_Windows_Controls_Primitives_Track.MaximumProperty = $System_Windows_DependencyProperty.Register('Maximum', Number, $System_Windows_Controls_Primitives_Track, new $System_Windows_FrameworkPropertyMetadata(1, null, null, false, false, true, false, 0), null);
		$System_Windows_Controls_Primitives_Track.ValueProperty = $System_Windows_DependencyProperty.Register('Value', Number, $System_Windows_Controls_Primitives_Track, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, true, true, 0), null);
		$System_Windows_Controls_Primitives_Track.ViewportSizeProperty = $System_Windows_DependencyProperty.Register('ViewportSize', Number, $System_Windows_Controls_Primitives_Track, new $System_Windows_FrameworkPropertyMetadata(Number.NaN, null, null, false, false, true, false, 0), null);
	})();
	(function() {
		$System_Windows_Controls_Primitives_ScrollInfoExtensions.ScrollLineDelta = 16;
		$System_Windows_Controls_Primitives_ScrollInfoExtensions.MouseWheelDelta = 48;
	})();
	(function() {
		$System_Windows_Controls_Primitives_RangeBase.ValueChangedEvent = $System_Windows_EventManager.RegisterRoutedEvent('ValueChanged', 1, Function, $System_Windows_Controls_Primitives_RangeBase);
		var $t1 = $System_Windows_Controls_Primitives_RangeBase.$CoerceValueRange;
		$System_Windows_Controls_Primitives_RangeBase.ValueProperty = $System_Windows_DependencyProperty.Register('Value', Number, $System_Windows_Controls_Primitives_RangeBase, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Primitives_RangeBase).OnValueChanged(e);
		}, $t1, false, false, false, true, 0), null);
		$System_Windows_Controls_Primitives_RangeBase.MinimumProperty = $System_Windows_DependencyProperty.Register('Minimum', Number, $System_Windows_Controls_Primitives_RangeBase, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Primitives_RangeBase).OnMinimumChanged(e);
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Primitives_RangeBase.MaximumProperty = $System_Windows_DependencyProperty.Register('Maximum', Number, $System_Windows_Controls_Primitives_RangeBase, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Primitives_RangeBase).OnMaximumChanged(e);
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Primitives_RangeBase.SmallChangeProperty = $System_Windows_DependencyProperty.Register('SmallChange', Number, $System_Windows_Controls_Primitives_RangeBase, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Primitives_RangeBase.LargeChangeProperty = $System_Windows_DependencyProperty.Register('LargeChange', Number, $System_Windows_Controls_Primitives_RangeBase, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Controls_Primitives_ScrollBar.ScrollEvent = $System_Windows_EventManager.RegisterRoutedEvent('Scroll', 1, Function, $System_Windows_Controls_Primitives_ScrollBar);
		$System_Windows_Controls_Primitives_ScrollBar.OrientationProperty = $System_Windows_DependencyProperty.Register('Orientation', $System_Windows_Controls_Orientation, $System_Windows_Controls_Primitives_ScrollBar, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Primitives_ScrollBar.ViewportSizeProperty = $System_Windows_DependencyProperty.Register('ViewportSize', Number, $System_Windows_Controls_Primitives_ScrollBar, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Primitives_ScrollBar).$OnViewportSizeChanged(e);
		}, null, false, false, false, false, 0), null);
		$System_Windows_UIElement.FocusableProperty.OverrideMetadata($System_Windows_Controls_Primitives_ScrollBar, new $System_Windows_FrameworkPropertyMetadata(false, null, null, false, false, false, false, 0));
	})();
	(function() {
		$System_Windows_Controls_ScrollViewer.ScrollChangedEvent = $System_Windows_EventManager.RegisterRoutedEvent('ScrollChanged', 1, Function, $System_Windows_Controls_ScrollViewer);
		$System_Windows_Controls_ScrollViewer.CanContentScrollProperty = $System_Windows_DependencyProperty.RegisterAttached('CanContentScroll', Boolean, $System_Windows_Controls_ScrollViewer, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ScrollViewer.$ComputedHorizontalScrollBarVisibilityPropertyKey = $System_Windows_DependencyProperty.RegisterReadOnly('ComputedHorizontalScrollBarVisibility', $System_Windows_Visibility, $System_Windows_Controls_ScrollViewer, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ScrollViewer.ComputedHorizontalScrollBarVisibilityProperty = $System_Windows_Controls_ScrollViewer.$ComputedHorizontalScrollBarVisibilityPropertyKey.get_DependencyProperty();
		$System_Windows_Controls_ScrollViewer.$ComputedVerticalScrollBarVisibilityPropertyKey = $System_Windows_DependencyProperty.RegisterReadOnly('ComputedVerticalScrollBarVisibility', $System_Windows_Visibility, $System_Windows_Controls_ScrollViewer, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ScrollViewer.ComputedVerticalScrollBarVisibilityProperty = $System_Windows_Controls_ScrollViewer.$ComputedVerticalScrollBarVisibilityPropertyKey.get_DependencyProperty();
		$System_Windows_Controls_ScrollViewer.$ComputedScrollBarsVisibilityPropertyKey = $System_Windows_DependencyProperty.RegisterReadOnly('ComputedScrollBarsVisibility', $System_Windows_Visibility, $System_Windows_Controls_ScrollViewer, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ScrollViewer.ComputedScrollBarsVisibilityProperty = $System_Windows_Controls_ScrollViewer.$ComputedScrollBarsVisibilityPropertyKey.get_DependencyProperty();
		$System_Windows_Controls_ScrollViewer.HorizontalScrollBarVisibilityProperty = $System_Windows_DependencyProperty.Register('HorizontalScrollBarVisibility', $System_Windows_Controls_ScrollBarVisibility, $System_Windows_Controls_ScrollViewer, new $System_Windows_FrameworkPropertyMetadata(3, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_ScrollViewer).$SetContentCanScroll();
		}, null, false, true, false, false, 0), null);
		$System_Windows_Controls_ScrollViewer.VerticalScrollBarVisibilityProperty = $System_Windows_DependencyProperty.Register('VerticalScrollBarVisibility', $System_Windows_Controls_ScrollBarVisibility, $System_Windows_Controls_ScrollViewer, new $System_Windows_FrameworkPropertyMetadata(3, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_ScrollViewer).$SetContentCanScroll();
		}, null, false, true, false, false, 0), null);
		$System_Windows_Controls_ScrollViewer.HorizontalOffsetProperty = $System_Windows_DependencyProperty.Register('HorizontalOffset', Number, $System_Windows_Controls_ScrollViewer, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_ScrollViewer).$SetOffsets();
		}, null, false, false, true, false, 0), null);
		$System_Windows_Controls_ScrollViewer.VerticalOffsetProperty = $System_Windows_DependencyProperty.Register('VerticalOffset', Number, $System_Windows_Controls_ScrollViewer, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_ScrollViewer).$SetOffsets();
		}, null, false, false, true, false, 0), null);
		$System_Windows_Controls_ScrollViewer.$ExtentWidthPropertyKey = $System_Windows_DependencyProperty.RegisterReadOnly('ExtentWidth', Number, $System_Windows_Controls_ScrollViewer, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ScrollViewer.ExtentWidthProperty = $System_Windows_Controls_ScrollViewer.$ExtentWidthPropertyKey.get_DependencyProperty();
		$System_Windows_Controls_ScrollViewer.$ExtentHeightPropertyKey = $System_Windows_DependencyProperty.RegisterReadOnly('ExtentHeight', Number, $System_Windows_Controls_ScrollViewer, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ScrollViewer.ExtentHeightProperty = $System_Windows_Controls_ScrollViewer.$ExtentHeightPropertyKey.get_DependencyProperty();
		$System_Windows_Controls_ScrollViewer.$ViewportWidthPropertyKey = $System_Windows_DependencyProperty.RegisterReadOnly('ViewportWidth', Number, $System_Windows_Controls_ScrollViewer, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ScrollViewer.ViewportWidthProperty = $System_Windows_Controls_ScrollViewer.$ViewportWidthPropertyKey.get_DependencyProperty();
		$System_Windows_Controls_ScrollViewer.$ViewportHeightPropertyKey = $System_Windows_DependencyProperty.RegisterReadOnly('ViewportHeight', Number, $System_Windows_Controls_ScrollViewer, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ScrollViewer.ViewportHeightProperty = $System_Windows_Controls_ScrollViewer.$ViewportHeightPropertyKey.get_DependencyProperty();
		$System_Windows_Controls_ScrollViewer.$ScrollableWidthPropertyKey = $System_Windows_DependencyProperty.RegisterReadOnly('ScrollableWidth', Number, $System_Windows_Controls_ScrollViewer, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ScrollViewer.ScrollableWidthProperty = $System_Windows_Controls_ScrollViewer.$ScrollableWidthPropertyKey.get_DependencyProperty();
		$System_Windows_Controls_ScrollViewer.$ScrollableHeightPropertyKey = $System_Windows_DependencyProperty.RegisterReadOnly('ScrollableHeight', Number, $System_Windows_Controls_ScrollViewer, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ScrollViewer.ScrollableHeightProperty = $System_Windows_Controls_ScrollViewer.$ScrollableHeightPropertyKey.get_DependencyProperty();
		$System_Windows_Controls_Control.IsTabStopProperty.OverrideMetadata($System_Windows_Controls_ScrollViewer, new $System_Windows_FrameworkPropertyMetadata(false, null, null, false, false, false, false, 0));
	})();
	(function() {
		$System_Windows_Controls_ScrollContentPresenter.CanContentScrollProperty = $System_Windows_Controls_ScrollViewer.CanContentScrollProperty.AddOwner($System_Windows_Controls_ScrollContentPresenter, new $System_Windows_FrameworkPropertyMetadata(null, $System_Windows_Controls_ScrollContentPresenter.$OnCanContentScrollChanged, null, false, false, true, false, 0));
	})();
	(function() {
		$System_Windows_Input_Cursors.$cursors = new (ss.makeGenericType(Granular.Collections.CacheDictionary$2, [$System_Windows_Input_CursorType, $System_Windows_Input_Cursor]))(function(cursorType) {
			return new $System_Windows_Input_Cursor(cursorType);
		});
	})();
	(function() {
		$System_Windows_Controls_TextBox.TextProperty = $System_Windows_DependencyProperty.Register('Text', String, $System_Windows_Controls_TextBox, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_TextBox).$OnTextChanged(e);
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_TextBox.CaretIndexProperty = $System_Windows_DependencyProperty.Register('CaretIndex', ss.Int32, $System_Windows_Controls_TextBox, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_TextBox).$textBoxView.set_$CaretIndex(ss.unbox(ss.cast(e.get_NewValue(), ss.Int32)));
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_TextBox.SelectionStartProperty = $System_Windows_DependencyProperty.Register('SelectionStart', ss.Int32, $System_Windows_Controls_TextBox, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_TextBox).$textBoxView.set_$SelectionStart(ss.unbox(ss.cast(e.get_NewValue(), ss.Int32)));
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_TextBox.SelectionLengthProperty = $System_Windows_DependencyProperty.Register('SelectionLength', ss.Int32, $System_Windows_Controls_TextBox, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_TextBox).$textBoxView.set_$SelectionLength(ss.unbox(ss.cast(e.get_NewValue(), ss.Int32)));
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_TextBox.MaxLengthProperty = $System_Windows_DependencyProperty.Register('MaxLength', ss.Int32, $System_Windows_Controls_TextBox, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_TextBox).$textBoxView.set_$MaxLength(ss.unbox(ss.cast(e.get_NewValue(), ss.Int32)));
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_TextBox.TextAlignmentProperty = $System_Windows_Controls_TextBlock.TextAlignmentProperty.AddOwner($System_Windows_Controls_TextBox, new $System_Windows_FrameworkPropertyMetadata(null, null, null, true, false, false, false, 0));
		$System_Windows_Controls_TextBox.TextWrappingProperty = $System_Windows_Controls_TextBlock.TextWrappingProperty.AddOwner($System_Windows_Controls_TextBox, new $System_Windows_FrameworkPropertyMetadata(null, null, null, true, false, false, false, 0));
		$System_Windows_Controls_TextBox.HorizontalScrollBarVisibilityProperty = $System_Windows_Controls_ScrollViewer.HorizontalScrollBarVisibilityProperty.AddOwner($System_Windows_Controls_Primitives_TextBoxBase, new $System_Windows_FrameworkPropertyMetadata(2, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_TextBox).$textBoxView.set_$HorizontalScrollBarVisibility(ss.cast(e.get_NewValue(), ss.Int32));
		}, null, false, false, false, false, 0));
		$System_Windows_Controls_TextBox.VerticalScrollBarVisibilityProperty = $System_Windows_Controls_ScrollViewer.VerticalScrollBarVisibilityProperty.AddOwner($System_Windows_Controls_Primitives_TextBoxBase, new $System_Windows_FrameworkPropertyMetadata(2, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_TextBox).$textBoxView.set_$VerticalScrollBarVisibility(ss.cast(e.get_NewValue(), ss.Int32));
		}, null, false, false, false, false, 0));
		$System_Windows_Controls_Primitives_TextBoxBase.AcceptsReturnProperty.OverrideMetadata($System_Windows_Controls_TextBox, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_TextBox).$textBoxView.set_$AcceptsReturn(ss.unbox(ss.cast(e.get_NewValue(), Boolean)));
		}, null, false, false, false, false, 0));
		$System_Windows_Controls_Primitives_TextBoxBase.AcceptsTabProperty.OverrideMetadata($System_Windows_Controls_TextBox, new $System_Windows_FrameworkPropertyMetadata(null, function(sender1, e1) {
			ss.cast(sender1, $System_Windows_Controls_TextBox).$textBoxView.set_$AcceptsTab(ss.unbox(ss.cast(e1.get_NewValue(), Boolean)));
		}, null, false, false, false, false, 0));
		$System_Windows_Controls_Primitives_TextBoxBase.IsReadOnlyProperty.OverrideMetadata($System_Windows_Controls_TextBox, new $System_Windows_FrameworkPropertyMetadata(null, function(sender2, e2) {
			ss.cast(sender2, $System_Windows_Controls_TextBox).$textBoxView.set_$IsReadOnly(ss.cast(sender2, $System_Windows_Controls_TextBox).get_IsReadOnly());
		}, null, false, false, false, false, 0));
		$System_Windows_Controls_SpellCheck.IsEnabledProperty.OverrideMetadata($System_Windows_Controls_TextBox, new $System_Windows_FrameworkPropertyMetadata(null, function(sender3, e3) {
			ss.cast(sender3, $System_Windows_Controls_TextBox).$textBoxView.set_$SpellCheck(ss.unbox(ss.cast(e3.get_NewValue(), Boolean)));
		}, null, false, false, false, false, 0));
		$System_Windows_FrameworkElement.CursorProperty.OverrideMetadata($System_Windows_Controls_TextBox, new $System_Windows_FrameworkPropertyMetadata($System_Windows_Input_Cursors.get_IBeam(), null, null, false, false, false, false, 0));
	})();
	(function() {
		$System_Windows_UIElement.IsHitTestVisibleProperty.OverrideMetadata($System_Windows_Controls_$TextBoxView, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_$TextBoxView).$SetRenderElementsIsHitTestVisible();
		}, null, true, false, false, false, 0));
		$System_Windows_UIElement.IsEnabledProperty.OverrideMetadata($System_Windows_Controls_$TextBoxView, new $System_Windows_FrameworkPropertyMetadata(null, function(sender1, e1) {
			ss.cast(sender1, $System_Windows_Controls_$TextBoxView).$OnIsEnabledChanged$1();
		}, null, true, false, false, false, 0));
		$System_Windows_Controls_Control.ForegroundProperty.OverrideMetadata($System_Windows_Controls_$TextBoxView, new $System_Windows_FrameworkPropertyMetadata(null, function(sender2, e2) {
			ss.cast(sender2, $System_Windows_Controls_$TextBoxView).$SetRenderElementsProperty(function(renderElement) {
				renderElement.set_Foreground(ss.cast(e2.get_NewValue(), $System_Windows_Media_Brush));
			});
		}, null, true, false, false, false, 0));
		$System_Windows_Controls_Control.FontFamilyProperty.OverrideMetadata($System_Windows_Controls_$TextBoxView, new $System_Windows_FrameworkPropertyMetadata(null, function(sender3, e3) {
			ss.cast(sender3, $System_Windows_Controls_$TextBoxView).$SetRenderElementsProperty(function(renderElement1) {
				renderElement1.set_FontFamily(ss.cast(e3.get_NewValue(), $System_Windows_FontFamily));
			});
		}, null, true, false, false, false, 0));
		$System_Windows_Controls_Control.FontSizeProperty.OverrideMetadata($System_Windows_Controls_$TextBoxView, new $System_Windows_FrameworkPropertyMetadata(null, function(sender4, e4) {
			ss.cast(sender4, $System_Windows_Controls_$TextBoxView).$SetRenderElementsProperty(function(renderElement2) {
				renderElement2.set_FontSize(ss.unbox(ss.cast(e4.get_NewValue(), Number)));
			});
		}, null, true, false, false, false, 0));
		$System_Windows_Controls_Control.FontStyleProperty.OverrideMetadata($System_Windows_Controls_$TextBoxView, new $System_Windows_FrameworkPropertyMetadata(null, function(sender5, e5) {
			ss.cast(sender5, $System_Windows_Controls_$TextBoxView).$SetRenderElementsProperty(function(renderElement3) {
				renderElement3.set_FontStyle(ss.cast(e5.get_NewValue(), ss.Int32));
			});
		}, null, true, false, false, false, 0));
		$System_Windows_Controls_Control.FontStretchProperty.OverrideMetadata($System_Windows_Controls_$TextBoxView, new $System_Windows_FrameworkPropertyMetadata(null, function(sender6, e6) {
			ss.cast(sender6, $System_Windows_Controls_$TextBoxView).$SetRenderElementsProperty(function(renderElement4) {
				renderElement4.set_FontStretch(ss.cast(e6.get_NewValue(), ss.Int32));
			});
		}, null, true, false, false, false, 0));
		$System_Windows_Controls_Control.FontWeightProperty.OverrideMetadata($System_Windows_Controls_$TextBoxView, new $System_Windows_FrameworkPropertyMetadata(null, function(sender7, e7) {
			ss.cast(sender7, $System_Windows_Controls_$TextBoxView).$SetRenderElementsProperty(function(renderElement5) {
				renderElement5.set_FontWeight(ss.cast(e7.get_NewValue(), ss.Int32));
			});
		}, null, true, false, false, false, 0));
		$System_Windows_Controls_TextBox.TextAlignmentProperty.OverrideMetadata($System_Windows_Controls_$TextBoxView, new $System_Windows_FrameworkPropertyMetadata(null, function(sender8, e8) {
			ss.cast(sender8, $System_Windows_Controls_$TextBoxView).$SetRenderElementsProperty(function(renderElement6) {
				renderElement6.set_TextAlignment(ss.cast(e8.get_NewValue(), ss.Int32));
			});
		}, null, true, false, false, false, 0));
		$System_Windows_Controls_TextBox.TextWrappingProperty.OverrideMetadata($System_Windows_Controls_$TextBoxView, new $System_Windows_FrameworkPropertyMetadata(null, function(sender9, e9) {
			ss.cast(sender9, $System_Windows_Controls_$TextBoxView).$SetRenderElementsProperty(function(renderElement7) {
				renderElement7.set_TextWrapping(ss.cast(e9.get_NewValue(), ss.Int32));
			});
		}, null, true, false, false, false, 0));
	})();
	(function() {
		$System_Windows_Controls_Canvas.LeftProperty = $System_Windows_DependencyProperty.RegisterAttached('Left', Number, $System_Windows_Controls_Canvas, new $System_Windows_FrameworkPropertyMetadata(Number.NaN, $System_Windows_Controls_Canvas.$OnPositioningChanged, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Canvas.TopProperty = $System_Windows_DependencyProperty.RegisterAttached('Top', Number, $System_Windows_Controls_Canvas, new $System_Windows_FrameworkPropertyMetadata(Number.NaN, $System_Windows_Controls_Canvas.$OnPositioningChanged, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Canvas.RightProperty = $System_Windows_DependencyProperty.RegisterAttached('Right', Number, $System_Windows_Controls_Canvas, new $System_Windows_FrameworkPropertyMetadata(Number.NaN, $System_Windows_Controls_Canvas.$OnPositioningChanged, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Canvas.BottomProperty = $System_Windows_DependencyProperty.RegisterAttached('Bottom', Number, $System_Windows_Controls_Canvas, new $System_Windows_FrameworkPropertyMetadata(Number.NaN, $System_Windows_Controls_Canvas.$OnPositioningChanged, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Controls_ColumnDefinition.WidthProperty = $System_Windows_DependencyProperty.Register('Width', $System_Windows_Controls_GridLength, $System_Windows_Controls_ColumnDefinition, new $System_Windows_FrameworkPropertyMetadata($System_Windows_Controls_GridLength.Star, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ColumnDefinition.MinWidthProperty = $System_Windows_DependencyProperty.Register('MinWidth', Number, $System_Windows_Controls_ColumnDefinition, new $System_Windows_FrameworkPropertyMetadata(0, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ColumnDefinition.MaxWidthProperty = $System_Windows_DependencyProperty.Register('MaxWidth', Number, $System_Windows_Controls_ColumnDefinition, new $System_Windows_FrameworkPropertyMetadata(Number.POSITIVE_INFINITY, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ColumnDefinition.$ActualWidthPropertyKey = $System_Windows_DependencyProperty.RegisterReadOnly('ActualWidth', Number, $System_Windows_Controls_ColumnDefinition, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ColumnDefinition.ActualWidthProperty = $System_Windows_Controls_ColumnDefinition.$ActualWidthPropertyKey.get_DependencyProperty();
	})();
	(function() {
		$System_Windows_Controls_DockPanel.DockProperty = $System_Windows_DependencyProperty.RegisterAttached('Dock', $System_Windows_Controls_Dock, $System_Windows_Controls_DockPanel, new $System_Windows_FrameworkPropertyMetadata(null, $System_Windows_Controls_DockPanel.$OnDockChanged, null, false, false, false, false, 0), null);
		$System_Windows_Controls_DockPanel.LastChildFillProperty = $System_Windows_DependencyProperty.Register('LastChildFill', Boolean, $System_Windows_Controls_DockPanel, new $System_Windows_FrameworkPropertyMetadata(true, null, null, false, true, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Controls_HeaderedContentControl.HeaderProperty = $System_Windows_DependencyProperty.Register('Header', Object, $System_Windows_Controls_HeaderedContentControl, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_HeaderedContentControl).$OnHeaderChanged(e);
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_HeaderedContentControl.HeaderTemplateProperty = $System_Windows_DependencyProperty.Register('HeaderTemplate', $System_Windows_DataTemplate, $System_Windows_Controls_HeaderedContentControl, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_HeaderedContentControl.HeaderTemplateSelectorProperty = $System_Windows_DependencyProperty.Register('HeaderTemplateSelector', $System_Windows_Controls_IDataTemplateSelector, $System_Windows_Controls_HeaderedContentControl, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_HeaderedContentControl.$HasHeaderPropertyKey = $System_Windows_DependencyProperty.RegisterReadOnly('HasHeader', Boolean, $System_Windows_Controls_HeaderedContentControl, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_HeaderedContentControl.HasHeaderProperty = $System_Windows_Controls_HeaderedContentControl.$HasHeaderPropertyKey.get_DependencyProperty();
	})();
	(function() {
		$System_Windows_Controls_Expander.ExpandedEvent = $System_Windows_EventManager.RegisterRoutedEvent('Expanded', 1, Function, $System_Windows_Controls_Expander);
		$System_Windows_Controls_Expander.CollapsedEvent = $System_Windows_EventManager.RegisterRoutedEvent('Collapsed', 1, Function, $System_Windows_Controls_Expander);
		$System_Windows_Controls_Expander.ExpandDirectionProperty = $System_Windows_DependencyProperty.Register('ExpandDirection', $System_Windows_Controls_ExpandDirection, $System_Windows_Controls_Expander, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Expander.IsExpandedProperty = $System_Windows_DependencyProperty.Register('IsExpanded', Boolean, $System_Windows_Controls_Expander, new $System_Windows_Controls_ControlPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Expander).$OnIsExpandedChanged(e);
		}, null, false, false, false, true, true, 0), null);
		$System_Windows_Controls_Control.IsTabStopProperty.OverrideMetadata($System_Windows_Controls_Expander, new $System_Windows_FrameworkPropertyMetadata(false, null, null, false, false, false, false, 0));
	})();
	(function() {
		$System_Windows_Controls_RowDefinition.HeightProperty = $System_Windows_DependencyProperty.Register('Height', $System_Windows_Controls_GridLength, $System_Windows_Controls_RowDefinition, new $System_Windows_FrameworkPropertyMetadata($System_Windows_Controls_GridLength.Star, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_RowDefinition.MinHeightProperty = $System_Windows_DependencyProperty.Register('MinHeight', Number, $System_Windows_Controls_RowDefinition, new $System_Windows_FrameworkPropertyMetadata(0, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_RowDefinition.MaxHeightProperty = $System_Windows_DependencyProperty.Register('MaxHeight', Number, $System_Windows_Controls_RowDefinition, new $System_Windows_FrameworkPropertyMetadata(Number.POSITIVE_INFINITY, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_RowDefinition.$ActualHeightPropertyKey = $System_Windows_DependencyProperty.RegisterReadOnly('ActualHeight', Number, $System_Windows_Controls_RowDefinition, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_RowDefinition.ActualHeightProperty = $System_Windows_Controls_RowDefinition.$ActualHeightPropertyKey.get_DependencyProperty();
	})();
	(function() {
		$System_Windows_Controls_Grid.RowProperty = $System_Windows_DependencyProperty.RegisterAttached('Row', ss.Int32, $System_Windows_Controls_Grid, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Grid.ColumnProperty = $System_Windows_DependencyProperty.RegisterAttached('Column', ss.Int32, $System_Windows_Controls_Grid, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Grid.RowSpanProperty = $System_Windows_DependencyProperty.RegisterAttached('RowSpan', ss.Int32, $System_Windows_Controls_Grid, new $System_Windows_FrameworkPropertyMetadata(1, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Grid.ColumnSpanProperty = $System_Windows_DependencyProperty.RegisterAttached('ColumnSpan', ss.Int32, $System_Windows_Controls_Grid, new $System_Windows_FrameworkPropertyMetadata(1, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Controls_Image.ImageFailedEvent = $System_Windows_EventManager.RegisterRoutedEvent('ImageFailed', 1, Function, $System_Windows_Controls_Image);
		$System_Windows_Controls_Image.SourceProperty = $System_Windows_DependencyProperty.Register('Source', $System_Windows_Media_ImageSource, $System_Windows_Controls_Image, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Image).$OnSourceChanged(e);
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Image.StretchProperty = $System_Windows_DependencyProperty.Register('Stretch', $System_Windows_Media_Stretch, $System_Windows_Controls_Image, new $System_Windows_FrameworkPropertyMetadata(2, null, null, false, true, false, false, 0), null);
		$System_Windows_Controls_Image.StretchDirectionProperty = $System_Windows_DependencyProperty.Register('StretchDirection', $System_Windows_Media_StretchDirection, $System_Windows_Controls_Image, new $System_Windows_FrameworkPropertyMetadata(2, null, null, false, true, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Controls_Primitives_Selector.SelectionChangedEvent = $System_Windows_EventManager.RegisterRoutedEvent('SelectionChanged', 1, Function, $System_Windows_Controls_Primitives_Selector);
		$System_Windows_Controls_Primitives_Selector.SelectedEvent = $System_Windows_EventManager.RegisterRoutedEvent('Selected', 1, Function, $System_Windows_Controls_Primitives_Selector);
		$System_Windows_Controls_Primitives_Selector.UnselectedEvent = $System_Windows_EventManager.RegisterRoutedEvent('Unselected', 1, Function, $System_Windows_Controls_Primitives_Selector);
		$System_Windows_Controls_Primitives_Selector.IsSynchronizedWithCurrentItemProperty = $System_Windows_DependencyProperty.Register('IsSynchronizedWithCurrentItem', ss.makeGenericType(ss.Nullable$1, [Boolean]), $System_Windows_Controls_Primitives_Selector, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Primitives_Selector.SelectedIndexProperty = $System_Windows_DependencyProperty.Register('SelectedIndex', ss.Int32, $System_Windows_Controls_Primitives_Selector, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Primitives_Selector).$OnSelectedIndexChanged(e);
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Primitives_Selector.SelectedItemProperty = $System_Windows_DependencyProperty.Register('SelectedItem', Object, $System_Windows_Controls_Primitives_Selector, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Primitives_Selector).$OnSelectedItemChanged(e);
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Primitives_Selector.SelectedValueProperty = $System_Windows_DependencyProperty.Register('SelectedValue', Object, $System_Windows_Controls_Primitives_Selector, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Primitives_Selector).$OnSelectedValueChanged(e);
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Primitives_Selector.SelectedValuePathProperty = $System_Windows_DependencyProperty.Register('SelectedValuePath', String, $System_Windows_Controls_Primitives_Selector, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Primitives_Selector.IsSelectedProperty = $System_Windows_DependencyProperty.Register('IsSelected', Boolean, $System_Windows_Controls_Primitives_Selector, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Primitives_Selector.$IsSelectionActivePropertyKey = $System_Windows_DependencyProperty.RegisterAttachedReadOnly('IsSelectionActive', Boolean, $System_Windows_Controls_Primitives_Selector, new $System_Windows_FrameworkPropertyMetadata(null, null, null, true, false, false, false, 0), null);
		$System_Windows_Controls_Primitives_Selector.IsSelectionActiveProperty = $System_Windows_Controls_Primitives_Selector.$IsSelectionActivePropertyKey.get_DependencyProperty();
	})();
	(function() {
		$System_Windows_Controls_ListBoxItem.SelectedEvent = $System_Windows_Controls_Primitives_Selector.SelectedEvent.AddOwner($System_Windows_Controls_ListBoxItem);
		$System_Windows_Controls_ListBoxItem.UnselectedEvent = $System_Windows_Controls_Primitives_Selector.UnselectedEvent.AddOwner($System_Windows_Controls_ListBoxItem);
		$System_Windows_Controls_ListBoxItem.IsSelectedProperty = $System_Windows_Controls_Primitives_Selector.IsSelectedProperty.AddOwner($System_Windows_Controls_ListBoxItem, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_ListBoxItem).$OnIsSelectedChanged(e);
		}, null, false, false, false, false, 0));
		$System_Windows_UIElement.IsEnabledProperty.OverrideMetadata($System_Windows_Controls_ListBoxItem, new $System_Windows_Controls_ControlPropertyMetadata(null, null, null, true, false, false, true, true, 0));
		$System_Windows_UIElement.IsMouseOverProperty.OverrideMetadata($System_Windows_Controls_ListBoxItem, new $System_Windows_Controls_ControlPropertyMetadata(null, null, null, false, false, false, true, true, 0));
		$System_Windows_Controls_Primitives_Selector.IsSelectionActiveProperty.OverrideMetadata($System_Windows_Controls_ListBoxItem, new $System_Windows_Controls_ControlPropertyMetadata(null, null, null, true, false, false, true, true, 0));
	})();
	(function() {
		$System_Windows_Controls_ListBox.$SelectedItemsPropertyKey = $System_Windows_DependencyProperty.RegisterReadOnly('SelectedItems', ss.IEnumerable, $System_Windows_Controls_ListBox, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_ListBox.SelectedItemsProperty = $System_Windows_Controls_ListBox.$SelectedItemsPropertyKey.get_DependencyProperty();
		$System_Windows_Controls_ListBox.SelectionModeProperty = $System_Windows_DependencyProperty.Register('SelectionMode', $System_Windows_Controls_SelectionMode, $System_Windows_Controls_ListBox, new $System_Windows_FrameworkPropertyMetadata(0, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_ListBox).$SetSelectionBehavior();
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Control.IsTabStopProperty.OverrideMetadata($System_Windows_Controls_ListBox, new $System_Windows_FrameworkPropertyMetadata(false, null, null, false, false, false, false, 0));
		$System_Windows_Input_KeyboardNavigation.DirectionalNavigationProperty.OverrideMetadata($System_Windows_Controls_ListBox, new $System_Windows_FrameworkPropertyMetadata(4, null, null, false, false, false, false, 0));
		$System_Windows_Input_KeyboardNavigation.TabNavigationProperty.OverrideMetadata($System_Windows_Controls_ListBox, new $System_Windows_FrameworkPropertyMetadata(1, null, null, false, false, false, false, 0));
	})();
	(function() {
		$System_Windows_Controls_PasswordBox.PasswordChangedEvent = $System_Windows_EventManager.RegisterRoutedEvent('PasswordChanged', 1, Function, $System_Windows_Controls_PasswordBox);
		$System_Windows_Controls_PasswordBox.MaxLengthProperty = $System_Windows_Controls_TextBox.MaxLengthProperty.AddOwner($System_Windows_Controls_PasswordBox, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_PasswordBox).$textBoxView.set_$MaxLength(ss.unbox(ss.cast(e.get_NewValue(), ss.Int32)));
		}, null, false, false, false, false, 0));
		$System_Windows_UIElement.IsEnabledProperty.OverrideMetadata($System_Windows_Controls_PasswordBox, new $System_Windows_Controls_ControlPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_PasswordBox).$textBoxView.set_$IsReadOnly(!ss.cast(sender, $System_Windows_Controls_PasswordBox).get_IsEnabled());
		}, null, true, false, false, true, true, 0));
		$System_Windows_UIElement.IsMouseOverProperty.OverrideMetadata($System_Windows_Controls_PasswordBox, new $System_Windows_Controls_ControlPropertyMetadata(null, null, null, false, false, false, true, true, 0));
		$System_Windows_UIElement.IsFocusedProperty.OverrideMetadata($System_Windows_Controls_PasswordBox, new $System_Windows_Controls_ControlPropertyMetadata(null, null, null, false, false, false, true, true, 0));
		$System_Windows_FrameworkElement.CursorProperty.OverrideMetadata($System_Windows_Controls_PasswordBox, new $System_Windows_FrameworkPropertyMetadata($System_Windows_Input_Cursors.get_IBeam(), null, null, false, false, false, false, 0));
	})();
	(function() {
		$System_Windows_Media_GradientStop.ColorProperty = $System_Windows_DependencyProperty.Register('Color', $System_Windows_Media_Color, $System_Windows_Media_GradientStop, new $System_Windows_FrameworkPropertyMetadata($System_Windows_Media_Colors.get_Transparent(), null, null, false, false, false, false, 0), null);
		$System_Windows_Media_GradientStop.OffsetProperty = $System_Windows_DependencyProperty.Register('Offset', Number, $System_Windows_Media_GradientStop, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_GradientBrush.SpreadMethodProperty = $System_Windows_DependencyProperty.Register('SpreadMethod', $System_Windows_Media_GradientSpreadMethod, $System_Windows_Media_GradientBrush, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_GradientBrush.GradientStopsProperty = $System_Windows_DependencyProperty.Register('GradientStops', $System_Windows_Media_GradientStopCollection, $System_Windows_Media_GradientBrush, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_LinearGradientBrush.StartPointProperty = $System_Windows_DependencyProperty.Register('StartPoint', $System_Windows_Point, $System_Windows_Media_LinearGradientBrush, new $System_Windows_FrameworkPropertyMetadata($System_Windows_Point.Zero, function(sender, e) {
			ss.cast(sender, $System_Windows_Media_LinearGradientBrush).$SetAngle();
		}, null, false, false, false, false, 0), null);
		$System_Windows_Media_LinearGradientBrush.EndPointProperty = $System_Windows_DependencyProperty.Register('EndPoint', $System_Windows_Point, $System_Windows_Media_LinearGradientBrush, new $System_Windows_FrameworkPropertyMetadata(new $System_Windows_Point.$ctor1(1, 1), function(sender, e) {
			ss.cast(sender, $System_Windows_Media_LinearGradientBrush).$SetAngle();
		}, null, false, false, false, false, 0), null);
		$System_Windows_Media_LinearGradientBrush.AngleProperty = $System_Windows_DependencyProperty.Register('Angle', Number, $System_Windows_Media_LinearGradientBrush, new $System_Windows_FrameworkPropertyMetadata(45, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_Animation_KeyTime.Paced = new $System_Windows_Media_Animation_KeyTime(3, new ss.TimeSpan(0), Number.NaN);
		$System_Windows_Media_Animation_KeyTime.Uniform = new $System_Windows_Media_Animation_KeyTime(0, new ss.TimeSpan(0), Number.NaN);
	})();
	(function() {
		$System_Windows_Media_Animation_ThicknessKeyFrame.ValueProperty = $System_Windows_DependencyProperty.Register('Value', $System_Windows_Thickness, $System_Windows_Media_Animation_ThicknessKeyFrame, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_Animation_ThicknessKeyFrame.KeyTimeProperty = $System_Windows_DependencyProperty.Register('KeyTime', $System_Windows_Media_Animation_KeyTime, $System_Windows_Media_Animation_ThicknessKeyFrame, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_Animation_AnimationTimeline.IsAdditiveProperty = $System_Windows_DependencyProperty.Register('IsAdditive', Boolean, $System_Windows_Media_Animation_AnimationTimeline, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_Animation_AnimationTimeline.IsCumulativeProperty = $System_Windows_DependencyProperty.Register('IsCumulative', Boolean, $System_Windows_Media_Animation_AnimationTimeline, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_Animation_$ThicknessAnimationOperations.$Default = new $System_Windows_Media_Animation_$ThicknessAnimationOperations();
	})();
	(function() {
		$System_Windows_Controls_ProgressBar.IsIndeterminateProperty = $System_Windows_DependencyProperty.Register('IsIndeterminate', Boolean, $System_Windows_Controls_ProgressBar, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_ProgressBar).$OnIsIndeterminateChanged(e);
		}, null, false, false, false, false, 0), null);
		$System_Windows_UIElement.FocusableProperty.OverrideMetadata($System_Windows_Controls_ProgressBar, new $System_Windows_FrameworkPropertyMetadata(false, null, null, false, false, false, false, 0));
		$System_Windows_Controls_Primitives_RangeBase.MaximumProperty.OverrideMetadata($System_Windows_Controls_ProgressBar, new $System_Windows_FrameworkPropertyMetadata(100, null, null, false, false, false, false, 0));
		$System_Windows_Controls_Control.ForegroundProperty.OverrideMetadata($System_Windows_Controls_ProgressBar, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_ProgressBar).$OnForegroundChanged(e);
		}, null, true, false, false, false, 0));
	})();
	(function() {
		$System_Windows_Controls_Control.IsTabStopProperty.OverrideMetadata($System_Windows_Controls_UserControl, new $System_Windows_FrameworkPropertyMetadata(false, null, null, false, false, false, false, 0));
		$System_Windows_Controls_Control.HorizontalContentAlignmentProperty.OverrideMetadata($System_Windows_Controls_UserControl, new $System_Windows_FrameworkPropertyMetadata(3, null, null, false, false, false, false, 0));
		$System_Windows_Controls_Control.VerticalContentAlignmentProperty.OverrideMetadata($System_Windows_Controls_UserControl, new $System_Windows_FrameworkPropertyMetadata(3, null, null, false, false, false, false, 0));
		$System_Windows_UIElement.FocusableProperty.OverrideMetadata($System_Windows_Controls_UserControl, new $System_Windows_FrameworkPropertyMetadata(false, null, null, false, false, false, false, 0));
	})();
	(function() {
		$System_Windows_Controls_WrapPanel.OrientationProperty = $System_Windows_DependencyProperty.Register('Orientation', $System_Windows_Controls_Orientation, $System_Windows_Controls_WrapPanel, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Controls_Primitives_Popup.HorizontalOffsetProperty = $System_Windows_DependencyProperty.Register('HorizontalOffset', Number, $System_Windows_Controls_Primitives_Popup, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Primitives_Popup).$SetPosition();
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Primitives_Popup.VerticalOffsetProperty = $System_Windows_DependencyProperty.Register('VerticalOffset', Number, $System_Windows_Controls_Primitives_Popup, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Primitives_Popup).$SetPosition();
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Primitives_Popup.PlacementProperty = $System_Windows_DependencyProperty.Register('Placement', $System_Windows_Controls_Primitives_PlacementMode, $System_Windows_Controls_Primitives_Popup, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Primitives_Popup).$SetPosition();
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Primitives_Popup.PlacementRectangleProperty = $System_Windows_DependencyProperty.Register('PlacementRectangle', $System_Windows_Rect, $System_Windows_Controls_Primitives_Popup, new $System_Windows_FrameworkPropertyMetadata($System_Windows_Rect.Empty, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Primitives_Popup).$SetPosition();
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Primitives_Popup.PlacementTargetProperty = $System_Windows_DependencyProperty.Register('PlacementTarget', $System_Windows_Media_Visual, $System_Windows_Controls_Primitives_Popup, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Primitives_Popup).$SetPosition();
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Primitives_Popup.IsOpenProperty = $System_Windows_DependencyProperty.Register('IsOpen', Boolean, $System_Windows_Controls_Primitives_Popup, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Primitives_Popup).$OnIsOpenChanged(e);
		}, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Primitives_Popup.StaysOpenProperty = $System_Windows_DependencyProperty.Register('StaysOpen', Boolean, $System_Windows_Controls_Primitives_Popup, new $System_Windows_FrameworkPropertyMetadata(true, function(sender, e) {
			ss.cast(sender, $System_Windows_Controls_Primitives_Popup).$OnStaysOpenChanged(e);
		}, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Controls_Primitives_RepeatButton.DelayProperty = $System_Windows_DependencyProperty.Register('Delay', ss.Int32, $System_Windows_Controls_Primitives_RepeatButton, new $System_Windows_FrameworkPropertyMetadata(500, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Primitives_RepeatButton.IntervalProperty = $System_Windows_DependencyProperty.Register('Interval', ss.Int32, $System_Windows_Controls_Primitives_RepeatButton, new $System_Windows_FrameworkPropertyMetadata(33, null, null, false, false, false, false, 0), null);
		$System_Windows_Controls_Primitives_ButtonBase.ClickModeProperty.OverrideMetadata($System_Windows_Controls_Primitives_RepeatButton, new $System_Windows_FrameworkPropertyMetadata(1, null, null, false, false, false, false, 0));
	})();
	(function() {
		$System_Windows_Controls_Primitives_Thumb.DragStartedEvent = $System_Windows_EventManager.RegisterRoutedEvent('DragStarted', 1, Function, $System_Windows_Controls_Primitives_Thumb);
		$System_Windows_Controls_Primitives_Thumb.DragDeltaEvent = $System_Windows_EventManager.RegisterRoutedEvent('DragDelta', 1, Function, $System_Windows_Controls_Primitives_Thumb);
		$System_Windows_Controls_Primitives_Thumb.DragCompletedEvent = $System_Windows_EventManager.RegisterRoutedEvent('DragCompleted', 1, Function, $System_Windows_Controls_Primitives_Thumb);
		$System_Windows_Controls_Primitives_Thumb.$IsDraggingPropertyKey = $System_Windows_DependencyProperty.RegisterReadOnly('IsDragging', Boolean, $System_Windows_Controls_Primitives_Thumb, new $System_Windows_Controls_ControlPropertyMetadata(null, null, null, false, false, false, true, true, 0), null);
		$System_Windows_Controls_Primitives_Thumb.IsDraggingProperty = $System_Windows_Controls_Primitives_Thumb.$IsDraggingPropertyKey.get_DependencyProperty();
		$System_Windows_UIElement.FocusableProperty.OverrideMetadata($System_Windows_Controls_Primitives_Thumb, new $System_Windows_FrameworkPropertyMetadata(false, null, null, false, false, false, false, 0));
	})();
	(function() {
		$System_Windows_Media_TileBrush.TileModeProperty = $System_Windows_DependencyProperty.Register('TileMode', $System_Windows_Media_TileMode, $System_Windows_Media_TileBrush, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_TileBrush.StretchProperty = $System_Windows_DependencyProperty.Register('Stretch', $System_Windows_Media_Stretch, $System_Windows_Media_TileBrush, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_TileBrush.ViewportProperty = $System_Windows_DependencyProperty.Register('Viewport', $System_Windows_Rect, $System_Windows_Media_TileBrush, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_TileBrush.ViewportUnitsProperty = $System_Windows_DependencyProperty.Register('ViewportUnits', $System_Windows_Media_BrushMappingMode, $System_Windows_Media_TileBrush, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_ImageBrush.ImageSourceProperty = $System_Windows_DependencyProperty.Register('ImageSource', String, $System_Windows_Media_ImageBrush, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_Imaging_BitmapImage.UriSourceProperty = $System_Windows_DependencyProperty.Register('UriSource', String, $System_Windows_Media_Imaging_BitmapImage, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Media_Imaging_BitmapImage).$OnUriSourceChanged(e);
		}, null, false, false, false, false, 0), null);
		$System_Windows_Media_Imaging_BitmapImage.CacheOptionProperty = $System_Windows_DependencyProperty.Register('CacheOption', $System_Windows_Media_Imaging_BitmapCacheOption, $System_Windows_Media_Imaging_BitmapImage, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_Imaging_BitmapImage.SourceRectProperty = $System_Windows_DependencyProperty.Register('SourceRect', $System_Windows_Rect, $System_Windows_Media_Imaging_BitmapImage, new $System_Windows_FrameworkPropertyMetadata(null, function(sender, e) {
			ss.cast(sender, $System_Windows_Media_Imaging_BitmapImage).$OnSourceRectChanged(e);
		}, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_RadialGradientBrush.CenterProperty = $System_Windows_DependencyProperty.Register('Center', $System_Windows_Point, $System_Windows_Media_RadialGradientBrush, new $System_Windows_FrameworkPropertyMetadata(new $System_Windows_Point.$ctor1(0.5, 0.5), null, null, false, false, false, false, 0), null);
		$System_Windows_Media_RadialGradientBrush.GradientOriginProperty = $System_Windows_DependencyProperty.Register('GradientOrigin', $System_Windows_Point, $System_Windows_Media_RadialGradientBrush, new $System_Windows_FrameworkPropertyMetadata(new $System_Windows_Point.$ctor1(0.5, 0.5), null, null, false, false, false, false, 0), null);
		$System_Windows_Media_RadialGradientBrush.RadiusXProperty = $System_Windows_DependencyProperty.Register('RadiusX', Number, $System_Windows_Media_RadialGradientBrush, new $System_Windows_FrameworkPropertyMetadata(0.5, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_RadialGradientBrush.RadiusYProperty = $System_Windows_DependencyProperty.Register('RadiusY', Number, $System_Windows_Media_RadialGradientBrush, new $System_Windows_FrameworkPropertyMetadata(0.5, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_RotateTransform.AngleProperty = $System_Windows_DependencyProperty.Register('Angle', Number, $System_Windows_Media_RotateTransform, new $System_Windows_FrameworkPropertyMetadata(0, $System_Windows_Media_RotateTransform.$SetMatrix, null, false, false, false, false, 0), null);
		$System_Windows_Media_RotateTransform.CenterXProperty = $System_Windows_DependencyProperty.Register('CenterX', Number, $System_Windows_Media_RotateTransform, new $System_Windows_FrameworkPropertyMetadata(0, $System_Windows_Media_RotateTransform.$SetMatrix, null, false, false, false, false, 0), null);
		$System_Windows_Media_RotateTransform.CenterYProperty = $System_Windows_DependencyProperty.Register('CenterY', Number, $System_Windows_Media_RotateTransform, new $System_Windows_FrameworkPropertyMetadata(0, $System_Windows_Media_RotateTransform.$SetMatrix, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_ScaleTransform.ScaleXProperty = $System_Windows_DependencyProperty.Register('ScaleX', Number, $System_Windows_Media_ScaleTransform, new $System_Windows_FrameworkPropertyMetadata(1, $System_Windows_Media_ScaleTransform.$SetMatrix, null, false, false, false, false, 0), null);
		$System_Windows_Media_ScaleTransform.ScaleYProperty = $System_Windows_DependencyProperty.Register('ScaleY', Number, $System_Windows_Media_ScaleTransform, new $System_Windows_FrameworkPropertyMetadata(1, $System_Windows_Media_ScaleTransform.$SetMatrix, null, false, false, false, false, 0), null);
		$System_Windows_Media_ScaleTransform.CenterXProperty = $System_Windows_DependencyProperty.Register('CenterX', Number, $System_Windows_Media_ScaleTransform, new $System_Windows_FrameworkPropertyMetadata(0, $System_Windows_Media_ScaleTransform.$SetMatrix, null, false, false, false, false, 0), null);
		$System_Windows_Media_ScaleTransform.CenterYProperty = $System_Windows_DependencyProperty.Register('CenterY', Number, $System_Windows_Media_ScaleTransform, new $System_Windows_FrameworkPropertyMetadata(0, $System_Windows_Media_ScaleTransform.$SetMatrix, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_SkewTransform.AngleXProperty = $System_Windows_DependencyProperty.Register('AngleX', Number, $System_Windows_Media_SkewTransform, new $System_Windows_FrameworkPropertyMetadata(0, $System_Windows_Media_SkewTransform.$SetMatrix, null, false, false, false, false, 0), null);
		$System_Windows_Media_SkewTransform.AngleYProperty = $System_Windows_DependencyProperty.Register('AngleY', Number, $System_Windows_Media_SkewTransform, new $System_Windows_FrameworkPropertyMetadata(0, $System_Windows_Media_SkewTransform.$SetMatrix, null, false, false, false, false, 0), null);
		$System_Windows_Media_SkewTransform.CenterXProperty = $System_Windows_DependencyProperty.Register('CenterX', Number, $System_Windows_Media_SkewTransform, new $System_Windows_FrameworkPropertyMetadata(0, $System_Windows_Media_SkewTransform.$SetMatrix, null, false, false, false, false, 0), null);
		$System_Windows_Media_SkewTransform.CenterYProperty = $System_Windows_DependencyProperty.Register('CenterY', Number, $System_Windows_Media_SkewTransform, new $System_Windows_FrameworkPropertyMetadata(0, $System_Windows_Media_SkewTransform.$SetMatrix, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_Animation_$ColorAnimationOperations.$Default = new $System_Windows_Media_Animation_$ColorAnimationOperations();
	})();
	(function() {
		$System_Windows_Media_Animation_$DoubleAnimationOperations.$Default = new $System_Windows_Media_Animation_$DoubleAnimationOperations();
	})();
	(function() {
		$System_Windows_Media_Animation_$RectAnimationOperations.$Default = new $System_Windows_Media_Animation_$RectAnimationOperations();
	})();
	(function() {
		$System_Windows_Media_Animation_EasingFunctionBase.EasingModeProperty = $System_Windows_DependencyProperty.Register('EasingMode', $System_Windows_Media_Animation_EasingMode, $System_Windows_Media_Animation_EasingFunctionBase, new $System_Windows_FrameworkPropertyMetadata(1, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_Animation_BackEase.AmplitudeProperty = $System_Windows_DependencyProperty.Register('Amplitude', Number, $System_Windows_Media_Animation_BackEase, new $System_Windows_FrameworkPropertyMetadata(1, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_Animation_BeginStoryboard.StoryboardProperty = $System_Windows_DependencyProperty.Register('Storyboard', $System_Windows_Media_Animation_Storyboard, $System_Windows_Media_Animation_BeginStoryboard, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_Animation_ColorAnimation.ToProperty = $System_Windows_DependencyProperty.Register('To', $System_Windows_Media_Color, $System_Windows_Media_Animation_ColorAnimation, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_Animation_ColorAnimation.FromProperty = $System_Windows_DependencyProperty.Register('From', $System_Windows_Media_Color, $System_Windows_Media_Animation_ColorAnimation, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_Animation_ColorAnimation.ByProperty = $System_Windows_DependencyProperty.Register('By', $System_Windows_Media_Color, $System_Windows_Media_Animation_ColorAnimation, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_Animation_ColorAnimation.EasingFunctionProperty = $System_Windows_DependencyProperty.Register('EasingFunction', $System_Windows_Media_Animation_IEasingFunction, $System_Windows_Media_Animation_ColorAnimation, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_Animation_ColorKeyFrame.ValueProperty = $System_Windows_DependencyProperty.Register('Value', $System_Windows_Media_Color, $System_Windows_Media_Animation_ColorKeyFrame, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_Animation_ColorKeyFrame.KeyTimeProperty = $System_Windows_DependencyProperty.Register('KeyTime', $System_Windows_Media_Animation_KeyTime, $System_Windows_Media_Animation_ColorKeyFrame, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_Animation_DoubleKeyFrame.ValueProperty = $System_Windows_DependencyProperty.Register('Value', ss.makeGenericType(ss.Nullable$1, [Number]), $System_Windows_Media_Animation_DoubleKeyFrame, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_Animation_DoubleKeyFrame.KeyTimeProperty = $System_Windows_DependencyProperty.Register('KeyTime', $System_Windows_Media_Animation_KeyTime, $System_Windows_Media_Animation_DoubleKeyFrame, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_Animation_RectKeyFrame.ValueProperty = $System_Windows_DependencyProperty.Register('Value', $System_Windows_Rect, $System_Windows_Media_Animation_RectKeyFrame, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_Animation_RectKeyFrame.KeyTimeProperty = $System_Windows_DependencyProperty.Register('KeyTime', $System_Windows_Media_Animation_KeyTime, $System_Windows_Media_Animation_RectKeyFrame, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_Animation_DoubleAnimation.ToProperty = $System_Windows_DependencyProperty.Register('To', ss.makeGenericType(ss.Nullable$1, [Number]), $System_Windows_Media_Animation_DoubleAnimation, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_Animation_DoubleAnimation.FromProperty = $System_Windows_DependencyProperty.Register('From', ss.makeGenericType(ss.Nullable$1, [Number]), $System_Windows_Media_Animation_DoubleAnimation, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_Animation_DoubleAnimation.ByProperty = $System_Windows_DependencyProperty.Register('By', ss.makeGenericType(ss.Nullable$1, [Number]), $System_Windows_Media_Animation_DoubleAnimation, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_Animation_DoubleAnimation.EasingFunctionProperty = $System_Windows_DependencyProperty.Register('EasingFunction', $System_Windows_Media_Animation_IEasingFunction, $System_Windows_Media_Animation_DoubleAnimation, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_Animation_EasingColorKeyFrame.EasingFunctionProperty = $System_Windows_DependencyProperty.Register('EasingFunction', $System_Windows_Media_Animation_IEasingFunction, $System_Windows_Media_Animation_EasingColorKeyFrame, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_Animation_EasingDoubleKeyFrame.EasingFunctionProperty = $System_Windows_DependencyProperty.Register('EasingFunction', $System_Windows_Media_Animation_IEasingFunction, $System_Windows_Media_Animation_EasingDoubleKeyFrame, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_Animation_EasingRectKeyFrame.EasingFunctionProperty = $System_Windows_DependencyProperty.Register('EasingFunction', $System_Windows_Media_Animation_IEasingFunction, $System_Windows_Media_Animation_EasingRectKeyFrame, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_Animation_EasingThicknessKeyFrame.EasingFunctionProperty = $System_Windows_DependencyProperty.Register('EasingFunction', $System_Windows_Media_Animation_IEasingFunction, $System_Windows_Media_Animation_EasingThicknessKeyFrame, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_Animation_ElasticEase.OscillationsProperty = $System_Windows_DependencyProperty.Register('Oscillations', Number, $System_Windows_Media_Animation_ElasticEase, new $System_Windows_FrameworkPropertyMetadata(3, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_Animation_ElasticEase.SpringinessProperty = $System_Windows_DependencyProperty.Register('Springiness', Number, $System_Windows_Media_Animation_ElasticEase, new $System_Windows_FrameworkPropertyMetadata(3, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_Animation_ExponentialEase.ExponentProperty = $System_Windows_DependencyProperty.Register('Exponent', Number, $System_Windows_Media_Animation_ExponentialEase, new $System_Windows_FrameworkPropertyMetadata(2, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_Animation_PowerEase.PowerProperty = $System_Windows_DependencyProperty.Register('Power', Number, $System_Windows_Media_Animation_PowerEase, new $System_Windows_FrameworkPropertyMetadata(2, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_Animation_RectAnimation.ToProperty = $System_Windows_DependencyProperty.Register('To', $System_Windows_Rect, $System_Windows_Media_Animation_RectAnimation, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_Animation_RectAnimation.FromProperty = $System_Windows_DependencyProperty.Register('From', $System_Windows_Rect, $System_Windows_Media_Animation_RectAnimation, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_Animation_RectAnimation.ByProperty = $System_Windows_DependencyProperty.Register('By', $System_Windows_Rect, $System_Windows_Media_Animation_RectAnimation, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_Animation_RectAnimation.EasingFunctionProperty = $System_Windows_DependencyProperty.Register('EasingFunction', $System_Windows_Media_Animation_IEasingFunction, $System_Windows_Media_Animation_RectAnimation, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
	(function() {
		$System_Windows_Media_Animation_ThicknessAnimation.ToProperty = $System_Windows_DependencyProperty.Register('To', $System_Windows_Thickness, $System_Windows_Media_Animation_ThicknessAnimation, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_Animation_ThicknessAnimation.FromProperty = $System_Windows_DependencyProperty.Register('From', $System_Windows_Thickness, $System_Windows_Media_Animation_ThicknessAnimation, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_Animation_ThicknessAnimation.ByProperty = $System_Windows_DependencyProperty.Register('By', $System_Windows_Thickness, $System_Windows_Media_Animation_ThicknessAnimation, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
		$System_Windows_Media_Animation_ThicknessAnimation.EasingFunctionProperty = $System_Windows_DependencyProperty.Register('EasingFunction', $System_Windows_Media_Animation_IEasingFunction, $System_Windows_Media_Animation_ThicknessAnimation, new $System_Windows_FrameworkPropertyMetadata(null, null, null, false, false, false, false, 0), null);
	})();
})();
